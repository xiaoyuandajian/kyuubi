// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: kyuubi/spark/connect/types.proto

package org.apache.kyuubi.engine.spark.connect.grpc.proto;

public interface DataTypeOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:spark.connect.DataType)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>.spark.connect.DataType.NULL null = 1;</code>
   *
   * @return Whether the null field is set.
   */
  boolean hasNull();
  /**
   * <code>.spark.connect.DataType.NULL null = 1;</code>
   *
   * @return The null.
   */
  org.apache.kyuubi.engine.spark.connect.grpc.proto.DataType.NULL getNull();
  /** <code>.spark.connect.DataType.NULL null = 1;</code> */
  org.apache.kyuubi.engine.spark.connect.grpc.proto.DataType.NULLOrBuilder getNullOrBuilder();

  /**
   * <code>.spark.connect.DataType.Binary binary = 2;</code>
   *
   * @return Whether the binary field is set.
   */
  boolean hasBinary();
  /**
   * <code>.spark.connect.DataType.Binary binary = 2;</code>
   *
   * @return The binary.
   */
  org.apache.kyuubi.engine.spark.connect.grpc.proto.DataType.Binary getBinary();
  /** <code>.spark.connect.DataType.Binary binary = 2;</code> */
  org.apache.kyuubi.engine.spark.connect.grpc.proto.DataType.BinaryOrBuilder getBinaryOrBuilder();

  /**
   * <code>.spark.connect.DataType.Boolean boolean = 3;</code>
   *
   * @return Whether the boolean field is set.
   */
  boolean hasBoolean();
  /**
   * <code>.spark.connect.DataType.Boolean boolean = 3;</code>
   *
   * @return The boolean.
   */
  org.apache.kyuubi.engine.spark.connect.grpc.proto.DataType.Boolean getBoolean();
  /** <code>.spark.connect.DataType.Boolean boolean = 3;</code> */
  org.apache.kyuubi.engine.spark.connect.grpc.proto.DataType.BooleanOrBuilder getBooleanOrBuilder();

  /**
   *
   *
   * <pre>
   * Numeric types
   * </pre>
   *
   * <code>.spark.connect.DataType.Byte byte = 4;</code>
   *
   * @return Whether the byte field is set.
   */
  boolean hasByte();
  /**
   *
   *
   * <pre>
   * Numeric types
   * </pre>
   *
   * <code>.spark.connect.DataType.Byte byte = 4;</code>
   *
   * @return The byte.
   */
  org.apache.kyuubi.engine.spark.connect.grpc.proto.DataType.Byte getByte();
  /**
   *
   *
   * <pre>
   * Numeric types
   * </pre>
   *
   * <code>.spark.connect.DataType.Byte byte = 4;</code>
   */
  org.apache.kyuubi.engine.spark.connect.grpc.proto.DataType.ByteOrBuilder getByteOrBuilder();

  /**
   * <code>.spark.connect.DataType.Short short = 5;</code>
   *
   * @return Whether the short field is set.
   */
  boolean hasShort();
  /**
   * <code>.spark.connect.DataType.Short short = 5;</code>
   *
   * @return The short.
   */
  org.apache.kyuubi.engine.spark.connect.grpc.proto.DataType.Short getShort();
  /** <code>.spark.connect.DataType.Short short = 5;</code> */
  org.apache.kyuubi.engine.spark.connect.grpc.proto.DataType.ShortOrBuilder getShortOrBuilder();

  /**
   * <code>.spark.connect.DataType.Integer integer = 6;</code>
   *
   * @return Whether the integer field is set.
   */
  boolean hasInteger();
  /**
   * <code>.spark.connect.DataType.Integer integer = 6;</code>
   *
   * @return The integer.
   */
  org.apache.kyuubi.engine.spark.connect.grpc.proto.DataType.Integer getInteger();
  /** <code>.spark.connect.DataType.Integer integer = 6;</code> */
  org.apache.kyuubi.engine.spark.connect.grpc.proto.DataType.IntegerOrBuilder getIntegerOrBuilder();

  /**
   * <code>.spark.connect.DataType.Long long = 7;</code>
   *
   * @return Whether the long field is set.
   */
  boolean hasLong();
  /**
   * <code>.spark.connect.DataType.Long long = 7;</code>
   *
   * @return The long.
   */
  org.apache.kyuubi.engine.spark.connect.grpc.proto.DataType.Long getLong();
  /** <code>.spark.connect.DataType.Long long = 7;</code> */
  org.apache.kyuubi.engine.spark.connect.grpc.proto.DataType.LongOrBuilder getLongOrBuilder();

  /**
   * <code>.spark.connect.DataType.Float float = 8;</code>
   *
   * @return Whether the float field is set.
   */
  boolean hasFloat();
  /**
   * <code>.spark.connect.DataType.Float float = 8;</code>
   *
   * @return The float.
   */
  org.apache.kyuubi.engine.spark.connect.grpc.proto.DataType.Float getFloat();
  /** <code>.spark.connect.DataType.Float float = 8;</code> */
  org.apache.kyuubi.engine.spark.connect.grpc.proto.DataType.FloatOrBuilder getFloatOrBuilder();

  /**
   * <code>.spark.connect.DataType.Double double = 9;</code>
   *
   * @return Whether the double field is set.
   */
  boolean hasDouble();
  /**
   * <code>.spark.connect.DataType.Double double = 9;</code>
   *
   * @return The double.
   */
  org.apache.kyuubi.engine.spark.connect.grpc.proto.DataType.Double getDouble();
  /** <code>.spark.connect.DataType.Double double = 9;</code> */
  org.apache.kyuubi.engine.spark.connect.grpc.proto.DataType.DoubleOrBuilder getDoubleOrBuilder();

  /**
   * <code>.spark.connect.DataType.Decimal decimal = 10;</code>
   *
   * @return Whether the decimal field is set.
   */
  boolean hasDecimal();
  /**
   * <code>.spark.connect.DataType.Decimal decimal = 10;</code>
   *
   * @return The decimal.
   */
  org.apache.kyuubi.engine.spark.connect.grpc.proto.DataType.Decimal getDecimal();
  /** <code>.spark.connect.DataType.Decimal decimal = 10;</code> */
  org.apache.kyuubi.engine.spark.connect.grpc.proto.DataType.DecimalOrBuilder getDecimalOrBuilder();

  /**
   *
   *
   * <pre>
   * String types
   * </pre>
   *
   * <code>.spark.connect.DataType.String string = 11;</code>
   *
   * @return Whether the string field is set.
   */
  boolean hasString();
  /**
   *
   *
   * <pre>
   * String types
   * </pre>
   *
   * <code>.spark.connect.DataType.String string = 11;</code>
   *
   * @return The string.
   */
  org.apache.kyuubi.engine.spark.connect.grpc.proto.DataType.String getString();
  /**
   *
   *
   * <pre>
   * String types
   * </pre>
   *
   * <code>.spark.connect.DataType.String string = 11;</code>
   */
  org.apache.kyuubi.engine.spark.connect.grpc.proto.DataType.StringOrBuilder getStringOrBuilder();

  /**
   * <code>.spark.connect.DataType.Char char = 12;</code>
   *
   * @return Whether the char field is set.
   */
  boolean hasChar();
  /**
   * <code>.spark.connect.DataType.Char char = 12;</code>
   *
   * @return The char.
   */
  org.apache.kyuubi.engine.spark.connect.grpc.proto.DataType.Char getChar();
  /** <code>.spark.connect.DataType.Char char = 12;</code> */
  org.apache.kyuubi.engine.spark.connect.grpc.proto.DataType.CharOrBuilder getCharOrBuilder();

  /**
   * <code>.spark.connect.DataType.VarChar var_char = 13;</code>
   *
   * @return Whether the varChar field is set.
   */
  boolean hasVarChar();
  /**
   * <code>.spark.connect.DataType.VarChar var_char = 13;</code>
   *
   * @return The varChar.
   */
  org.apache.kyuubi.engine.spark.connect.grpc.proto.DataType.VarChar getVarChar();
  /** <code>.spark.connect.DataType.VarChar var_char = 13;</code> */
  org.apache.kyuubi.engine.spark.connect.grpc.proto.DataType.VarCharOrBuilder getVarCharOrBuilder();

  /**
   *
   *
   * <pre>
   * Datatime types
   * </pre>
   *
   * <code>.spark.connect.DataType.Date date = 14;</code>
   *
   * @return Whether the date field is set.
   */
  boolean hasDate();
  /**
   *
   *
   * <pre>
   * Datatime types
   * </pre>
   *
   * <code>.spark.connect.DataType.Date date = 14;</code>
   *
   * @return The date.
   */
  org.apache.kyuubi.engine.spark.connect.grpc.proto.DataType.Date getDate();
  /**
   *
   *
   * <pre>
   * Datatime types
   * </pre>
   *
   * <code>.spark.connect.DataType.Date date = 14;</code>
   */
  org.apache.kyuubi.engine.spark.connect.grpc.proto.DataType.DateOrBuilder getDateOrBuilder();

  /**
   * <code>.spark.connect.DataType.Timestamp timestamp = 15;</code>
   *
   * @return Whether the timestamp field is set.
   */
  boolean hasTimestamp();
  /**
   * <code>.spark.connect.DataType.Timestamp timestamp = 15;</code>
   *
   * @return The timestamp.
   */
  org.apache.kyuubi.engine.spark.connect.grpc.proto.DataType.Timestamp getTimestamp();
  /** <code>.spark.connect.DataType.Timestamp timestamp = 15;</code> */
  org.apache.kyuubi.engine.spark.connect.grpc.proto.DataType.TimestampOrBuilder
      getTimestampOrBuilder();

  /**
   * <code>.spark.connect.DataType.TimestampNTZ timestamp_ntz = 16;</code>
   *
   * @return Whether the timestampNtz field is set.
   */
  boolean hasTimestampNtz();
  /**
   * <code>.spark.connect.DataType.TimestampNTZ timestamp_ntz = 16;</code>
   *
   * @return The timestampNtz.
   */
  org.apache.kyuubi.engine.spark.connect.grpc.proto.DataType.TimestampNTZ getTimestampNtz();
  /** <code>.spark.connect.DataType.TimestampNTZ timestamp_ntz = 16;</code> */
  org.apache.kyuubi.engine.spark.connect.grpc.proto.DataType.TimestampNTZOrBuilder
      getTimestampNtzOrBuilder();

  /**
   *
   *
   * <pre>
   * Interval types
   * </pre>
   *
   * <code>.spark.connect.DataType.CalendarInterval calendar_interval = 17;</code>
   *
   * @return Whether the calendarInterval field is set.
   */
  boolean hasCalendarInterval();
  /**
   *
   *
   * <pre>
   * Interval types
   * </pre>
   *
   * <code>.spark.connect.DataType.CalendarInterval calendar_interval = 17;</code>
   *
   * @return The calendarInterval.
   */
  org.apache.kyuubi.engine.spark.connect.grpc.proto.DataType.CalendarInterval getCalendarInterval();
  /**
   *
   *
   * <pre>
   * Interval types
   * </pre>
   *
   * <code>.spark.connect.DataType.CalendarInterval calendar_interval = 17;</code>
   */
  org.apache.kyuubi.engine.spark.connect.grpc.proto.DataType.CalendarIntervalOrBuilder
      getCalendarIntervalOrBuilder();

  /**
   * <code>.spark.connect.DataType.YearMonthInterval year_month_interval = 18;</code>
   *
   * @return Whether the yearMonthInterval field is set.
   */
  boolean hasYearMonthInterval();
  /**
   * <code>.spark.connect.DataType.YearMonthInterval year_month_interval = 18;</code>
   *
   * @return The yearMonthInterval.
   */
  org.apache.kyuubi.engine.spark.connect.grpc.proto.DataType.YearMonthInterval
      getYearMonthInterval();
  /** <code>.spark.connect.DataType.YearMonthInterval year_month_interval = 18;</code> */
  org.apache.kyuubi.engine.spark.connect.grpc.proto.DataType.YearMonthIntervalOrBuilder
      getYearMonthIntervalOrBuilder();

  /**
   * <code>.spark.connect.DataType.DayTimeInterval day_time_interval = 19;</code>
   *
   * @return Whether the dayTimeInterval field is set.
   */
  boolean hasDayTimeInterval();
  /**
   * <code>.spark.connect.DataType.DayTimeInterval day_time_interval = 19;</code>
   *
   * @return The dayTimeInterval.
   */
  org.apache.kyuubi.engine.spark.connect.grpc.proto.DataType.DayTimeInterval getDayTimeInterval();
  /** <code>.spark.connect.DataType.DayTimeInterval day_time_interval = 19;</code> */
  org.apache.kyuubi.engine.spark.connect.grpc.proto.DataType.DayTimeIntervalOrBuilder
      getDayTimeIntervalOrBuilder();

  /**
   *
   *
   * <pre>
   * Complex types
   * </pre>
   *
   * <code>.spark.connect.DataType.Array array = 20;</code>
   *
   * @return Whether the array field is set.
   */
  boolean hasArray();
  /**
   *
   *
   * <pre>
   * Complex types
   * </pre>
   *
   * <code>.spark.connect.DataType.Array array = 20;</code>
   *
   * @return The array.
   */
  org.apache.kyuubi.engine.spark.connect.grpc.proto.DataType.Array getArray();
  /**
   *
   *
   * <pre>
   * Complex types
   * </pre>
   *
   * <code>.spark.connect.DataType.Array array = 20;</code>
   */
  org.apache.kyuubi.engine.spark.connect.grpc.proto.DataType.ArrayOrBuilder getArrayOrBuilder();

  /**
   * <code>.spark.connect.DataType.Struct struct = 21;</code>
   *
   * @return Whether the struct field is set.
   */
  boolean hasStruct();
  /**
   * <code>.spark.connect.DataType.Struct struct = 21;</code>
   *
   * @return The struct.
   */
  org.apache.kyuubi.engine.spark.connect.grpc.proto.DataType.Struct getStruct();
  /** <code>.spark.connect.DataType.Struct struct = 21;</code> */
  org.apache.kyuubi.engine.spark.connect.grpc.proto.DataType.StructOrBuilder getStructOrBuilder();

  /**
   * <code>.spark.connect.DataType.Map map = 22;</code>
   *
   * @return Whether the map field is set.
   */
  boolean hasMap();
  /**
   * <code>.spark.connect.DataType.Map map = 22;</code>
   *
   * @return The map.
   */
  org.apache.kyuubi.engine.spark.connect.grpc.proto.DataType.Map getMap();
  /** <code>.spark.connect.DataType.Map map = 22;</code> */
  org.apache.kyuubi.engine.spark.connect.grpc.proto.DataType.MapOrBuilder getMapOrBuilder();

  /**
   * <code>.spark.connect.DataType.Variant variant = 25;</code>
   *
   * @return Whether the variant field is set.
   */
  boolean hasVariant();
  /**
   * <code>.spark.connect.DataType.Variant variant = 25;</code>
   *
   * @return The variant.
   */
  org.apache.kyuubi.engine.spark.connect.grpc.proto.DataType.Variant getVariant();
  /** <code>.spark.connect.DataType.Variant variant = 25;</code> */
  org.apache.kyuubi.engine.spark.connect.grpc.proto.DataType.VariantOrBuilder getVariantOrBuilder();

  /**
   *
   *
   * <pre>
   * UserDefinedType
   * </pre>
   *
   * <code>.spark.connect.DataType.UDT udt = 23;</code>
   *
   * @return Whether the udt field is set.
   */
  boolean hasUdt();
  /**
   *
   *
   * <pre>
   * UserDefinedType
   * </pre>
   *
   * <code>.spark.connect.DataType.UDT udt = 23;</code>
   *
   * @return The udt.
   */
  org.apache.kyuubi.engine.spark.connect.grpc.proto.DataType.UDT getUdt();
  /**
   *
   *
   * <pre>
   * UserDefinedType
   * </pre>
   *
   * <code>.spark.connect.DataType.UDT udt = 23;</code>
   */
  org.apache.kyuubi.engine.spark.connect.grpc.proto.DataType.UDTOrBuilder getUdtOrBuilder();

  /**
   *
   *
   * <pre>
   * UnparsedDataType
   * </pre>
   *
   * <code>.spark.connect.DataType.Unparsed unparsed = 24;</code>
   *
   * @return Whether the unparsed field is set.
   */
  boolean hasUnparsed();
  /**
   *
   *
   * <pre>
   * UnparsedDataType
   * </pre>
   *
   * <code>.spark.connect.DataType.Unparsed unparsed = 24;</code>
   *
   * @return The unparsed.
   */
  org.apache.kyuubi.engine.spark.connect.grpc.proto.DataType.Unparsed getUnparsed();
  /**
   *
   *
   * <pre>
   * UnparsedDataType
   * </pre>
   *
   * <code>.spark.connect.DataType.Unparsed unparsed = 24;</code>
   */
  org.apache.kyuubi.engine.spark.connect.grpc.proto.DataType.UnparsedOrBuilder
      getUnparsedOrBuilder();

  public org.apache.kyuubi.engine.spark.connect.grpc.proto.DataType.KindCase getKindCase();
}
