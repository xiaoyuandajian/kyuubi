// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: kyuubi/spark/connect/commands.proto

package org.apache.kyuubi.engine.spark.connect.grpc.proto;

/**
 *
 *
 * <pre>
 * As writes are not directly handled during analysis and planning, they are modeled as commands.
 * </pre>
 *
 * Protobuf type {@code spark.connect.WriteOperation}
 */
public final class WriteOperation extends com.google.protobuf.GeneratedMessageV3
    implements
    // @@protoc_insertion_point(message_implements:spark.connect.WriteOperation)
    WriteOperationOrBuilder {
  private static final long serialVersionUID = 0L;
  // Use WriteOperation.newBuilder() to construct.
  private WriteOperation(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }

  private WriteOperation() {
    source_ = "";
    mode_ = 0;
    sortColumnNames_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    partitioningColumns_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    clusteringColumns_ = com.google.protobuf.LazyStringArrayList.EMPTY;
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
    return new WriteOperation();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet getUnknownFields() {
    return this.unknownFields;
  }

  public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
    return org.apache.kyuubi.engine.spark.connect.grpc.proto.Commands
        .internal_static_spark_connect_WriteOperation_descriptor;
  }

  @SuppressWarnings({"rawtypes"})
  @java.lang.Override
  protected com.google.protobuf.MapField internalGetMapField(int number) {
    switch (number) {
      case 9:
        return internalGetOptions();
      default:
        throw new RuntimeException("Invalid map field number: " + number);
    }
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return org.apache.kyuubi.engine.spark.connect.grpc.proto.Commands
        .internal_static_spark_connect_WriteOperation_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.class,
            org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.Builder.class);
  }

  /** Protobuf enum {@code spark.connect.WriteOperation.SaveMode} */
  public enum SaveMode implements com.google.protobuf.ProtocolMessageEnum {
    /** <code>SAVE_MODE_UNSPECIFIED = 0;</code> */
    SAVE_MODE_UNSPECIFIED(0),
    /** <code>SAVE_MODE_APPEND = 1;</code> */
    SAVE_MODE_APPEND(1),
    /** <code>SAVE_MODE_OVERWRITE = 2;</code> */
    SAVE_MODE_OVERWRITE(2),
    /** <code>SAVE_MODE_ERROR_IF_EXISTS = 3;</code> */
    SAVE_MODE_ERROR_IF_EXISTS(3),
    /** <code>SAVE_MODE_IGNORE = 4;</code> */
    SAVE_MODE_IGNORE(4),
    UNRECOGNIZED(-1),
    ;

    /** <code>SAVE_MODE_UNSPECIFIED = 0;</code> */
    public static final int SAVE_MODE_UNSPECIFIED_VALUE = 0;
    /** <code>SAVE_MODE_APPEND = 1;</code> */
    public static final int SAVE_MODE_APPEND_VALUE = 1;
    /** <code>SAVE_MODE_OVERWRITE = 2;</code> */
    public static final int SAVE_MODE_OVERWRITE_VALUE = 2;
    /** <code>SAVE_MODE_ERROR_IF_EXISTS = 3;</code> */
    public static final int SAVE_MODE_ERROR_IF_EXISTS_VALUE = 3;
    /** <code>SAVE_MODE_IGNORE = 4;</code> */
    public static final int SAVE_MODE_IGNORE_VALUE = 4;

    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static SaveMode valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static SaveMode forNumber(int value) {
      switch (value) {
        case 0:
          return SAVE_MODE_UNSPECIFIED;
        case 1:
          return SAVE_MODE_APPEND;
        case 2:
          return SAVE_MODE_OVERWRITE;
        case 3:
          return SAVE_MODE_ERROR_IF_EXISTS;
        case 4:
          return SAVE_MODE_IGNORE;
        default:
          return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<SaveMode> internalGetValueMap() {
      return internalValueMap;
    }

    private static final com.google.protobuf.Internal.EnumLiteMap<SaveMode> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<SaveMode>() {
          public SaveMode findValueByNumber(int number) {
            return SaveMode.forNumber(number);
          }
        };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }

    public final com.google.protobuf.Descriptors.EnumDescriptor getDescriptorForType() {
      return getDescriptor();
    }

    public static final com.google.protobuf.Descriptors.EnumDescriptor getDescriptor() {
      return org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.getDescriptor()
          .getEnumTypes()
          .get(0);
    }

    private static final SaveMode[] VALUES = values();

    public static SaveMode valueOf(com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException("EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private SaveMode(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:spark.connect.WriteOperation.SaveMode)
  }

  public interface SaveTableOrBuilder
      extends
      // @@protoc_insertion_point(interface_extends:spark.connect.WriteOperation.SaveTable)
      com.google.protobuf.MessageOrBuilder {

    /**
     *
     *
     * <pre>
     * (Required) The table name.
     * </pre>
     *
     * <code>string table_name = 1;</code>
     *
     * @return The tableName.
     */
    java.lang.String getTableName();
    /**
     *
     *
     * <pre>
     * (Required) The table name.
     * </pre>
     *
     * <code>string table_name = 1;</code>
     *
     * @return The bytes for tableName.
     */
    com.google.protobuf.ByteString getTableNameBytes();

    /**
     *
     *
     * <pre>
     * (Required) The method to be called to write to the table.
     * </pre>
     *
     * <code>.spark.connect.WriteOperation.SaveTable.TableSaveMethod save_method = 2;</code>
     *
     * @return The enum numeric value on the wire for saveMethod.
     */
    int getSaveMethodValue();
    /**
     *
     *
     * <pre>
     * (Required) The method to be called to write to the table.
     * </pre>
     *
     * <code>.spark.connect.WriteOperation.SaveTable.TableSaveMethod save_method = 2;</code>
     *
     * @return The saveMethod.
     */
    org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.SaveTable.TableSaveMethod
        getSaveMethod();
  }
  /** Protobuf type {@code spark.connect.WriteOperation.SaveTable} */
  public static final class SaveTable extends com.google.protobuf.GeneratedMessageV3
      implements
      // @@protoc_insertion_point(message_implements:spark.connect.WriteOperation.SaveTable)
      SaveTableOrBuilder {
    private static final long serialVersionUID = 0L;
    // Use SaveTable.newBuilder() to construct.
    private SaveTable(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }

    private SaveTable() {
      tableName_ = "";
      saveMethod_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
      return new SaveTable();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet getUnknownFields() {
      return this.unknownFields;
    }

    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return org.apache.kyuubi.engine.spark.connect.grpc.proto.Commands
          .internal_static_spark_connect_WriteOperation_SaveTable_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.kyuubi.engine.spark.connect.grpc.proto.Commands
          .internal_static_spark_connect_WriteOperation_SaveTable_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.SaveTable.class,
              org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.SaveTable.Builder
                  .class);
    }

    /** Protobuf enum {@code spark.connect.WriteOperation.SaveTable.TableSaveMethod} */
    public enum TableSaveMethod implements com.google.protobuf.ProtocolMessageEnum {
      /** <code>TABLE_SAVE_METHOD_UNSPECIFIED = 0;</code> */
      TABLE_SAVE_METHOD_UNSPECIFIED(0),
      /** <code>TABLE_SAVE_METHOD_SAVE_AS_TABLE = 1;</code> */
      TABLE_SAVE_METHOD_SAVE_AS_TABLE(1),
      /** <code>TABLE_SAVE_METHOD_INSERT_INTO = 2;</code> */
      TABLE_SAVE_METHOD_INSERT_INTO(2),
      UNRECOGNIZED(-1),
      ;

      /** <code>TABLE_SAVE_METHOD_UNSPECIFIED = 0;</code> */
      public static final int TABLE_SAVE_METHOD_UNSPECIFIED_VALUE = 0;
      /** <code>TABLE_SAVE_METHOD_SAVE_AS_TABLE = 1;</code> */
      public static final int TABLE_SAVE_METHOD_SAVE_AS_TABLE_VALUE = 1;
      /** <code>TABLE_SAVE_METHOD_INSERT_INTO = 2;</code> */
      public static final int TABLE_SAVE_METHOD_INSERT_INTO_VALUE = 2;

      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static TableSaveMethod valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static TableSaveMethod forNumber(int value) {
        switch (value) {
          case 0:
            return TABLE_SAVE_METHOD_UNSPECIFIED;
          case 1:
            return TABLE_SAVE_METHOD_SAVE_AS_TABLE;
          case 2:
            return TABLE_SAVE_METHOD_INSERT_INTO;
          default:
            return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<TableSaveMethod>
          internalGetValueMap() {
        return internalValueMap;
      }

      private static final com.google.protobuf.Internal.EnumLiteMap<TableSaveMethod>
          internalValueMap =
              new com.google.protobuf.Internal.EnumLiteMap<TableSaveMethod>() {
                public TableSaveMethod findValueByNumber(int number) {
                  return TableSaveMethod.forNumber(number);
                }
              };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }

      public final com.google.protobuf.Descriptors.EnumDescriptor getDescriptorForType() {
        return getDescriptor();
      }

      public static final com.google.protobuf.Descriptors.EnumDescriptor getDescriptor() {
        return org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.SaveTable
            .getDescriptor()
            .getEnumTypes()
            .get(0);
      }

      private static final TableSaveMethod[] VALUES = values();

      public static TableSaveMethod valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException("EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private TableSaveMethod(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:spark.connect.WriteOperation.SaveTable.TableSaveMethod)
    }

    public static final int TABLE_NAME_FIELD_NUMBER = 1;
    private volatile java.lang.Object tableName_;
    /**
     *
     *
     * <pre>
     * (Required) The table name.
     * </pre>
     *
     * <code>string table_name = 1;</code>
     *
     * @return The tableName.
     */
    @java.lang.Override
    public java.lang.String getTableName() {
      java.lang.Object ref = tableName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        tableName_ = s;
        return s;
      }
    }
    /**
     *
     *
     * <pre>
     * (Required) The table name.
     * </pre>
     *
     * <code>string table_name = 1;</code>
     *
     * @return The bytes for tableName.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getTableNameBytes() {
      java.lang.Object ref = tableName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        tableName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SAVE_METHOD_FIELD_NUMBER = 2;
    private int saveMethod_;
    /**
     *
     *
     * <pre>
     * (Required) The method to be called to write to the table.
     * </pre>
     *
     * <code>.spark.connect.WriteOperation.SaveTable.TableSaveMethod save_method = 2;</code>
     *
     * @return The enum numeric value on the wire for saveMethod.
     */
    @java.lang.Override
    public int getSaveMethodValue() {
      return saveMethod_;
    }
    /**
     *
     *
     * <pre>
     * (Required) The method to be called to write to the table.
     * </pre>
     *
     * <code>.spark.connect.WriteOperation.SaveTable.TableSaveMethod save_method = 2;</code>
     *
     * @return The saveMethod.
     */
    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.SaveTable
            .TableSaveMethod
        getSaveMethod() {
      @SuppressWarnings("deprecation")
      org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.SaveTable.TableSaveMethod
          result =
              org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.SaveTable
                  .TableSaveMethod.valueOf(saveMethod_);
      return result == null
          ? org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.SaveTable
              .TableSaveMethod.UNRECOGNIZED
          : result;
    }

    private byte memoizedIsInitialized = -1;

    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(tableName_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, tableName_);
      }
      if (saveMethod_
          != org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.SaveTable
              .TableSaveMethod.TABLE_SAVE_METHOD_UNSPECIFIED
              .getNumber()) {
        output.writeEnum(2, saveMethod_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(tableName_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, tableName_);
      }
      if (saveMethod_
          != org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.SaveTable
              .TableSaveMethod.TABLE_SAVE_METHOD_UNSPECIFIED
              .getNumber()) {
        size += com.google.protobuf.CodedOutputStream.computeEnumSize(2, saveMethod_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
        return true;
      }
      if (!(obj
          instanceof org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.SaveTable)) {
        return super.equals(obj);
      }
      org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.SaveTable other =
          (org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.SaveTable) obj;

      if (!getTableName().equals(other.getTableName())) return false;
      if (saveMethod_ != other.saveMethod_) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TABLE_NAME_FIELD_NUMBER;
      hash = (53 * hash) + getTableName().hashCode();
      hash = (37 * hash) + SAVE_METHOD_FIELD_NUMBER;
      hash = (53 * hash) + saveMethod_;
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.SaveTable
        parseFrom(java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.SaveTable
        parseFrom(
            java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.SaveTable
        parseFrom(com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.SaveTable
        parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.SaveTable
        parseFrom(byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.SaveTable
        parseFrom(byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.SaveTable
        parseFrom(java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.SaveTable
        parseFrom(
            java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
          PARSER, input, extensionRegistry);
    }

    public static org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.SaveTable
        parseDelimitedFrom(java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
    }

    public static org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.SaveTable
        parseDelimitedFrom(
            java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
          PARSER, input, extensionRegistry);
    }

    public static org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.SaveTable
        parseFrom(com.google.protobuf.CodedInputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.SaveTable
        parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
          PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() {
      return newBuilder();
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }

    public static Builder newBuilder(
        org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.SaveTable prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /** Protobuf type {@code spark.connect.WriteOperation.SaveTable} */
    public static final class Builder
        extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
        implements
        // @@protoc_insertion_point(builder_implements:spark.connect.WriteOperation.SaveTable)
        org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.SaveTableOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
        return org.apache.kyuubi.engine.spark.connect.grpc.proto.Commands
            .internal_static_spark_connect_WriteOperation_SaveTable_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.kyuubi.engine.spark.connect.grpc.proto.Commands
            .internal_static_spark_connect_WriteOperation_SaveTable_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.SaveTable.class,
                org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.SaveTable.Builder
                    .class);
      }

      // Construct using
      // org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.SaveTable.newBuilder()
      private Builder() {}

      private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
      }

      @java.lang.Override
      public Builder clear() {
        super.clear();
        tableName_ = "";

        saveMethod_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
        return org.apache.kyuubi.engine.spark.connect.grpc.proto.Commands
            .internal_static_spark_connect_WriteOperation_SaveTable_descriptor;
      }

      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.SaveTable
          getDefaultInstanceForType() {
        return org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.SaveTable
            .getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.SaveTable build() {
        org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.SaveTable result =
            buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.SaveTable
          buildPartial() {
        org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.SaveTable result =
            new org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.SaveTable(this);
        result.tableName_ = tableName_;
        result.saveMethod_ = saveMethod_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }

      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
        return super.setField(field, value);
      }

      @java.lang.Override
      public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }

      @java.lang.Override
      public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }

      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index,
          java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }

      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other
            instanceof org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.SaveTable) {
          return mergeFrom(
              (org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.SaveTable) other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(
          org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.SaveTable other) {
        if (other
            == org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.SaveTable
                .getDefaultInstance()) return this;
        if (!other.getTableName().isEmpty()) {
          tableName_ = other.tableName_;
          onChanged();
        }
        if (other.saveMethod_ != 0) {
          setSaveMethodValue(other.getSaveMethodValue());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10:
                {
                  tableName_ = input.readStringRequireUtf8();

                  break;
                } // case 10
              case 16:
                {
                  saveMethod_ = input.readEnum();

                  break;
                } // case 16
              default:
                {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }

      private java.lang.Object tableName_ = "";
      /**
       *
       *
       * <pre>
       * (Required) The table name.
       * </pre>
       *
       * <code>string table_name = 1;</code>
       *
       * @return The tableName.
       */
      public java.lang.String getTableName() {
        java.lang.Object ref = tableName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          tableName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       *
       *
       * <pre>
       * (Required) The table name.
       * </pre>
       *
       * <code>string table_name = 1;</code>
       *
       * @return The bytes for tableName.
       */
      public com.google.protobuf.ByteString getTableNameBytes() {
        java.lang.Object ref = tableName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
          tableName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       *
       *
       * <pre>
       * (Required) The table name.
       * </pre>
       *
       * <code>string table_name = 1;</code>
       *
       * @param value The tableName to set.
       * @return This builder for chaining.
       */
      public Builder setTableName(java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }

        tableName_ = value;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * (Required) The table name.
       * </pre>
       *
       * <code>string table_name = 1;</code>
       *
       * @return This builder for chaining.
       */
      public Builder clearTableName() {

        tableName_ = getDefaultInstance().getTableName();
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * (Required) The table name.
       * </pre>
       *
       * <code>string table_name = 1;</code>
       *
       * @param value The bytes for tableName to set.
       * @return This builder for chaining.
       */
      public Builder setTableNameBytes(com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        checkByteStringIsUtf8(value);

        tableName_ = value;
        onChanged();
        return this;
      }

      private int saveMethod_ = 0;
      /**
       *
       *
       * <pre>
       * (Required) The method to be called to write to the table.
       * </pre>
       *
       * <code>.spark.connect.WriteOperation.SaveTable.TableSaveMethod save_method = 2;</code>
       *
       * @return The enum numeric value on the wire for saveMethod.
       */
      @java.lang.Override
      public int getSaveMethodValue() {
        return saveMethod_;
      }
      /**
       *
       *
       * <pre>
       * (Required) The method to be called to write to the table.
       * </pre>
       *
       * <code>.spark.connect.WriteOperation.SaveTable.TableSaveMethod save_method = 2;</code>
       *
       * @param value The enum numeric value on the wire for saveMethod to set.
       * @return This builder for chaining.
       */
      public Builder setSaveMethodValue(int value) {

        saveMethod_ = value;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * (Required) The method to be called to write to the table.
       * </pre>
       *
       * <code>.spark.connect.WriteOperation.SaveTable.TableSaveMethod save_method = 2;</code>
       *
       * @return The saveMethod.
       */
      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.SaveTable
              .TableSaveMethod
          getSaveMethod() {
        @SuppressWarnings("deprecation")
        org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.SaveTable.TableSaveMethod
            result =
                org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.SaveTable
                    .TableSaveMethod.valueOf(saveMethod_);
        return result == null
            ? org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.SaveTable
                .TableSaveMethod.UNRECOGNIZED
            : result;
      }
      /**
       *
       *
       * <pre>
       * (Required) The method to be called to write to the table.
       * </pre>
       *
       * <code>.spark.connect.WriteOperation.SaveTable.TableSaveMethod save_method = 2;</code>
       *
       * @param value The saveMethod to set.
       * @return This builder for chaining.
       */
      public Builder setSaveMethod(
          org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.SaveTable.TableSaveMethod
              value) {
        if (value == null) {
          throw new NullPointerException();
        }

        saveMethod_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * (Required) The method to be called to write to the table.
       * </pre>
       *
       * <code>.spark.connect.WriteOperation.SaveTable.TableSaveMethod save_method = 2;</code>
       *
       * @return This builder for chaining.
       */
      public Builder clearSaveMethod() {

        saveMethod_ = 0;
        onChanged();
        return this;
      }

      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }

      // @@protoc_insertion_point(builder_scope:spark.connect.WriteOperation.SaveTable)
    }

    // @@protoc_insertion_point(class_scope:spark.connect.WriteOperation.SaveTable)
    private static final org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.SaveTable
        DEFAULT_INSTANCE;

    static {
      DEFAULT_INSTANCE =
          new org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.SaveTable();
    }

    public static org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.SaveTable
        getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SaveTable> PARSER =
        new com.google.protobuf.AbstractParser<SaveTable>() {
          @java.lang.Override
          public SaveTable parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            Builder builder = newBuilder();
            try {
              builder.mergeFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw e.setUnfinishedMessage(builder.buildPartial());
            } catch (com.google.protobuf.UninitializedMessageException e) {
              throw e.asInvalidProtocolBufferException()
                  .setUnfinishedMessage(builder.buildPartial());
            } catch (java.io.IOException e) {
              throw new com.google.protobuf.InvalidProtocolBufferException(e)
                  .setUnfinishedMessage(builder.buildPartial());
            }
            return builder.buildPartial();
          }
        };

    public static com.google.protobuf.Parser<SaveTable> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SaveTable> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.SaveTable
        getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }
  }

  public interface BucketByOrBuilder
      extends
      // @@protoc_insertion_point(interface_extends:spark.connect.WriteOperation.BucketBy)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated string bucket_column_names = 1;</code>
     *
     * @return A list containing the bucketColumnNames.
     */
    java.util.List<java.lang.String> getBucketColumnNamesList();
    /**
     * <code>repeated string bucket_column_names = 1;</code>
     *
     * @return The count of bucketColumnNames.
     */
    int getBucketColumnNamesCount();
    /**
     * <code>repeated string bucket_column_names = 1;</code>
     *
     * @param index The index of the element to return.
     * @return The bucketColumnNames at the given index.
     */
    java.lang.String getBucketColumnNames(int index);
    /**
     * <code>repeated string bucket_column_names = 1;</code>
     *
     * @param index The index of the value to return.
     * @return The bytes of the bucketColumnNames at the given index.
     */
    com.google.protobuf.ByteString getBucketColumnNamesBytes(int index);

    /**
     * <code>int32 num_buckets = 2;</code>
     *
     * @return The numBuckets.
     */
    int getNumBuckets();
  }
  /** Protobuf type {@code spark.connect.WriteOperation.BucketBy} */
  public static final class BucketBy extends com.google.protobuf.GeneratedMessageV3
      implements
      // @@protoc_insertion_point(message_implements:spark.connect.WriteOperation.BucketBy)
      BucketByOrBuilder {
    private static final long serialVersionUID = 0L;
    // Use BucketBy.newBuilder() to construct.
    private BucketBy(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }

    private BucketBy() {
      bucketColumnNames_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
      return new BucketBy();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet getUnknownFields() {
      return this.unknownFields;
    }

    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return org.apache.kyuubi.engine.spark.connect.grpc.proto.Commands
          .internal_static_spark_connect_WriteOperation_BucketBy_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.kyuubi.engine.spark.connect.grpc.proto.Commands
          .internal_static_spark_connect_WriteOperation_BucketBy_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.BucketBy.class,
              org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.BucketBy.Builder
                  .class);
    }

    public static final int BUCKET_COLUMN_NAMES_FIELD_NUMBER = 1;
    private com.google.protobuf.LazyStringList bucketColumnNames_;
    /**
     * <code>repeated string bucket_column_names = 1;</code>
     *
     * @return A list containing the bucketColumnNames.
     */
    public com.google.protobuf.ProtocolStringList getBucketColumnNamesList() {
      return bucketColumnNames_;
    }
    /**
     * <code>repeated string bucket_column_names = 1;</code>
     *
     * @return The count of bucketColumnNames.
     */
    public int getBucketColumnNamesCount() {
      return bucketColumnNames_.size();
    }
    /**
     * <code>repeated string bucket_column_names = 1;</code>
     *
     * @param index The index of the element to return.
     * @return The bucketColumnNames at the given index.
     */
    public java.lang.String getBucketColumnNames(int index) {
      return bucketColumnNames_.get(index);
    }
    /**
     * <code>repeated string bucket_column_names = 1;</code>
     *
     * @param index The index of the value to return.
     * @return The bytes of the bucketColumnNames at the given index.
     */
    public com.google.protobuf.ByteString getBucketColumnNamesBytes(int index) {
      return bucketColumnNames_.getByteString(index);
    }

    public static final int NUM_BUCKETS_FIELD_NUMBER = 2;
    private int numBuckets_;
    /**
     * <code>int32 num_buckets = 2;</code>
     *
     * @return The numBuckets.
     */
    @java.lang.Override
    public int getNumBuckets() {
      return numBuckets_;
    }

    private byte memoizedIsInitialized = -1;

    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
      for (int i = 0; i < bucketColumnNames_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, bucketColumnNames_.getRaw(i));
      }
      if (numBuckets_ != 0) {
        output.writeInt32(2, numBuckets_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < bucketColumnNames_.size(); i++) {
          dataSize += computeStringSizeNoTag(bucketColumnNames_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getBucketColumnNamesList().size();
      }
      if (numBuckets_ != 0) {
        size += com.google.protobuf.CodedOutputStream.computeInt32Size(2, numBuckets_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
        return true;
      }
      if (!(obj
          instanceof org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.BucketBy)) {
        return super.equals(obj);
      }
      org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.BucketBy other =
          (org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.BucketBy) obj;

      if (!getBucketColumnNamesList().equals(other.getBucketColumnNamesList())) return false;
      if (getNumBuckets() != other.getNumBuckets()) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getBucketColumnNamesCount() > 0) {
        hash = (37 * hash) + BUCKET_COLUMN_NAMES_FIELD_NUMBER;
        hash = (53 * hash) + getBucketColumnNamesList().hashCode();
      }
      hash = (37 * hash) + NUM_BUCKETS_FIELD_NUMBER;
      hash = (53 * hash) + getNumBuckets();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.BucketBy
        parseFrom(java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.BucketBy
        parseFrom(
            java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.BucketBy
        parseFrom(com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.BucketBy
        parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.BucketBy
        parseFrom(byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.BucketBy
        parseFrom(byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.BucketBy
        parseFrom(java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.BucketBy
        parseFrom(
            java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
          PARSER, input, extensionRegistry);
    }

    public static org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.BucketBy
        parseDelimitedFrom(java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
    }

    public static org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.BucketBy
        parseDelimitedFrom(
            java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
          PARSER, input, extensionRegistry);
    }

    public static org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.BucketBy
        parseFrom(com.google.protobuf.CodedInputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.BucketBy
        parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
          PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() {
      return newBuilder();
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }

    public static Builder newBuilder(
        org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.BucketBy prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /** Protobuf type {@code spark.connect.WriteOperation.BucketBy} */
    public static final class Builder
        extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
        implements
        // @@protoc_insertion_point(builder_implements:spark.connect.WriteOperation.BucketBy)
        org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.BucketByOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
        return org.apache.kyuubi.engine.spark.connect.grpc.proto.Commands
            .internal_static_spark_connect_WriteOperation_BucketBy_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.kyuubi.engine.spark.connect.grpc.proto.Commands
            .internal_static_spark_connect_WriteOperation_BucketBy_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.BucketBy.class,
                org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.BucketBy.Builder
                    .class);
      }

      // Construct using
      // org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.BucketBy.newBuilder()
      private Builder() {}

      private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
      }

      @java.lang.Override
      public Builder clear() {
        super.clear();
        bucketColumnNames_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        numBuckets_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
        return org.apache.kyuubi.engine.spark.connect.grpc.proto.Commands
            .internal_static_spark_connect_WriteOperation_BucketBy_descriptor;
      }

      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.BucketBy
          getDefaultInstanceForType() {
        return org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.BucketBy
            .getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.BucketBy build() {
        org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.BucketBy result =
            buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.BucketBy
          buildPartial() {
        org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.BucketBy result =
            new org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.BucketBy(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) != 0)) {
          bucketColumnNames_ = bucketColumnNames_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.bucketColumnNames_ = bucketColumnNames_;
        result.numBuckets_ = numBuckets_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }

      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
        return super.setField(field, value);
      }

      @java.lang.Override
      public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }

      @java.lang.Override
      public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }

      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index,
          java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }

      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other
            instanceof org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.BucketBy) {
          return mergeFrom(
              (org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.BucketBy) other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(
          org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.BucketBy other) {
        if (other
            == org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.BucketBy
                .getDefaultInstance()) return this;
        if (!other.bucketColumnNames_.isEmpty()) {
          if (bucketColumnNames_.isEmpty()) {
            bucketColumnNames_ = other.bucketColumnNames_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureBucketColumnNamesIsMutable();
            bucketColumnNames_.addAll(other.bucketColumnNames_);
          }
          onChanged();
        }
        if (other.getNumBuckets() != 0) {
          setNumBuckets(other.getNumBuckets());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10:
                {
                  java.lang.String s = input.readStringRequireUtf8();
                  ensureBucketColumnNamesIsMutable();
                  bucketColumnNames_.add(s);
                  break;
                } // case 10
              case 16:
                {
                  numBuckets_ = input.readInt32();

                  break;
                } // case 16
              default:
                {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }

      private int bitField0_;

      private com.google.protobuf.LazyStringList bucketColumnNames_ =
          com.google.protobuf.LazyStringArrayList.EMPTY;

      private void ensureBucketColumnNamesIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          bucketColumnNames_ = new com.google.protobuf.LazyStringArrayList(bucketColumnNames_);
          bitField0_ |= 0x00000001;
        }
      }
      /**
       * <code>repeated string bucket_column_names = 1;</code>
       *
       * @return A list containing the bucketColumnNames.
       */
      public com.google.protobuf.ProtocolStringList getBucketColumnNamesList() {
        return bucketColumnNames_.getUnmodifiableView();
      }
      /**
       * <code>repeated string bucket_column_names = 1;</code>
       *
       * @return The count of bucketColumnNames.
       */
      public int getBucketColumnNamesCount() {
        return bucketColumnNames_.size();
      }
      /**
       * <code>repeated string bucket_column_names = 1;</code>
       *
       * @param index The index of the element to return.
       * @return The bucketColumnNames at the given index.
       */
      public java.lang.String getBucketColumnNames(int index) {
        return bucketColumnNames_.get(index);
      }
      /**
       * <code>repeated string bucket_column_names = 1;</code>
       *
       * @param index The index of the value to return.
       * @return The bytes of the bucketColumnNames at the given index.
       */
      public com.google.protobuf.ByteString getBucketColumnNamesBytes(int index) {
        return bucketColumnNames_.getByteString(index);
      }
      /**
       * <code>repeated string bucket_column_names = 1;</code>
       *
       * @param index The index to set the value at.
       * @param value The bucketColumnNames to set.
       * @return This builder for chaining.
       */
      public Builder setBucketColumnNames(int index, java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureBucketColumnNamesIsMutable();
        bucketColumnNames_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string bucket_column_names = 1;</code>
       *
       * @param value The bucketColumnNames to add.
       * @return This builder for chaining.
       */
      public Builder addBucketColumnNames(java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureBucketColumnNamesIsMutable();
        bucketColumnNames_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string bucket_column_names = 1;</code>
       *
       * @param values The bucketColumnNames to add.
       * @return This builder for chaining.
       */
      public Builder addAllBucketColumnNames(java.lang.Iterable<java.lang.String> values) {
        ensureBucketColumnNamesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(values, bucketColumnNames_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string bucket_column_names = 1;</code>
       *
       * @return This builder for chaining.
       */
      public Builder clearBucketColumnNames() {
        bucketColumnNames_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string bucket_column_names = 1;</code>
       *
       * @param value The bytes of the bucketColumnNames to add.
       * @return This builder for chaining.
       */
      public Builder addBucketColumnNamesBytes(com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        checkByteStringIsUtf8(value);
        ensureBucketColumnNamesIsMutable();
        bucketColumnNames_.add(value);
        onChanged();
        return this;
      }

      private int numBuckets_;
      /**
       * <code>int32 num_buckets = 2;</code>
       *
       * @return The numBuckets.
       */
      @java.lang.Override
      public int getNumBuckets() {
        return numBuckets_;
      }
      /**
       * <code>int32 num_buckets = 2;</code>
       *
       * @param value The numBuckets to set.
       * @return This builder for chaining.
       */
      public Builder setNumBuckets(int value) {

        numBuckets_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 num_buckets = 2;</code>
       *
       * @return This builder for chaining.
       */
      public Builder clearNumBuckets() {

        numBuckets_ = 0;
        onChanged();
        return this;
      }

      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }

      // @@protoc_insertion_point(builder_scope:spark.connect.WriteOperation.BucketBy)
    }

    // @@protoc_insertion_point(class_scope:spark.connect.WriteOperation.BucketBy)
    private static final org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.BucketBy
        DEFAULT_INSTANCE;

    static {
      DEFAULT_INSTANCE =
          new org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.BucketBy();
    }

    public static org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.BucketBy
        getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<BucketBy> PARSER =
        new com.google.protobuf.AbstractParser<BucketBy>() {
          @java.lang.Override
          public BucketBy parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            Builder builder = newBuilder();
            try {
              builder.mergeFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw e.setUnfinishedMessage(builder.buildPartial());
            } catch (com.google.protobuf.UninitializedMessageException e) {
              throw e.asInvalidProtocolBufferException()
                  .setUnfinishedMessage(builder.buildPartial());
            } catch (java.io.IOException e) {
              throw new com.google.protobuf.InvalidProtocolBufferException(e)
                  .setUnfinishedMessage(builder.buildPartial());
            }
            return builder.buildPartial();
          }
        };

    public static com.google.protobuf.Parser<BucketBy> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<BucketBy> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.BucketBy
        getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }
  }

  private int bitField0_;
  private int saveTypeCase_ = 0;
  private java.lang.Object saveType_;

  public enum SaveTypeCase
      implements
          com.google.protobuf.Internal.EnumLite,
          com.google.protobuf.AbstractMessage.InternalOneOfEnum {
    PATH(3),
    TABLE(4),
    SAVETYPE_NOT_SET(0);
    private final int value;

    private SaveTypeCase(int value) {
      this.value = value;
    }
    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static SaveTypeCase valueOf(int value) {
      return forNumber(value);
    }

    public static SaveTypeCase forNumber(int value) {
      switch (value) {
        case 3:
          return PATH;
        case 4:
          return TABLE;
        case 0:
          return SAVETYPE_NOT_SET;
        default:
          return null;
      }
    }

    public int getNumber() {
      return this.value;
    }
  };

  public SaveTypeCase getSaveTypeCase() {
    return SaveTypeCase.forNumber(saveTypeCase_);
  }

  public static final int INPUT_FIELD_NUMBER = 1;
  private org.apache.kyuubi.engine.spark.connect.grpc.proto.Relation input_;
  /**
   *
   *
   * <pre>
   * (Required) The output of the `input` relation will be persisted according to the options.
   * </pre>
   *
   * <code>.spark.connect.Relation input = 1;</code>
   *
   * @return Whether the input field is set.
   */
  @java.lang.Override
  public boolean hasInput() {
    return input_ != null;
  }
  /**
   *
   *
   * <pre>
   * (Required) The output of the `input` relation will be persisted according to the options.
   * </pre>
   *
   * <code>.spark.connect.Relation input = 1;</code>
   *
   * @return The input.
   */
  @java.lang.Override
  public org.apache.kyuubi.engine.spark.connect.grpc.proto.Relation getInput() {
    return input_ == null
        ? org.apache.kyuubi.engine.spark.connect.grpc.proto.Relation.getDefaultInstance()
        : input_;
  }
  /**
   *
   *
   * <pre>
   * (Required) The output of the `input` relation will be persisted according to the options.
   * </pre>
   *
   * <code>.spark.connect.Relation input = 1;</code>
   */
  @java.lang.Override
  public org.apache.kyuubi.engine.spark.connect.grpc.proto.RelationOrBuilder getInputOrBuilder() {
    return getInput();
  }

  public static final int SOURCE_FIELD_NUMBER = 2;
  private volatile java.lang.Object source_;
  /**
   *
   *
   * <pre>
   * (Optional) Format value according to the Spark documentation. Examples are: text, parquet, delta.
   * </pre>
   *
   * <code>optional string source = 2;</code>
   *
   * @return Whether the source field is set.
   */
  @java.lang.Override
  public boolean hasSource() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   *
   *
   * <pre>
   * (Optional) Format value according to the Spark documentation. Examples are: text, parquet, delta.
   * </pre>
   *
   * <code>optional string source = 2;</code>
   *
   * @return The source.
   */
  @java.lang.Override
  public java.lang.String getSource() {
    java.lang.Object ref = source_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      source_ = s;
      return s;
    }
  }
  /**
   *
   *
   * <pre>
   * (Optional) Format value according to the Spark documentation. Examples are: text, parquet, delta.
   * </pre>
   *
   * <code>optional string source = 2;</code>
   *
   * @return The bytes for source.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getSourceBytes() {
    java.lang.Object ref = source_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      source_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int PATH_FIELD_NUMBER = 3;
  /**
   * <code>string path = 3;</code>
   *
   * @return Whether the path field is set.
   */
  public boolean hasPath() {
    return saveTypeCase_ == 3;
  }
  /**
   * <code>string path = 3;</code>
   *
   * @return The path.
   */
  public java.lang.String getPath() {
    java.lang.Object ref = "";
    if (saveTypeCase_ == 3) {
      ref = saveType_;
    }
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      if (saveTypeCase_ == 3) {
        saveType_ = s;
      }
      return s;
    }
  }
  /**
   * <code>string path = 3;</code>
   *
   * @return The bytes for path.
   */
  public com.google.protobuf.ByteString getPathBytes() {
    java.lang.Object ref = "";
    if (saveTypeCase_ == 3) {
      ref = saveType_;
    }
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      if (saveTypeCase_ == 3) {
        saveType_ = b;
      }
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int TABLE_FIELD_NUMBER = 4;
  /**
   * <code>.spark.connect.WriteOperation.SaveTable table = 4;</code>
   *
   * @return Whether the table field is set.
   */
  @java.lang.Override
  public boolean hasTable() {
    return saveTypeCase_ == 4;
  }
  /**
   * <code>.spark.connect.WriteOperation.SaveTable table = 4;</code>
   *
   * @return The table.
   */
  @java.lang.Override
  public org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.SaveTable getTable() {
    if (saveTypeCase_ == 4) {
      return (org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.SaveTable) saveType_;
    }
    return org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.SaveTable
        .getDefaultInstance();
  }
  /** <code>.spark.connect.WriteOperation.SaveTable table = 4;</code> */
  @java.lang.Override
  public org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.SaveTableOrBuilder
      getTableOrBuilder() {
    if (saveTypeCase_ == 4) {
      return (org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.SaveTable) saveType_;
    }
    return org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.SaveTable
        .getDefaultInstance();
  }

  public static final int MODE_FIELD_NUMBER = 5;
  private int mode_;
  /**
   *
   *
   * <pre>
   * (Required) the save mode.
   * </pre>
   *
   * <code>.spark.connect.WriteOperation.SaveMode mode = 5;</code>
   *
   * @return The enum numeric value on the wire for mode.
   */
  @java.lang.Override
  public int getModeValue() {
    return mode_;
  }
  /**
   *
   *
   * <pre>
   * (Required) the save mode.
   * </pre>
   *
   * <code>.spark.connect.WriteOperation.SaveMode mode = 5;</code>
   *
   * @return The mode.
   */
  @java.lang.Override
  public org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.SaveMode getMode() {
    @SuppressWarnings("deprecation")
    org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.SaveMode result =
        org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.SaveMode.valueOf(mode_);
    return result == null
        ? org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.SaveMode.UNRECOGNIZED
        : result;
  }

  public static final int SORT_COLUMN_NAMES_FIELD_NUMBER = 6;
  private com.google.protobuf.LazyStringList sortColumnNames_;
  /**
   *
   *
   * <pre>
   * (Optional) List of columns to sort the output by.
   * </pre>
   *
   * <code>repeated string sort_column_names = 6;</code>
   *
   * @return A list containing the sortColumnNames.
   */
  public com.google.protobuf.ProtocolStringList getSortColumnNamesList() {
    return sortColumnNames_;
  }
  /**
   *
   *
   * <pre>
   * (Optional) List of columns to sort the output by.
   * </pre>
   *
   * <code>repeated string sort_column_names = 6;</code>
   *
   * @return The count of sortColumnNames.
   */
  public int getSortColumnNamesCount() {
    return sortColumnNames_.size();
  }
  /**
   *
   *
   * <pre>
   * (Optional) List of columns to sort the output by.
   * </pre>
   *
   * <code>repeated string sort_column_names = 6;</code>
   *
   * @param index The index of the element to return.
   * @return The sortColumnNames at the given index.
   */
  public java.lang.String getSortColumnNames(int index) {
    return sortColumnNames_.get(index);
  }
  /**
   *
   *
   * <pre>
   * (Optional) List of columns to sort the output by.
   * </pre>
   *
   * <code>repeated string sort_column_names = 6;</code>
   *
   * @param index The index of the value to return.
   * @return The bytes of the sortColumnNames at the given index.
   */
  public com.google.protobuf.ByteString getSortColumnNamesBytes(int index) {
    return sortColumnNames_.getByteString(index);
  }

  public static final int PARTITIONING_COLUMNS_FIELD_NUMBER = 7;
  private com.google.protobuf.LazyStringList partitioningColumns_;
  /**
   *
   *
   * <pre>
   * (Optional) List of columns for partitioning.
   * </pre>
   *
   * <code>repeated string partitioning_columns = 7;</code>
   *
   * @return A list containing the partitioningColumns.
   */
  public com.google.protobuf.ProtocolStringList getPartitioningColumnsList() {
    return partitioningColumns_;
  }
  /**
   *
   *
   * <pre>
   * (Optional) List of columns for partitioning.
   * </pre>
   *
   * <code>repeated string partitioning_columns = 7;</code>
   *
   * @return The count of partitioningColumns.
   */
  public int getPartitioningColumnsCount() {
    return partitioningColumns_.size();
  }
  /**
   *
   *
   * <pre>
   * (Optional) List of columns for partitioning.
   * </pre>
   *
   * <code>repeated string partitioning_columns = 7;</code>
   *
   * @param index The index of the element to return.
   * @return The partitioningColumns at the given index.
   */
  public java.lang.String getPartitioningColumns(int index) {
    return partitioningColumns_.get(index);
  }
  /**
   *
   *
   * <pre>
   * (Optional) List of columns for partitioning.
   * </pre>
   *
   * <code>repeated string partitioning_columns = 7;</code>
   *
   * @param index The index of the value to return.
   * @return The bytes of the partitioningColumns at the given index.
   */
  public com.google.protobuf.ByteString getPartitioningColumnsBytes(int index) {
    return partitioningColumns_.getByteString(index);
  }

  public static final int BUCKET_BY_FIELD_NUMBER = 8;
  private org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.BucketBy bucketBy_;
  /**
   *
   *
   * <pre>
   * (Optional) Bucketing specification. Bucketing must set the number of buckets and the columns
   * to bucket by.
   * </pre>
   *
   * <code>.spark.connect.WriteOperation.BucketBy bucket_by = 8;</code>
   *
   * @return Whether the bucketBy field is set.
   */
  @java.lang.Override
  public boolean hasBucketBy() {
    return bucketBy_ != null;
  }
  /**
   *
   *
   * <pre>
   * (Optional) Bucketing specification. Bucketing must set the number of buckets and the columns
   * to bucket by.
   * </pre>
   *
   * <code>.spark.connect.WriteOperation.BucketBy bucket_by = 8;</code>
   *
   * @return The bucketBy.
   */
  @java.lang.Override
  public org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.BucketBy getBucketBy() {
    return bucketBy_ == null
        ? org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.BucketBy
            .getDefaultInstance()
        : bucketBy_;
  }
  /**
   *
   *
   * <pre>
   * (Optional) Bucketing specification. Bucketing must set the number of buckets and the columns
   * to bucket by.
   * </pre>
   *
   * <code>.spark.connect.WriteOperation.BucketBy bucket_by = 8;</code>
   */
  @java.lang.Override
  public org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.BucketByOrBuilder
      getBucketByOrBuilder() {
    return getBucketBy();
  }

  public static final int OPTIONS_FIELD_NUMBER = 9;

  private static final class OptionsDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<java.lang.String, java.lang.String> defaultEntry =
        com.google.protobuf.MapEntry.<java.lang.String, java.lang.String>newDefaultInstance(
            org.apache.kyuubi.engine.spark.connect.grpc.proto.Commands
                .internal_static_spark_connect_WriteOperation_OptionsEntry_descriptor,
            com.google.protobuf.WireFormat.FieldType.STRING,
            "",
            com.google.protobuf.WireFormat.FieldType.STRING,
            "");
  }

  private com.google.protobuf.MapField<java.lang.String, java.lang.String> options_;

  private com.google.protobuf.MapField<java.lang.String, java.lang.String> internalGetOptions() {
    if (options_ == null) {
      return com.google.protobuf.MapField.emptyMapField(OptionsDefaultEntryHolder.defaultEntry);
    }
    return options_;
  }

  public int getOptionsCount() {
    return internalGetOptions().getMap().size();
  }
  /**
   *
   *
   * <pre>
   * (Optional) A list of configuration options.
   * </pre>
   *
   * <code>map&lt;string, string&gt; options = 9;</code>
   */
  @java.lang.Override
  public boolean containsOptions(java.lang.String key) {
    if (key == null) {
      throw new NullPointerException("map key");
    }
    return internalGetOptions().getMap().containsKey(key);
  }
  /** Use {@link #getOptionsMap()} instead. */
  @java.lang.Override
  @java.lang.Deprecated
  public java.util.Map<java.lang.String, java.lang.String> getOptions() {
    return getOptionsMap();
  }
  /**
   *
   *
   * <pre>
   * (Optional) A list of configuration options.
   * </pre>
   *
   * <code>map&lt;string, string&gt; options = 9;</code>
   */
  @java.lang.Override
  public java.util.Map<java.lang.String, java.lang.String> getOptionsMap() {
    return internalGetOptions().getMap();
  }
  /**
   *
   *
   * <pre>
   * (Optional) A list of configuration options.
   * </pre>
   *
   * <code>map&lt;string, string&gt; options = 9;</code>
   */
  @java.lang.Override
  public java.lang.String getOptionsOrDefault(java.lang.String key, java.lang.String defaultValue) {
    if (key == null) {
      throw new NullPointerException("map key");
    }
    java.util.Map<java.lang.String, java.lang.String> map = internalGetOptions().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   *
   *
   * <pre>
   * (Optional) A list of configuration options.
   * </pre>
   *
   * <code>map&lt;string, string&gt; options = 9;</code>
   */
  @java.lang.Override
  public java.lang.String getOptionsOrThrow(java.lang.String key) {
    if (key == null) {
      throw new NullPointerException("map key");
    }
    java.util.Map<java.lang.String, java.lang.String> map = internalGetOptions().getMap();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }

  public static final int CLUSTERING_COLUMNS_FIELD_NUMBER = 10;
  private com.google.protobuf.LazyStringList clusteringColumns_;
  /**
   *
   *
   * <pre>
   * (Optional) Columns used for clustering the table.
   * </pre>
   *
   * <code>repeated string clustering_columns = 10;</code>
   *
   * @return A list containing the clusteringColumns.
   */
  public com.google.protobuf.ProtocolStringList getClusteringColumnsList() {
    return clusteringColumns_;
  }
  /**
   *
   *
   * <pre>
   * (Optional) Columns used for clustering the table.
   * </pre>
   *
   * <code>repeated string clustering_columns = 10;</code>
   *
   * @return The count of clusteringColumns.
   */
  public int getClusteringColumnsCount() {
    return clusteringColumns_.size();
  }
  /**
   *
   *
   * <pre>
   * (Optional) Columns used for clustering the table.
   * </pre>
   *
   * <code>repeated string clustering_columns = 10;</code>
   *
   * @param index The index of the element to return.
   * @return The clusteringColumns at the given index.
   */
  public java.lang.String getClusteringColumns(int index) {
    return clusteringColumns_.get(index);
  }
  /**
   *
   *
   * <pre>
   * (Optional) Columns used for clustering the table.
   * </pre>
   *
   * <code>repeated string clustering_columns = 10;</code>
   *
   * @param index The index of the value to return.
   * @return The bytes of the clusteringColumns at the given index.
   */
  public com.google.protobuf.ByteString getClusteringColumnsBytes(int index) {
    return clusteringColumns_.getByteString(index);
  }

  private byte memoizedIsInitialized = -1;

  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
    if (input_ != null) {
      output.writeMessage(1, getInput());
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, source_);
    }
    if (saveTypeCase_ == 3) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, saveType_);
    }
    if (saveTypeCase_ == 4) {
      output.writeMessage(
          4,
          (org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.SaveTable) saveType_);
    }
    if (mode_
        != org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.SaveMode
            .SAVE_MODE_UNSPECIFIED
            .getNumber()) {
      output.writeEnum(5, mode_);
    }
    for (int i = 0; i < sortColumnNames_.size(); i++) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 6, sortColumnNames_.getRaw(i));
    }
    for (int i = 0; i < partitioningColumns_.size(); i++) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 7, partitioningColumns_.getRaw(i));
    }
    if (bucketBy_ != null) {
      output.writeMessage(8, getBucketBy());
    }
    com.google.protobuf.GeneratedMessageV3.serializeStringMapTo(
        output, internalGetOptions(), OptionsDefaultEntryHolder.defaultEntry, 9);
    for (int i = 0; i < clusteringColumns_.size(); i++) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 10, clusteringColumns_.getRaw(i));
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (input_ != null) {
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(1, getInput());
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, source_);
    }
    if (saveTypeCase_ == 3) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, saveType_);
    }
    if (saveTypeCase_ == 4) {
      size +=
          com.google.protobuf.CodedOutputStream.computeMessageSize(
              4,
              (org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.SaveTable)
                  saveType_);
    }
    if (mode_
        != org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.SaveMode
            .SAVE_MODE_UNSPECIFIED
            .getNumber()) {
      size += com.google.protobuf.CodedOutputStream.computeEnumSize(5, mode_);
    }
    {
      int dataSize = 0;
      for (int i = 0; i < sortColumnNames_.size(); i++) {
        dataSize += computeStringSizeNoTag(sortColumnNames_.getRaw(i));
      }
      size += dataSize;
      size += 1 * getSortColumnNamesList().size();
    }
    {
      int dataSize = 0;
      for (int i = 0; i < partitioningColumns_.size(); i++) {
        dataSize += computeStringSizeNoTag(partitioningColumns_.getRaw(i));
      }
      size += dataSize;
      size += 1 * getPartitioningColumnsList().size();
    }
    if (bucketBy_ != null) {
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(8, getBucketBy());
    }
    for (java.util.Map.Entry<java.lang.String, java.lang.String> entry :
        internalGetOptions().getMap().entrySet()) {
      com.google.protobuf.MapEntry<java.lang.String, java.lang.String> options__ =
          OptionsDefaultEntryHolder.defaultEntry
              .newBuilderForType()
              .setKey(entry.getKey())
              .setValue(entry.getValue())
              .build();
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(9, options__);
    }
    {
      int dataSize = 0;
      for (int i = 0; i < clusteringColumns_.size(); i++) {
        dataSize += computeStringSizeNoTag(clusteringColumns_.getRaw(i));
      }
      size += dataSize;
      size += 1 * getClusteringColumnsList().size();
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
      return true;
    }
    if (!(obj instanceof org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation)) {
      return super.equals(obj);
    }
    org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation other =
        (org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation) obj;

    if (hasInput() != other.hasInput()) return false;
    if (hasInput()) {
      if (!getInput().equals(other.getInput())) return false;
    }
    if (hasSource() != other.hasSource()) return false;
    if (hasSource()) {
      if (!getSource().equals(other.getSource())) return false;
    }
    if (mode_ != other.mode_) return false;
    if (!getSortColumnNamesList().equals(other.getSortColumnNamesList())) return false;
    if (!getPartitioningColumnsList().equals(other.getPartitioningColumnsList())) return false;
    if (hasBucketBy() != other.hasBucketBy()) return false;
    if (hasBucketBy()) {
      if (!getBucketBy().equals(other.getBucketBy())) return false;
    }
    if (!internalGetOptions().equals(other.internalGetOptions())) return false;
    if (!getClusteringColumnsList().equals(other.getClusteringColumnsList())) return false;
    if (!getSaveTypeCase().equals(other.getSaveTypeCase())) return false;
    switch (saveTypeCase_) {
      case 3:
        if (!getPath().equals(other.getPath())) return false;
        break;
      case 4:
        if (!getTable().equals(other.getTable())) return false;
        break;
      case 0:
      default:
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasInput()) {
      hash = (37 * hash) + INPUT_FIELD_NUMBER;
      hash = (53 * hash) + getInput().hashCode();
    }
    if (hasSource()) {
      hash = (37 * hash) + SOURCE_FIELD_NUMBER;
      hash = (53 * hash) + getSource().hashCode();
    }
    hash = (37 * hash) + MODE_FIELD_NUMBER;
    hash = (53 * hash) + mode_;
    if (getSortColumnNamesCount() > 0) {
      hash = (37 * hash) + SORT_COLUMN_NAMES_FIELD_NUMBER;
      hash = (53 * hash) + getSortColumnNamesList().hashCode();
    }
    if (getPartitioningColumnsCount() > 0) {
      hash = (37 * hash) + PARTITIONING_COLUMNS_FIELD_NUMBER;
      hash = (53 * hash) + getPartitioningColumnsList().hashCode();
    }
    if (hasBucketBy()) {
      hash = (37 * hash) + BUCKET_BY_FIELD_NUMBER;
      hash = (53 * hash) + getBucketBy().hashCode();
    }
    if (!internalGetOptions().getMap().isEmpty()) {
      hash = (37 * hash) + OPTIONS_FIELD_NUMBER;
      hash = (53 * hash) + internalGetOptions().hashCode();
    }
    if (getClusteringColumnsCount() > 0) {
      hash = (37 * hash) + CLUSTERING_COLUMNS_FIELD_NUMBER;
      hash = (53 * hash) + getClusteringColumnsList().hashCode();
    }
    switch (saveTypeCase_) {
      case 3:
        hash = (37 * hash) + PATH_FIELD_NUMBER;
        hash = (53 * hash) + getPath().hashCode();
        break;
      case 4:
        hash = (37 * hash) + TABLE_FIELD_NUMBER;
        hash = (53 * hash) + getTable().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation parseFrom(
      java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation parseFrom(
      java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation parseFrom(
      byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation parseFrom(
      byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation parseFrom(
      java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation parseFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation parseDelimitedFrom(
      java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
  }

  public static org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation parseDelimitedFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation parseFrom(
      com.google.protobuf.CodedInputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() {
    return newBuilder();
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }

  public static Builder newBuilder(
      org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   *
   *
   * <pre>
   * As writes are not directly handled during analysis and planning, they are modeled as commands.
   * </pre>
   *
   * Protobuf type {@code spark.connect.WriteOperation}
   */
  public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
      implements
      // @@protoc_insertion_point(builder_implements:spark.connect.WriteOperation)
      org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperationOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return org.apache.kyuubi.engine.spark.connect.grpc.proto.Commands
          .internal_static_spark_connect_WriteOperation_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMapField(int number) {
      switch (number) {
        case 9:
          return internalGetOptions();
        default:
          throw new RuntimeException("Invalid map field number: " + number);
      }
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMutableMapField(int number) {
      switch (number) {
        case 9:
          return internalGetMutableOptions();
        default:
          throw new RuntimeException("Invalid map field number: " + number);
      }
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.kyuubi.engine.spark.connect.grpc.proto.Commands
          .internal_static_spark_connect_WriteOperation_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.class,
              org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.Builder.class);
    }

    // Construct using org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.newBuilder()
    private Builder() {}

    private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
    }

    @java.lang.Override
    public Builder clear() {
      super.clear();
      if (inputBuilder_ == null) {
        input_ = null;
      } else {
        input_ = null;
        inputBuilder_ = null;
      }
      source_ = "";
      bitField0_ = (bitField0_ & ~0x00000001);
      if (tableBuilder_ != null) {
        tableBuilder_.clear();
      }
      mode_ = 0;

      sortColumnNames_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000002);
      partitioningColumns_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000004);
      if (bucketByBuilder_ == null) {
        bucketBy_ = null;
      } else {
        bucketBy_ = null;
        bucketByBuilder_ = null;
      }
      internalGetMutableOptions().clear();
      clusteringColumns_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000010);
      saveTypeCase_ = 0;
      saveType_ = null;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
      return org.apache.kyuubi.engine.spark.connect.grpc.proto.Commands
          .internal_static_spark_connect_WriteOperation_descriptor;
    }

    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation
        getDefaultInstanceForType() {
      return org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.getDefaultInstance();
    }

    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation build() {
      org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation buildPartial() {
      org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation result =
          new org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (inputBuilder_ == null) {
        result.input_ = input_;
      } else {
        result.input_ = inputBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000001) != 0)) {
        to_bitField0_ |= 0x00000001;
      }
      result.source_ = source_;
      if (saveTypeCase_ == 3) {
        result.saveType_ = saveType_;
      }
      if (saveTypeCase_ == 4) {
        if (tableBuilder_ == null) {
          result.saveType_ = saveType_;
        } else {
          result.saveType_ = tableBuilder_.build();
        }
      }
      result.mode_ = mode_;
      if (((bitField0_ & 0x00000002) != 0)) {
        sortColumnNames_ = sortColumnNames_.getUnmodifiableView();
        bitField0_ = (bitField0_ & ~0x00000002);
      }
      result.sortColumnNames_ = sortColumnNames_;
      if (((bitField0_ & 0x00000004) != 0)) {
        partitioningColumns_ = partitioningColumns_.getUnmodifiableView();
        bitField0_ = (bitField0_ & ~0x00000004);
      }
      result.partitioningColumns_ = partitioningColumns_;
      if (bucketByBuilder_ == null) {
        result.bucketBy_ = bucketBy_;
      } else {
        result.bucketBy_ = bucketByBuilder_.build();
      }
      result.options_ = internalGetOptions();
      result.options_.makeImmutable();
      if (((bitField0_ & 0x00000010) != 0)) {
        clusteringColumns_ = clusteringColumns_.getUnmodifiableView();
        bitField0_ = (bitField0_ & ~0x00000010);
      }
      result.clusteringColumns_ = clusteringColumns_;
      result.bitField0_ = to_bitField0_;
      result.saveTypeCase_ = saveTypeCase_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }

    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.setField(field, value);
    }

    @java.lang.Override
    public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }

    @java.lang.Override
    public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }

    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }

    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation) {
        return mergeFrom((org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation) other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(
        org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation other) {
      if (other
          == org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.getDefaultInstance())
        return this;
      if (other.hasInput()) {
        mergeInput(other.getInput());
      }
      if (other.hasSource()) {
        bitField0_ |= 0x00000001;
        source_ = other.source_;
        onChanged();
      }
      if (other.mode_ != 0) {
        setModeValue(other.getModeValue());
      }
      if (!other.sortColumnNames_.isEmpty()) {
        if (sortColumnNames_.isEmpty()) {
          sortColumnNames_ = other.sortColumnNames_;
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          ensureSortColumnNamesIsMutable();
          sortColumnNames_.addAll(other.sortColumnNames_);
        }
        onChanged();
      }
      if (!other.partitioningColumns_.isEmpty()) {
        if (partitioningColumns_.isEmpty()) {
          partitioningColumns_ = other.partitioningColumns_;
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          ensurePartitioningColumnsIsMutable();
          partitioningColumns_.addAll(other.partitioningColumns_);
        }
        onChanged();
      }
      if (other.hasBucketBy()) {
        mergeBucketBy(other.getBucketBy());
      }
      internalGetMutableOptions().mergeFrom(other.internalGetOptions());
      if (!other.clusteringColumns_.isEmpty()) {
        if (clusteringColumns_.isEmpty()) {
          clusteringColumns_ = other.clusteringColumns_;
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          ensureClusteringColumnsIsMutable();
          clusteringColumns_.addAll(other.clusteringColumns_);
        }
        onChanged();
      }
      switch (other.getSaveTypeCase()) {
        case PATH:
          {
            saveTypeCase_ = 3;
            saveType_ = other.saveType_;
            onChanged();
            break;
          }
        case TABLE:
          {
            mergeTable(other.getTable());
            break;
          }
        case SAVETYPE_NOT_SET:
          {
            break;
          }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10:
              {
                input.readMessage(getInputFieldBuilder().getBuilder(), extensionRegistry);

                break;
              } // case 10
            case 18:
              {
                source_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 18
            case 26:
              {
                java.lang.String s = input.readStringRequireUtf8();
                saveTypeCase_ = 3;
                saveType_ = s;
                break;
              } // case 26
            case 34:
              {
                input.readMessage(getTableFieldBuilder().getBuilder(), extensionRegistry);
                saveTypeCase_ = 4;
                break;
              } // case 34
            case 40:
              {
                mode_ = input.readEnum();

                break;
              } // case 40
            case 50:
              {
                java.lang.String s = input.readStringRequireUtf8();
                ensureSortColumnNamesIsMutable();
                sortColumnNames_.add(s);
                break;
              } // case 50
            case 58:
              {
                java.lang.String s = input.readStringRequireUtf8();
                ensurePartitioningColumnsIsMutable();
                partitioningColumns_.add(s);
                break;
              } // case 58
            case 66:
              {
                input.readMessage(getBucketByFieldBuilder().getBuilder(), extensionRegistry);

                break;
              } // case 66
            case 74:
              {
                com.google.protobuf.MapEntry<java.lang.String, java.lang.String> options__ =
                    input.readMessage(
                        OptionsDefaultEntryHolder.defaultEntry.getParserForType(),
                        extensionRegistry);
                internalGetMutableOptions()
                    .getMutableMap()
                    .put(options__.getKey(), options__.getValue());
                break;
              } // case 74
            case 82:
              {
                java.lang.String s = input.readStringRequireUtf8();
                ensureClusteringColumnsIsMutable();
                clusteringColumns_.add(s);
                break;
              } // case 82
            default:
              {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }

    private int saveTypeCase_ = 0;
    private java.lang.Object saveType_;

    public SaveTypeCase getSaveTypeCase() {
      return SaveTypeCase.forNumber(saveTypeCase_);
    }

    public Builder clearSaveType() {
      saveTypeCase_ = 0;
      saveType_ = null;
      onChanged();
      return this;
    }

    private int bitField0_;

    private org.apache.kyuubi.engine.spark.connect.grpc.proto.Relation input_;
    private com.google.protobuf.SingleFieldBuilderV3<
            org.apache.kyuubi.engine.spark.connect.grpc.proto.Relation,
            org.apache.kyuubi.engine.spark.connect.grpc.proto.Relation.Builder,
            org.apache.kyuubi.engine.spark.connect.grpc.proto.RelationOrBuilder>
        inputBuilder_;
    /**
     *
     *
     * <pre>
     * (Required) The output of the `input` relation will be persisted according to the options.
     * </pre>
     *
     * <code>.spark.connect.Relation input = 1;</code>
     *
     * @return Whether the input field is set.
     */
    public boolean hasInput() {
      return inputBuilder_ != null || input_ != null;
    }
    /**
     *
     *
     * <pre>
     * (Required) The output of the `input` relation will be persisted according to the options.
     * </pre>
     *
     * <code>.spark.connect.Relation input = 1;</code>
     *
     * @return The input.
     */
    public org.apache.kyuubi.engine.spark.connect.grpc.proto.Relation getInput() {
      if (inputBuilder_ == null) {
        return input_ == null
            ? org.apache.kyuubi.engine.spark.connect.grpc.proto.Relation.getDefaultInstance()
            : input_;
      } else {
        return inputBuilder_.getMessage();
      }
    }
    /**
     *
     *
     * <pre>
     * (Required) The output of the `input` relation will be persisted according to the options.
     * </pre>
     *
     * <code>.spark.connect.Relation input = 1;</code>
     */
    public Builder setInput(org.apache.kyuubi.engine.spark.connect.grpc.proto.Relation value) {
      if (inputBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        input_ = value;
        onChanged();
      } else {
        inputBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     *
     *
     * <pre>
     * (Required) The output of the `input` relation will be persisted according to the options.
     * </pre>
     *
     * <code>.spark.connect.Relation input = 1;</code>
     */
    public Builder setInput(
        org.apache.kyuubi.engine.spark.connect.grpc.proto.Relation.Builder builderForValue) {
      if (inputBuilder_ == null) {
        input_ = builderForValue.build();
        onChanged();
      } else {
        inputBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     *
     *
     * <pre>
     * (Required) The output of the `input` relation will be persisted according to the options.
     * </pre>
     *
     * <code>.spark.connect.Relation input = 1;</code>
     */
    public Builder mergeInput(org.apache.kyuubi.engine.spark.connect.grpc.proto.Relation value) {
      if (inputBuilder_ == null) {
        if (input_ != null) {
          input_ =
              org.apache.kyuubi.engine.spark.connect.grpc.proto.Relation.newBuilder(input_)
                  .mergeFrom(value)
                  .buildPartial();
        } else {
          input_ = value;
        }
        onChanged();
      } else {
        inputBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     *
     *
     * <pre>
     * (Required) The output of the `input` relation will be persisted according to the options.
     * </pre>
     *
     * <code>.spark.connect.Relation input = 1;</code>
     */
    public Builder clearInput() {
      if (inputBuilder_ == null) {
        input_ = null;
        onChanged();
      } else {
        input_ = null;
        inputBuilder_ = null;
      }

      return this;
    }
    /**
     *
     *
     * <pre>
     * (Required) The output of the `input` relation will be persisted according to the options.
     * </pre>
     *
     * <code>.spark.connect.Relation input = 1;</code>
     */
    public org.apache.kyuubi.engine.spark.connect.grpc.proto.Relation.Builder getInputBuilder() {

      onChanged();
      return getInputFieldBuilder().getBuilder();
    }
    /**
     *
     *
     * <pre>
     * (Required) The output of the `input` relation will be persisted according to the options.
     * </pre>
     *
     * <code>.spark.connect.Relation input = 1;</code>
     */
    public org.apache.kyuubi.engine.spark.connect.grpc.proto.RelationOrBuilder getInputOrBuilder() {
      if (inputBuilder_ != null) {
        return inputBuilder_.getMessageOrBuilder();
      } else {
        return input_ == null
            ? org.apache.kyuubi.engine.spark.connect.grpc.proto.Relation.getDefaultInstance()
            : input_;
      }
    }
    /**
     *
     *
     * <pre>
     * (Required) The output of the `input` relation will be persisted according to the options.
     * </pre>
     *
     * <code>.spark.connect.Relation input = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            org.apache.kyuubi.engine.spark.connect.grpc.proto.Relation,
            org.apache.kyuubi.engine.spark.connect.grpc.proto.Relation.Builder,
            org.apache.kyuubi.engine.spark.connect.grpc.proto.RelationOrBuilder>
        getInputFieldBuilder() {
      if (inputBuilder_ == null) {
        inputBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                org.apache.kyuubi.engine.spark.connect.grpc.proto.Relation,
                org.apache.kyuubi.engine.spark.connect.grpc.proto.Relation.Builder,
                org.apache.kyuubi.engine.spark.connect.grpc.proto.RelationOrBuilder>(
                getInput(), getParentForChildren(), isClean());
        input_ = null;
      }
      return inputBuilder_;
    }

    private java.lang.Object source_ = "";
    /**
     *
     *
     * <pre>
     * (Optional) Format value according to the Spark documentation. Examples are: text, parquet, delta.
     * </pre>
     *
     * <code>optional string source = 2;</code>
     *
     * @return Whether the source field is set.
     */
    public boolean hasSource() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     *
     *
     * <pre>
     * (Optional) Format value according to the Spark documentation. Examples are: text, parquet, delta.
     * </pre>
     *
     * <code>optional string source = 2;</code>
     *
     * @return The source.
     */
    public java.lang.String getSource() {
      java.lang.Object ref = source_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        source_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * (Optional) Format value according to the Spark documentation. Examples are: text, parquet, delta.
     * </pre>
     *
     * <code>optional string source = 2;</code>
     *
     * @return The bytes for source.
     */
    public com.google.protobuf.ByteString getSourceBytes() {
      java.lang.Object ref = source_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        source_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * (Optional) Format value according to the Spark documentation. Examples are: text, parquet, delta.
     * </pre>
     *
     * <code>optional string source = 2;</code>
     *
     * @param value The source to set.
     * @return This builder for chaining.
     */
    public Builder setSource(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000001;
      source_ = value;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * (Optional) Format value according to the Spark documentation. Examples are: text, parquet, delta.
     * </pre>
     *
     * <code>optional string source = 2;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearSource() {
      bitField0_ = (bitField0_ & ~0x00000001);
      source_ = getDefaultInstance().getSource();
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * (Optional) Format value according to the Spark documentation. Examples are: text, parquet, delta.
     * </pre>
     *
     * <code>optional string source = 2;</code>
     *
     * @param value The bytes for source to set.
     * @return This builder for chaining.
     */
    public Builder setSourceBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);
      bitField0_ |= 0x00000001;
      source_ = value;
      onChanged();
      return this;
    }

    /**
     * <code>string path = 3;</code>
     *
     * @return Whether the path field is set.
     */
    @java.lang.Override
    public boolean hasPath() {
      return saveTypeCase_ == 3;
    }
    /**
     * <code>string path = 3;</code>
     *
     * @return The path.
     */
    @java.lang.Override
    public java.lang.String getPath() {
      java.lang.Object ref = "";
      if (saveTypeCase_ == 3) {
        ref = saveType_;
      }
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (saveTypeCase_ == 3) {
          saveType_ = s;
        }
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>string path = 3;</code>
     *
     * @return The bytes for path.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getPathBytes() {
      java.lang.Object ref = "";
      if (saveTypeCase_ == 3) {
        ref = saveType_;
      }
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        if (saveTypeCase_ == 3) {
          saveType_ = b;
        }
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string path = 3;</code>
     *
     * @param value The path to set.
     * @return This builder for chaining.
     */
    public Builder setPath(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      saveTypeCase_ = 3;
      saveType_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>string path = 3;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearPath() {
      if (saveTypeCase_ == 3) {
        saveTypeCase_ = 0;
        saveType_ = null;
        onChanged();
      }
      return this;
    }
    /**
     * <code>string path = 3;</code>
     *
     * @param value The bytes for path to set.
     * @return This builder for chaining.
     */
    public Builder setPathBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);
      saveTypeCase_ = 3;
      saveType_ = value;
      onChanged();
      return this;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
            org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.SaveTable,
            org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.SaveTable.Builder,
            org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.SaveTableOrBuilder>
        tableBuilder_;
    /**
     * <code>.spark.connect.WriteOperation.SaveTable table = 4;</code>
     *
     * @return Whether the table field is set.
     */
    @java.lang.Override
    public boolean hasTable() {
      return saveTypeCase_ == 4;
    }
    /**
     * <code>.spark.connect.WriteOperation.SaveTable table = 4;</code>
     *
     * @return The table.
     */
    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.SaveTable getTable() {
      if (tableBuilder_ == null) {
        if (saveTypeCase_ == 4) {
          return (org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.SaveTable)
              saveType_;
        }
        return org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.SaveTable
            .getDefaultInstance();
      } else {
        if (saveTypeCase_ == 4) {
          return tableBuilder_.getMessage();
        }
        return org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.SaveTable
            .getDefaultInstance();
      }
    }
    /** <code>.spark.connect.WriteOperation.SaveTable table = 4;</code> */
    public Builder setTable(
        org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.SaveTable value) {
      if (tableBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        saveType_ = value;
        onChanged();
      } else {
        tableBuilder_.setMessage(value);
      }
      saveTypeCase_ = 4;
      return this;
    }
    /** <code>.spark.connect.WriteOperation.SaveTable table = 4;</code> */
    public Builder setTable(
        org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.SaveTable.Builder
            builderForValue) {
      if (tableBuilder_ == null) {
        saveType_ = builderForValue.build();
        onChanged();
      } else {
        tableBuilder_.setMessage(builderForValue.build());
      }
      saveTypeCase_ = 4;
      return this;
    }
    /** <code>.spark.connect.WriteOperation.SaveTable table = 4;</code> */
    public Builder mergeTable(
        org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.SaveTable value) {
      if (tableBuilder_ == null) {
        if (saveTypeCase_ == 4
            && saveType_
                != org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.SaveTable
                    .getDefaultInstance()) {
          saveType_ =
              org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.SaveTable.newBuilder(
                      (org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.SaveTable)
                          saveType_)
                  .mergeFrom(value)
                  .buildPartial();
        } else {
          saveType_ = value;
        }
        onChanged();
      } else {
        if (saveTypeCase_ == 4) {
          tableBuilder_.mergeFrom(value);
        } else {
          tableBuilder_.setMessage(value);
        }
      }
      saveTypeCase_ = 4;
      return this;
    }
    /** <code>.spark.connect.WriteOperation.SaveTable table = 4;</code> */
    public Builder clearTable() {
      if (tableBuilder_ == null) {
        if (saveTypeCase_ == 4) {
          saveTypeCase_ = 0;
          saveType_ = null;
          onChanged();
        }
      } else {
        if (saveTypeCase_ == 4) {
          saveTypeCase_ = 0;
          saveType_ = null;
        }
        tableBuilder_.clear();
      }
      return this;
    }
    /** <code>.spark.connect.WriteOperation.SaveTable table = 4;</code> */
    public org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.SaveTable.Builder
        getTableBuilder() {
      return getTableFieldBuilder().getBuilder();
    }
    /** <code>.spark.connect.WriteOperation.SaveTable table = 4;</code> */
    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.SaveTableOrBuilder
        getTableOrBuilder() {
      if ((saveTypeCase_ == 4) && (tableBuilder_ != null)) {
        return tableBuilder_.getMessageOrBuilder();
      } else {
        if (saveTypeCase_ == 4) {
          return (org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.SaveTable)
              saveType_;
        }
        return org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.SaveTable
            .getDefaultInstance();
      }
    }
    /** <code>.spark.connect.WriteOperation.SaveTable table = 4;</code> */
    private com.google.protobuf.SingleFieldBuilderV3<
            org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.SaveTable,
            org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.SaveTable.Builder,
            org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.SaveTableOrBuilder>
        getTableFieldBuilder() {
      if (tableBuilder_ == null) {
        if (!(saveTypeCase_ == 4)) {
          saveType_ =
              org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.SaveTable
                  .getDefaultInstance();
        }
        tableBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.SaveTable,
                org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.SaveTable.Builder,
                org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation
                    .SaveTableOrBuilder>(
                (org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.SaveTable)
                    saveType_,
                getParentForChildren(),
                isClean());
        saveType_ = null;
      }
      saveTypeCase_ = 4;
      onChanged();
      ;
      return tableBuilder_;
    }

    private int mode_ = 0;
    /**
     *
     *
     * <pre>
     * (Required) the save mode.
     * </pre>
     *
     * <code>.spark.connect.WriteOperation.SaveMode mode = 5;</code>
     *
     * @return The enum numeric value on the wire for mode.
     */
    @java.lang.Override
    public int getModeValue() {
      return mode_;
    }
    /**
     *
     *
     * <pre>
     * (Required) the save mode.
     * </pre>
     *
     * <code>.spark.connect.WriteOperation.SaveMode mode = 5;</code>
     *
     * @param value The enum numeric value on the wire for mode to set.
     * @return This builder for chaining.
     */
    public Builder setModeValue(int value) {

      mode_ = value;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * (Required) the save mode.
     * </pre>
     *
     * <code>.spark.connect.WriteOperation.SaveMode mode = 5;</code>
     *
     * @return The mode.
     */
    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.SaveMode getMode() {
      @SuppressWarnings("deprecation")
      org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.SaveMode result =
          org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.SaveMode.valueOf(mode_);
      return result == null
          ? org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.SaveMode.UNRECOGNIZED
          : result;
    }
    /**
     *
     *
     * <pre>
     * (Required) the save mode.
     * </pre>
     *
     * <code>.spark.connect.WriteOperation.SaveMode mode = 5;</code>
     *
     * @param value The mode to set.
     * @return This builder for chaining.
     */
    public Builder setMode(
        org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.SaveMode value) {
      if (value == null) {
        throw new NullPointerException();
      }

      mode_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * (Required) the save mode.
     * </pre>
     *
     * <code>.spark.connect.WriteOperation.SaveMode mode = 5;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearMode() {

      mode_ = 0;
      onChanged();
      return this;
    }

    private com.google.protobuf.LazyStringList sortColumnNames_ =
        com.google.protobuf.LazyStringArrayList.EMPTY;

    private void ensureSortColumnNamesIsMutable() {
      if (!((bitField0_ & 0x00000002) != 0)) {
        sortColumnNames_ = new com.google.protobuf.LazyStringArrayList(sortColumnNames_);
        bitField0_ |= 0x00000002;
      }
    }
    /**
     *
     *
     * <pre>
     * (Optional) List of columns to sort the output by.
     * </pre>
     *
     * <code>repeated string sort_column_names = 6;</code>
     *
     * @return A list containing the sortColumnNames.
     */
    public com.google.protobuf.ProtocolStringList getSortColumnNamesList() {
      return sortColumnNames_.getUnmodifiableView();
    }
    /**
     *
     *
     * <pre>
     * (Optional) List of columns to sort the output by.
     * </pre>
     *
     * <code>repeated string sort_column_names = 6;</code>
     *
     * @return The count of sortColumnNames.
     */
    public int getSortColumnNamesCount() {
      return sortColumnNames_.size();
    }
    /**
     *
     *
     * <pre>
     * (Optional) List of columns to sort the output by.
     * </pre>
     *
     * <code>repeated string sort_column_names = 6;</code>
     *
     * @param index The index of the element to return.
     * @return The sortColumnNames at the given index.
     */
    public java.lang.String getSortColumnNames(int index) {
      return sortColumnNames_.get(index);
    }
    /**
     *
     *
     * <pre>
     * (Optional) List of columns to sort the output by.
     * </pre>
     *
     * <code>repeated string sort_column_names = 6;</code>
     *
     * @param index The index of the value to return.
     * @return The bytes of the sortColumnNames at the given index.
     */
    public com.google.protobuf.ByteString getSortColumnNamesBytes(int index) {
      return sortColumnNames_.getByteString(index);
    }
    /**
     *
     *
     * <pre>
     * (Optional) List of columns to sort the output by.
     * </pre>
     *
     * <code>repeated string sort_column_names = 6;</code>
     *
     * @param index The index to set the value at.
     * @param value The sortColumnNames to set.
     * @return This builder for chaining.
     */
    public Builder setSortColumnNames(int index, java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureSortColumnNamesIsMutable();
      sortColumnNames_.set(index, value);
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * (Optional) List of columns to sort the output by.
     * </pre>
     *
     * <code>repeated string sort_column_names = 6;</code>
     *
     * @param value The sortColumnNames to add.
     * @return This builder for chaining.
     */
    public Builder addSortColumnNames(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureSortColumnNamesIsMutable();
      sortColumnNames_.add(value);
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * (Optional) List of columns to sort the output by.
     * </pre>
     *
     * <code>repeated string sort_column_names = 6;</code>
     *
     * @param values The sortColumnNames to add.
     * @return This builder for chaining.
     */
    public Builder addAllSortColumnNames(java.lang.Iterable<java.lang.String> values) {
      ensureSortColumnNamesIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(values, sortColumnNames_);
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * (Optional) List of columns to sort the output by.
     * </pre>
     *
     * <code>repeated string sort_column_names = 6;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearSortColumnNames() {
      sortColumnNames_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000002);
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * (Optional) List of columns to sort the output by.
     * </pre>
     *
     * <code>repeated string sort_column_names = 6;</code>
     *
     * @param value The bytes of the sortColumnNames to add.
     * @return This builder for chaining.
     */
    public Builder addSortColumnNamesBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);
      ensureSortColumnNamesIsMutable();
      sortColumnNames_.add(value);
      onChanged();
      return this;
    }

    private com.google.protobuf.LazyStringList partitioningColumns_ =
        com.google.protobuf.LazyStringArrayList.EMPTY;

    private void ensurePartitioningColumnsIsMutable() {
      if (!((bitField0_ & 0x00000004) != 0)) {
        partitioningColumns_ = new com.google.protobuf.LazyStringArrayList(partitioningColumns_);
        bitField0_ |= 0x00000004;
      }
    }
    /**
     *
     *
     * <pre>
     * (Optional) List of columns for partitioning.
     * </pre>
     *
     * <code>repeated string partitioning_columns = 7;</code>
     *
     * @return A list containing the partitioningColumns.
     */
    public com.google.protobuf.ProtocolStringList getPartitioningColumnsList() {
      return partitioningColumns_.getUnmodifiableView();
    }
    /**
     *
     *
     * <pre>
     * (Optional) List of columns for partitioning.
     * </pre>
     *
     * <code>repeated string partitioning_columns = 7;</code>
     *
     * @return The count of partitioningColumns.
     */
    public int getPartitioningColumnsCount() {
      return partitioningColumns_.size();
    }
    /**
     *
     *
     * <pre>
     * (Optional) List of columns for partitioning.
     * </pre>
     *
     * <code>repeated string partitioning_columns = 7;</code>
     *
     * @param index The index of the element to return.
     * @return The partitioningColumns at the given index.
     */
    public java.lang.String getPartitioningColumns(int index) {
      return partitioningColumns_.get(index);
    }
    /**
     *
     *
     * <pre>
     * (Optional) List of columns for partitioning.
     * </pre>
     *
     * <code>repeated string partitioning_columns = 7;</code>
     *
     * @param index The index of the value to return.
     * @return The bytes of the partitioningColumns at the given index.
     */
    public com.google.protobuf.ByteString getPartitioningColumnsBytes(int index) {
      return partitioningColumns_.getByteString(index);
    }
    /**
     *
     *
     * <pre>
     * (Optional) List of columns for partitioning.
     * </pre>
     *
     * <code>repeated string partitioning_columns = 7;</code>
     *
     * @param index The index to set the value at.
     * @param value The partitioningColumns to set.
     * @return This builder for chaining.
     */
    public Builder setPartitioningColumns(int index, java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensurePartitioningColumnsIsMutable();
      partitioningColumns_.set(index, value);
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * (Optional) List of columns for partitioning.
     * </pre>
     *
     * <code>repeated string partitioning_columns = 7;</code>
     *
     * @param value The partitioningColumns to add.
     * @return This builder for chaining.
     */
    public Builder addPartitioningColumns(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensurePartitioningColumnsIsMutable();
      partitioningColumns_.add(value);
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * (Optional) List of columns for partitioning.
     * </pre>
     *
     * <code>repeated string partitioning_columns = 7;</code>
     *
     * @param values The partitioningColumns to add.
     * @return This builder for chaining.
     */
    public Builder addAllPartitioningColumns(java.lang.Iterable<java.lang.String> values) {
      ensurePartitioningColumnsIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(values, partitioningColumns_);
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * (Optional) List of columns for partitioning.
     * </pre>
     *
     * <code>repeated string partitioning_columns = 7;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearPartitioningColumns() {
      partitioningColumns_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000004);
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * (Optional) List of columns for partitioning.
     * </pre>
     *
     * <code>repeated string partitioning_columns = 7;</code>
     *
     * @param value The bytes of the partitioningColumns to add.
     * @return This builder for chaining.
     */
    public Builder addPartitioningColumnsBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);
      ensurePartitioningColumnsIsMutable();
      partitioningColumns_.add(value);
      onChanged();
      return this;
    }

    private org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.BucketBy bucketBy_;
    private com.google.protobuf.SingleFieldBuilderV3<
            org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.BucketBy,
            org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.BucketBy.Builder,
            org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.BucketByOrBuilder>
        bucketByBuilder_;
    /**
     *
     *
     * <pre>
     * (Optional) Bucketing specification. Bucketing must set the number of buckets and the columns
     * to bucket by.
     * </pre>
     *
     * <code>.spark.connect.WriteOperation.BucketBy bucket_by = 8;</code>
     *
     * @return Whether the bucketBy field is set.
     */
    public boolean hasBucketBy() {
      return bucketByBuilder_ != null || bucketBy_ != null;
    }
    /**
     *
     *
     * <pre>
     * (Optional) Bucketing specification. Bucketing must set the number of buckets and the columns
     * to bucket by.
     * </pre>
     *
     * <code>.spark.connect.WriteOperation.BucketBy bucket_by = 8;</code>
     *
     * @return The bucketBy.
     */
    public org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.BucketBy getBucketBy() {
      if (bucketByBuilder_ == null) {
        return bucketBy_ == null
            ? org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.BucketBy
                .getDefaultInstance()
            : bucketBy_;
      } else {
        return bucketByBuilder_.getMessage();
      }
    }
    /**
     *
     *
     * <pre>
     * (Optional) Bucketing specification. Bucketing must set the number of buckets and the columns
     * to bucket by.
     * </pre>
     *
     * <code>.spark.connect.WriteOperation.BucketBy bucket_by = 8;</code>
     */
    public Builder setBucketBy(
        org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.BucketBy value) {
      if (bucketByBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        bucketBy_ = value;
        onChanged();
      } else {
        bucketByBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     *
     *
     * <pre>
     * (Optional) Bucketing specification. Bucketing must set the number of buckets and the columns
     * to bucket by.
     * </pre>
     *
     * <code>.spark.connect.WriteOperation.BucketBy bucket_by = 8;</code>
     */
    public Builder setBucketBy(
        org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.BucketBy.Builder
            builderForValue) {
      if (bucketByBuilder_ == null) {
        bucketBy_ = builderForValue.build();
        onChanged();
      } else {
        bucketByBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     *
     *
     * <pre>
     * (Optional) Bucketing specification. Bucketing must set the number of buckets and the columns
     * to bucket by.
     * </pre>
     *
     * <code>.spark.connect.WriteOperation.BucketBy bucket_by = 8;</code>
     */
    public Builder mergeBucketBy(
        org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.BucketBy value) {
      if (bucketByBuilder_ == null) {
        if (bucketBy_ != null) {
          bucketBy_ =
              org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.BucketBy.newBuilder(
                      bucketBy_)
                  .mergeFrom(value)
                  .buildPartial();
        } else {
          bucketBy_ = value;
        }
        onChanged();
      } else {
        bucketByBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     *
     *
     * <pre>
     * (Optional) Bucketing specification. Bucketing must set the number of buckets and the columns
     * to bucket by.
     * </pre>
     *
     * <code>.spark.connect.WriteOperation.BucketBy bucket_by = 8;</code>
     */
    public Builder clearBucketBy() {
      if (bucketByBuilder_ == null) {
        bucketBy_ = null;
        onChanged();
      } else {
        bucketBy_ = null;
        bucketByBuilder_ = null;
      }

      return this;
    }
    /**
     *
     *
     * <pre>
     * (Optional) Bucketing specification. Bucketing must set the number of buckets and the columns
     * to bucket by.
     * </pre>
     *
     * <code>.spark.connect.WriteOperation.BucketBy bucket_by = 8;</code>
     */
    public org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.BucketBy.Builder
        getBucketByBuilder() {

      onChanged();
      return getBucketByFieldBuilder().getBuilder();
    }
    /**
     *
     *
     * <pre>
     * (Optional) Bucketing specification. Bucketing must set the number of buckets and the columns
     * to bucket by.
     * </pre>
     *
     * <code>.spark.connect.WriteOperation.BucketBy bucket_by = 8;</code>
     */
    public org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.BucketByOrBuilder
        getBucketByOrBuilder() {
      if (bucketByBuilder_ != null) {
        return bucketByBuilder_.getMessageOrBuilder();
      } else {
        return bucketBy_ == null
            ? org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.BucketBy
                .getDefaultInstance()
            : bucketBy_;
      }
    }
    /**
     *
     *
     * <pre>
     * (Optional) Bucketing specification. Bucketing must set the number of buckets and the columns
     * to bucket by.
     * </pre>
     *
     * <code>.spark.connect.WriteOperation.BucketBy bucket_by = 8;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.BucketBy,
            org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.BucketBy.Builder,
            org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.BucketByOrBuilder>
        getBucketByFieldBuilder() {
      if (bucketByBuilder_ == null) {
        bucketByBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.BucketBy,
                org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.BucketBy.Builder,
                org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation.BucketByOrBuilder>(
                getBucketBy(), getParentForChildren(), isClean());
        bucketBy_ = null;
      }
      return bucketByBuilder_;
    }

    private com.google.protobuf.MapField<java.lang.String, java.lang.String> options_;

    private com.google.protobuf.MapField<java.lang.String, java.lang.String> internalGetOptions() {
      if (options_ == null) {
        return com.google.protobuf.MapField.emptyMapField(OptionsDefaultEntryHolder.defaultEntry);
      }
      return options_;
    }

    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
        internalGetMutableOptions() {
      onChanged();
      ;
      if (options_ == null) {
        options_ = com.google.protobuf.MapField.newMapField(OptionsDefaultEntryHolder.defaultEntry);
      }
      if (!options_.isMutable()) {
        options_ = options_.copy();
      }
      return options_;
    }

    public int getOptionsCount() {
      return internalGetOptions().getMap().size();
    }
    /**
     *
     *
     * <pre>
     * (Optional) A list of configuration options.
     * </pre>
     *
     * <code>map&lt;string, string&gt; options = 9;</code>
     */
    @java.lang.Override
    public boolean containsOptions(java.lang.String key) {
      if (key == null) {
        throw new NullPointerException("map key");
      }
      return internalGetOptions().getMap().containsKey(key);
    }
    /** Use {@link #getOptionsMap()} instead. */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String> getOptions() {
      return getOptionsMap();
    }
    /**
     *
     *
     * <pre>
     * (Optional) A list of configuration options.
     * </pre>
     *
     * <code>map&lt;string, string&gt; options = 9;</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.String, java.lang.String> getOptionsMap() {
      return internalGetOptions().getMap();
    }
    /**
     *
     *
     * <pre>
     * (Optional) A list of configuration options.
     * </pre>
     *
     * <code>map&lt;string, string&gt; options = 9;</code>
     */
    @java.lang.Override
    public java.lang.String getOptionsOrDefault(
        java.lang.String key, java.lang.String defaultValue) {
      if (key == null) {
        throw new NullPointerException("map key");
      }
      java.util.Map<java.lang.String, java.lang.String> map = internalGetOptions().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     *
     *
     * <pre>
     * (Optional) A list of configuration options.
     * </pre>
     *
     * <code>map&lt;string, string&gt; options = 9;</code>
     */
    @java.lang.Override
    public java.lang.String getOptionsOrThrow(java.lang.String key) {
      if (key == null) {
        throw new NullPointerException("map key");
      }
      java.util.Map<java.lang.String, java.lang.String> map = internalGetOptions().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public Builder clearOptions() {
      internalGetMutableOptions().getMutableMap().clear();
      return this;
    }
    /**
     *
     *
     * <pre>
     * (Optional) A list of configuration options.
     * </pre>
     *
     * <code>map&lt;string, string&gt; options = 9;</code>
     */
    public Builder removeOptions(java.lang.String key) {
      if (key == null) {
        throw new NullPointerException("map key");
      }
      internalGetMutableOptions().getMutableMap().remove(key);
      return this;
    }
    /** Use alternate mutation accessors instead. */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String> getMutableOptions() {
      return internalGetMutableOptions().getMutableMap();
    }
    /**
     *
     *
     * <pre>
     * (Optional) A list of configuration options.
     * </pre>
     *
     * <code>map&lt;string, string&gt; options = 9;</code>
     */
    public Builder putOptions(java.lang.String key, java.lang.String value) {
      if (key == null) {
        throw new NullPointerException("map key");
      }
      if (value == null) {
        throw new NullPointerException("map value");
      }

      internalGetMutableOptions().getMutableMap().put(key, value);
      return this;
    }
    /**
     *
     *
     * <pre>
     * (Optional) A list of configuration options.
     * </pre>
     *
     * <code>map&lt;string, string&gt; options = 9;</code>
     */
    public Builder putAllOptions(java.util.Map<java.lang.String, java.lang.String> values) {
      internalGetMutableOptions().getMutableMap().putAll(values);
      return this;
    }

    private com.google.protobuf.LazyStringList clusteringColumns_ =
        com.google.protobuf.LazyStringArrayList.EMPTY;

    private void ensureClusteringColumnsIsMutable() {
      if (!((bitField0_ & 0x00000010) != 0)) {
        clusteringColumns_ = new com.google.protobuf.LazyStringArrayList(clusteringColumns_);
        bitField0_ |= 0x00000010;
      }
    }
    /**
     *
     *
     * <pre>
     * (Optional) Columns used for clustering the table.
     * </pre>
     *
     * <code>repeated string clustering_columns = 10;</code>
     *
     * @return A list containing the clusteringColumns.
     */
    public com.google.protobuf.ProtocolStringList getClusteringColumnsList() {
      return clusteringColumns_.getUnmodifiableView();
    }
    /**
     *
     *
     * <pre>
     * (Optional) Columns used for clustering the table.
     * </pre>
     *
     * <code>repeated string clustering_columns = 10;</code>
     *
     * @return The count of clusteringColumns.
     */
    public int getClusteringColumnsCount() {
      return clusteringColumns_.size();
    }
    /**
     *
     *
     * <pre>
     * (Optional) Columns used for clustering the table.
     * </pre>
     *
     * <code>repeated string clustering_columns = 10;</code>
     *
     * @param index The index of the element to return.
     * @return The clusteringColumns at the given index.
     */
    public java.lang.String getClusteringColumns(int index) {
      return clusteringColumns_.get(index);
    }
    /**
     *
     *
     * <pre>
     * (Optional) Columns used for clustering the table.
     * </pre>
     *
     * <code>repeated string clustering_columns = 10;</code>
     *
     * @param index The index of the value to return.
     * @return The bytes of the clusteringColumns at the given index.
     */
    public com.google.protobuf.ByteString getClusteringColumnsBytes(int index) {
      return clusteringColumns_.getByteString(index);
    }
    /**
     *
     *
     * <pre>
     * (Optional) Columns used for clustering the table.
     * </pre>
     *
     * <code>repeated string clustering_columns = 10;</code>
     *
     * @param index The index to set the value at.
     * @param value The clusteringColumns to set.
     * @return This builder for chaining.
     */
    public Builder setClusteringColumns(int index, java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureClusteringColumnsIsMutable();
      clusteringColumns_.set(index, value);
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * (Optional) Columns used for clustering the table.
     * </pre>
     *
     * <code>repeated string clustering_columns = 10;</code>
     *
     * @param value The clusteringColumns to add.
     * @return This builder for chaining.
     */
    public Builder addClusteringColumns(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureClusteringColumnsIsMutable();
      clusteringColumns_.add(value);
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * (Optional) Columns used for clustering the table.
     * </pre>
     *
     * <code>repeated string clustering_columns = 10;</code>
     *
     * @param values The clusteringColumns to add.
     * @return This builder for chaining.
     */
    public Builder addAllClusteringColumns(java.lang.Iterable<java.lang.String> values) {
      ensureClusteringColumnsIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(values, clusteringColumns_);
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * (Optional) Columns used for clustering the table.
     * </pre>
     *
     * <code>repeated string clustering_columns = 10;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearClusteringColumns() {
      clusteringColumns_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000010);
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * (Optional) Columns used for clustering the table.
     * </pre>
     *
     * <code>repeated string clustering_columns = 10;</code>
     *
     * @param value The bytes of the clusteringColumns to add.
     * @return This builder for chaining.
     */
    public Builder addClusteringColumnsBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);
      ensureClusteringColumnsIsMutable();
      clusteringColumns_.add(value);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final Builder setUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }

    // @@protoc_insertion_point(builder_scope:spark.connect.WriteOperation)
  }

  // @@protoc_insertion_point(class_scope:spark.connect.WriteOperation)
  private static final org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation
      DEFAULT_INSTANCE;

  static {
    DEFAULT_INSTANCE = new org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation();
  }

  public static org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation
      getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<WriteOperation> PARSER =
      new com.google.protobuf.AbstractParser<WriteOperation>() {
        @java.lang.Override
        public WriteOperation parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

  public static com.google.protobuf.Parser<WriteOperation> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<WriteOperation> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteOperation
      getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }
}
