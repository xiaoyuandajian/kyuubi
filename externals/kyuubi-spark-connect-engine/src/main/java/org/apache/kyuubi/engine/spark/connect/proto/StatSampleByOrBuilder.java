// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: spark/connect/relations.proto

package org.apache.kyuubi.engine.spark.connect.proto;

public interface StatSampleByOrBuilder extends
    // @@protoc_insertion_point(interface_extends:spark.connect.StatSampleBy)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * (Required) The input relation.
   * </pre>
   *
   * <code>.spark.connect.Relation input = 1;</code>
   * @return Whether the input field is set.
   */
  boolean hasInput();
  /**
   * <pre>
   * (Required) The input relation.
   * </pre>
   *
   * <code>.spark.connect.Relation input = 1;</code>
   * @return The input.
   */
  org.apache.kyuubi.engine.spark.connect.proto.Relation getInput();
  /**
   * <pre>
   * (Required) The input relation.
   * </pre>
   *
   * <code>.spark.connect.Relation input = 1;</code>
   */
  org.apache.kyuubi.engine.spark.connect.proto.RelationOrBuilder getInputOrBuilder();

  /**
   * <pre>
   * (Required) The column that defines strata.
   * </pre>
   *
   * <code>.spark.connect.Expression col = 2;</code>
   * @return Whether the col field is set.
   */
  boolean hasCol();
  /**
   * <pre>
   * (Required) The column that defines strata.
   * </pre>
   *
   * <code>.spark.connect.Expression col = 2;</code>
   * @return The col.
   */
  org.apache.kyuubi.engine.spark.connect.proto.Expression getCol();
  /**
   * <pre>
   * (Required) The column that defines strata.
   * </pre>
   *
   * <code>.spark.connect.Expression col = 2;</code>
   */
  org.apache.kyuubi.engine.spark.connect.proto.ExpressionOrBuilder getColOrBuilder();

  /**
   * <pre>
   * (Required) Sampling fraction for each stratum.
   * If a stratum is not specified, we treat its fraction as zero.
   * </pre>
   *
   * <code>repeated .spark.connect.StatSampleBy.Fraction fractions = 3;</code>
   */
  java.util.List<org.apache.kyuubi.engine.spark.connect.proto.StatSampleBy.Fraction> 
      getFractionsList();
  /**
   * <pre>
   * (Required) Sampling fraction for each stratum.
   * If a stratum is not specified, we treat its fraction as zero.
   * </pre>
   *
   * <code>repeated .spark.connect.StatSampleBy.Fraction fractions = 3;</code>
   */
  org.apache.kyuubi.engine.spark.connect.proto.StatSampleBy.Fraction getFractions(int index);
  /**
   * <pre>
   * (Required) Sampling fraction for each stratum.
   * If a stratum is not specified, we treat its fraction as zero.
   * </pre>
   *
   * <code>repeated .spark.connect.StatSampleBy.Fraction fractions = 3;</code>
   */
  int getFractionsCount();
  /**
   * <pre>
   * (Required) Sampling fraction for each stratum.
   * If a stratum is not specified, we treat its fraction as zero.
   * </pre>
   *
   * <code>repeated .spark.connect.StatSampleBy.Fraction fractions = 3;</code>
   */
  java.util.List<? extends org.apache.kyuubi.engine.spark.connect.proto.StatSampleBy.FractionOrBuilder> 
      getFractionsOrBuilderList();
  /**
   * <pre>
   * (Required) Sampling fraction for each stratum.
   * If a stratum is not specified, we treat its fraction as zero.
   * </pre>
   *
   * <code>repeated .spark.connect.StatSampleBy.Fraction fractions = 3;</code>
   */
  org.apache.kyuubi.engine.spark.connect.proto.StatSampleBy.FractionOrBuilder getFractionsOrBuilder(
      int index);

  /**
   * <pre>
   * (Optional) The random seed.
   * </pre>
   *
   * <code>optional int64 seed = 5;</code>
   * @return Whether the seed field is set.
   */
  boolean hasSeed();
  /**
   * <pre>
   * (Optional) The random seed.
   * </pre>
   *
   * <code>optional int64 seed = 5;</code>
   * @return The seed.
   */
  long getSeed();
}
