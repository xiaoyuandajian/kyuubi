// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: spark/connect/types.proto

package org.apache.kyuubi.engine.spark.connect.proto;

/**
 * <pre>
 * This message describes the logical [[DataType]] of something. It does not carry the value
 * itself but only describes it.
 * </pre>
 *
 * Protobuf type {@code spark.connect.DataType}
 */
public final class DataType extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:spark.connect.DataType)
    DataTypeOrBuilder {
private static final long serialVersionUID = 0L;
  // Use DataType.newBuilder() to construct.
  private DataType(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private DataType() {
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new DataType();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return org.apache.kyuubi.engine.spark.connect.proto.Types.internal_static_spark_connect_DataType_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return org.apache.kyuubi.engine.spark.connect.proto.Types.internal_static_spark_connect_DataType_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            org.apache.kyuubi.engine.spark.connect.proto.DataType.class, org.apache.kyuubi.engine.spark.connect.proto.DataType.Builder.class);
  }

  public interface BooleanOrBuilder extends
      // @@protoc_insertion_point(interface_extends:spark.connect.DataType.Boolean)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>uint32 type_variation_reference = 1;</code>
     * @return The typeVariationReference.
     */
    int getTypeVariationReference();
  }
  /**
   * Protobuf type {@code spark.connect.DataType.Boolean}
   */
  public static final class Boolean extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:spark.connect.DataType.Boolean)
      BooleanOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Boolean.newBuilder() to construct.
    private Boolean(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Boolean() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Boolean();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.kyuubi.engine.spark.connect.proto.Types.internal_static_spark_connect_DataType_Boolean_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.kyuubi.engine.spark.connect.proto.Types.internal_static_spark_connect_DataType_Boolean_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.kyuubi.engine.spark.connect.proto.DataType.Boolean.class, org.apache.kyuubi.engine.spark.connect.proto.DataType.Boolean.Builder.class);
    }

    public static final int TYPE_VARIATION_REFERENCE_FIELD_NUMBER = 1;
    private int typeVariationReference_;
    /**
     * <code>uint32 type_variation_reference = 1;</code>
     * @return The typeVariationReference.
     */
    @java.lang.Override
    public int getTypeVariationReference() {
      return typeVariationReference_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (typeVariationReference_ != 0) {
        output.writeUInt32(1, typeVariationReference_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (typeVariationReference_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, typeVariationReference_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.kyuubi.engine.spark.connect.proto.DataType.Boolean)) {
        return super.equals(obj);
      }
      org.apache.kyuubi.engine.spark.connect.proto.DataType.Boolean other = (org.apache.kyuubi.engine.spark.connect.proto.DataType.Boolean) obj;

      if (getTypeVariationReference()
          != other.getTypeVariationReference()) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TYPE_VARIATION_REFERENCE_FIELD_NUMBER;
      hash = (53 * hash) + getTypeVariationReference();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Boolean parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Boolean parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Boolean parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Boolean parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Boolean parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Boolean parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Boolean parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Boolean parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Boolean parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Boolean parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Boolean parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Boolean parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.kyuubi.engine.spark.connect.proto.DataType.Boolean prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code spark.connect.DataType.Boolean}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:spark.connect.DataType.Boolean)
        org.apache.kyuubi.engine.spark.connect.proto.DataType.BooleanOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.kyuubi.engine.spark.connect.proto.Types.internal_static_spark_connect_DataType_Boolean_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.kyuubi.engine.spark.connect.proto.Types.internal_static_spark_connect_DataType_Boolean_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.kyuubi.engine.spark.connect.proto.DataType.Boolean.class, org.apache.kyuubi.engine.spark.connect.proto.DataType.Boolean.Builder.class);
      }

      // Construct using org.apache.kyuubi.engine.spark.connect.proto.DataType.Boolean.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        typeVariationReference_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.kyuubi.engine.spark.connect.proto.Types.internal_static_spark_connect_DataType_Boolean_descriptor;
      }

      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.proto.DataType.Boolean getDefaultInstanceForType() {
        return org.apache.kyuubi.engine.spark.connect.proto.DataType.Boolean.getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.proto.DataType.Boolean build() {
        org.apache.kyuubi.engine.spark.connect.proto.DataType.Boolean result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.proto.DataType.Boolean buildPartial() {
        org.apache.kyuubi.engine.spark.connect.proto.DataType.Boolean result = new org.apache.kyuubi.engine.spark.connect.proto.DataType.Boolean(this);
        result.typeVariationReference_ = typeVariationReference_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.kyuubi.engine.spark.connect.proto.DataType.Boolean) {
          return mergeFrom((org.apache.kyuubi.engine.spark.connect.proto.DataType.Boolean)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.kyuubi.engine.spark.connect.proto.DataType.Boolean other) {
        if (other == org.apache.kyuubi.engine.spark.connect.proto.DataType.Boolean.getDefaultInstance()) return this;
        if (other.getTypeVariationReference() != 0) {
          setTypeVariationReference(other.getTypeVariationReference());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                typeVariationReference_ = input.readUInt32();

                break;
              } // case 8
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }

      private int typeVariationReference_ ;
      /**
       * <code>uint32 type_variation_reference = 1;</code>
       * @return The typeVariationReference.
       */
      @java.lang.Override
      public int getTypeVariationReference() {
        return typeVariationReference_;
      }
      /**
       * <code>uint32 type_variation_reference = 1;</code>
       * @param value The typeVariationReference to set.
       * @return This builder for chaining.
       */
      public Builder setTypeVariationReference(int value) {
        
        typeVariationReference_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 type_variation_reference = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearTypeVariationReference() {
        
        typeVariationReference_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:spark.connect.DataType.Boolean)
    }

    // @@protoc_insertion_point(class_scope:spark.connect.DataType.Boolean)
    private static final org.apache.kyuubi.engine.spark.connect.proto.DataType.Boolean DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.kyuubi.engine.spark.connect.proto.DataType.Boolean();
    }

    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Boolean getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Boolean>
        PARSER = new com.google.protobuf.AbstractParser<Boolean>() {
      @java.lang.Override
      public Boolean parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<Boolean> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Boolean> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.DataType.Boolean getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ByteOrBuilder extends
      // @@protoc_insertion_point(interface_extends:spark.connect.DataType.Byte)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>uint32 type_variation_reference = 1;</code>
     * @return The typeVariationReference.
     */
    int getTypeVariationReference();
  }
  /**
   * Protobuf type {@code spark.connect.DataType.Byte}
   */
  public static final class Byte extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:spark.connect.DataType.Byte)
      ByteOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Byte.newBuilder() to construct.
    private Byte(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Byte() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Byte();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.kyuubi.engine.spark.connect.proto.Types.internal_static_spark_connect_DataType_Byte_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.kyuubi.engine.spark.connect.proto.Types.internal_static_spark_connect_DataType_Byte_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.kyuubi.engine.spark.connect.proto.DataType.Byte.class, org.apache.kyuubi.engine.spark.connect.proto.DataType.Byte.Builder.class);
    }

    public static final int TYPE_VARIATION_REFERENCE_FIELD_NUMBER = 1;
    private int typeVariationReference_;
    /**
     * <code>uint32 type_variation_reference = 1;</code>
     * @return The typeVariationReference.
     */
    @java.lang.Override
    public int getTypeVariationReference() {
      return typeVariationReference_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (typeVariationReference_ != 0) {
        output.writeUInt32(1, typeVariationReference_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (typeVariationReference_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, typeVariationReference_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.kyuubi.engine.spark.connect.proto.DataType.Byte)) {
        return super.equals(obj);
      }
      org.apache.kyuubi.engine.spark.connect.proto.DataType.Byte other = (org.apache.kyuubi.engine.spark.connect.proto.DataType.Byte) obj;

      if (getTypeVariationReference()
          != other.getTypeVariationReference()) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TYPE_VARIATION_REFERENCE_FIELD_NUMBER;
      hash = (53 * hash) + getTypeVariationReference();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Byte parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Byte parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Byte parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Byte parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Byte parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Byte parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Byte parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Byte parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Byte parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Byte parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Byte parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Byte parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.kyuubi.engine.spark.connect.proto.DataType.Byte prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code spark.connect.DataType.Byte}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:spark.connect.DataType.Byte)
        org.apache.kyuubi.engine.spark.connect.proto.DataType.ByteOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.kyuubi.engine.spark.connect.proto.Types.internal_static_spark_connect_DataType_Byte_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.kyuubi.engine.spark.connect.proto.Types.internal_static_spark_connect_DataType_Byte_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.kyuubi.engine.spark.connect.proto.DataType.Byte.class, org.apache.kyuubi.engine.spark.connect.proto.DataType.Byte.Builder.class);
      }

      // Construct using org.apache.kyuubi.engine.spark.connect.proto.DataType.Byte.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        typeVariationReference_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.kyuubi.engine.spark.connect.proto.Types.internal_static_spark_connect_DataType_Byte_descriptor;
      }

      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.proto.DataType.Byte getDefaultInstanceForType() {
        return org.apache.kyuubi.engine.spark.connect.proto.DataType.Byte.getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.proto.DataType.Byte build() {
        org.apache.kyuubi.engine.spark.connect.proto.DataType.Byte result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.proto.DataType.Byte buildPartial() {
        org.apache.kyuubi.engine.spark.connect.proto.DataType.Byte result = new org.apache.kyuubi.engine.spark.connect.proto.DataType.Byte(this);
        result.typeVariationReference_ = typeVariationReference_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.kyuubi.engine.spark.connect.proto.DataType.Byte) {
          return mergeFrom((org.apache.kyuubi.engine.spark.connect.proto.DataType.Byte)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.kyuubi.engine.spark.connect.proto.DataType.Byte other) {
        if (other == org.apache.kyuubi.engine.spark.connect.proto.DataType.Byte.getDefaultInstance()) return this;
        if (other.getTypeVariationReference() != 0) {
          setTypeVariationReference(other.getTypeVariationReference());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                typeVariationReference_ = input.readUInt32();

                break;
              } // case 8
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }

      private int typeVariationReference_ ;
      /**
       * <code>uint32 type_variation_reference = 1;</code>
       * @return The typeVariationReference.
       */
      @java.lang.Override
      public int getTypeVariationReference() {
        return typeVariationReference_;
      }
      /**
       * <code>uint32 type_variation_reference = 1;</code>
       * @param value The typeVariationReference to set.
       * @return This builder for chaining.
       */
      public Builder setTypeVariationReference(int value) {
        
        typeVariationReference_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 type_variation_reference = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearTypeVariationReference() {
        
        typeVariationReference_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:spark.connect.DataType.Byte)
    }

    // @@protoc_insertion_point(class_scope:spark.connect.DataType.Byte)
    private static final org.apache.kyuubi.engine.spark.connect.proto.DataType.Byte DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.kyuubi.engine.spark.connect.proto.DataType.Byte();
    }

    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Byte getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Byte>
        PARSER = new com.google.protobuf.AbstractParser<Byte>() {
      @java.lang.Override
      public Byte parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<Byte> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Byte> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.DataType.Byte getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ShortOrBuilder extends
      // @@protoc_insertion_point(interface_extends:spark.connect.DataType.Short)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>uint32 type_variation_reference = 1;</code>
     * @return The typeVariationReference.
     */
    int getTypeVariationReference();
  }
  /**
   * Protobuf type {@code spark.connect.DataType.Short}
   */
  public static final class Short extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:spark.connect.DataType.Short)
      ShortOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Short.newBuilder() to construct.
    private Short(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Short() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Short();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.kyuubi.engine.spark.connect.proto.Types.internal_static_spark_connect_DataType_Short_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.kyuubi.engine.spark.connect.proto.Types.internal_static_spark_connect_DataType_Short_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.kyuubi.engine.spark.connect.proto.DataType.Short.class, org.apache.kyuubi.engine.spark.connect.proto.DataType.Short.Builder.class);
    }

    public static final int TYPE_VARIATION_REFERENCE_FIELD_NUMBER = 1;
    private int typeVariationReference_;
    /**
     * <code>uint32 type_variation_reference = 1;</code>
     * @return The typeVariationReference.
     */
    @java.lang.Override
    public int getTypeVariationReference() {
      return typeVariationReference_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (typeVariationReference_ != 0) {
        output.writeUInt32(1, typeVariationReference_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (typeVariationReference_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, typeVariationReference_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.kyuubi.engine.spark.connect.proto.DataType.Short)) {
        return super.equals(obj);
      }
      org.apache.kyuubi.engine.spark.connect.proto.DataType.Short other = (org.apache.kyuubi.engine.spark.connect.proto.DataType.Short) obj;

      if (getTypeVariationReference()
          != other.getTypeVariationReference()) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TYPE_VARIATION_REFERENCE_FIELD_NUMBER;
      hash = (53 * hash) + getTypeVariationReference();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Short parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Short parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Short parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Short parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Short parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Short parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Short parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Short parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Short parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Short parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Short parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Short parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.kyuubi.engine.spark.connect.proto.DataType.Short prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code spark.connect.DataType.Short}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:spark.connect.DataType.Short)
        org.apache.kyuubi.engine.spark.connect.proto.DataType.ShortOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.kyuubi.engine.spark.connect.proto.Types.internal_static_spark_connect_DataType_Short_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.kyuubi.engine.spark.connect.proto.Types.internal_static_spark_connect_DataType_Short_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.kyuubi.engine.spark.connect.proto.DataType.Short.class, org.apache.kyuubi.engine.spark.connect.proto.DataType.Short.Builder.class);
      }

      // Construct using org.apache.kyuubi.engine.spark.connect.proto.DataType.Short.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        typeVariationReference_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.kyuubi.engine.spark.connect.proto.Types.internal_static_spark_connect_DataType_Short_descriptor;
      }

      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.proto.DataType.Short getDefaultInstanceForType() {
        return org.apache.kyuubi.engine.spark.connect.proto.DataType.Short.getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.proto.DataType.Short build() {
        org.apache.kyuubi.engine.spark.connect.proto.DataType.Short result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.proto.DataType.Short buildPartial() {
        org.apache.kyuubi.engine.spark.connect.proto.DataType.Short result = new org.apache.kyuubi.engine.spark.connect.proto.DataType.Short(this);
        result.typeVariationReference_ = typeVariationReference_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.kyuubi.engine.spark.connect.proto.DataType.Short) {
          return mergeFrom((org.apache.kyuubi.engine.spark.connect.proto.DataType.Short)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.kyuubi.engine.spark.connect.proto.DataType.Short other) {
        if (other == org.apache.kyuubi.engine.spark.connect.proto.DataType.Short.getDefaultInstance()) return this;
        if (other.getTypeVariationReference() != 0) {
          setTypeVariationReference(other.getTypeVariationReference());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                typeVariationReference_ = input.readUInt32();

                break;
              } // case 8
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }

      private int typeVariationReference_ ;
      /**
       * <code>uint32 type_variation_reference = 1;</code>
       * @return The typeVariationReference.
       */
      @java.lang.Override
      public int getTypeVariationReference() {
        return typeVariationReference_;
      }
      /**
       * <code>uint32 type_variation_reference = 1;</code>
       * @param value The typeVariationReference to set.
       * @return This builder for chaining.
       */
      public Builder setTypeVariationReference(int value) {
        
        typeVariationReference_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 type_variation_reference = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearTypeVariationReference() {
        
        typeVariationReference_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:spark.connect.DataType.Short)
    }

    // @@protoc_insertion_point(class_scope:spark.connect.DataType.Short)
    private static final org.apache.kyuubi.engine.spark.connect.proto.DataType.Short DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.kyuubi.engine.spark.connect.proto.DataType.Short();
    }

    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Short getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Short>
        PARSER = new com.google.protobuf.AbstractParser<Short>() {
      @java.lang.Override
      public Short parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<Short> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Short> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.DataType.Short getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface IntegerOrBuilder extends
      // @@protoc_insertion_point(interface_extends:spark.connect.DataType.Integer)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>uint32 type_variation_reference = 1;</code>
     * @return The typeVariationReference.
     */
    int getTypeVariationReference();
  }
  /**
   * Protobuf type {@code spark.connect.DataType.Integer}
   */
  public static final class Integer extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:spark.connect.DataType.Integer)
      IntegerOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Integer.newBuilder() to construct.
    private Integer(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Integer() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Integer();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.kyuubi.engine.spark.connect.proto.Types.internal_static_spark_connect_DataType_Integer_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.kyuubi.engine.spark.connect.proto.Types.internal_static_spark_connect_DataType_Integer_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.kyuubi.engine.spark.connect.proto.DataType.Integer.class, org.apache.kyuubi.engine.spark.connect.proto.DataType.Integer.Builder.class);
    }

    public static final int TYPE_VARIATION_REFERENCE_FIELD_NUMBER = 1;
    private int typeVariationReference_;
    /**
     * <code>uint32 type_variation_reference = 1;</code>
     * @return The typeVariationReference.
     */
    @java.lang.Override
    public int getTypeVariationReference() {
      return typeVariationReference_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (typeVariationReference_ != 0) {
        output.writeUInt32(1, typeVariationReference_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (typeVariationReference_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, typeVariationReference_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.kyuubi.engine.spark.connect.proto.DataType.Integer)) {
        return super.equals(obj);
      }
      org.apache.kyuubi.engine.spark.connect.proto.DataType.Integer other = (org.apache.kyuubi.engine.spark.connect.proto.DataType.Integer) obj;

      if (getTypeVariationReference()
          != other.getTypeVariationReference()) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TYPE_VARIATION_REFERENCE_FIELD_NUMBER;
      hash = (53 * hash) + getTypeVariationReference();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Integer parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Integer parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Integer parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Integer parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Integer parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Integer parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Integer parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Integer parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Integer parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Integer parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Integer parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Integer parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.kyuubi.engine.spark.connect.proto.DataType.Integer prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code spark.connect.DataType.Integer}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:spark.connect.DataType.Integer)
        org.apache.kyuubi.engine.spark.connect.proto.DataType.IntegerOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.kyuubi.engine.spark.connect.proto.Types.internal_static_spark_connect_DataType_Integer_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.kyuubi.engine.spark.connect.proto.Types.internal_static_spark_connect_DataType_Integer_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.kyuubi.engine.spark.connect.proto.DataType.Integer.class, org.apache.kyuubi.engine.spark.connect.proto.DataType.Integer.Builder.class);
      }

      // Construct using org.apache.kyuubi.engine.spark.connect.proto.DataType.Integer.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        typeVariationReference_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.kyuubi.engine.spark.connect.proto.Types.internal_static_spark_connect_DataType_Integer_descriptor;
      }

      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.proto.DataType.Integer getDefaultInstanceForType() {
        return org.apache.kyuubi.engine.spark.connect.proto.DataType.Integer.getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.proto.DataType.Integer build() {
        org.apache.kyuubi.engine.spark.connect.proto.DataType.Integer result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.proto.DataType.Integer buildPartial() {
        org.apache.kyuubi.engine.spark.connect.proto.DataType.Integer result = new org.apache.kyuubi.engine.spark.connect.proto.DataType.Integer(this);
        result.typeVariationReference_ = typeVariationReference_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.kyuubi.engine.spark.connect.proto.DataType.Integer) {
          return mergeFrom((org.apache.kyuubi.engine.spark.connect.proto.DataType.Integer)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.kyuubi.engine.spark.connect.proto.DataType.Integer other) {
        if (other == org.apache.kyuubi.engine.spark.connect.proto.DataType.Integer.getDefaultInstance()) return this;
        if (other.getTypeVariationReference() != 0) {
          setTypeVariationReference(other.getTypeVariationReference());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                typeVariationReference_ = input.readUInt32();

                break;
              } // case 8
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }

      private int typeVariationReference_ ;
      /**
       * <code>uint32 type_variation_reference = 1;</code>
       * @return The typeVariationReference.
       */
      @java.lang.Override
      public int getTypeVariationReference() {
        return typeVariationReference_;
      }
      /**
       * <code>uint32 type_variation_reference = 1;</code>
       * @param value The typeVariationReference to set.
       * @return This builder for chaining.
       */
      public Builder setTypeVariationReference(int value) {
        
        typeVariationReference_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 type_variation_reference = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearTypeVariationReference() {
        
        typeVariationReference_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:spark.connect.DataType.Integer)
    }

    // @@protoc_insertion_point(class_scope:spark.connect.DataType.Integer)
    private static final org.apache.kyuubi.engine.spark.connect.proto.DataType.Integer DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.kyuubi.engine.spark.connect.proto.DataType.Integer();
    }

    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Integer getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Integer>
        PARSER = new com.google.protobuf.AbstractParser<Integer>() {
      @java.lang.Override
      public Integer parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<Integer> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Integer> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.DataType.Integer getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface LongOrBuilder extends
      // @@protoc_insertion_point(interface_extends:spark.connect.DataType.Long)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>uint32 type_variation_reference = 1;</code>
     * @return The typeVariationReference.
     */
    int getTypeVariationReference();
  }
  /**
   * Protobuf type {@code spark.connect.DataType.Long}
   */
  public static final class Long extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:spark.connect.DataType.Long)
      LongOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Long.newBuilder() to construct.
    private Long(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Long() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Long();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.kyuubi.engine.spark.connect.proto.Types.internal_static_spark_connect_DataType_Long_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.kyuubi.engine.spark.connect.proto.Types.internal_static_spark_connect_DataType_Long_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.kyuubi.engine.spark.connect.proto.DataType.Long.class, org.apache.kyuubi.engine.spark.connect.proto.DataType.Long.Builder.class);
    }

    public static final int TYPE_VARIATION_REFERENCE_FIELD_NUMBER = 1;
    private int typeVariationReference_;
    /**
     * <code>uint32 type_variation_reference = 1;</code>
     * @return The typeVariationReference.
     */
    @java.lang.Override
    public int getTypeVariationReference() {
      return typeVariationReference_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (typeVariationReference_ != 0) {
        output.writeUInt32(1, typeVariationReference_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (typeVariationReference_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, typeVariationReference_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.kyuubi.engine.spark.connect.proto.DataType.Long)) {
        return super.equals(obj);
      }
      org.apache.kyuubi.engine.spark.connect.proto.DataType.Long other = (org.apache.kyuubi.engine.spark.connect.proto.DataType.Long) obj;

      if (getTypeVariationReference()
          != other.getTypeVariationReference()) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TYPE_VARIATION_REFERENCE_FIELD_NUMBER;
      hash = (53 * hash) + getTypeVariationReference();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Long parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Long parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Long parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Long parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Long parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Long parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Long parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Long parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Long parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Long parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Long parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Long parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.kyuubi.engine.spark.connect.proto.DataType.Long prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code spark.connect.DataType.Long}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:spark.connect.DataType.Long)
        org.apache.kyuubi.engine.spark.connect.proto.DataType.LongOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.kyuubi.engine.spark.connect.proto.Types.internal_static_spark_connect_DataType_Long_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.kyuubi.engine.spark.connect.proto.Types.internal_static_spark_connect_DataType_Long_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.kyuubi.engine.spark.connect.proto.DataType.Long.class, org.apache.kyuubi.engine.spark.connect.proto.DataType.Long.Builder.class);
      }

      // Construct using org.apache.kyuubi.engine.spark.connect.proto.DataType.Long.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        typeVariationReference_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.kyuubi.engine.spark.connect.proto.Types.internal_static_spark_connect_DataType_Long_descriptor;
      }

      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.proto.DataType.Long getDefaultInstanceForType() {
        return org.apache.kyuubi.engine.spark.connect.proto.DataType.Long.getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.proto.DataType.Long build() {
        org.apache.kyuubi.engine.spark.connect.proto.DataType.Long result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.proto.DataType.Long buildPartial() {
        org.apache.kyuubi.engine.spark.connect.proto.DataType.Long result = new org.apache.kyuubi.engine.spark.connect.proto.DataType.Long(this);
        result.typeVariationReference_ = typeVariationReference_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.kyuubi.engine.spark.connect.proto.DataType.Long) {
          return mergeFrom((org.apache.kyuubi.engine.spark.connect.proto.DataType.Long)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.kyuubi.engine.spark.connect.proto.DataType.Long other) {
        if (other == org.apache.kyuubi.engine.spark.connect.proto.DataType.Long.getDefaultInstance()) return this;
        if (other.getTypeVariationReference() != 0) {
          setTypeVariationReference(other.getTypeVariationReference());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                typeVariationReference_ = input.readUInt32();

                break;
              } // case 8
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }

      private int typeVariationReference_ ;
      /**
       * <code>uint32 type_variation_reference = 1;</code>
       * @return The typeVariationReference.
       */
      @java.lang.Override
      public int getTypeVariationReference() {
        return typeVariationReference_;
      }
      /**
       * <code>uint32 type_variation_reference = 1;</code>
       * @param value The typeVariationReference to set.
       * @return This builder for chaining.
       */
      public Builder setTypeVariationReference(int value) {
        
        typeVariationReference_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 type_variation_reference = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearTypeVariationReference() {
        
        typeVariationReference_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:spark.connect.DataType.Long)
    }

    // @@protoc_insertion_point(class_scope:spark.connect.DataType.Long)
    private static final org.apache.kyuubi.engine.spark.connect.proto.DataType.Long DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.kyuubi.engine.spark.connect.proto.DataType.Long();
    }

    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Long getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Long>
        PARSER = new com.google.protobuf.AbstractParser<Long>() {
      @java.lang.Override
      public Long parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<Long> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Long> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.DataType.Long getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface FloatOrBuilder extends
      // @@protoc_insertion_point(interface_extends:spark.connect.DataType.Float)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>uint32 type_variation_reference = 1;</code>
     * @return The typeVariationReference.
     */
    int getTypeVariationReference();
  }
  /**
   * Protobuf type {@code spark.connect.DataType.Float}
   */
  public static final class Float extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:spark.connect.DataType.Float)
      FloatOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Float.newBuilder() to construct.
    private Float(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Float() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Float();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.kyuubi.engine.spark.connect.proto.Types.internal_static_spark_connect_DataType_Float_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.kyuubi.engine.spark.connect.proto.Types.internal_static_spark_connect_DataType_Float_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.kyuubi.engine.spark.connect.proto.DataType.Float.class, org.apache.kyuubi.engine.spark.connect.proto.DataType.Float.Builder.class);
    }

    public static final int TYPE_VARIATION_REFERENCE_FIELD_NUMBER = 1;
    private int typeVariationReference_;
    /**
     * <code>uint32 type_variation_reference = 1;</code>
     * @return The typeVariationReference.
     */
    @java.lang.Override
    public int getTypeVariationReference() {
      return typeVariationReference_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (typeVariationReference_ != 0) {
        output.writeUInt32(1, typeVariationReference_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (typeVariationReference_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, typeVariationReference_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.kyuubi.engine.spark.connect.proto.DataType.Float)) {
        return super.equals(obj);
      }
      org.apache.kyuubi.engine.spark.connect.proto.DataType.Float other = (org.apache.kyuubi.engine.spark.connect.proto.DataType.Float) obj;

      if (getTypeVariationReference()
          != other.getTypeVariationReference()) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TYPE_VARIATION_REFERENCE_FIELD_NUMBER;
      hash = (53 * hash) + getTypeVariationReference();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Float parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Float parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Float parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Float parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Float parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Float parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Float parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Float parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Float parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Float parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Float parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Float parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.kyuubi.engine.spark.connect.proto.DataType.Float prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code spark.connect.DataType.Float}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:spark.connect.DataType.Float)
        org.apache.kyuubi.engine.spark.connect.proto.DataType.FloatOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.kyuubi.engine.spark.connect.proto.Types.internal_static_spark_connect_DataType_Float_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.kyuubi.engine.spark.connect.proto.Types.internal_static_spark_connect_DataType_Float_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.kyuubi.engine.spark.connect.proto.DataType.Float.class, org.apache.kyuubi.engine.spark.connect.proto.DataType.Float.Builder.class);
      }

      // Construct using org.apache.kyuubi.engine.spark.connect.proto.DataType.Float.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        typeVariationReference_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.kyuubi.engine.spark.connect.proto.Types.internal_static_spark_connect_DataType_Float_descriptor;
      }

      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.proto.DataType.Float getDefaultInstanceForType() {
        return org.apache.kyuubi.engine.spark.connect.proto.DataType.Float.getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.proto.DataType.Float build() {
        org.apache.kyuubi.engine.spark.connect.proto.DataType.Float result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.proto.DataType.Float buildPartial() {
        org.apache.kyuubi.engine.spark.connect.proto.DataType.Float result = new org.apache.kyuubi.engine.spark.connect.proto.DataType.Float(this);
        result.typeVariationReference_ = typeVariationReference_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.kyuubi.engine.spark.connect.proto.DataType.Float) {
          return mergeFrom((org.apache.kyuubi.engine.spark.connect.proto.DataType.Float)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.kyuubi.engine.spark.connect.proto.DataType.Float other) {
        if (other == org.apache.kyuubi.engine.spark.connect.proto.DataType.Float.getDefaultInstance()) return this;
        if (other.getTypeVariationReference() != 0) {
          setTypeVariationReference(other.getTypeVariationReference());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                typeVariationReference_ = input.readUInt32();

                break;
              } // case 8
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }

      private int typeVariationReference_ ;
      /**
       * <code>uint32 type_variation_reference = 1;</code>
       * @return The typeVariationReference.
       */
      @java.lang.Override
      public int getTypeVariationReference() {
        return typeVariationReference_;
      }
      /**
       * <code>uint32 type_variation_reference = 1;</code>
       * @param value The typeVariationReference to set.
       * @return This builder for chaining.
       */
      public Builder setTypeVariationReference(int value) {
        
        typeVariationReference_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 type_variation_reference = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearTypeVariationReference() {
        
        typeVariationReference_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:spark.connect.DataType.Float)
    }

    // @@protoc_insertion_point(class_scope:spark.connect.DataType.Float)
    private static final org.apache.kyuubi.engine.spark.connect.proto.DataType.Float DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.kyuubi.engine.spark.connect.proto.DataType.Float();
    }

    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Float getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Float>
        PARSER = new com.google.protobuf.AbstractParser<Float>() {
      @java.lang.Override
      public Float parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<Float> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Float> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.DataType.Float getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface DoubleOrBuilder extends
      // @@protoc_insertion_point(interface_extends:spark.connect.DataType.Double)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>uint32 type_variation_reference = 1;</code>
     * @return The typeVariationReference.
     */
    int getTypeVariationReference();
  }
  /**
   * Protobuf type {@code spark.connect.DataType.Double}
   */
  public static final class Double extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:spark.connect.DataType.Double)
      DoubleOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Double.newBuilder() to construct.
    private Double(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Double() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Double();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.kyuubi.engine.spark.connect.proto.Types.internal_static_spark_connect_DataType_Double_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.kyuubi.engine.spark.connect.proto.Types.internal_static_spark_connect_DataType_Double_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.kyuubi.engine.spark.connect.proto.DataType.Double.class, org.apache.kyuubi.engine.spark.connect.proto.DataType.Double.Builder.class);
    }

    public static final int TYPE_VARIATION_REFERENCE_FIELD_NUMBER = 1;
    private int typeVariationReference_;
    /**
     * <code>uint32 type_variation_reference = 1;</code>
     * @return The typeVariationReference.
     */
    @java.lang.Override
    public int getTypeVariationReference() {
      return typeVariationReference_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (typeVariationReference_ != 0) {
        output.writeUInt32(1, typeVariationReference_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (typeVariationReference_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, typeVariationReference_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.kyuubi.engine.spark.connect.proto.DataType.Double)) {
        return super.equals(obj);
      }
      org.apache.kyuubi.engine.spark.connect.proto.DataType.Double other = (org.apache.kyuubi.engine.spark.connect.proto.DataType.Double) obj;

      if (getTypeVariationReference()
          != other.getTypeVariationReference()) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TYPE_VARIATION_REFERENCE_FIELD_NUMBER;
      hash = (53 * hash) + getTypeVariationReference();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Double parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Double parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Double parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Double parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Double parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Double parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Double parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Double parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Double parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Double parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Double parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Double parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.kyuubi.engine.spark.connect.proto.DataType.Double prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code spark.connect.DataType.Double}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:spark.connect.DataType.Double)
        org.apache.kyuubi.engine.spark.connect.proto.DataType.DoubleOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.kyuubi.engine.spark.connect.proto.Types.internal_static_spark_connect_DataType_Double_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.kyuubi.engine.spark.connect.proto.Types.internal_static_spark_connect_DataType_Double_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.kyuubi.engine.spark.connect.proto.DataType.Double.class, org.apache.kyuubi.engine.spark.connect.proto.DataType.Double.Builder.class);
      }

      // Construct using org.apache.kyuubi.engine.spark.connect.proto.DataType.Double.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        typeVariationReference_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.kyuubi.engine.spark.connect.proto.Types.internal_static_spark_connect_DataType_Double_descriptor;
      }

      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.proto.DataType.Double getDefaultInstanceForType() {
        return org.apache.kyuubi.engine.spark.connect.proto.DataType.Double.getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.proto.DataType.Double build() {
        org.apache.kyuubi.engine.spark.connect.proto.DataType.Double result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.proto.DataType.Double buildPartial() {
        org.apache.kyuubi.engine.spark.connect.proto.DataType.Double result = new org.apache.kyuubi.engine.spark.connect.proto.DataType.Double(this);
        result.typeVariationReference_ = typeVariationReference_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.kyuubi.engine.spark.connect.proto.DataType.Double) {
          return mergeFrom((org.apache.kyuubi.engine.spark.connect.proto.DataType.Double)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.kyuubi.engine.spark.connect.proto.DataType.Double other) {
        if (other == org.apache.kyuubi.engine.spark.connect.proto.DataType.Double.getDefaultInstance()) return this;
        if (other.getTypeVariationReference() != 0) {
          setTypeVariationReference(other.getTypeVariationReference());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                typeVariationReference_ = input.readUInt32();

                break;
              } // case 8
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }

      private int typeVariationReference_ ;
      /**
       * <code>uint32 type_variation_reference = 1;</code>
       * @return The typeVariationReference.
       */
      @java.lang.Override
      public int getTypeVariationReference() {
        return typeVariationReference_;
      }
      /**
       * <code>uint32 type_variation_reference = 1;</code>
       * @param value The typeVariationReference to set.
       * @return This builder for chaining.
       */
      public Builder setTypeVariationReference(int value) {
        
        typeVariationReference_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 type_variation_reference = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearTypeVariationReference() {
        
        typeVariationReference_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:spark.connect.DataType.Double)
    }

    // @@protoc_insertion_point(class_scope:spark.connect.DataType.Double)
    private static final org.apache.kyuubi.engine.spark.connect.proto.DataType.Double DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.kyuubi.engine.spark.connect.proto.DataType.Double();
    }

    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Double getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Double>
        PARSER = new com.google.protobuf.AbstractParser<Double>() {
      @java.lang.Override
      public Double parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<Double> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Double> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.DataType.Double getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface StringOrBuilder extends
      // @@protoc_insertion_point(interface_extends:spark.connect.DataType.String)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>uint32 type_variation_reference = 1;</code>
     * @return The typeVariationReference.
     */
    int getTypeVariationReference();
  }
  /**
   * Protobuf type {@code spark.connect.DataType.String}
   */
  public static final class String extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:spark.connect.DataType.String)
      StringOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use String.newBuilder() to construct.
    private String(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private String() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new String();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.kyuubi.engine.spark.connect.proto.Types.internal_static_spark_connect_DataType_String_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.kyuubi.engine.spark.connect.proto.Types.internal_static_spark_connect_DataType_String_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.kyuubi.engine.spark.connect.proto.DataType.String.class, org.apache.kyuubi.engine.spark.connect.proto.DataType.String.Builder.class);
    }

    public static final int TYPE_VARIATION_REFERENCE_FIELD_NUMBER = 1;
    private int typeVariationReference_;
    /**
     * <code>uint32 type_variation_reference = 1;</code>
     * @return The typeVariationReference.
     */
    @java.lang.Override
    public int getTypeVariationReference() {
      return typeVariationReference_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (typeVariationReference_ != 0) {
        output.writeUInt32(1, typeVariationReference_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (typeVariationReference_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, typeVariationReference_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.kyuubi.engine.spark.connect.proto.DataType.String)) {
        return super.equals(obj);
      }
      org.apache.kyuubi.engine.spark.connect.proto.DataType.String other = (org.apache.kyuubi.engine.spark.connect.proto.DataType.String) obj;

      if (getTypeVariationReference()
          != other.getTypeVariationReference()) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TYPE_VARIATION_REFERENCE_FIELD_NUMBER;
      hash = (53 * hash) + getTypeVariationReference();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.String parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.String parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.String parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.String parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.String parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.String parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.String parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.String parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.String parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.String parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.String parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.String parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.kyuubi.engine.spark.connect.proto.DataType.String prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code spark.connect.DataType.String}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:spark.connect.DataType.String)
        org.apache.kyuubi.engine.spark.connect.proto.DataType.StringOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.kyuubi.engine.spark.connect.proto.Types.internal_static_spark_connect_DataType_String_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.kyuubi.engine.spark.connect.proto.Types.internal_static_spark_connect_DataType_String_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.kyuubi.engine.spark.connect.proto.DataType.String.class, org.apache.kyuubi.engine.spark.connect.proto.DataType.String.Builder.class);
      }

      // Construct using org.apache.kyuubi.engine.spark.connect.proto.DataType.String.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        typeVariationReference_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.kyuubi.engine.spark.connect.proto.Types.internal_static_spark_connect_DataType_String_descriptor;
      }

      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.proto.DataType.String getDefaultInstanceForType() {
        return org.apache.kyuubi.engine.spark.connect.proto.DataType.String.getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.proto.DataType.String build() {
        org.apache.kyuubi.engine.spark.connect.proto.DataType.String result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.proto.DataType.String buildPartial() {
        org.apache.kyuubi.engine.spark.connect.proto.DataType.String result = new org.apache.kyuubi.engine.spark.connect.proto.DataType.String(this);
        result.typeVariationReference_ = typeVariationReference_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.kyuubi.engine.spark.connect.proto.DataType.String) {
          return mergeFrom((org.apache.kyuubi.engine.spark.connect.proto.DataType.String)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.kyuubi.engine.spark.connect.proto.DataType.String other) {
        if (other == org.apache.kyuubi.engine.spark.connect.proto.DataType.String.getDefaultInstance()) return this;
        if (other.getTypeVariationReference() != 0) {
          setTypeVariationReference(other.getTypeVariationReference());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                typeVariationReference_ = input.readUInt32();

                break;
              } // case 8
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }

      private int typeVariationReference_ ;
      /**
       * <code>uint32 type_variation_reference = 1;</code>
       * @return The typeVariationReference.
       */
      @java.lang.Override
      public int getTypeVariationReference() {
        return typeVariationReference_;
      }
      /**
       * <code>uint32 type_variation_reference = 1;</code>
       * @param value The typeVariationReference to set.
       * @return This builder for chaining.
       */
      public Builder setTypeVariationReference(int value) {
        
        typeVariationReference_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 type_variation_reference = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearTypeVariationReference() {
        
        typeVariationReference_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:spark.connect.DataType.String)
    }

    // @@protoc_insertion_point(class_scope:spark.connect.DataType.String)
    private static final org.apache.kyuubi.engine.spark.connect.proto.DataType.String DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.kyuubi.engine.spark.connect.proto.DataType.String();
    }

    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.String getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<String>
        PARSER = new com.google.protobuf.AbstractParser<String>() {
      @java.lang.Override
      public String parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<String> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<String> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.DataType.String getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface BinaryOrBuilder extends
      // @@protoc_insertion_point(interface_extends:spark.connect.DataType.Binary)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>uint32 type_variation_reference = 1;</code>
     * @return The typeVariationReference.
     */
    int getTypeVariationReference();
  }
  /**
   * Protobuf type {@code spark.connect.DataType.Binary}
   */
  public static final class Binary extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:spark.connect.DataType.Binary)
      BinaryOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Binary.newBuilder() to construct.
    private Binary(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Binary() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Binary();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.kyuubi.engine.spark.connect.proto.Types.internal_static_spark_connect_DataType_Binary_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.kyuubi.engine.spark.connect.proto.Types.internal_static_spark_connect_DataType_Binary_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.kyuubi.engine.spark.connect.proto.DataType.Binary.class, org.apache.kyuubi.engine.spark.connect.proto.DataType.Binary.Builder.class);
    }

    public static final int TYPE_VARIATION_REFERENCE_FIELD_NUMBER = 1;
    private int typeVariationReference_;
    /**
     * <code>uint32 type_variation_reference = 1;</code>
     * @return The typeVariationReference.
     */
    @java.lang.Override
    public int getTypeVariationReference() {
      return typeVariationReference_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (typeVariationReference_ != 0) {
        output.writeUInt32(1, typeVariationReference_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (typeVariationReference_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, typeVariationReference_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.kyuubi.engine.spark.connect.proto.DataType.Binary)) {
        return super.equals(obj);
      }
      org.apache.kyuubi.engine.spark.connect.proto.DataType.Binary other = (org.apache.kyuubi.engine.spark.connect.proto.DataType.Binary) obj;

      if (getTypeVariationReference()
          != other.getTypeVariationReference()) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TYPE_VARIATION_REFERENCE_FIELD_NUMBER;
      hash = (53 * hash) + getTypeVariationReference();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Binary parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Binary parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Binary parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Binary parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Binary parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Binary parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Binary parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Binary parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Binary parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Binary parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Binary parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Binary parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.kyuubi.engine.spark.connect.proto.DataType.Binary prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code spark.connect.DataType.Binary}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:spark.connect.DataType.Binary)
        org.apache.kyuubi.engine.spark.connect.proto.DataType.BinaryOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.kyuubi.engine.spark.connect.proto.Types.internal_static_spark_connect_DataType_Binary_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.kyuubi.engine.spark.connect.proto.Types.internal_static_spark_connect_DataType_Binary_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.kyuubi.engine.spark.connect.proto.DataType.Binary.class, org.apache.kyuubi.engine.spark.connect.proto.DataType.Binary.Builder.class);
      }

      // Construct using org.apache.kyuubi.engine.spark.connect.proto.DataType.Binary.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        typeVariationReference_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.kyuubi.engine.spark.connect.proto.Types.internal_static_spark_connect_DataType_Binary_descriptor;
      }

      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.proto.DataType.Binary getDefaultInstanceForType() {
        return org.apache.kyuubi.engine.spark.connect.proto.DataType.Binary.getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.proto.DataType.Binary build() {
        org.apache.kyuubi.engine.spark.connect.proto.DataType.Binary result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.proto.DataType.Binary buildPartial() {
        org.apache.kyuubi.engine.spark.connect.proto.DataType.Binary result = new org.apache.kyuubi.engine.spark.connect.proto.DataType.Binary(this);
        result.typeVariationReference_ = typeVariationReference_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.kyuubi.engine.spark.connect.proto.DataType.Binary) {
          return mergeFrom((org.apache.kyuubi.engine.spark.connect.proto.DataType.Binary)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.kyuubi.engine.spark.connect.proto.DataType.Binary other) {
        if (other == org.apache.kyuubi.engine.spark.connect.proto.DataType.Binary.getDefaultInstance()) return this;
        if (other.getTypeVariationReference() != 0) {
          setTypeVariationReference(other.getTypeVariationReference());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                typeVariationReference_ = input.readUInt32();

                break;
              } // case 8
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }

      private int typeVariationReference_ ;
      /**
       * <code>uint32 type_variation_reference = 1;</code>
       * @return The typeVariationReference.
       */
      @java.lang.Override
      public int getTypeVariationReference() {
        return typeVariationReference_;
      }
      /**
       * <code>uint32 type_variation_reference = 1;</code>
       * @param value The typeVariationReference to set.
       * @return This builder for chaining.
       */
      public Builder setTypeVariationReference(int value) {
        
        typeVariationReference_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 type_variation_reference = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearTypeVariationReference() {
        
        typeVariationReference_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:spark.connect.DataType.Binary)
    }

    // @@protoc_insertion_point(class_scope:spark.connect.DataType.Binary)
    private static final org.apache.kyuubi.engine.spark.connect.proto.DataType.Binary DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.kyuubi.engine.spark.connect.proto.DataType.Binary();
    }

    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Binary getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Binary>
        PARSER = new com.google.protobuf.AbstractParser<Binary>() {
      @java.lang.Override
      public Binary parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<Binary> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Binary> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.DataType.Binary getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface NULLOrBuilder extends
      // @@protoc_insertion_point(interface_extends:spark.connect.DataType.NULL)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>uint32 type_variation_reference = 1;</code>
     * @return The typeVariationReference.
     */
    int getTypeVariationReference();
  }
  /**
   * Protobuf type {@code spark.connect.DataType.NULL}
   */
  public static final class NULL extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:spark.connect.DataType.NULL)
      NULLOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use NULL.newBuilder() to construct.
    private NULL(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private NULL() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new NULL();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.kyuubi.engine.spark.connect.proto.Types.internal_static_spark_connect_DataType_NULL_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.kyuubi.engine.spark.connect.proto.Types.internal_static_spark_connect_DataType_NULL_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.kyuubi.engine.spark.connect.proto.DataType.NULL.class, org.apache.kyuubi.engine.spark.connect.proto.DataType.NULL.Builder.class);
    }

    public static final int TYPE_VARIATION_REFERENCE_FIELD_NUMBER = 1;
    private int typeVariationReference_;
    /**
     * <code>uint32 type_variation_reference = 1;</code>
     * @return The typeVariationReference.
     */
    @java.lang.Override
    public int getTypeVariationReference() {
      return typeVariationReference_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (typeVariationReference_ != 0) {
        output.writeUInt32(1, typeVariationReference_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (typeVariationReference_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, typeVariationReference_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.kyuubi.engine.spark.connect.proto.DataType.NULL)) {
        return super.equals(obj);
      }
      org.apache.kyuubi.engine.spark.connect.proto.DataType.NULL other = (org.apache.kyuubi.engine.spark.connect.proto.DataType.NULL) obj;

      if (getTypeVariationReference()
          != other.getTypeVariationReference()) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TYPE_VARIATION_REFERENCE_FIELD_NUMBER;
      hash = (53 * hash) + getTypeVariationReference();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.NULL parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.NULL parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.NULL parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.NULL parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.NULL parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.NULL parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.NULL parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.NULL parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.NULL parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.NULL parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.NULL parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.NULL parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.kyuubi.engine.spark.connect.proto.DataType.NULL prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code spark.connect.DataType.NULL}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:spark.connect.DataType.NULL)
        org.apache.kyuubi.engine.spark.connect.proto.DataType.NULLOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.kyuubi.engine.spark.connect.proto.Types.internal_static_spark_connect_DataType_NULL_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.kyuubi.engine.spark.connect.proto.Types.internal_static_spark_connect_DataType_NULL_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.kyuubi.engine.spark.connect.proto.DataType.NULL.class, org.apache.kyuubi.engine.spark.connect.proto.DataType.NULL.Builder.class);
      }

      // Construct using org.apache.kyuubi.engine.spark.connect.proto.DataType.NULL.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        typeVariationReference_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.kyuubi.engine.spark.connect.proto.Types.internal_static_spark_connect_DataType_NULL_descriptor;
      }

      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.proto.DataType.NULL getDefaultInstanceForType() {
        return org.apache.kyuubi.engine.spark.connect.proto.DataType.NULL.getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.proto.DataType.NULL build() {
        org.apache.kyuubi.engine.spark.connect.proto.DataType.NULL result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.proto.DataType.NULL buildPartial() {
        org.apache.kyuubi.engine.spark.connect.proto.DataType.NULL result = new org.apache.kyuubi.engine.spark.connect.proto.DataType.NULL(this);
        result.typeVariationReference_ = typeVariationReference_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.kyuubi.engine.spark.connect.proto.DataType.NULL) {
          return mergeFrom((org.apache.kyuubi.engine.spark.connect.proto.DataType.NULL)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.kyuubi.engine.spark.connect.proto.DataType.NULL other) {
        if (other == org.apache.kyuubi.engine.spark.connect.proto.DataType.NULL.getDefaultInstance()) return this;
        if (other.getTypeVariationReference() != 0) {
          setTypeVariationReference(other.getTypeVariationReference());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                typeVariationReference_ = input.readUInt32();

                break;
              } // case 8
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }

      private int typeVariationReference_ ;
      /**
       * <code>uint32 type_variation_reference = 1;</code>
       * @return The typeVariationReference.
       */
      @java.lang.Override
      public int getTypeVariationReference() {
        return typeVariationReference_;
      }
      /**
       * <code>uint32 type_variation_reference = 1;</code>
       * @param value The typeVariationReference to set.
       * @return This builder for chaining.
       */
      public Builder setTypeVariationReference(int value) {
        
        typeVariationReference_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 type_variation_reference = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearTypeVariationReference() {
        
        typeVariationReference_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:spark.connect.DataType.NULL)
    }

    // @@protoc_insertion_point(class_scope:spark.connect.DataType.NULL)
    private static final org.apache.kyuubi.engine.spark.connect.proto.DataType.NULL DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.kyuubi.engine.spark.connect.proto.DataType.NULL();
    }

    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.NULL getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<NULL>
        PARSER = new com.google.protobuf.AbstractParser<NULL>() {
      @java.lang.Override
      public NULL parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<NULL> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<NULL> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.DataType.NULL getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TimestampOrBuilder extends
      // @@protoc_insertion_point(interface_extends:spark.connect.DataType.Timestamp)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>uint32 type_variation_reference = 1;</code>
     * @return The typeVariationReference.
     */
    int getTypeVariationReference();
  }
  /**
   * Protobuf type {@code spark.connect.DataType.Timestamp}
   */
  public static final class Timestamp extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:spark.connect.DataType.Timestamp)
      TimestampOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Timestamp.newBuilder() to construct.
    private Timestamp(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Timestamp() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Timestamp();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.kyuubi.engine.spark.connect.proto.Types.internal_static_spark_connect_DataType_Timestamp_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.kyuubi.engine.spark.connect.proto.Types.internal_static_spark_connect_DataType_Timestamp_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.kyuubi.engine.spark.connect.proto.DataType.Timestamp.class, org.apache.kyuubi.engine.spark.connect.proto.DataType.Timestamp.Builder.class);
    }

    public static final int TYPE_VARIATION_REFERENCE_FIELD_NUMBER = 1;
    private int typeVariationReference_;
    /**
     * <code>uint32 type_variation_reference = 1;</code>
     * @return The typeVariationReference.
     */
    @java.lang.Override
    public int getTypeVariationReference() {
      return typeVariationReference_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (typeVariationReference_ != 0) {
        output.writeUInt32(1, typeVariationReference_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (typeVariationReference_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, typeVariationReference_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.kyuubi.engine.spark.connect.proto.DataType.Timestamp)) {
        return super.equals(obj);
      }
      org.apache.kyuubi.engine.spark.connect.proto.DataType.Timestamp other = (org.apache.kyuubi.engine.spark.connect.proto.DataType.Timestamp) obj;

      if (getTypeVariationReference()
          != other.getTypeVariationReference()) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TYPE_VARIATION_REFERENCE_FIELD_NUMBER;
      hash = (53 * hash) + getTypeVariationReference();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Timestamp parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Timestamp parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Timestamp parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Timestamp parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Timestamp parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Timestamp parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Timestamp parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Timestamp parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Timestamp parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Timestamp parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Timestamp parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Timestamp parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.kyuubi.engine.spark.connect.proto.DataType.Timestamp prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code spark.connect.DataType.Timestamp}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:spark.connect.DataType.Timestamp)
        org.apache.kyuubi.engine.spark.connect.proto.DataType.TimestampOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.kyuubi.engine.spark.connect.proto.Types.internal_static_spark_connect_DataType_Timestamp_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.kyuubi.engine.spark.connect.proto.Types.internal_static_spark_connect_DataType_Timestamp_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.kyuubi.engine.spark.connect.proto.DataType.Timestamp.class, org.apache.kyuubi.engine.spark.connect.proto.DataType.Timestamp.Builder.class);
      }

      // Construct using org.apache.kyuubi.engine.spark.connect.proto.DataType.Timestamp.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        typeVariationReference_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.kyuubi.engine.spark.connect.proto.Types.internal_static_spark_connect_DataType_Timestamp_descriptor;
      }

      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.proto.DataType.Timestamp getDefaultInstanceForType() {
        return org.apache.kyuubi.engine.spark.connect.proto.DataType.Timestamp.getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.proto.DataType.Timestamp build() {
        org.apache.kyuubi.engine.spark.connect.proto.DataType.Timestamp result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.proto.DataType.Timestamp buildPartial() {
        org.apache.kyuubi.engine.spark.connect.proto.DataType.Timestamp result = new org.apache.kyuubi.engine.spark.connect.proto.DataType.Timestamp(this);
        result.typeVariationReference_ = typeVariationReference_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.kyuubi.engine.spark.connect.proto.DataType.Timestamp) {
          return mergeFrom((org.apache.kyuubi.engine.spark.connect.proto.DataType.Timestamp)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.kyuubi.engine.spark.connect.proto.DataType.Timestamp other) {
        if (other == org.apache.kyuubi.engine.spark.connect.proto.DataType.Timestamp.getDefaultInstance()) return this;
        if (other.getTypeVariationReference() != 0) {
          setTypeVariationReference(other.getTypeVariationReference());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                typeVariationReference_ = input.readUInt32();

                break;
              } // case 8
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }

      private int typeVariationReference_ ;
      /**
       * <code>uint32 type_variation_reference = 1;</code>
       * @return The typeVariationReference.
       */
      @java.lang.Override
      public int getTypeVariationReference() {
        return typeVariationReference_;
      }
      /**
       * <code>uint32 type_variation_reference = 1;</code>
       * @param value The typeVariationReference to set.
       * @return This builder for chaining.
       */
      public Builder setTypeVariationReference(int value) {
        
        typeVariationReference_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 type_variation_reference = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearTypeVariationReference() {
        
        typeVariationReference_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:spark.connect.DataType.Timestamp)
    }

    // @@protoc_insertion_point(class_scope:spark.connect.DataType.Timestamp)
    private static final org.apache.kyuubi.engine.spark.connect.proto.DataType.Timestamp DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.kyuubi.engine.spark.connect.proto.DataType.Timestamp();
    }

    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Timestamp getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Timestamp>
        PARSER = new com.google.protobuf.AbstractParser<Timestamp>() {
      @java.lang.Override
      public Timestamp parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<Timestamp> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Timestamp> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.DataType.Timestamp getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface DateOrBuilder extends
      // @@protoc_insertion_point(interface_extends:spark.connect.DataType.Date)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>uint32 type_variation_reference = 1;</code>
     * @return The typeVariationReference.
     */
    int getTypeVariationReference();
  }
  /**
   * Protobuf type {@code spark.connect.DataType.Date}
   */
  public static final class Date extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:spark.connect.DataType.Date)
      DateOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Date.newBuilder() to construct.
    private Date(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Date() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Date();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.kyuubi.engine.spark.connect.proto.Types.internal_static_spark_connect_DataType_Date_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.kyuubi.engine.spark.connect.proto.Types.internal_static_spark_connect_DataType_Date_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.kyuubi.engine.spark.connect.proto.DataType.Date.class, org.apache.kyuubi.engine.spark.connect.proto.DataType.Date.Builder.class);
    }

    public static final int TYPE_VARIATION_REFERENCE_FIELD_NUMBER = 1;
    private int typeVariationReference_;
    /**
     * <code>uint32 type_variation_reference = 1;</code>
     * @return The typeVariationReference.
     */
    @java.lang.Override
    public int getTypeVariationReference() {
      return typeVariationReference_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (typeVariationReference_ != 0) {
        output.writeUInt32(1, typeVariationReference_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (typeVariationReference_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, typeVariationReference_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.kyuubi.engine.spark.connect.proto.DataType.Date)) {
        return super.equals(obj);
      }
      org.apache.kyuubi.engine.spark.connect.proto.DataType.Date other = (org.apache.kyuubi.engine.spark.connect.proto.DataType.Date) obj;

      if (getTypeVariationReference()
          != other.getTypeVariationReference()) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TYPE_VARIATION_REFERENCE_FIELD_NUMBER;
      hash = (53 * hash) + getTypeVariationReference();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Date parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Date parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Date parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Date parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Date parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Date parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Date parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Date parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Date parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Date parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Date parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Date parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.kyuubi.engine.spark.connect.proto.DataType.Date prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code spark.connect.DataType.Date}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:spark.connect.DataType.Date)
        org.apache.kyuubi.engine.spark.connect.proto.DataType.DateOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.kyuubi.engine.spark.connect.proto.Types.internal_static_spark_connect_DataType_Date_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.kyuubi.engine.spark.connect.proto.Types.internal_static_spark_connect_DataType_Date_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.kyuubi.engine.spark.connect.proto.DataType.Date.class, org.apache.kyuubi.engine.spark.connect.proto.DataType.Date.Builder.class);
      }

      // Construct using org.apache.kyuubi.engine.spark.connect.proto.DataType.Date.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        typeVariationReference_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.kyuubi.engine.spark.connect.proto.Types.internal_static_spark_connect_DataType_Date_descriptor;
      }

      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.proto.DataType.Date getDefaultInstanceForType() {
        return org.apache.kyuubi.engine.spark.connect.proto.DataType.Date.getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.proto.DataType.Date build() {
        org.apache.kyuubi.engine.spark.connect.proto.DataType.Date result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.proto.DataType.Date buildPartial() {
        org.apache.kyuubi.engine.spark.connect.proto.DataType.Date result = new org.apache.kyuubi.engine.spark.connect.proto.DataType.Date(this);
        result.typeVariationReference_ = typeVariationReference_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.kyuubi.engine.spark.connect.proto.DataType.Date) {
          return mergeFrom((org.apache.kyuubi.engine.spark.connect.proto.DataType.Date)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.kyuubi.engine.spark.connect.proto.DataType.Date other) {
        if (other == org.apache.kyuubi.engine.spark.connect.proto.DataType.Date.getDefaultInstance()) return this;
        if (other.getTypeVariationReference() != 0) {
          setTypeVariationReference(other.getTypeVariationReference());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                typeVariationReference_ = input.readUInt32();

                break;
              } // case 8
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }

      private int typeVariationReference_ ;
      /**
       * <code>uint32 type_variation_reference = 1;</code>
       * @return The typeVariationReference.
       */
      @java.lang.Override
      public int getTypeVariationReference() {
        return typeVariationReference_;
      }
      /**
       * <code>uint32 type_variation_reference = 1;</code>
       * @param value The typeVariationReference to set.
       * @return This builder for chaining.
       */
      public Builder setTypeVariationReference(int value) {
        
        typeVariationReference_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 type_variation_reference = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearTypeVariationReference() {
        
        typeVariationReference_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:spark.connect.DataType.Date)
    }

    // @@protoc_insertion_point(class_scope:spark.connect.DataType.Date)
    private static final org.apache.kyuubi.engine.spark.connect.proto.DataType.Date DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.kyuubi.engine.spark.connect.proto.DataType.Date();
    }

    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Date getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Date>
        PARSER = new com.google.protobuf.AbstractParser<Date>() {
      @java.lang.Override
      public Date parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<Date> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Date> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.DataType.Date getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TimestampNTZOrBuilder extends
      // @@protoc_insertion_point(interface_extends:spark.connect.DataType.TimestampNTZ)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>uint32 type_variation_reference = 1;</code>
     * @return The typeVariationReference.
     */
    int getTypeVariationReference();
  }
  /**
   * Protobuf type {@code spark.connect.DataType.TimestampNTZ}
   */
  public static final class TimestampNTZ extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:spark.connect.DataType.TimestampNTZ)
      TimestampNTZOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TimestampNTZ.newBuilder() to construct.
    private TimestampNTZ(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TimestampNTZ() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new TimestampNTZ();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.kyuubi.engine.spark.connect.proto.Types.internal_static_spark_connect_DataType_TimestampNTZ_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.kyuubi.engine.spark.connect.proto.Types.internal_static_spark_connect_DataType_TimestampNTZ_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.kyuubi.engine.spark.connect.proto.DataType.TimestampNTZ.class, org.apache.kyuubi.engine.spark.connect.proto.DataType.TimestampNTZ.Builder.class);
    }

    public static final int TYPE_VARIATION_REFERENCE_FIELD_NUMBER = 1;
    private int typeVariationReference_;
    /**
     * <code>uint32 type_variation_reference = 1;</code>
     * @return The typeVariationReference.
     */
    @java.lang.Override
    public int getTypeVariationReference() {
      return typeVariationReference_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (typeVariationReference_ != 0) {
        output.writeUInt32(1, typeVariationReference_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (typeVariationReference_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, typeVariationReference_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.kyuubi.engine.spark.connect.proto.DataType.TimestampNTZ)) {
        return super.equals(obj);
      }
      org.apache.kyuubi.engine.spark.connect.proto.DataType.TimestampNTZ other = (org.apache.kyuubi.engine.spark.connect.proto.DataType.TimestampNTZ) obj;

      if (getTypeVariationReference()
          != other.getTypeVariationReference()) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TYPE_VARIATION_REFERENCE_FIELD_NUMBER;
      hash = (53 * hash) + getTypeVariationReference();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.TimestampNTZ parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.TimestampNTZ parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.TimestampNTZ parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.TimestampNTZ parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.TimestampNTZ parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.TimestampNTZ parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.TimestampNTZ parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.TimestampNTZ parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.TimestampNTZ parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.TimestampNTZ parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.TimestampNTZ parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.TimestampNTZ parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.kyuubi.engine.spark.connect.proto.DataType.TimestampNTZ prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code spark.connect.DataType.TimestampNTZ}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:spark.connect.DataType.TimestampNTZ)
        org.apache.kyuubi.engine.spark.connect.proto.DataType.TimestampNTZOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.kyuubi.engine.spark.connect.proto.Types.internal_static_spark_connect_DataType_TimestampNTZ_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.kyuubi.engine.spark.connect.proto.Types.internal_static_spark_connect_DataType_TimestampNTZ_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.kyuubi.engine.spark.connect.proto.DataType.TimestampNTZ.class, org.apache.kyuubi.engine.spark.connect.proto.DataType.TimestampNTZ.Builder.class);
      }

      // Construct using org.apache.kyuubi.engine.spark.connect.proto.DataType.TimestampNTZ.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        typeVariationReference_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.kyuubi.engine.spark.connect.proto.Types.internal_static_spark_connect_DataType_TimestampNTZ_descriptor;
      }

      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.proto.DataType.TimestampNTZ getDefaultInstanceForType() {
        return org.apache.kyuubi.engine.spark.connect.proto.DataType.TimestampNTZ.getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.proto.DataType.TimestampNTZ build() {
        org.apache.kyuubi.engine.spark.connect.proto.DataType.TimestampNTZ result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.proto.DataType.TimestampNTZ buildPartial() {
        org.apache.kyuubi.engine.spark.connect.proto.DataType.TimestampNTZ result = new org.apache.kyuubi.engine.spark.connect.proto.DataType.TimestampNTZ(this);
        result.typeVariationReference_ = typeVariationReference_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.kyuubi.engine.spark.connect.proto.DataType.TimestampNTZ) {
          return mergeFrom((org.apache.kyuubi.engine.spark.connect.proto.DataType.TimestampNTZ)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.kyuubi.engine.spark.connect.proto.DataType.TimestampNTZ other) {
        if (other == org.apache.kyuubi.engine.spark.connect.proto.DataType.TimestampNTZ.getDefaultInstance()) return this;
        if (other.getTypeVariationReference() != 0) {
          setTypeVariationReference(other.getTypeVariationReference());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                typeVariationReference_ = input.readUInt32();

                break;
              } // case 8
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }

      private int typeVariationReference_ ;
      /**
       * <code>uint32 type_variation_reference = 1;</code>
       * @return The typeVariationReference.
       */
      @java.lang.Override
      public int getTypeVariationReference() {
        return typeVariationReference_;
      }
      /**
       * <code>uint32 type_variation_reference = 1;</code>
       * @param value The typeVariationReference to set.
       * @return This builder for chaining.
       */
      public Builder setTypeVariationReference(int value) {
        
        typeVariationReference_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 type_variation_reference = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearTypeVariationReference() {
        
        typeVariationReference_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:spark.connect.DataType.TimestampNTZ)
    }

    // @@protoc_insertion_point(class_scope:spark.connect.DataType.TimestampNTZ)
    private static final org.apache.kyuubi.engine.spark.connect.proto.DataType.TimestampNTZ DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.kyuubi.engine.spark.connect.proto.DataType.TimestampNTZ();
    }

    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.TimestampNTZ getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TimestampNTZ>
        PARSER = new com.google.protobuf.AbstractParser<TimestampNTZ>() {
      @java.lang.Override
      public TimestampNTZ parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<TimestampNTZ> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TimestampNTZ> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.DataType.TimestampNTZ getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CalendarIntervalOrBuilder extends
      // @@protoc_insertion_point(interface_extends:spark.connect.DataType.CalendarInterval)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>uint32 type_variation_reference = 1;</code>
     * @return The typeVariationReference.
     */
    int getTypeVariationReference();
  }
  /**
   * Protobuf type {@code spark.connect.DataType.CalendarInterval}
   */
  public static final class CalendarInterval extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:spark.connect.DataType.CalendarInterval)
      CalendarIntervalOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CalendarInterval.newBuilder() to construct.
    private CalendarInterval(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CalendarInterval() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new CalendarInterval();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.kyuubi.engine.spark.connect.proto.Types.internal_static_spark_connect_DataType_CalendarInterval_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.kyuubi.engine.spark.connect.proto.Types.internal_static_spark_connect_DataType_CalendarInterval_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.kyuubi.engine.spark.connect.proto.DataType.CalendarInterval.class, org.apache.kyuubi.engine.spark.connect.proto.DataType.CalendarInterval.Builder.class);
    }

    public static final int TYPE_VARIATION_REFERENCE_FIELD_NUMBER = 1;
    private int typeVariationReference_;
    /**
     * <code>uint32 type_variation_reference = 1;</code>
     * @return The typeVariationReference.
     */
    @java.lang.Override
    public int getTypeVariationReference() {
      return typeVariationReference_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (typeVariationReference_ != 0) {
        output.writeUInt32(1, typeVariationReference_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (typeVariationReference_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, typeVariationReference_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.kyuubi.engine.spark.connect.proto.DataType.CalendarInterval)) {
        return super.equals(obj);
      }
      org.apache.kyuubi.engine.spark.connect.proto.DataType.CalendarInterval other = (org.apache.kyuubi.engine.spark.connect.proto.DataType.CalendarInterval) obj;

      if (getTypeVariationReference()
          != other.getTypeVariationReference()) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TYPE_VARIATION_REFERENCE_FIELD_NUMBER;
      hash = (53 * hash) + getTypeVariationReference();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.CalendarInterval parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.CalendarInterval parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.CalendarInterval parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.CalendarInterval parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.CalendarInterval parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.CalendarInterval parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.CalendarInterval parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.CalendarInterval parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.CalendarInterval parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.CalendarInterval parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.CalendarInterval parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.CalendarInterval parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.kyuubi.engine.spark.connect.proto.DataType.CalendarInterval prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code spark.connect.DataType.CalendarInterval}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:spark.connect.DataType.CalendarInterval)
        org.apache.kyuubi.engine.spark.connect.proto.DataType.CalendarIntervalOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.kyuubi.engine.spark.connect.proto.Types.internal_static_spark_connect_DataType_CalendarInterval_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.kyuubi.engine.spark.connect.proto.Types.internal_static_spark_connect_DataType_CalendarInterval_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.kyuubi.engine.spark.connect.proto.DataType.CalendarInterval.class, org.apache.kyuubi.engine.spark.connect.proto.DataType.CalendarInterval.Builder.class);
      }

      // Construct using org.apache.kyuubi.engine.spark.connect.proto.DataType.CalendarInterval.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        typeVariationReference_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.kyuubi.engine.spark.connect.proto.Types.internal_static_spark_connect_DataType_CalendarInterval_descriptor;
      }

      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.proto.DataType.CalendarInterval getDefaultInstanceForType() {
        return org.apache.kyuubi.engine.spark.connect.proto.DataType.CalendarInterval.getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.proto.DataType.CalendarInterval build() {
        org.apache.kyuubi.engine.spark.connect.proto.DataType.CalendarInterval result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.proto.DataType.CalendarInterval buildPartial() {
        org.apache.kyuubi.engine.spark.connect.proto.DataType.CalendarInterval result = new org.apache.kyuubi.engine.spark.connect.proto.DataType.CalendarInterval(this);
        result.typeVariationReference_ = typeVariationReference_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.kyuubi.engine.spark.connect.proto.DataType.CalendarInterval) {
          return mergeFrom((org.apache.kyuubi.engine.spark.connect.proto.DataType.CalendarInterval)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.kyuubi.engine.spark.connect.proto.DataType.CalendarInterval other) {
        if (other == org.apache.kyuubi.engine.spark.connect.proto.DataType.CalendarInterval.getDefaultInstance()) return this;
        if (other.getTypeVariationReference() != 0) {
          setTypeVariationReference(other.getTypeVariationReference());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                typeVariationReference_ = input.readUInt32();

                break;
              } // case 8
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }

      private int typeVariationReference_ ;
      /**
       * <code>uint32 type_variation_reference = 1;</code>
       * @return The typeVariationReference.
       */
      @java.lang.Override
      public int getTypeVariationReference() {
        return typeVariationReference_;
      }
      /**
       * <code>uint32 type_variation_reference = 1;</code>
       * @param value The typeVariationReference to set.
       * @return This builder for chaining.
       */
      public Builder setTypeVariationReference(int value) {
        
        typeVariationReference_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 type_variation_reference = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearTypeVariationReference() {
        
        typeVariationReference_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:spark.connect.DataType.CalendarInterval)
    }

    // @@protoc_insertion_point(class_scope:spark.connect.DataType.CalendarInterval)
    private static final org.apache.kyuubi.engine.spark.connect.proto.DataType.CalendarInterval DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.kyuubi.engine.spark.connect.proto.DataType.CalendarInterval();
    }

    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.CalendarInterval getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CalendarInterval>
        PARSER = new com.google.protobuf.AbstractParser<CalendarInterval>() {
      @java.lang.Override
      public CalendarInterval parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CalendarInterval> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CalendarInterval> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.DataType.CalendarInterval getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface YearMonthIntervalOrBuilder extends
      // @@protoc_insertion_point(interface_extends:spark.connect.DataType.YearMonthInterval)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int32 start_field = 1;</code>
     * @return Whether the startField field is set.
     */
    boolean hasStartField();
    /**
     * <code>optional int32 start_field = 1;</code>
     * @return The startField.
     */
    int getStartField();

    /**
     * <code>optional int32 end_field = 2;</code>
     * @return Whether the endField field is set.
     */
    boolean hasEndField();
    /**
     * <code>optional int32 end_field = 2;</code>
     * @return The endField.
     */
    int getEndField();

    /**
     * <code>uint32 type_variation_reference = 3;</code>
     * @return The typeVariationReference.
     */
    int getTypeVariationReference();
  }
  /**
   * Protobuf type {@code spark.connect.DataType.YearMonthInterval}
   */
  public static final class YearMonthInterval extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:spark.connect.DataType.YearMonthInterval)
      YearMonthIntervalOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use YearMonthInterval.newBuilder() to construct.
    private YearMonthInterval(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private YearMonthInterval() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new YearMonthInterval();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.kyuubi.engine.spark.connect.proto.Types.internal_static_spark_connect_DataType_YearMonthInterval_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.kyuubi.engine.spark.connect.proto.Types.internal_static_spark_connect_DataType_YearMonthInterval_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.kyuubi.engine.spark.connect.proto.DataType.YearMonthInterval.class, org.apache.kyuubi.engine.spark.connect.proto.DataType.YearMonthInterval.Builder.class);
    }

    private int bitField0_;
    public static final int START_FIELD_FIELD_NUMBER = 1;
    private int startField_;
    /**
     * <code>optional int32 start_field = 1;</code>
     * @return Whether the startField field is set.
     */
    @java.lang.Override
    public boolean hasStartField() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional int32 start_field = 1;</code>
     * @return The startField.
     */
    @java.lang.Override
    public int getStartField() {
      return startField_;
    }

    public static final int END_FIELD_FIELD_NUMBER = 2;
    private int endField_;
    /**
     * <code>optional int32 end_field = 2;</code>
     * @return Whether the endField field is set.
     */
    @java.lang.Override
    public boolean hasEndField() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional int32 end_field = 2;</code>
     * @return The endField.
     */
    @java.lang.Override
    public int getEndField() {
      return endField_;
    }

    public static final int TYPE_VARIATION_REFERENCE_FIELD_NUMBER = 3;
    private int typeVariationReference_;
    /**
     * <code>uint32 type_variation_reference = 3;</code>
     * @return The typeVariationReference.
     */
    @java.lang.Override
    public int getTypeVariationReference() {
      return typeVariationReference_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeInt32(1, startField_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeInt32(2, endField_);
      }
      if (typeVariationReference_ != 0) {
        output.writeUInt32(3, typeVariationReference_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, startField_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, endField_);
      }
      if (typeVariationReference_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, typeVariationReference_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.kyuubi.engine.spark.connect.proto.DataType.YearMonthInterval)) {
        return super.equals(obj);
      }
      org.apache.kyuubi.engine.spark.connect.proto.DataType.YearMonthInterval other = (org.apache.kyuubi.engine.spark.connect.proto.DataType.YearMonthInterval) obj;

      if (hasStartField() != other.hasStartField()) return false;
      if (hasStartField()) {
        if (getStartField()
            != other.getStartField()) return false;
      }
      if (hasEndField() != other.hasEndField()) return false;
      if (hasEndField()) {
        if (getEndField()
            != other.getEndField()) return false;
      }
      if (getTypeVariationReference()
          != other.getTypeVariationReference()) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasStartField()) {
        hash = (37 * hash) + START_FIELD_FIELD_NUMBER;
        hash = (53 * hash) + getStartField();
      }
      if (hasEndField()) {
        hash = (37 * hash) + END_FIELD_FIELD_NUMBER;
        hash = (53 * hash) + getEndField();
      }
      hash = (37 * hash) + TYPE_VARIATION_REFERENCE_FIELD_NUMBER;
      hash = (53 * hash) + getTypeVariationReference();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.YearMonthInterval parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.YearMonthInterval parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.YearMonthInterval parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.YearMonthInterval parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.YearMonthInterval parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.YearMonthInterval parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.YearMonthInterval parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.YearMonthInterval parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.YearMonthInterval parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.YearMonthInterval parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.YearMonthInterval parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.YearMonthInterval parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.kyuubi.engine.spark.connect.proto.DataType.YearMonthInterval prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code spark.connect.DataType.YearMonthInterval}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:spark.connect.DataType.YearMonthInterval)
        org.apache.kyuubi.engine.spark.connect.proto.DataType.YearMonthIntervalOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.kyuubi.engine.spark.connect.proto.Types.internal_static_spark_connect_DataType_YearMonthInterval_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.kyuubi.engine.spark.connect.proto.Types.internal_static_spark_connect_DataType_YearMonthInterval_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.kyuubi.engine.spark.connect.proto.DataType.YearMonthInterval.class, org.apache.kyuubi.engine.spark.connect.proto.DataType.YearMonthInterval.Builder.class);
      }

      // Construct using org.apache.kyuubi.engine.spark.connect.proto.DataType.YearMonthInterval.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        startField_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        endField_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        typeVariationReference_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.kyuubi.engine.spark.connect.proto.Types.internal_static_spark_connect_DataType_YearMonthInterval_descriptor;
      }

      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.proto.DataType.YearMonthInterval getDefaultInstanceForType() {
        return org.apache.kyuubi.engine.spark.connect.proto.DataType.YearMonthInterval.getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.proto.DataType.YearMonthInterval build() {
        org.apache.kyuubi.engine.spark.connect.proto.DataType.YearMonthInterval result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.proto.DataType.YearMonthInterval buildPartial() {
        org.apache.kyuubi.engine.spark.connect.proto.DataType.YearMonthInterval result = new org.apache.kyuubi.engine.spark.connect.proto.DataType.YearMonthInterval(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.startField_ = startField_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.endField_ = endField_;
          to_bitField0_ |= 0x00000002;
        }
        result.typeVariationReference_ = typeVariationReference_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.kyuubi.engine.spark.connect.proto.DataType.YearMonthInterval) {
          return mergeFrom((org.apache.kyuubi.engine.spark.connect.proto.DataType.YearMonthInterval)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.kyuubi.engine.spark.connect.proto.DataType.YearMonthInterval other) {
        if (other == org.apache.kyuubi.engine.spark.connect.proto.DataType.YearMonthInterval.getDefaultInstance()) return this;
        if (other.hasStartField()) {
          setStartField(other.getStartField());
        }
        if (other.hasEndField()) {
          setEndField(other.getEndField());
        }
        if (other.getTypeVariationReference() != 0) {
          setTypeVariationReference(other.getTypeVariationReference());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                startField_ = input.readInt32();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 16: {
                endField_ = input.readInt32();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              case 24: {
                typeVariationReference_ = input.readUInt32();

                break;
              } // case 24
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int startField_ ;
      /**
       * <code>optional int32 start_field = 1;</code>
       * @return Whether the startField field is set.
       */
      @java.lang.Override
      public boolean hasStartField() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional int32 start_field = 1;</code>
       * @return The startField.
       */
      @java.lang.Override
      public int getStartField() {
        return startField_;
      }
      /**
       * <code>optional int32 start_field = 1;</code>
       * @param value The startField to set.
       * @return This builder for chaining.
       */
      public Builder setStartField(int value) {
        bitField0_ |= 0x00000001;
        startField_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 start_field = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearStartField() {
        bitField0_ = (bitField0_ & ~0x00000001);
        startField_ = 0;
        onChanged();
        return this;
      }

      private int endField_ ;
      /**
       * <code>optional int32 end_field = 2;</code>
       * @return Whether the endField field is set.
       */
      @java.lang.Override
      public boolean hasEndField() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional int32 end_field = 2;</code>
       * @return The endField.
       */
      @java.lang.Override
      public int getEndField() {
        return endField_;
      }
      /**
       * <code>optional int32 end_field = 2;</code>
       * @param value The endField to set.
       * @return This builder for chaining.
       */
      public Builder setEndField(int value) {
        bitField0_ |= 0x00000002;
        endField_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 end_field = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearEndField() {
        bitField0_ = (bitField0_ & ~0x00000002);
        endField_ = 0;
        onChanged();
        return this;
      }

      private int typeVariationReference_ ;
      /**
       * <code>uint32 type_variation_reference = 3;</code>
       * @return The typeVariationReference.
       */
      @java.lang.Override
      public int getTypeVariationReference() {
        return typeVariationReference_;
      }
      /**
       * <code>uint32 type_variation_reference = 3;</code>
       * @param value The typeVariationReference to set.
       * @return This builder for chaining.
       */
      public Builder setTypeVariationReference(int value) {
        
        typeVariationReference_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 type_variation_reference = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearTypeVariationReference() {
        
        typeVariationReference_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:spark.connect.DataType.YearMonthInterval)
    }

    // @@protoc_insertion_point(class_scope:spark.connect.DataType.YearMonthInterval)
    private static final org.apache.kyuubi.engine.spark.connect.proto.DataType.YearMonthInterval DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.kyuubi.engine.spark.connect.proto.DataType.YearMonthInterval();
    }

    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.YearMonthInterval getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<YearMonthInterval>
        PARSER = new com.google.protobuf.AbstractParser<YearMonthInterval>() {
      @java.lang.Override
      public YearMonthInterval parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<YearMonthInterval> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<YearMonthInterval> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.DataType.YearMonthInterval getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface DayTimeIntervalOrBuilder extends
      // @@protoc_insertion_point(interface_extends:spark.connect.DataType.DayTimeInterval)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int32 start_field = 1;</code>
     * @return Whether the startField field is set.
     */
    boolean hasStartField();
    /**
     * <code>optional int32 start_field = 1;</code>
     * @return The startField.
     */
    int getStartField();

    /**
     * <code>optional int32 end_field = 2;</code>
     * @return Whether the endField field is set.
     */
    boolean hasEndField();
    /**
     * <code>optional int32 end_field = 2;</code>
     * @return The endField.
     */
    int getEndField();

    /**
     * <code>uint32 type_variation_reference = 3;</code>
     * @return The typeVariationReference.
     */
    int getTypeVariationReference();
  }
  /**
   * Protobuf type {@code spark.connect.DataType.DayTimeInterval}
   */
  public static final class DayTimeInterval extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:spark.connect.DataType.DayTimeInterval)
      DayTimeIntervalOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use DayTimeInterval.newBuilder() to construct.
    private DayTimeInterval(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private DayTimeInterval() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new DayTimeInterval();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.kyuubi.engine.spark.connect.proto.Types.internal_static_spark_connect_DataType_DayTimeInterval_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.kyuubi.engine.spark.connect.proto.Types.internal_static_spark_connect_DataType_DayTimeInterval_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.kyuubi.engine.spark.connect.proto.DataType.DayTimeInterval.class, org.apache.kyuubi.engine.spark.connect.proto.DataType.DayTimeInterval.Builder.class);
    }

    private int bitField0_;
    public static final int START_FIELD_FIELD_NUMBER = 1;
    private int startField_;
    /**
     * <code>optional int32 start_field = 1;</code>
     * @return Whether the startField field is set.
     */
    @java.lang.Override
    public boolean hasStartField() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional int32 start_field = 1;</code>
     * @return The startField.
     */
    @java.lang.Override
    public int getStartField() {
      return startField_;
    }

    public static final int END_FIELD_FIELD_NUMBER = 2;
    private int endField_;
    /**
     * <code>optional int32 end_field = 2;</code>
     * @return Whether the endField field is set.
     */
    @java.lang.Override
    public boolean hasEndField() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional int32 end_field = 2;</code>
     * @return The endField.
     */
    @java.lang.Override
    public int getEndField() {
      return endField_;
    }

    public static final int TYPE_VARIATION_REFERENCE_FIELD_NUMBER = 3;
    private int typeVariationReference_;
    /**
     * <code>uint32 type_variation_reference = 3;</code>
     * @return The typeVariationReference.
     */
    @java.lang.Override
    public int getTypeVariationReference() {
      return typeVariationReference_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeInt32(1, startField_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeInt32(2, endField_);
      }
      if (typeVariationReference_ != 0) {
        output.writeUInt32(3, typeVariationReference_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, startField_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, endField_);
      }
      if (typeVariationReference_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, typeVariationReference_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.kyuubi.engine.spark.connect.proto.DataType.DayTimeInterval)) {
        return super.equals(obj);
      }
      org.apache.kyuubi.engine.spark.connect.proto.DataType.DayTimeInterval other = (org.apache.kyuubi.engine.spark.connect.proto.DataType.DayTimeInterval) obj;

      if (hasStartField() != other.hasStartField()) return false;
      if (hasStartField()) {
        if (getStartField()
            != other.getStartField()) return false;
      }
      if (hasEndField() != other.hasEndField()) return false;
      if (hasEndField()) {
        if (getEndField()
            != other.getEndField()) return false;
      }
      if (getTypeVariationReference()
          != other.getTypeVariationReference()) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasStartField()) {
        hash = (37 * hash) + START_FIELD_FIELD_NUMBER;
        hash = (53 * hash) + getStartField();
      }
      if (hasEndField()) {
        hash = (37 * hash) + END_FIELD_FIELD_NUMBER;
        hash = (53 * hash) + getEndField();
      }
      hash = (37 * hash) + TYPE_VARIATION_REFERENCE_FIELD_NUMBER;
      hash = (53 * hash) + getTypeVariationReference();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.DayTimeInterval parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.DayTimeInterval parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.DayTimeInterval parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.DayTimeInterval parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.DayTimeInterval parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.DayTimeInterval parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.DayTimeInterval parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.DayTimeInterval parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.DayTimeInterval parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.DayTimeInterval parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.DayTimeInterval parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.DayTimeInterval parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.kyuubi.engine.spark.connect.proto.DataType.DayTimeInterval prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code spark.connect.DataType.DayTimeInterval}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:spark.connect.DataType.DayTimeInterval)
        org.apache.kyuubi.engine.spark.connect.proto.DataType.DayTimeIntervalOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.kyuubi.engine.spark.connect.proto.Types.internal_static_spark_connect_DataType_DayTimeInterval_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.kyuubi.engine.spark.connect.proto.Types.internal_static_spark_connect_DataType_DayTimeInterval_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.kyuubi.engine.spark.connect.proto.DataType.DayTimeInterval.class, org.apache.kyuubi.engine.spark.connect.proto.DataType.DayTimeInterval.Builder.class);
      }

      // Construct using org.apache.kyuubi.engine.spark.connect.proto.DataType.DayTimeInterval.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        startField_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        endField_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        typeVariationReference_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.kyuubi.engine.spark.connect.proto.Types.internal_static_spark_connect_DataType_DayTimeInterval_descriptor;
      }

      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.proto.DataType.DayTimeInterval getDefaultInstanceForType() {
        return org.apache.kyuubi.engine.spark.connect.proto.DataType.DayTimeInterval.getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.proto.DataType.DayTimeInterval build() {
        org.apache.kyuubi.engine.spark.connect.proto.DataType.DayTimeInterval result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.proto.DataType.DayTimeInterval buildPartial() {
        org.apache.kyuubi.engine.spark.connect.proto.DataType.DayTimeInterval result = new org.apache.kyuubi.engine.spark.connect.proto.DataType.DayTimeInterval(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.startField_ = startField_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.endField_ = endField_;
          to_bitField0_ |= 0x00000002;
        }
        result.typeVariationReference_ = typeVariationReference_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.kyuubi.engine.spark.connect.proto.DataType.DayTimeInterval) {
          return mergeFrom((org.apache.kyuubi.engine.spark.connect.proto.DataType.DayTimeInterval)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.kyuubi.engine.spark.connect.proto.DataType.DayTimeInterval other) {
        if (other == org.apache.kyuubi.engine.spark.connect.proto.DataType.DayTimeInterval.getDefaultInstance()) return this;
        if (other.hasStartField()) {
          setStartField(other.getStartField());
        }
        if (other.hasEndField()) {
          setEndField(other.getEndField());
        }
        if (other.getTypeVariationReference() != 0) {
          setTypeVariationReference(other.getTypeVariationReference());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                startField_ = input.readInt32();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 16: {
                endField_ = input.readInt32();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              case 24: {
                typeVariationReference_ = input.readUInt32();

                break;
              } // case 24
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int startField_ ;
      /**
       * <code>optional int32 start_field = 1;</code>
       * @return Whether the startField field is set.
       */
      @java.lang.Override
      public boolean hasStartField() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional int32 start_field = 1;</code>
       * @return The startField.
       */
      @java.lang.Override
      public int getStartField() {
        return startField_;
      }
      /**
       * <code>optional int32 start_field = 1;</code>
       * @param value The startField to set.
       * @return This builder for chaining.
       */
      public Builder setStartField(int value) {
        bitField0_ |= 0x00000001;
        startField_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 start_field = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearStartField() {
        bitField0_ = (bitField0_ & ~0x00000001);
        startField_ = 0;
        onChanged();
        return this;
      }

      private int endField_ ;
      /**
       * <code>optional int32 end_field = 2;</code>
       * @return Whether the endField field is set.
       */
      @java.lang.Override
      public boolean hasEndField() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional int32 end_field = 2;</code>
       * @return The endField.
       */
      @java.lang.Override
      public int getEndField() {
        return endField_;
      }
      /**
       * <code>optional int32 end_field = 2;</code>
       * @param value The endField to set.
       * @return This builder for chaining.
       */
      public Builder setEndField(int value) {
        bitField0_ |= 0x00000002;
        endField_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 end_field = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearEndField() {
        bitField0_ = (bitField0_ & ~0x00000002);
        endField_ = 0;
        onChanged();
        return this;
      }

      private int typeVariationReference_ ;
      /**
       * <code>uint32 type_variation_reference = 3;</code>
       * @return The typeVariationReference.
       */
      @java.lang.Override
      public int getTypeVariationReference() {
        return typeVariationReference_;
      }
      /**
       * <code>uint32 type_variation_reference = 3;</code>
       * @param value The typeVariationReference to set.
       * @return This builder for chaining.
       */
      public Builder setTypeVariationReference(int value) {
        
        typeVariationReference_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 type_variation_reference = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearTypeVariationReference() {
        
        typeVariationReference_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:spark.connect.DataType.DayTimeInterval)
    }

    // @@protoc_insertion_point(class_scope:spark.connect.DataType.DayTimeInterval)
    private static final org.apache.kyuubi.engine.spark.connect.proto.DataType.DayTimeInterval DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.kyuubi.engine.spark.connect.proto.DataType.DayTimeInterval();
    }

    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.DayTimeInterval getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<DayTimeInterval>
        PARSER = new com.google.protobuf.AbstractParser<DayTimeInterval>() {
      @java.lang.Override
      public DayTimeInterval parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<DayTimeInterval> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<DayTimeInterval> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.DataType.DayTimeInterval getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CharOrBuilder extends
      // @@protoc_insertion_point(interface_extends:spark.connect.DataType.Char)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int32 length = 1;</code>
     * @return The length.
     */
    int getLength();

    /**
     * <code>uint32 type_variation_reference = 2;</code>
     * @return The typeVariationReference.
     */
    int getTypeVariationReference();
  }
  /**
   * <pre>
   * Start compound types.
   * </pre>
   *
   * Protobuf type {@code spark.connect.DataType.Char}
   */
  public static final class Char extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:spark.connect.DataType.Char)
      CharOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Char.newBuilder() to construct.
    private Char(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Char() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Char();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.kyuubi.engine.spark.connect.proto.Types.internal_static_spark_connect_DataType_Char_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.kyuubi.engine.spark.connect.proto.Types.internal_static_spark_connect_DataType_Char_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.kyuubi.engine.spark.connect.proto.DataType.Char.class, org.apache.kyuubi.engine.spark.connect.proto.DataType.Char.Builder.class);
    }

    public static final int LENGTH_FIELD_NUMBER = 1;
    private int length_;
    /**
     * <code>int32 length = 1;</code>
     * @return The length.
     */
    @java.lang.Override
    public int getLength() {
      return length_;
    }

    public static final int TYPE_VARIATION_REFERENCE_FIELD_NUMBER = 2;
    private int typeVariationReference_;
    /**
     * <code>uint32 type_variation_reference = 2;</code>
     * @return The typeVariationReference.
     */
    @java.lang.Override
    public int getTypeVariationReference() {
      return typeVariationReference_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (length_ != 0) {
        output.writeInt32(1, length_);
      }
      if (typeVariationReference_ != 0) {
        output.writeUInt32(2, typeVariationReference_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (length_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, length_);
      }
      if (typeVariationReference_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, typeVariationReference_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.kyuubi.engine.spark.connect.proto.DataType.Char)) {
        return super.equals(obj);
      }
      org.apache.kyuubi.engine.spark.connect.proto.DataType.Char other = (org.apache.kyuubi.engine.spark.connect.proto.DataType.Char) obj;

      if (getLength()
          != other.getLength()) return false;
      if (getTypeVariationReference()
          != other.getTypeVariationReference()) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + LENGTH_FIELD_NUMBER;
      hash = (53 * hash) + getLength();
      hash = (37 * hash) + TYPE_VARIATION_REFERENCE_FIELD_NUMBER;
      hash = (53 * hash) + getTypeVariationReference();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Char parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Char parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Char parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Char parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Char parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Char parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Char parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Char parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Char parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Char parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Char parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Char parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.kyuubi.engine.spark.connect.proto.DataType.Char prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Start compound types.
     * </pre>
     *
     * Protobuf type {@code spark.connect.DataType.Char}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:spark.connect.DataType.Char)
        org.apache.kyuubi.engine.spark.connect.proto.DataType.CharOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.kyuubi.engine.spark.connect.proto.Types.internal_static_spark_connect_DataType_Char_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.kyuubi.engine.spark.connect.proto.Types.internal_static_spark_connect_DataType_Char_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.kyuubi.engine.spark.connect.proto.DataType.Char.class, org.apache.kyuubi.engine.spark.connect.proto.DataType.Char.Builder.class);
      }

      // Construct using org.apache.kyuubi.engine.spark.connect.proto.DataType.Char.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        length_ = 0;

        typeVariationReference_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.kyuubi.engine.spark.connect.proto.Types.internal_static_spark_connect_DataType_Char_descriptor;
      }

      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.proto.DataType.Char getDefaultInstanceForType() {
        return org.apache.kyuubi.engine.spark.connect.proto.DataType.Char.getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.proto.DataType.Char build() {
        org.apache.kyuubi.engine.spark.connect.proto.DataType.Char result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.proto.DataType.Char buildPartial() {
        org.apache.kyuubi.engine.spark.connect.proto.DataType.Char result = new org.apache.kyuubi.engine.spark.connect.proto.DataType.Char(this);
        result.length_ = length_;
        result.typeVariationReference_ = typeVariationReference_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.kyuubi.engine.spark.connect.proto.DataType.Char) {
          return mergeFrom((org.apache.kyuubi.engine.spark.connect.proto.DataType.Char)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.kyuubi.engine.spark.connect.proto.DataType.Char other) {
        if (other == org.apache.kyuubi.engine.spark.connect.proto.DataType.Char.getDefaultInstance()) return this;
        if (other.getLength() != 0) {
          setLength(other.getLength());
        }
        if (other.getTypeVariationReference() != 0) {
          setTypeVariationReference(other.getTypeVariationReference());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                length_ = input.readInt32();

                break;
              } // case 8
              case 16: {
                typeVariationReference_ = input.readUInt32();

                break;
              } // case 16
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }

      private int length_ ;
      /**
       * <code>int32 length = 1;</code>
       * @return The length.
       */
      @java.lang.Override
      public int getLength() {
        return length_;
      }
      /**
       * <code>int32 length = 1;</code>
       * @param value The length to set.
       * @return This builder for chaining.
       */
      public Builder setLength(int value) {
        
        length_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 length = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearLength() {
        
        length_ = 0;
        onChanged();
        return this;
      }

      private int typeVariationReference_ ;
      /**
       * <code>uint32 type_variation_reference = 2;</code>
       * @return The typeVariationReference.
       */
      @java.lang.Override
      public int getTypeVariationReference() {
        return typeVariationReference_;
      }
      /**
       * <code>uint32 type_variation_reference = 2;</code>
       * @param value The typeVariationReference to set.
       * @return This builder for chaining.
       */
      public Builder setTypeVariationReference(int value) {
        
        typeVariationReference_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 type_variation_reference = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearTypeVariationReference() {
        
        typeVariationReference_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:spark.connect.DataType.Char)
    }

    // @@protoc_insertion_point(class_scope:spark.connect.DataType.Char)
    private static final org.apache.kyuubi.engine.spark.connect.proto.DataType.Char DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.kyuubi.engine.spark.connect.proto.DataType.Char();
    }

    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Char getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Char>
        PARSER = new com.google.protobuf.AbstractParser<Char>() {
      @java.lang.Override
      public Char parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<Char> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Char> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.DataType.Char getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface VarCharOrBuilder extends
      // @@protoc_insertion_point(interface_extends:spark.connect.DataType.VarChar)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int32 length = 1;</code>
     * @return The length.
     */
    int getLength();

    /**
     * <code>uint32 type_variation_reference = 2;</code>
     * @return The typeVariationReference.
     */
    int getTypeVariationReference();
  }
  /**
   * Protobuf type {@code spark.connect.DataType.VarChar}
   */
  public static final class VarChar extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:spark.connect.DataType.VarChar)
      VarCharOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use VarChar.newBuilder() to construct.
    private VarChar(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private VarChar() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new VarChar();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.kyuubi.engine.spark.connect.proto.Types.internal_static_spark_connect_DataType_VarChar_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.kyuubi.engine.spark.connect.proto.Types.internal_static_spark_connect_DataType_VarChar_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.kyuubi.engine.spark.connect.proto.DataType.VarChar.class, org.apache.kyuubi.engine.spark.connect.proto.DataType.VarChar.Builder.class);
    }

    public static final int LENGTH_FIELD_NUMBER = 1;
    private int length_;
    /**
     * <code>int32 length = 1;</code>
     * @return The length.
     */
    @java.lang.Override
    public int getLength() {
      return length_;
    }

    public static final int TYPE_VARIATION_REFERENCE_FIELD_NUMBER = 2;
    private int typeVariationReference_;
    /**
     * <code>uint32 type_variation_reference = 2;</code>
     * @return The typeVariationReference.
     */
    @java.lang.Override
    public int getTypeVariationReference() {
      return typeVariationReference_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (length_ != 0) {
        output.writeInt32(1, length_);
      }
      if (typeVariationReference_ != 0) {
        output.writeUInt32(2, typeVariationReference_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (length_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, length_);
      }
      if (typeVariationReference_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, typeVariationReference_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.kyuubi.engine.spark.connect.proto.DataType.VarChar)) {
        return super.equals(obj);
      }
      org.apache.kyuubi.engine.spark.connect.proto.DataType.VarChar other = (org.apache.kyuubi.engine.spark.connect.proto.DataType.VarChar) obj;

      if (getLength()
          != other.getLength()) return false;
      if (getTypeVariationReference()
          != other.getTypeVariationReference()) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + LENGTH_FIELD_NUMBER;
      hash = (53 * hash) + getLength();
      hash = (37 * hash) + TYPE_VARIATION_REFERENCE_FIELD_NUMBER;
      hash = (53 * hash) + getTypeVariationReference();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.VarChar parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.VarChar parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.VarChar parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.VarChar parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.VarChar parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.VarChar parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.VarChar parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.VarChar parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.VarChar parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.VarChar parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.VarChar parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.VarChar parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.kyuubi.engine.spark.connect.proto.DataType.VarChar prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code spark.connect.DataType.VarChar}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:spark.connect.DataType.VarChar)
        org.apache.kyuubi.engine.spark.connect.proto.DataType.VarCharOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.kyuubi.engine.spark.connect.proto.Types.internal_static_spark_connect_DataType_VarChar_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.kyuubi.engine.spark.connect.proto.Types.internal_static_spark_connect_DataType_VarChar_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.kyuubi.engine.spark.connect.proto.DataType.VarChar.class, org.apache.kyuubi.engine.spark.connect.proto.DataType.VarChar.Builder.class);
      }

      // Construct using org.apache.kyuubi.engine.spark.connect.proto.DataType.VarChar.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        length_ = 0;

        typeVariationReference_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.kyuubi.engine.spark.connect.proto.Types.internal_static_spark_connect_DataType_VarChar_descriptor;
      }

      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.proto.DataType.VarChar getDefaultInstanceForType() {
        return org.apache.kyuubi.engine.spark.connect.proto.DataType.VarChar.getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.proto.DataType.VarChar build() {
        org.apache.kyuubi.engine.spark.connect.proto.DataType.VarChar result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.proto.DataType.VarChar buildPartial() {
        org.apache.kyuubi.engine.spark.connect.proto.DataType.VarChar result = new org.apache.kyuubi.engine.spark.connect.proto.DataType.VarChar(this);
        result.length_ = length_;
        result.typeVariationReference_ = typeVariationReference_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.kyuubi.engine.spark.connect.proto.DataType.VarChar) {
          return mergeFrom((org.apache.kyuubi.engine.spark.connect.proto.DataType.VarChar)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.kyuubi.engine.spark.connect.proto.DataType.VarChar other) {
        if (other == org.apache.kyuubi.engine.spark.connect.proto.DataType.VarChar.getDefaultInstance()) return this;
        if (other.getLength() != 0) {
          setLength(other.getLength());
        }
        if (other.getTypeVariationReference() != 0) {
          setTypeVariationReference(other.getTypeVariationReference());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                length_ = input.readInt32();

                break;
              } // case 8
              case 16: {
                typeVariationReference_ = input.readUInt32();

                break;
              } // case 16
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }

      private int length_ ;
      /**
       * <code>int32 length = 1;</code>
       * @return The length.
       */
      @java.lang.Override
      public int getLength() {
        return length_;
      }
      /**
       * <code>int32 length = 1;</code>
       * @param value The length to set.
       * @return This builder for chaining.
       */
      public Builder setLength(int value) {
        
        length_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 length = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearLength() {
        
        length_ = 0;
        onChanged();
        return this;
      }

      private int typeVariationReference_ ;
      /**
       * <code>uint32 type_variation_reference = 2;</code>
       * @return The typeVariationReference.
       */
      @java.lang.Override
      public int getTypeVariationReference() {
        return typeVariationReference_;
      }
      /**
       * <code>uint32 type_variation_reference = 2;</code>
       * @param value The typeVariationReference to set.
       * @return This builder for chaining.
       */
      public Builder setTypeVariationReference(int value) {
        
        typeVariationReference_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 type_variation_reference = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearTypeVariationReference() {
        
        typeVariationReference_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:spark.connect.DataType.VarChar)
    }

    // @@protoc_insertion_point(class_scope:spark.connect.DataType.VarChar)
    private static final org.apache.kyuubi.engine.spark.connect.proto.DataType.VarChar DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.kyuubi.engine.spark.connect.proto.DataType.VarChar();
    }

    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.VarChar getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<VarChar>
        PARSER = new com.google.protobuf.AbstractParser<VarChar>() {
      @java.lang.Override
      public VarChar parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<VarChar> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<VarChar> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.DataType.VarChar getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface DecimalOrBuilder extends
      // @@protoc_insertion_point(interface_extends:spark.connect.DataType.Decimal)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int32 scale = 1;</code>
     * @return Whether the scale field is set.
     */
    boolean hasScale();
    /**
     * <code>optional int32 scale = 1;</code>
     * @return The scale.
     */
    int getScale();

    /**
     * <code>optional int32 precision = 2;</code>
     * @return Whether the precision field is set.
     */
    boolean hasPrecision();
    /**
     * <code>optional int32 precision = 2;</code>
     * @return The precision.
     */
    int getPrecision();

    /**
     * <code>uint32 type_variation_reference = 3;</code>
     * @return The typeVariationReference.
     */
    int getTypeVariationReference();
  }
  /**
   * Protobuf type {@code spark.connect.DataType.Decimal}
   */
  public static final class Decimal extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:spark.connect.DataType.Decimal)
      DecimalOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Decimal.newBuilder() to construct.
    private Decimal(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Decimal() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Decimal();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.kyuubi.engine.spark.connect.proto.Types.internal_static_spark_connect_DataType_Decimal_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.kyuubi.engine.spark.connect.proto.Types.internal_static_spark_connect_DataType_Decimal_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.kyuubi.engine.spark.connect.proto.DataType.Decimal.class, org.apache.kyuubi.engine.spark.connect.proto.DataType.Decimal.Builder.class);
    }

    private int bitField0_;
    public static final int SCALE_FIELD_NUMBER = 1;
    private int scale_;
    /**
     * <code>optional int32 scale = 1;</code>
     * @return Whether the scale field is set.
     */
    @java.lang.Override
    public boolean hasScale() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional int32 scale = 1;</code>
     * @return The scale.
     */
    @java.lang.Override
    public int getScale() {
      return scale_;
    }

    public static final int PRECISION_FIELD_NUMBER = 2;
    private int precision_;
    /**
     * <code>optional int32 precision = 2;</code>
     * @return Whether the precision field is set.
     */
    @java.lang.Override
    public boolean hasPrecision() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional int32 precision = 2;</code>
     * @return The precision.
     */
    @java.lang.Override
    public int getPrecision() {
      return precision_;
    }

    public static final int TYPE_VARIATION_REFERENCE_FIELD_NUMBER = 3;
    private int typeVariationReference_;
    /**
     * <code>uint32 type_variation_reference = 3;</code>
     * @return The typeVariationReference.
     */
    @java.lang.Override
    public int getTypeVariationReference() {
      return typeVariationReference_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeInt32(1, scale_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeInt32(2, precision_);
      }
      if (typeVariationReference_ != 0) {
        output.writeUInt32(3, typeVariationReference_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, scale_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, precision_);
      }
      if (typeVariationReference_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, typeVariationReference_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.kyuubi.engine.spark.connect.proto.DataType.Decimal)) {
        return super.equals(obj);
      }
      org.apache.kyuubi.engine.spark.connect.proto.DataType.Decimal other = (org.apache.kyuubi.engine.spark.connect.proto.DataType.Decimal) obj;

      if (hasScale() != other.hasScale()) return false;
      if (hasScale()) {
        if (getScale()
            != other.getScale()) return false;
      }
      if (hasPrecision() != other.hasPrecision()) return false;
      if (hasPrecision()) {
        if (getPrecision()
            != other.getPrecision()) return false;
      }
      if (getTypeVariationReference()
          != other.getTypeVariationReference()) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasScale()) {
        hash = (37 * hash) + SCALE_FIELD_NUMBER;
        hash = (53 * hash) + getScale();
      }
      if (hasPrecision()) {
        hash = (37 * hash) + PRECISION_FIELD_NUMBER;
        hash = (53 * hash) + getPrecision();
      }
      hash = (37 * hash) + TYPE_VARIATION_REFERENCE_FIELD_NUMBER;
      hash = (53 * hash) + getTypeVariationReference();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Decimal parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Decimal parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Decimal parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Decimal parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Decimal parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Decimal parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Decimal parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Decimal parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Decimal parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Decimal parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Decimal parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Decimal parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.kyuubi.engine.spark.connect.proto.DataType.Decimal prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code spark.connect.DataType.Decimal}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:spark.connect.DataType.Decimal)
        org.apache.kyuubi.engine.spark.connect.proto.DataType.DecimalOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.kyuubi.engine.spark.connect.proto.Types.internal_static_spark_connect_DataType_Decimal_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.kyuubi.engine.spark.connect.proto.Types.internal_static_spark_connect_DataType_Decimal_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.kyuubi.engine.spark.connect.proto.DataType.Decimal.class, org.apache.kyuubi.engine.spark.connect.proto.DataType.Decimal.Builder.class);
      }

      // Construct using org.apache.kyuubi.engine.spark.connect.proto.DataType.Decimal.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        scale_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        precision_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        typeVariationReference_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.kyuubi.engine.spark.connect.proto.Types.internal_static_spark_connect_DataType_Decimal_descriptor;
      }

      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.proto.DataType.Decimal getDefaultInstanceForType() {
        return org.apache.kyuubi.engine.spark.connect.proto.DataType.Decimal.getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.proto.DataType.Decimal build() {
        org.apache.kyuubi.engine.spark.connect.proto.DataType.Decimal result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.proto.DataType.Decimal buildPartial() {
        org.apache.kyuubi.engine.spark.connect.proto.DataType.Decimal result = new org.apache.kyuubi.engine.spark.connect.proto.DataType.Decimal(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.scale_ = scale_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.precision_ = precision_;
          to_bitField0_ |= 0x00000002;
        }
        result.typeVariationReference_ = typeVariationReference_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.kyuubi.engine.spark.connect.proto.DataType.Decimal) {
          return mergeFrom((org.apache.kyuubi.engine.spark.connect.proto.DataType.Decimal)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.kyuubi.engine.spark.connect.proto.DataType.Decimal other) {
        if (other == org.apache.kyuubi.engine.spark.connect.proto.DataType.Decimal.getDefaultInstance()) return this;
        if (other.hasScale()) {
          setScale(other.getScale());
        }
        if (other.hasPrecision()) {
          setPrecision(other.getPrecision());
        }
        if (other.getTypeVariationReference() != 0) {
          setTypeVariationReference(other.getTypeVariationReference());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                scale_ = input.readInt32();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 16: {
                precision_ = input.readInt32();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              case 24: {
                typeVariationReference_ = input.readUInt32();

                break;
              } // case 24
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int scale_ ;
      /**
       * <code>optional int32 scale = 1;</code>
       * @return Whether the scale field is set.
       */
      @java.lang.Override
      public boolean hasScale() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional int32 scale = 1;</code>
       * @return The scale.
       */
      @java.lang.Override
      public int getScale() {
        return scale_;
      }
      /**
       * <code>optional int32 scale = 1;</code>
       * @param value The scale to set.
       * @return This builder for chaining.
       */
      public Builder setScale(int value) {
        bitField0_ |= 0x00000001;
        scale_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 scale = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearScale() {
        bitField0_ = (bitField0_ & ~0x00000001);
        scale_ = 0;
        onChanged();
        return this;
      }

      private int precision_ ;
      /**
       * <code>optional int32 precision = 2;</code>
       * @return Whether the precision field is set.
       */
      @java.lang.Override
      public boolean hasPrecision() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional int32 precision = 2;</code>
       * @return The precision.
       */
      @java.lang.Override
      public int getPrecision() {
        return precision_;
      }
      /**
       * <code>optional int32 precision = 2;</code>
       * @param value The precision to set.
       * @return This builder for chaining.
       */
      public Builder setPrecision(int value) {
        bitField0_ |= 0x00000002;
        precision_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 precision = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearPrecision() {
        bitField0_ = (bitField0_ & ~0x00000002);
        precision_ = 0;
        onChanged();
        return this;
      }

      private int typeVariationReference_ ;
      /**
       * <code>uint32 type_variation_reference = 3;</code>
       * @return The typeVariationReference.
       */
      @java.lang.Override
      public int getTypeVariationReference() {
        return typeVariationReference_;
      }
      /**
       * <code>uint32 type_variation_reference = 3;</code>
       * @param value The typeVariationReference to set.
       * @return This builder for chaining.
       */
      public Builder setTypeVariationReference(int value) {
        
        typeVariationReference_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 type_variation_reference = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearTypeVariationReference() {
        
        typeVariationReference_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:spark.connect.DataType.Decimal)
    }

    // @@protoc_insertion_point(class_scope:spark.connect.DataType.Decimal)
    private static final org.apache.kyuubi.engine.spark.connect.proto.DataType.Decimal DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.kyuubi.engine.spark.connect.proto.DataType.Decimal();
    }

    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Decimal getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Decimal>
        PARSER = new com.google.protobuf.AbstractParser<Decimal>() {
      @java.lang.Override
      public Decimal parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<Decimal> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Decimal> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.DataType.Decimal getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface StructFieldOrBuilder extends
      // @@protoc_insertion_point(interface_extends:spark.connect.DataType.StructField)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string name = 1;</code>
     * @return The name.
     */
    java.lang.String getName();
    /**
     * <code>string name = 1;</code>
     * @return The bytes for name.
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <code>.spark.connect.DataType data_type = 2;</code>
     * @return Whether the dataType field is set.
     */
    boolean hasDataType();
    /**
     * <code>.spark.connect.DataType data_type = 2;</code>
     * @return The dataType.
     */
    org.apache.kyuubi.engine.spark.connect.proto.DataType getDataType();
    /**
     * <code>.spark.connect.DataType data_type = 2;</code>
     */
    org.apache.kyuubi.engine.spark.connect.proto.DataTypeOrBuilder getDataTypeOrBuilder();

    /**
     * <code>bool nullable = 3;</code>
     * @return The nullable.
     */
    boolean getNullable();

    /**
     * <code>optional string metadata = 4;</code>
     * @return Whether the metadata field is set.
     */
    boolean hasMetadata();
    /**
     * <code>optional string metadata = 4;</code>
     * @return The metadata.
     */
    java.lang.String getMetadata();
    /**
     * <code>optional string metadata = 4;</code>
     * @return The bytes for metadata.
     */
    com.google.protobuf.ByteString
        getMetadataBytes();
  }
  /**
   * Protobuf type {@code spark.connect.DataType.StructField}
   */
  public static final class StructField extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:spark.connect.DataType.StructField)
      StructFieldOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use StructField.newBuilder() to construct.
    private StructField(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private StructField() {
      name_ = "";
      metadata_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new StructField();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.kyuubi.engine.spark.connect.proto.Types.internal_static_spark_connect_DataType_StructField_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.kyuubi.engine.spark.connect.proto.Types.internal_static_spark_connect_DataType_StructField_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.kyuubi.engine.spark.connect.proto.DataType.StructField.class, org.apache.kyuubi.engine.spark.connect.proto.DataType.StructField.Builder.class);
    }

    private int bitField0_;
    public static final int NAME_FIELD_NUMBER = 1;
    private volatile java.lang.Object name_;
    /**
     * <code>string name = 1;</code>
     * @return The name.
     */
    @java.lang.Override
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <code>string name = 1;</code>
     * @return The bytes for name.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DATA_TYPE_FIELD_NUMBER = 2;
    private org.apache.kyuubi.engine.spark.connect.proto.DataType dataType_;
    /**
     * <code>.spark.connect.DataType data_type = 2;</code>
     * @return Whether the dataType field is set.
     */
    @java.lang.Override
    public boolean hasDataType() {
      return dataType_ != null;
    }
    /**
     * <code>.spark.connect.DataType data_type = 2;</code>
     * @return The dataType.
     */
    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.DataType getDataType() {
      return dataType_ == null ? org.apache.kyuubi.engine.spark.connect.proto.DataType.getDefaultInstance() : dataType_;
    }
    /**
     * <code>.spark.connect.DataType data_type = 2;</code>
     */
    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.DataTypeOrBuilder getDataTypeOrBuilder() {
      return getDataType();
    }

    public static final int NULLABLE_FIELD_NUMBER = 3;
    private boolean nullable_;
    /**
     * <code>bool nullable = 3;</code>
     * @return The nullable.
     */
    @java.lang.Override
    public boolean getNullable() {
      return nullable_;
    }

    public static final int METADATA_FIELD_NUMBER = 4;
    private volatile java.lang.Object metadata_;
    /**
     * <code>optional string metadata = 4;</code>
     * @return Whether the metadata field is set.
     */
    @java.lang.Override
    public boolean hasMetadata() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional string metadata = 4;</code>
     * @return The metadata.
     */
    @java.lang.Override
    public java.lang.String getMetadata() {
      java.lang.Object ref = metadata_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        metadata_ = s;
        return s;
      }
    }
    /**
     * <code>optional string metadata = 4;</code>
     * @return The bytes for metadata.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getMetadataBytes() {
      java.lang.Object ref = metadata_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        metadata_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
      }
      if (dataType_ != null) {
        output.writeMessage(2, getDataType());
      }
      if (nullable_ != false) {
        output.writeBool(3, nullable_);
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, metadata_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
      }
      if (dataType_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getDataType());
      }
      if (nullable_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, nullable_);
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, metadata_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.kyuubi.engine.spark.connect.proto.DataType.StructField)) {
        return super.equals(obj);
      }
      org.apache.kyuubi.engine.spark.connect.proto.DataType.StructField other = (org.apache.kyuubi.engine.spark.connect.proto.DataType.StructField) obj;

      if (!getName()
          .equals(other.getName())) return false;
      if (hasDataType() != other.hasDataType()) return false;
      if (hasDataType()) {
        if (!getDataType()
            .equals(other.getDataType())) return false;
      }
      if (getNullable()
          != other.getNullable()) return false;
      if (hasMetadata() != other.hasMetadata()) return false;
      if (hasMetadata()) {
        if (!getMetadata()
            .equals(other.getMetadata())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      if (hasDataType()) {
        hash = (37 * hash) + DATA_TYPE_FIELD_NUMBER;
        hash = (53 * hash) + getDataType().hashCode();
      }
      hash = (37 * hash) + NULLABLE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getNullable());
      if (hasMetadata()) {
        hash = (37 * hash) + METADATA_FIELD_NUMBER;
        hash = (53 * hash) + getMetadata().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.StructField parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.StructField parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.StructField parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.StructField parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.StructField parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.StructField parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.StructField parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.StructField parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.StructField parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.StructField parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.StructField parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.StructField parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.kyuubi.engine.spark.connect.proto.DataType.StructField prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code spark.connect.DataType.StructField}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:spark.connect.DataType.StructField)
        org.apache.kyuubi.engine.spark.connect.proto.DataType.StructFieldOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.kyuubi.engine.spark.connect.proto.Types.internal_static_spark_connect_DataType_StructField_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.kyuubi.engine.spark.connect.proto.Types.internal_static_spark_connect_DataType_StructField_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.kyuubi.engine.spark.connect.proto.DataType.StructField.class, org.apache.kyuubi.engine.spark.connect.proto.DataType.StructField.Builder.class);
      }

      // Construct using org.apache.kyuubi.engine.spark.connect.proto.DataType.StructField.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        name_ = "";

        if (dataTypeBuilder_ == null) {
          dataType_ = null;
        } else {
          dataType_ = null;
          dataTypeBuilder_ = null;
        }
        nullable_ = false;

        metadata_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.kyuubi.engine.spark.connect.proto.Types.internal_static_spark_connect_DataType_StructField_descriptor;
      }

      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.proto.DataType.StructField getDefaultInstanceForType() {
        return org.apache.kyuubi.engine.spark.connect.proto.DataType.StructField.getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.proto.DataType.StructField build() {
        org.apache.kyuubi.engine.spark.connect.proto.DataType.StructField result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.proto.DataType.StructField buildPartial() {
        org.apache.kyuubi.engine.spark.connect.proto.DataType.StructField result = new org.apache.kyuubi.engine.spark.connect.proto.DataType.StructField(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.name_ = name_;
        if (dataTypeBuilder_ == null) {
          result.dataType_ = dataType_;
        } else {
          result.dataType_ = dataTypeBuilder_.build();
        }
        result.nullable_ = nullable_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          to_bitField0_ |= 0x00000001;
        }
        result.metadata_ = metadata_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.kyuubi.engine.spark.connect.proto.DataType.StructField) {
          return mergeFrom((org.apache.kyuubi.engine.spark.connect.proto.DataType.StructField)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.kyuubi.engine.spark.connect.proto.DataType.StructField other) {
        if (other == org.apache.kyuubi.engine.spark.connect.proto.DataType.StructField.getDefaultInstance()) return this;
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        if (other.hasDataType()) {
          mergeDataType(other.getDataType());
        }
        if (other.getNullable() != false) {
          setNullable(other.getNullable());
        }
        if (other.hasMetadata()) {
          bitField0_ |= 0x00000001;
          metadata_ = other.metadata_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                name_ = input.readStringRequireUtf8();

                break;
              } // case 10
              case 18: {
                input.readMessage(
                    getDataTypeFieldBuilder().getBuilder(),
                    extensionRegistry);

                break;
              } // case 18
              case 24: {
                nullable_ = input.readBool();

                break;
              } // case 24
              case 34: {
                metadata_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 34
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object name_ = "";
      /**
       * <code>string name = 1;</code>
       * @return The name.
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string name = 1;</code>
       * @return The bytes for name.
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string name = 1;</code>
       * @param value The name to set.
       * @return This builder for chaining.
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string name = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>string name = 1;</code>
       * @param value The bytes for name to set.
       * @return This builder for chaining.
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }

      private org.apache.kyuubi.engine.spark.connect.proto.DataType dataType_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.kyuubi.engine.spark.connect.proto.DataType, org.apache.kyuubi.engine.spark.connect.proto.DataType.Builder, org.apache.kyuubi.engine.spark.connect.proto.DataTypeOrBuilder> dataTypeBuilder_;
      /**
       * <code>.spark.connect.DataType data_type = 2;</code>
       * @return Whether the dataType field is set.
       */
      public boolean hasDataType() {
        return dataTypeBuilder_ != null || dataType_ != null;
      }
      /**
       * <code>.spark.connect.DataType data_type = 2;</code>
       * @return The dataType.
       */
      public org.apache.kyuubi.engine.spark.connect.proto.DataType getDataType() {
        if (dataTypeBuilder_ == null) {
          return dataType_ == null ? org.apache.kyuubi.engine.spark.connect.proto.DataType.getDefaultInstance() : dataType_;
        } else {
          return dataTypeBuilder_.getMessage();
        }
      }
      /**
       * <code>.spark.connect.DataType data_type = 2;</code>
       */
      public Builder setDataType(org.apache.kyuubi.engine.spark.connect.proto.DataType value) {
        if (dataTypeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          dataType_ = value;
          onChanged();
        } else {
          dataTypeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.spark.connect.DataType data_type = 2;</code>
       */
      public Builder setDataType(
          org.apache.kyuubi.engine.spark.connect.proto.DataType.Builder builderForValue) {
        if (dataTypeBuilder_ == null) {
          dataType_ = builderForValue.build();
          onChanged();
        } else {
          dataTypeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.spark.connect.DataType data_type = 2;</code>
       */
      public Builder mergeDataType(org.apache.kyuubi.engine.spark.connect.proto.DataType value) {
        if (dataTypeBuilder_ == null) {
          if (dataType_ != null) {
            dataType_ =
              org.apache.kyuubi.engine.spark.connect.proto.DataType.newBuilder(dataType_).mergeFrom(value).buildPartial();
          } else {
            dataType_ = value;
          }
          onChanged();
        } else {
          dataTypeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.spark.connect.DataType data_type = 2;</code>
       */
      public Builder clearDataType() {
        if (dataTypeBuilder_ == null) {
          dataType_ = null;
          onChanged();
        } else {
          dataType_ = null;
          dataTypeBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.spark.connect.DataType data_type = 2;</code>
       */
      public org.apache.kyuubi.engine.spark.connect.proto.DataType.Builder getDataTypeBuilder() {
        
        onChanged();
        return getDataTypeFieldBuilder().getBuilder();
      }
      /**
       * <code>.spark.connect.DataType data_type = 2;</code>
       */
      public org.apache.kyuubi.engine.spark.connect.proto.DataTypeOrBuilder getDataTypeOrBuilder() {
        if (dataTypeBuilder_ != null) {
          return dataTypeBuilder_.getMessageOrBuilder();
        } else {
          return dataType_ == null ?
              org.apache.kyuubi.engine.spark.connect.proto.DataType.getDefaultInstance() : dataType_;
        }
      }
      /**
       * <code>.spark.connect.DataType data_type = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.kyuubi.engine.spark.connect.proto.DataType, org.apache.kyuubi.engine.spark.connect.proto.DataType.Builder, org.apache.kyuubi.engine.spark.connect.proto.DataTypeOrBuilder> 
          getDataTypeFieldBuilder() {
        if (dataTypeBuilder_ == null) {
          dataTypeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.apache.kyuubi.engine.spark.connect.proto.DataType, org.apache.kyuubi.engine.spark.connect.proto.DataType.Builder, org.apache.kyuubi.engine.spark.connect.proto.DataTypeOrBuilder>(
                  getDataType(),
                  getParentForChildren(),
                  isClean());
          dataType_ = null;
        }
        return dataTypeBuilder_;
      }

      private boolean nullable_ ;
      /**
       * <code>bool nullable = 3;</code>
       * @return The nullable.
       */
      @java.lang.Override
      public boolean getNullable() {
        return nullable_;
      }
      /**
       * <code>bool nullable = 3;</code>
       * @param value The nullable to set.
       * @return This builder for chaining.
       */
      public Builder setNullable(boolean value) {
        
        nullable_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool nullable = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearNullable() {
        
        nullable_ = false;
        onChanged();
        return this;
      }

      private java.lang.Object metadata_ = "";
      /**
       * <code>optional string metadata = 4;</code>
       * @return Whether the metadata field is set.
       */
      public boolean hasMetadata() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional string metadata = 4;</code>
       * @return The metadata.
       */
      public java.lang.String getMetadata() {
        java.lang.Object ref = metadata_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          metadata_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string metadata = 4;</code>
       * @return The bytes for metadata.
       */
      public com.google.protobuf.ByteString
          getMetadataBytes() {
        java.lang.Object ref = metadata_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          metadata_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string metadata = 4;</code>
       * @param value The metadata to set.
       * @return This builder for chaining.
       */
      public Builder setMetadata(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        metadata_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string metadata = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearMetadata() {
        bitField0_ = (bitField0_ & ~0x00000001);
        metadata_ = getDefaultInstance().getMetadata();
        onChanged();
        return this;
      }
      /**
       * <code>optional string metadata = 4;</code>
       * @param value The bytes for metadata to set.
       * @return This builder for chaining.
       */
      public Builder setMetadataBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        bitField0_ |= 0x00000001;
        metadata_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:spark.connect.DataType.StructField)
    }

    // @@protoc_insertion_point(class_scope:spark.connect.DataType.StructField)
    private static final org.apache.kyuubi.engine.spark.connect.proto.DataType.StructField DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.kyuubi.engine.spark.connect.proto.DataType.StructField();
    }

    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.StructField getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<StructField>
        PARSER = new com.google.protobuf.AbstractParser<StructField>() {
      @java.lang.Override
      public StructField parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<StructField> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<StructField> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.DataType.StructField getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface StructOrBuilder extends
      // @@protoc_insertion_point(interface_extends:spark.connect.DataType.Struct)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .spark.connect.DataType.StructField fields = 1;</code>
     */
    java.util.List<org.apache.kyuubi.engine.spark.connect.proto.DataType.StructField> 
        getFieldsList();
    /**
     * <code>repeated .spark.connect.DataType.StructField fields = 1;</code>
     */
    org.apache.kyuubi.engine.spark.connect.proto.DataType.StructField getFields(int index);
    /**
     * <code>repeated .spark.connect.DataType.StructField fields = 1;</code>
     */
    int getFieldsCount();
    /**
     * <code>repeated .spark.connect.DataType.StructField fields = 1;</code>
     */
    java.util.List<? extends org.apache.kyuubi.engine.spark.connect.proto.DataType.StructFieldOrBuilder> 
        getFieldsOrBuilderList();
    /**
     * <code>repeated .spark.connect.DataType.StructField fields = 1;</code>
     */
    org.apache.kyuubi.engine.spark.connect.proto.DataType.StructFieldOrBuilder getFieldsOrBuilder(
        int index);

    /**
     * <code>uint32 type_variation_reference = 2;</code>
     * @return The typeVariationReference.
     */
    int getTypeVariationReference();
  }
  /**
   * Protobuf type {@code spark.connect.DataType.Struct}
   */
  public static final class Struct extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:spark.connect.DataType.Struct)
      StructOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Struct.newBuilder() to construct.
    private Struct(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Struct() {
      fields_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Struct();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.kyuubi.engine.spark.connect.proto.Types.internal_static_spark_connect_DataType_Struct_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.kyuubi.engine.spark.connect.proto.Types.internal_static_spark_connect_DataType_Struct_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.kyuubi.engine.spark.connect.proto.DataType.Struct.class, org.apache.kyuubi.engine.spark.connect.proto.DataType.Struct.Builder.class);
    }

    public static final int FIELDS_FIELD_NUMBER = 1;
    private java.util.List<org.apache.kyuubi.engine.spark.connect.proto.DataType.StructField> fields_;
    /**
     * <code>repeated .spark.connect.DataType.StructField fields = 1;</code>
     */
    @java.lang.Override
    public java.util.List<org.apache.kyuubi.engine.spark.connect.proto.DataType.StructField> getFieldsList() {
      return fields_;
    }
    /**
     * <code>repeated .spark.connect.DataType.StructField fields = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends org.apache.kyuubi.engine.spark.connect.proto.DataType.StructFieldOrBuilder> 
        getFieldsOrBuilderList() {
      return fields_;
    }
    /**
     * <code>repeated .spark.connect.DataType.StructField fields = 1;</code>
     */
    @java.lang.Override
    public int getFieldsCount() {
      return fields_.size();
    }
    /**
     * <code>repeated .spark.connect.DataType.StructField fields = 1;</code>
     */
    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.DataType.StructField getFields(int index) {
      return fields_.get(index);
    }
    /**
     * <code>repeated .spark.connect.DataType.StructField fields = 1;</code>
     */
    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.DataType.StructFieldOrBuilder getFieldsOrBuilder(
        int index) {
      return fields_.get(index);
    }

    public static final int TYPE_VARIATION_REFERENCE_FIELD_NUMBER = 2;
    private int typeVariationReference_;
    /**
     * <code>uint32 type_variation_reference = 2;</code>
     * @return The typeVariationReference.
     */
    @java.lang.Override
    public int getTypeVariationReference() {
      return typeVariationReference_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < fields_.size(); i++) {
        output.writeMessage(1, fields_.get(i));
      }
      if (typeVariationReference_ != 0) {
        output.writeUInt32(2, typeVariationReference_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < fields_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, fields_.get(i));
      }
      if (typeVariationReference_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, typeVariationReference_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.kyuubi.engine.spark.connect.proto.DataType.Struct)) {
        return super.equals(obj);
      }
      org.apache.kyuubi.engine.spark.connect.proto.DataType.Struct other = (org.apache.kyuubi.engine.spark.connect.proto.DataType.Struct) obj;

      if (!getFieldsList()
          .equals(other.getFieldsList())) return false;
      if (getTypeVariationReference()
          != other.getTypeVariationReference()) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getFieldsCount() > 0) {
        hash = (37 * hash) + FIELDS_FIELD_NUMBER;
        hash = (53 * hash) + getFieldsList().hashCode();
      }
      hash = (37 * hash) + TYPE_VARIATION_REFERENCE_FIELD_NUMBER;
      hash = (53 * hash) + getTypeVariationReference();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Struct parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Struct parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Struct parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Struct parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Struct parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Struct parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Struct parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Struct parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Struct parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Struct parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Struct parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Struct parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.kyuubi.engine.spark.connect.proto.DataType.Struct prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code spark.connect.DataType.Struct}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:spark.connect.DataType.Struct)
        org.apache.kyuubi.engine.spark.connect.proto.DataType.StructOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.kyuubi.engine.spark.connect.proto.Types.internal_static_spark_connect_DataType_Struct_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.kyuubi.engine.spark.connect.proto.Types.internal_static_spark_connect_DataType_Struct_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.kyuubi.engine.spark.connect.proto.DataType.Struct.class, org.apache.kyuubi.engine.spark.connect.proto.DataType.Struct.Builder.class);
      }

      // Construct using org.apache.kyuubi.engine.spark.connect.proto.DataType.Struct.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (fieldsBuilder_ == null) {
          fields_ = java.util.Collections.emptyList();
        } else {
          fields_ = null;
          fieldsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        typeVariationReference_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.kyuubi.engine.spark.connect.proto.Types.internal_static_spark_connect_DataType_Struct_descriptor;
      }

      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.proto.DataType.Struct getDefaultInstanceForType() {
        return org.apache.kyuubi.engine.spark.connect.proto.DataType.Struct.getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.proto.DataType.Struct build() {
        org.apache.kyuubi.engine.spark.connect.proto.DataType.Struct result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.proto.DataType.Struct buildPartial() {
        org.apache.kyuubi.engine.spark.connect.proto.DataType.Struct result = new org.apache.kyuubi.engine.spark.connect.proto.DataType.Struct(this);
        int from_bitField0_ = bitField0_;
        if (fieldsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            fields_ = java.util.Collections.unmodifiableList(fields_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.fields_ = fields_;
        } else {
          result.fields_ = fieldsBuilder_.build();
        }
        result.typeVariationReference_ = typeVariationReference_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.kyuubi.engine.spark.connect.proto.DataType.Struct) {
          return mergeFrom((org.apache.kyuubi.engine.spark.connect.proto.DataType.Struct)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.kyuubi.engine.spark.connect.proto.DataType.Struct other) {
        if (other == org.apache.kyuubi.engine.spark.connect.proto.DataType.Struct.getDefaultInstance()) return this;
        if (fieldsBuilder_ == null) {
          if (!other.fields_.isEmpty()) {
            if (fields_.isEmpty()) {
              fields_ = other.fields_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureFieldsIsMutable();
              fields_.addAll(other.fields_);
            }
            onChanged();
          }
        } else {
          if (!other.fields_.isEmpty()) {
            if (fieldsBuilder_.isEmpty()) {
              fieldsBuilder_.dispose();
              fieldsBuilder_ = null;
              fields_ = other.fields_;
              bitField0_ = (bitField0_ & ~0x00000001);
              fieldsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getFieldsFieldBuilder() : null;
            } else {
              fieldsBuilder_.addAllMessages(other.fields_);
            }
          }
        }
        if (other.getTypeVariationReference() != 0) {
          setTypeVariationReference(other.getTypeVariationReference());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                org.apache.kyuubi.engine.spark.connect.proto.DataType.StructField m =
                    input.readMessage(
                        org.apache.kyuubi.engine.spark.connect.proto.DataType.StructField.parser(),
                        extensionRegistry);
                if (fieldsBuilder_ == null) {
                  ensureFieldsIsMutable();
                  fields_.add(m);
                } else {
                  fieldsBuilder_.addMessage(m);
                }
                break;
              } // case 10
              case 16: {
                typeVariationReference_ = input.readUInt32();

                break;
              } // case 16
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.util.List<org.apache.kyuubi.engine.spark.connect.proto.DataType.StructField> fields_ =
        java.util.Collections.emptyList();
      private void ensureFieldsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          fields_ = new java.util.ArrayList<org.apache.kyuubi.engine.spark.connect.proto.DataType.StructField>(fields_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.apache.kyuubi.engine.spark.connect.proto.DataType.StructField, org.apache.kyuubi.engine.spark.connect.proto.DataType.StructField.Builder, org.apache.kyuubi.engine.spark.connect.proto.DataType.StructFieldOrBuilder> fieldsBuilder_;

      /**
       * <code>repeated .spark.connect.DataType.StructField fields = 1;</code>
       */
      public java.util.List<org.apache.kyuubi.engine.spark.connect.proto.DataType.StructField> getFieldsList() {
        if (fieldsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(fields_);
        } else {
          return fieldsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .spark.connect.DataType.StructField fields = 1;</code>
       */
      public int getFieldsCount() {
        if (fieldsBuilder_ == null) {
          return fields_.size();
        } else {
          return fieldsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .spark.connect.DataType.StructField fields = 1;</code>
       */
      public org.apache.kyuubi.engine.spark.connect.proto.DataType.StructField getFields(int index) {
        if (fieldsBuilder_ == null) {
          return fields_.get(index);
        } else {
          return fieldsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .spark.connect.DataType.StructField fields = 1;</code>
       */
      public Builder setFields(
          int index, org.apache.kyuubi.engine.spark.connect.proto.DataType.StructField value) {
        if (fieldsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFieldsIsMutable();
          fields_.set(index, value);
          onChanged();
        } else {
          fieldsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .spark.connect.DataType.StructField fields = 1;</code>
       */
      public Builder setFields(
          int index, org.apache.kyuubi.engine.spark.connect.proto.DataType.StructField.Builder builderForValue) {
        if (fieldsBuilder_ == null) {
          ensureFieldsIsMutable();
          fields_.set(index, builderForValue.build());
          onChanged();
        } else {
          fieldsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .spark.connect.DataType.StructField fields = 1;</code>
       */
      public Builder addFields(org.apache.kyuubi.engine.spark.connect.proto.DataType.StructField value) {
        if (fieldsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFieldsIsMutable();
          fields_.add(value);
          onChanged();
        } else {
          fieldsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .spark.connect.DataType.StructField fields = 1;</code>
       */
      public Builder addFields(
          int index, org.apache.kyuubi.engine.spark.connect.proto.DataType.StructField value) {
        if (fieldsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFieldsIsMutable();
          fields_.add(index, value);
          onChanged();
        } else {
          fieldsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .spark.connect.DataType.StructField fields = 1;</code>
       */
      public Builder addFields(
          org.apache.kyuubi.engine.spark.connect.proto.DataType.StructField.Builder builderForValue) {
        if (fieldsBuilder_ == null) {
          ensureFieldsIsMutable();
          fields_.add(builderForValue.build());
          onChanged();
        } else {
          fieldsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .spark.connect.DataType.StructField fields = 1;</code>
       */
      public Builder addFields(
          int index, org.apache.kyuubi.engine.spark.connect.proto.DataType.StructField.Builder builderForValue) {
        if (fieldsBuilder_ == null) {
          ensureFieldsIsMutable();
          fields_.add(index, builderForValue.build());
          onChanged();
        } else {
          fieldsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .spark.connect.DataType.StructField fields = 1;</code>
       */
      public Builder addAllFields(
          java.lang.Iterable<? extends org.apache.kyuubi.engine.spark.connect.proto.DataType.StructField> values) {
        if (fieldsBuilder_ == null) {
          ensureFieldsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, fields_);
          onChanged();
        } else {
          fieldsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .spark.connect.DataType.StructField fields = 1;</code>
       */
      public Builder clearFields() {
        if (fieldsBuilder_ == null) {
          fields_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          fieldsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .spark.connect.DataType.StructField fields = 1;</code>
       */
      public Builder removeFields(int index) {
        if (fieldsBuilder_ == null) {
          ensureFieldsIsMutable();
          fields_.remove(index);
          onChanged();
        } else {
          fieldsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .spark.connect.DataType.StructField fields = 1;</code>
       */
      public org.apache.kyuubi.engine.spark.connect.proto.DataType.StructField.Builder getFieldsBuilder(
          int index) {
        return getFieldsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .spark.connect.DataType.StructField fields = 1;</code>
       */
      public org.apache.kyuubi.engine.spark.connect.proto.DataType.StructFieldOrBuilder getFieldsOrBuilder(
          int index) {
        if (fieldsBuilder_ == null) {
          return fields_.get(index);  } else {
          return fieldsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .spark.connect.DataType.StructField fields = 1;</code>
       */
      public java.util.List<? extends org.apache.kyuubi.engine.spark.connect.proto.DataType.StructFieldOrBuilder> 
           getFieldsOrBuilderList() {
        if (fieldsBuilder_ != null) {
          return fieldsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(fields_);
        }
      }
      /**
       * <code>repeated .spark.connect.DataType.StructField fields = 1;</code>
       */
      public org.apache.kyuubi.engine.spark.connect.proto.DataType.StructField.Builder addFieldsBuilder() {
        return getFieldsFieldBuilder().addBuilder(
            org.apache.kyuubi.engine.spark.connect.proto.DataType.StructField.getDefaultInstance());
      }
      /**
       * <code>repeated .spark.connect.DataType.StructField fields = 1;</code>
       */
      public org.apache.kyuubi.engine.spark.connect.proto.DataType.StructField.Builder addFieldsBuilder(
          int index) {
        return getFieldsFieldBuilder().addBuilder(
            index, org.apache.kyuubi.engine.spark.connect.proto.DataType.StructField.getDefaultInstance());
      }
      /**
       * <code>repeated .spark.connect.DataType.StructField fields = 1;</code>
       */
      public java.util.List<org.apache.kyuubi.engine.spark.connect.proto.DataType.StructField.Builder> 
           getFieldsBuilderList() {
        return getFieldsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.apache.kyuubi.engine.spark.connect.proto.DataType.StructField, org.apache.kyuubi.engine.spark.connect.proto.DataType.StructField.Builder, org.apache.kyuubi.engine.spark.connect.proto.DataType.StructFieldOrBuilder> 
          getFieldsFieldBuilder() {
        if (fieldsBuilder_ == null) {
          fieldsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              org.apache.kyuubi.engine.spark.connect.proto.DataType.StructField, org.apache.kyuubi.engine.spark.connect.proto.DataType.StructField.Builder, org.apache.kyuubi.engine.spark.connect.proto.DataType.StructFieldOrBuilder>(
                  fields_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          fields_ = null;
        }
        return fieldsBuilder_;
      }

      private int typeVariationReference_ ;
      /**
       * <code>uint32 type_variation_reference = 2;</code>
       * @return The typeVariationReference.
       */
      @java.lang.Override
      public int getTypeVariationReference() {
        return typeVariationReference_;
      }
      /**
       * <code>uint32 type_variation_reference = 2;</code>
       * @param value The typeVariationReference to set.
       * @return This builder for chaining.
       */
      public Builder setTypeVariationReference(int value) {
        
        typeVariationReference_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 type_variation_reference = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearTypeVariationReference() {
        
        typeVariationReference_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:spark.connect.DataType.Struct)
    }

    // @@protoc_insertion_point(class_scope:spark.connect.DataType.Struct)
    private static final org.apache.kyuubi.engine.spark.connect.proto.DataType.Struct DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.kyuubi.engine.spark.connect.proto.DataType.Struct();
    }

    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Struct getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Struct>
        PARSER = new com.google.protobuf.AbstractParser<Struct>() {
      @java.lang.Override
      public Struct parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<Struct> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Struct> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.DataType.Struct getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ArrayOrBuilder extends
      // @@protoc_insertion_point(interface_extends:spark.connect.DataType.Array)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.spark.connect.DataType element_type = 1;</code>
     * @return Whether the elementType field is set.
     */
    boolean hasElementType();
    /**
     * <code>.spark.connect.DataType element_type = 1;</code>
     * @return The elementType.
     */
    org.apache.kyuubi.engine.spark.connect.proto.DataType getElementType();
    /**
     * <code>.spark.connect.DataType element_type = 1;</code>
     */
    org.apache.kyuubi.engine.spark.connect.proto.DataTypeOrBuilder getElementTypeOrBuilder();

    /**
     * <code>bool contains_null = 2;</code>
     * @return The containsNull.
     */
    boolean getContainsNull();

    /**
     * <code>uint32 type_variation_reference = 3;</code>
     * @return The typeVariationReference.
     */
    int getTypeVariationReference();
  }
  /**
   * Protobuf type {@code spark.connect.DataType.Array}
   */
  public static final class Array extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:spark.connect.DataType.Array)
      ArrayOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Array.newBuilder() to construct.
    private Array(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Array() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Array();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.kyuubi.engine.spark.connect.proto.Types.internal_static_spark_connect_DataType_Array_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.kyuubi.engine.spark.connect.proto.Types.internal_static_spark_connect_DataType_Array_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.kyuubi.engine.spark.connect.proto.DataType.Array.class, org.apache.kyuubi.engine.spark.connect.proto.DataType.Array.Builder.class);
    }

    public static final int ELEMENT_TYPE_FIELD_NUMBER = 1;
    private org.apache.kyuubi.engine.spark.connect.proto.DataType elementType_;
    /**
     * <code>.spark.connect.DataType element_type = 1;</code>
     * @return Whether the elementType field is set.
     */
    @java.lang.Override
    public boolean hasElementType() {
      return elementType_ != null;
    }
    /**
     * <code>.spark.connect.DataType element_type = 1;</code>
     * @return The elementType.
     */
    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.DataType getElementType() {
      return elementType_ == null ? org.apache.kyuubi.engine.spark.connect.proto.DataType.getDefaultInstance() : elementType_;
    }
    /**
     * <code>.spark.connect.DataType element_type = 1;</code>
     */
    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.DataTypeOrBuilder getElementTypeOrBuilder() {
      return getElementType();
    }

    public static final int CONTAINS_NULL_FIELD_NUMBER = 2;
    private boolean containsNull_;
    /**
     * <code>bool contains_null = 2;</code>
     * @return The containsNull.
     */
    @java.lang.Override
    public boolean getContainsNull() {
      return containsNull_;
    }

    public static final int TYPE_VARIATION_REFERENCE_FIELD_NUMBER = 3;
    private int typeVariationReference_;
    /**
     * <code>uint32 type_variation_reference = 3;</code>
     * @return The typeVariationReference.
     */
    @java.lang.Override
    public int getTypeVariationReference() {
      return typeVariationReference_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (elementType_ != null) {
        output.writeMessage(1, getElementType());
      }
      if (containsNull_ != false) {
        output.writeBool(2, containsNull_);
      }
      if (typeVariationReference_ != 0) {
        output.writeUInt32(3, typeVariationReference_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (elementType_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getElementType());
      }
      if (containsNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, containsNull_);
      }
      if (typeVariationReference_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, typeVariationReference_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.kyuubi.engine.spark.connect.proto.DataType.Array)) {
        return super.equals(obj);
      }
      org.apache.kyuubi.engine.spark.connect.proto.DataType.Array other = (org.apache.kyuubi.engine.spark.connect.proto.DataType.Array) obj;

      if (hasElementType() != other.hasElementType()) return false;
      if (hasElementType()) {
        if (!getElementType()
            .equals(other.getElementType())) return false;
      }
      if (getContainsNull()
          != other.getContainsNull()) return false;
      if (getTypeVariationReference()
          != other.getTypeVariationReference()) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasElementType()) {
        hash = (37 * hash) + ELEMENT_TYPE_FIELD_NUMBER;
        hash = (53 * hash) + getElementType().hashCode();
      }
      hash = (37 * hash) + CONTAINS_NULL_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getContainsNull());
      hash = (37 * hash) + TYPE_VARIATION_REFERENCE_FIELD_NUMBER;
      hash = (53 * hash) + getTypeVariationReference();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Array parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Array parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Array parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Array parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Array parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Array parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Array parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Array parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Array parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Array parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Array parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Array parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.kyuubi.engine.spark.connect.proto.DataType.Array prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code spark.connect.DataType.Array}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:spark.connect.DataType.Array)
        org.apache.kyuubi.engine.spark.connect.proto.DataType.ArrayOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.kyuubi.engine.spark.connect.proto.Types.internal_static_spark_connect_DataType_Array_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.kyuubi.engine.spark.connect.proto.Types.internal_static_spark_connect_DataType_Array_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.kyuubi.engine.spark.connect.proto.DataType.Array.class, org.apache.kyuubi.engine.spark.connect.proto.DataType.Array.Builder.class);
      }

      // Construct using org.apache.kyuubi.engine.spark.connect.proto.DataType.Array.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (elementTypeBuilder_ == null) {
          elementType_ = null;
        } else {
          elementType_ = null;
          elementTypeBuilder_ = null;
        }
        containsNull_ = false;

        typeVariationReference_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.kyuubi.engine.spark.connect.proto.Types.internal_static_spark_connect_DataType_Array_descriptor;
      }

      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.proto.DataType.Array getDefaultInstanceForType() {
        return org.apache.kyuubi.engine.spark.connect.proto.DataType.Array.getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.proto.DataType.Array build() {
        org.apache.kyuubi.engine.spark.connect.proto.DataType.Array result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.proto.DataType.Array buildPartial() {
        org.apache.kyuubi.engine.spark.connect.proto.DataType.Array result = new org.apache.kyuubi.engine.spark.connect.proto.DataType.Array(this);
        if (elementTypeBuilder_ == null) {
          result.elementType_ = elementType_;
        } else {
          result.elementType_ = elementTypeBuilder_.build();
        }
        result.containsNull_ = containsNull_;
        result.typeVariationReference_ = typeVariationReference_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.kyuubi.engine.spark.connect.proto.DataType.Array) {
          return mergeFrom((org.apache.kyuubi.engine.spark.connect.proto.DataType.Array)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.kyuubi.engine.spark.connect.proto.DataType.Array other) {
        if (other == org.apache.kyuubi.engine.spark.connect.proto.DataType.Array.getDefaultInstance()) return this;
        if (other.hasElementType()) {
          mergeElementType(other.getElementType());
        }
        if (other.getContainsNull() != false) {
          setContainsNull(other.getContainsNull());
        }
        if (other.getTypeVariationReference() != 0) {
          setTypeVariationReference(other.getTypeVariationReference());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                input.readMessage(
                    getElementTypeFieldBuilder().getBuilder(),
                    extensionRegistry);

                break;
              } // case 10
              case 16: {
                containsNull_ = input.readBool();

                break;
              } // case 16
              case 24: {
                typeVariationReference_ = input.readUInt32();

                break;
              } // case 24
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }

      private org.apache.kyuubi.engine.spark.connect.proto.DataType elementType_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.kyuubi.engine.spark.connect.proto.DataType, org.apache.kyuubi.engine.spark.connect.proto.DataType.Builder, org.apache.kyuubi.engine.spark.connect.proto.DataTypeOrBuilder> elementTypeBuilder_;
      /**
       * <code>.spark.connect.DataType element_type = 1;</code>
       * @return Whether the elementType field is set.
       */
      public boolean hasElementType() {
        return elementTypeBuilder_ != null || elementType_ != null;
      }
      /**
       * <code>.spark.connect.DataType element_type = 1;</code>
       * @return The elementType.
       */
      public org.apache.kyuubi.engine.spark.connect.proto.DataType getElementType() {
        if (elementTypeBuilder_ == null) {
          return elementType_ == null ? org.apache.kyuubi.engine.spark.connect.proto.DataType.getDefaultInstance() : elementType_;
        } else {
          return elementTypeBuilder_.getMessage();
        }
      }
      /**
       * <code>.spark.connect.DataType element_type = 1;</code>
       */
      public Builder setElementType(org.apache.kyuubi.engine.spark.connect.proto.DataType value) {
        if (elementTypeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          elementType_ = value;
          onChanged();
        } else {
          elementTypeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.spark.connect.DataType element_type = 1;</code>
       */
      public Builder setElementType(
          org.apache.kyuubi.engine.spark.connect.proto.DataType.Builder builderForValue) {
        if (elementTypeBuilder_ == null) {
          elementType_ = builderForValue.build();
          onChanged();
        } else {
          elementTypeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.spark.connect.DataType element_type = 1;</code>
       */
      public Builder mergeElementType(org.apache.kyuubi.engine.spark.connect.proto.DataType value) {
        if (elementTypeBuilder_ == null) {
          if (elementType_ != null) {
            elementType_ =
              org.apache.kyuubi.engine.spark.connect.proto.DataType.newBuilder(elementType_).mergeFrom(value).buildPartial();
          } else {
            elementType_ = value;
          }
          onChanged();
        } else {
          elementTypeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.spark.connect.DataType element_type = 1;</code>
       */
      public Builder clearElementType() {
        if (elementTypeBuilder_ == null) {
          elementType_ = null;
          onChanged();
        } else {
          elementType_ = null;
          elementTypeBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.spark.connect.DataType element_type = 1;</code>
       */
      public org.apache.kyuubi.engine.spark.connect.proto.DataType.Builder getElementTypeBuilder() {
        
        onChanged();
        return getElementTypeFieldBuilder().getBuilder();
      }
      /**
       * <code>.spark.connect.DataType element_type = 1;</code>
       */
      public org.apache.kyuubi.engine.spark.connect.proto.DataTypeOrBuilder getElementTypeOrBuilder() {
        if (elementTypeBuilder_ != null) {
          return elementTypeBuilder_.getMessageOrBuilder();
        } else {
          return elementType_ == null ?
              org.apache.kyuubi.engine.spark.connect.proto.DataType.getDefaultInstance() : elementType_;
        }
      }
      /**
       * <code>.spark.connect.DataType element_type = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.kyuubi.engine.spark.connect.proto.DataType, org.apache.kyuubi.engine.spark.connect.proto.DataType.Builder, org.apache.kyuubi.engine.spark.connect.proto.DataTypeOrBuilder> 
          getElementTypeFieldBuilder() {
        if (elementTypeBuilder_ == null) {
          elementTypeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.apache.kyuubi.engine.spark.connect.proto.DataType, org.apache.kyuubi.engine.spark.connect.proto.DataType.Builder, org.apache.kyuubi.engine.spark.connect.proto.DataTypeOrBuilder>(
                  getElementType(),
                  getParentForChildren(),
                  isClean());
          elementType_ = null;
        }
        return elementTypeBuilder_;
      }

      private boolean containsNull_ ;
      /**
       * <code>bool contains_null = 2;</code>
       * @return The containsNull.
       */
      @java.lang.Override
      public boolean getContainsNull() {
        return containsNull_;
      }
      /**
       * <code>bool contains_null = 2;</code>
       * @param value The containsNull to set.
       * @return This builder for chaining.
       */
      public Builder setContainsNull(boolean value) {
        
        containsNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool contains_null = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearContainsNull() {
        
        containsNull_ = false;
        onChanged();
        return this;
      }

      private int typeVariationReference_ ;
      /**
       * <code>uint32 type_variation_reference = 3;</code>
       * @return The typeVariationReference.
       */
      @java.lang.Override
      public int getTypeVariationReference() {
        return typeVariationReference_;
      }
      /**
       * <code>uint32 type_variation_reference = 3;</code>
       * @param value The typeVariationReference to set.
       * @return This builder for chaining.
       */
      public Builder setTypeVariationReference(int value) {
        
        typeVariationReference_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 type_variation_reference = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearTypeVariationReference() {
        
        typeVariationReference_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:spark.connect.DataType.Array)
    }

    // @@protoc_insertion_point(class_scope:spark.connect.DataType.Array)
    private static final org.apache.kyuubi.engine.spark.connect.proto.DataType.Array DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.kyuubi.engine.spark.connect.proto.DataType.Array();
    }

    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Array getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Array>
        PARSER = new com.google.protobuf.AbstractParser<Array>() {
      @java.lang.Override
      public Array parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<Array> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Array> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.DataType.Array getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface MapOrBuilder extends
      // @@protoc_insertion_point(interface_extends:spark.connect.DataType.Map)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.spark.connect.DataType key_type = 1;</code>
     * @return Whether the keyType field is set.
     */
    boolean hasKeyType();
    /**
     * <code>.spark.connect.DataType key_type = 1;</code>
     * @return The keyType.
     */
    org.apache.kyuubi.engine.spark.connect.proto.DataType getKeyType();
    /**
     * <code>.spark.connect.DataType key_type = 1;</code>
     */
    org.apache.kyuubi.engine.spark.connect.proto.DataTypeOrBuilder getKeyTypeOrBuilder();

    /**
     * <code>.spark.connect.DataType value_type = 2;</code>
     * @return Whether the valueType field is set.
     */
    boolean hasValueType();
    /**
     * <code>.spark.connect.DataType value_type = 2;</code>
     * @return The valueType.
     */
    org.apache.kyuubi.engine.spark.connect.proto.DataType getValueType();
    /**
     * <code>.spark.connect.DataType value_type = 2;</code>
     */
    org.apache.kyuubi.engine.spark.connect.proto.DataTypeOrBuilder getValueTypeOrBuilder();

    /**
     * <code>bool value_contains_null = 3;</code>
     * @return The valueContainsNull.
     */
    boolean getValueContainsNull();

    /**
     * <code>uint32 type_variation_reference = 4;</code>
     * @return The typeVariationReference.
     */
    int getTypeVariationReference();
  }
  /**
   * Protobuf type {@code spark.connect.DataType.Map}
   */
  public static final class Map extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:spark.connect.DataType.Map)
      MapOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Map.newBuilder() to construct.
    private Map(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Map() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Map();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.kyuubi.engine.spark.connect.proto.Types.internal_static_spark_connect_DataType_Map_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.kyuubi.engine.spark.connect.proto.Types.internal_static_spark_connect_DataType_Map_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.kyuubi.engine.spark.connect.proto.DataType.Map.class, org.apache.kyuubi.engine.spark.connect.proto.DataType.Map.Builder.class);
    }

    public static final int KEY_TYPE_FIELD_NUMBER = 1;
    private org.apache.kyuubi.engine.spark.connect.proto.DataType keyType_;
    /**
     * <code>.spark.connect.DataType key_type = 1;</code>
     * @return Whether the keyType field is set.
     */
    @java.lang.Override
    public boolean hasKeyType() {
      return keyType_ != null;
    }
    /**
     * <code>.spark.connect.DataType key_type = 1;</code>
     * @return The keyType.
     */
    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.DataType getKeyType() {
      return keyType_ == null ? org.apache.kyuubi.engine.spark.connect.proto.DataType.getDefaultInstance() : keyType_;
    }
    /**
     * <code>.spark.connect.DataType key_type = 1;</code>
     */
    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.DataTypeOrBuilder getKeyTypeOrBuilder() {
      return getKeyType();
    }

    public static final int VALUE_TYPE_FIELD_NUMBER = 2;
    private org.apache.kyuubi.engine.spark.connect.proto.DataType valueType_;
    /**
     * <code>.spark.connect.DataType value_type = 2;</code>
     * @return Whether the valueType field is set.
     */
    @java.lang.Override
    public boolean hasValueType() {
      return valueType_ != null;
    }
    /**
     * <code>.spark.connect.DataType value_type = 2;</code>
     * @return The valueType.
     */
    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.DataType getValueType() {
      return valueType_ == null ? org.apache.kyuubi.engine.spark.connect.proto.DataType.getDefaultInstance() : valueType_;
    }
    /**
     * <code>.spark.connect.DataType value_type = 2;</code>
     */
    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.DataTypeOrBuilder getValueTypeOrBuilder() {
      return getValueType();
    }

    public static final int VALUE_CONTAINS_NULL_FIELD_NUMBER = 3;
    private boolean valueContainsNull_;
    /**
     * <code>bool value_contains_null = 3;</code>
     * @return The valueContainsNull.
     */
    @java.lang.Override
    public boolean getValueContainsNull() {
      return valueContainsNull_;
    }

    public static final int TYPE_VARIATION_REFERENCE_FIELD_NUMBER = 4;
    private int typeVariationReference_;
    /**
     * <code>uint32 type_variation_reference = 4;</code>
     * @return The typeVariationReference.
     */
    @java.lang.Override
    public int getTypeVariationReference() {
      return typeVariationReference_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (keyType_ != null) {
        output.writeMessage(1, getKeyType());
      }
      if (valueType_ != null) {
        output.writeMessage(2, getValueType());
      }
      if (valueContainsNull_ != false) {
        output.writeBool(3, valueContainsNull_);
      }
      if (typeVariationReference_ != 0) {
        output.writeUInt32(4, typeVariationReference_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (keyType_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getKeyType());
      }
      if (valueType_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getValueType());
      }
      if (valueContainsNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, valueContainsNull_);
      }
      if (typeVariationReference_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, typeVariationReference_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.kyuubi.engine.spark.connect.proto.DataType.Map)) {
        return super.equals(obj);
      }
      org.apache.kyuubi.engine.spark.connect.proto.DataType.Map other = (org.apache.kyuubi.engine.spark.connect.proto.DataType.Map) obj;

      if (hasKeyType() != other.hasKeyType()) return false;
      if (hasKeyType()) {
        if (!getKeyType()
            .equals(other.getKeyType())) return false;
      }
      if (hasValueType() != other.hasValueType()) return false;
      if (hasValueType()) {
        if (!getValueType()
            .equals(other.getValueType())) return false;
      }
      if (getValueContainsNull()
          != other.getValueContainsNull()) return false;
      if (getTypeVariationReference()
          != other.getTypeVariationReference()) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasKeyType()) {
        hash = (37 * hash) + KEY_TYPE_FIELD_NUMBER;
        hash = (53 * hash) + getKeyType().hashCode();
      }
      if (hasValueType()) {
        hash = (37 * hash) + VALUE_TYPE_FIELD_NUMBER;
        hash = (53 * hash) + getValueType().hashCode();
      }
      hash = (37 * hash) + VALUE_CONTAINS_NULL_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getValueContainsNull());
      hash = (37 * hash) + TYPE_VARIATION_REFERENCE_FIELD_NUMBER;
      hash = (53 * hash) + getTypeVariationReference();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Map parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Map parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Map parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Map parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Map parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Map parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Map parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Map parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Map parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Map parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Map parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Map parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.kyuubi.engine.spark.connect.proto.DataType.Map prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code spark.connect.DataType.Map}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:spark.connect.DataType.Map)
        org.apache.kyuubi.engine.spark.connect.proto.DataType.MapOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.kyuubi.engine.spark.connect.proto.Types.internal_static_spark_connect_DataType_Map_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.kyuubi.engine.spark.connect.proto.Types.internal_static_spark_connect_DataType_Map_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.kyuubi.engine.spark.connect.proto.DataType.Map.class, org.apache.kyuubi.engine.spark.connect.proto.DataType.Map.Builder.class);
      }

      // Construct using org.apache.kyuubi.engine.spark.connect.proto.DataType.Map.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (keyTypeBuilder_ == null) {
          keyType_ = null;
        } else {
          keyType_ = null;
          keyTypeBuilder_ = null;
        }
        if (valueTypeBuilder_ == null) {
          valueType_ = null;
        } else {
          valueType_ = null;
          valueTypeBuilder_ = null;
        }
        valueContainsNull_ = false;

        typeVariationReference_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.kyuubi.engine.spark.connect.proto.Types.internal_static_spark_connect_DataType_Map_descriptor;
      }

      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.proto.DataType.Map getDefaultInstanceForType() {
        return org.apache.kyuubi.engine.spark.connect.proto.DataType.Map.getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.proto.DataType.Map build() {
        org.apache.kyuubi.engine.spark.connect.proto.DataType.Map result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.proto.DataType.Map buildPartial() {
        org.apache.kyuubi.engine.spark.connect.proto.DataType.Map result = new org.apache.kyuubi.engine.spark.connect.proto.DataType.Map(this);
        if (keyTypeBuilder_ == null) {
          result.keyType_ = keyType_;
        } else {
          result.keyType_ = keyTypeBuilder_.build();
        }
        if (valueTypeBuilder_ == null) {
          result.valueType_ = valueType_;
        } else {
          result.valueType_ = valueTypeBuilder_.build();
        }
        result.valueContainsNull_ = valueContainsNull_;
        result.typeVariationReference_ = typeVariationReference_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.kyuubi.engine.spark.connect.proto.DataType.Map) {
          return mergeFrom((org.apache.kyuubi.engine.spark.connect.proto.DataType.Map)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.kyuubi.engine.spark.connect.proto.DataType.Map other) {
        if (other == org.apache.kyuubi.engine.spark.connect.proto.DataType.Map.getDefaultInstance()) return this;
        if (other.hasKeyType()) {
          mergeKeyType(other.getKeyType());
        }
        if (other.hasValueType()) {
          mergeValueType(other.getValueType());
        }
        if (other.getValueContainsNull() != false) {
          setValueContainsNull(other.getValueContainsNull());
        }
        if (other.getTypeVariationReference() != 0) {
          setTypeVariationReference(other.getTypeVariationReference());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                input.readMessage(
                    getKeyTypeFieldBuilder().getBuilder(),
                    extensionRegistry);

                break;
              } // case 10
              case 18: {
                input.readMessage(
                    getValueTypeFieldBuilder().getBuilder(),
                    extensionRegistry);

                break;
              } // case 18
              case 24: {
                valueContainsNull_ = input.readBool();

                break;
              } // case 24
              case 32: {
                typeVariationReference_ = input.readUInt32();

                break;
              } // case 32
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }

      private org.apache.kyuubi.engine.spark.connect.proto.DataType keyType_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.kyuubi.engine.spark.connect.proto.DataType, org.apache.kyuubi.engine.spark.connect.proto.DataType.Builder, org.apache.kyuubi.engine.spark.connect.proto.DataTypeOrBuilder> keyTypeBuilder_;
      /**
       * <code>.spark.connect.DataType key_type = 1;</code>
       * @return Whether the keyType field is set.
       */
      public boolean hasKeyType() {
        return keyTypeBuilder_ != null || keyType_ != null;
      }
      /**
       * <code>.spark.connect.DataType key_type = 1;</code>
       * @return The keyType.
       */
      public org.apache.kyuubi.engine.spark.connect.proto.DataType getKeyType() {
        if (keyTypeBuilder_ == null) {
          return keyType_ == null ? org.apache.kyuubi.engine.spark.connect.proto.DataType.getDefaultInstance() : keyType_;
        } else {
          return keyTypeBuilder_.getMessage();
        }
      }
      /**
       * <code>.spark.connect.DataType key_type = 1;</code>
       */
      public Builder setKeyType(org.apache.kyuubi.engine.spark.connect.proto.DataType value) {
        if (keyTypeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          keyType_ = value;
          onChanged();
        } else {
          keyTypeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.spark.connect.DataType key_type = 1;</code>
       */
      public Builder setKeyType(
          org.apache.kyuubi.engine.spark.connect.proto.DataType.Builder builderForValue) {
        if (keyTypeBuilder_ == null) {
          keyType_ = builderForValue.build();
          onChanged();
        } else {
          keyTypeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.spark.connect.DataType key_type = 1;</code>
       */
      public Builder mergeKeyType(org.apache.kyuubi.engine.spark.connect.proto.DataType value) {
        if (keyTypeBuilder_ == null) {
          if (keyType_ != null) {
            keyType_ =
              org.apache.kyuubi.engine.spark.connect.proto.DataType.newBuilder(keyType_).mergeFrom(value).buildPartial();
          } else {
            keyType_ = value;
          }
          onChanged();
        } else {
          keyTypeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.spark.connect.DataType key_type = 1;</code>
       */
      public Builder clearKeyType() {
        if (keyTypeBuilder_ == null) {
          keyType_ = null;
          onChanged();
        } else {
          keyType_ = null;
          keyTypeBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.spark.connect.DataType key_type = 1;</code>
       */
      public org.apache.kyuubi.engine.spark.connect.proto.DataType.Builder getKeyTypeBuilder() {
        
        onChanged();
        return getKeyTypeFieldBuilder().getBuilder();
      }
      /**
       * <code>.spark.connect.DataType key_type = 1;</code>
       */
      public org.apache.kyuubi.engine.spark.connect.proto.DataTypeOrBuilder getKeyTypeOrBuilder() {
        if (keyTypeBuilder_ != null) {
          return keyTypeBuilder_.getMessageOrBuilder();
        } else {
          return keyType_ == null ?
              org.apache.kyuubi.engine.spark.connect.proto.DataType.getDefaultInstance() : keyType_;
        }
      }
      /**
       * <code>.spark.connect.DataType key_type = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.kyuubi.engine.spark.connect.proto.DataType, org.apache.kyuubi.engine.spark.connect.proto.DataType.Builder, org.apache.kyuubi.engine.spark.connect.proto.DataTypeOrBuilder> 
          getKeyTypeFieldBuilder() {
        if (keyTypeBuilder_ == null) {
          keyTypeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.apache.kyuubi.engine.spark.connect.proto.DataType, org.apache.kyuubi.engine.spark.connect.proto.DataType.Builder, org.apache.kyuubi.engine.spark.connect.proto.DataTypeOrBuilder>(
                  getKeyType(),
                  getParentForChildren(),
                  isClean());
          keyType_ = null;
        }
        return keyTypeBuilder_;
      }

      private org.apache.kyuubi.engine.spark.connect.proto.DataType valueType_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.kyuubi.engine.spark.connect.proto.DataType, org.apache.kyuubi.engine.spark.connect.proto.DataType.Builder, org.apache.kyuubi.engine.spark.connect.proto.DataTypeOrBuilder> valueTypeBuilder_;
      /**
       * <code>.spark.connect.DataType value_type = 2;</code>
       * @return Whether the valueType field is set.
       */
      public boolean hasValueType() {
        return valueTypeBuilder_ != null || valueType_ != null;
      }
      /**
       * <code>.spark.connect.DataType value_type = 2;</code>
       * @return The valueType.
       */
      public org.apache.kyuubi.engine.spark.connect.proto.DataType getValueType() {
        if (valueTypeBuilder_ == null) {
          return valueType_ == null ? org.apache.kyuubi.engine.spark.connect.proto.DataType.getDefaultInstance() : valueType_;
        } else {
          return valueTypeBuilder_.getMessage();
        }
      }
      /**
       * <code>.spark.connect.DataType value_type = 2;</code>
       */
      public Builder setValueType(org.apache.kyuubi.engine.spark.connect.proto.DataType value) {
        if (valueTypeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          valueType_ = value;
          onChanged();
        } else {
          valueTypeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.spark.connect.DataType value_type = 2;</code>
       */
      public Builder setValueType(
          org.apache.kyuubi.engine.spark.connect.proto.DataType.Builder builderForValue) {
        if (valueTypeBuilder_ == null) {
          valueType_ = builderForValue.build();
          onChanged();
        } else {
          valueTypeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.spark.connect.DataType value_type = 2;</code>
       */
      public Builder mergeValueType(org.apache.kyuubi.engine.spark.connect.proto.DataType value) {
        if (valueTypeBuilder_ == null) {
          if (valueType_ != null) {
            valueType_ =
              org.apache.kyuubi.engine.spark.connect.proto.DataType.newBuilder(valueType_).mergeFrom(value).buildPartial();
          } else {
            valueType_ = value;
          }
          onChanged();
        } else {
          valueTypeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.spark.connect.DataType value_type = 2;</code>
       */
      public Builder clearValueType() {
        if (valueTypeBuilder_ == null) {
          valueType_ = null;
          onChanged();
        } else {
          valueType_ = null;
          valueTypeBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.spark.connect.DataType value_type = 2;</code>
       */
      public org.apache.kyuubi.engine.spark.connect.proto.DataType.Builder getValueTypeBuilder() {
        
        onChanged();
        return getValueTypeFieldBuilder().getBuilder();
      }
      /**
       * <code>.spark.connect.DataType value_type = 2;</code>
       */
      public org.apache.kyuubi.engine.spark.connect.proto.DataTypeOrBuilder getValueTypeOrBuilder() {
        if (valueTypeBuilder_ != null) {
          return valueTypeBuilder_.getMessageOrBuilder();
        } else {
          return valueType_ == null ?
              org.apache.kyuubi.engine.spark.connect.proto.DataType.getDefaultInstance() : valueType_;
        }
      }
      /**
       * <code>.spark.connect.DataType value_type = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.kyuubi.engine.spark.connect.proto.DataType, org.apache.kyuubi.engine.spark.connect.proto.DataType.Builder, org.apache.kyuubi.engine.spark.connect.proto.DataTypeOrBuilder> 
          getValueTypeFieldBuilder() {
        if (valueTypeBuilder_ == null) {
          valueTypeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.apache.kyuubi.engine.spark.connect.proto.DataType, org.apache.kyuubi.engine.spark.connect.proto.DataType.Builder, org.apache.kyuubi.engine.spark.connect.proto.DataTypeOrBuilder>(
                  getValueType(),
                  getParentForChildren(),
                  isClean());
          valueType_ = null;
        }
        return valueTypeBuilder_;
      }

      private boolean valueContainsNull_ ;
      /**
       * <code>bool value_contains_null = 3;</code>
       * @return The valueContainsNull.
       */
      @java.lang.Override
      public boolean getValueContainsNull() {
        return valueContainsNull_;
      }
      /**
       * <code>bool value_contains_null = 3;</code>
       * @param value The valueContainsNull to set.
       * @return This builder for chaining.
       */
      public Builder setValueContainsNull(boolean value) {
        
        valueContainsNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool value_contains_null = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearValueContainsNull() {
        
        valueContainsNull_ = false;
        onChanged();
        return this;
      }

      private int typeVariationReference_ ;
      /**
       * <code>uint32 type_variation_reference = 4;</code>
       * @return The typeVariationReference.
       */
      @java.lang.Override
      public int getTypeVariationReference() {
        return typeVariationReference_;
      }
      /**
       * <code>uint32 type_variation_reference = 4;</code>
       * @param value The typeVariationReference to set.
       * @return This builder for chaining.
       */
      public Builder setTypeVariationReference(int value) {
        
        typeVariationReference_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 type_variation_reference = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearTypeVariationReference() {
        
        typeVariationReference_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:spark.connect.DataType.Map)
    }

    // @@protoc_insertion_point(class_scope:spark.connect.DataType.Map)
    private static final org.apache.kyuubi.engine.spark.connect.proto.DataType.Map DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.kyuubi.engine.spark.connect.proto.DataType.Map();
    }

    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Map getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Map>
        PARSER = new com.google.protobuf.AbstractParser<Map>() {
      @java.lang.Override
      public Map parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<Map> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Map> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.DataType.Map getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface UDTOrBuilder extends
      // @@protoc_insertion_point(interface_extends:spark.connect.DataType.UDT)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string type = 1;</code>
     * @return The type.
     */
    java.lang.String getType();
    /**
     * <code>string type = 1;</code>
     * @return The bytes for type.
     */
    com.google.protobuf.ByteString
        getTypeBytes();

    /**
     * <code>optional string jvm_class = 2;</code>
     * @return Whether the jvmClass field is set.
     */
    boolean hasJvmClass();
    /**
     * <code>optional string jvm_class = 2;</code>
     * @return The jvmClass.
     */
    java.lang.String getJvmClass();
    /**
     * <code>optional string jvm_class = 2;</code>
     * @return The bytes for jvmClass.
     */
    com.google.protobuf.ByteString
        getJvmClassBytes();

    /**
     * <code>optional string python_class = 3;</code>
     * @return Whether the pythonClass field is set.
     */
    boolean hasPythonClass();
    /**
     * <code>optional string python_class = 3;</code>
     * @return The pythonClass.
     */
    java.lang.String getPythonClass();
    /**
     * <code>optional string python_class = 3;</code>
     * @return The bytes for pythonClass.
     */
    com.google.protobuf.ByteString
        getPythonClassBytes();

    /**
     * <code>optional string serialized_python_class = 4;</code>
     * @return Whether the serializedPythonClass field is set.
     */
    boolean hasSerializedPythonClass();
    /**
     * <code>optional string serialized_python_class = 4;</code>
     * @return The serializedPythonClass.
     */
    java.lang.String getSerializedPythonClass();
    /**
     * <code>optional string serialized_python_class = 4;</code>
     * @return The bytes for serializedPythonClass.
     */
    com.google.protobuf.ByteString
        getSerializedPythonClassBytes();

    /**
     * <code>.spark.connect.DataType sql_type = 5;</code>
     * @return Whether the sqlType field is set.
     */
    boolean hasSqlType();
    /**
     * <code>.spark.connect.DataType sql_type = 5;</code>
     * @return The sqlType.
     */
    org.apache.kyuubi.engine.spark.connect.proto.DataType getSqlType();
    /**
     * <code>.spark.connect.DataType sql_type = 5;</code>
     */
    org.apache.kyuubi.engine.spark.connect.proto.DataTypeOrBuilder getSqlTypeOrBuilder();
  }
  /**
   * Protobuf type {@code spark.connect.DataType.UDT}
   */
  public static final class UDT extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:spark.connect.DataType.UDT)
      UDTOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use UDT.newBuilder() to construct.
    private UDT(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private UDT() {
      type_ = "";
      jvmClass_ = "";
      pythonClass_ = "";
      serializedPythonClass_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new UDT();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.kyuubi.engine.spark.connect.proto.Types.internal_static_spark_connect_DataType_UDT_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.kyuubi.engine.spark.connect.proto.Types.internal_static_spark_connect_DataType_UDT_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.kyuubi.engine.spark.connect.proto.DataType.UDT.class, org.apache.kyuubi.engine.spark.connect.proto.DataType.UDT.Builder.class);
    }

    private int bitField0_;
    public static final int TYPE_FIELD_NUMBER = 1;
    private volatile java.lang.Object type_;
    /**
     * <code>string type = 1;</code>
     * @return The type.
     */
    @java.lang.Override
    public java.lang.String getType() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        type_ = s;
        return s;
      }
    }
    /**
     * <code>string type = 1;</code>
     * @return The bytes for type.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getTypeBytes() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        type_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int JVM_CLASS_FIELD_NUMBER = 2;
    private volatile java.lang.Object jvmClass_;
    /**
     * <code>optional string jvm_class = 2;</code>
     * @return Whether the jvmClass field is set.
     */
    @java.lang.Override
    public boolean hasJvmClass() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional string jvm_class = 2;</code>
     * @return The jvmClass.
     */
    @java.lang.Override
    public java.lang.String getJvmClass() {
      java.lang.Object ref = jvmClass_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        jvmClass_ = s;
        return s;
      }
    }
    /**
     * <code>optional string jvm_class = 2;</code>
     * @return The bytes for jvmClass.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getJvmClassBytes() {
      java.lang.Object ref = jvmClass_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        jvmClass_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PYTHON_CLASS_FIELD_NUMBER = 3;
    private volatile java.lang.Object pythonClass_;
    /**
     * <code>optional string python_class = 3;</code>
     * @return Whether the pythonClass field is set.
     */
    @java.lang.Override
    public boolean hasPythonClass() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional string python_class = 3;</code>
     * @return The pythonClass.
     */
    @java.lang.Override
    public java.lang.String getPythonClass() {
      java.lang.Object ref = pythonClass_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        pythonClass_ = s;
        return s;
      }
    }
    /**
     * <code>optional string python_class = 3;</code>
     * @return The bytes for pythonClass.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getPythonClassBytes() {
      java.lang.Object ref = pythonClass_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        pythonClass_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SERIALIZED_PYTHON_CLASS_FIELD_NUMBER = 4;
    private volatile java.lang.Object serializedPythonClass_;
    /**
     * <code>optional string serialized_python_class = 4;</code>
     * @return Whether the serializedPythonClass field is set.
     */
    @java.lang.Override
    public boolean hasSerializedPythonClass() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>optional string serialized_python_class = 4;</code>
     * @return The serializedPythonClass.
     */
    @java.lang.Override
    public java.lang.String getSerializedPythonClass() {
      java.lang.Object ref = serializedPythonClass_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        serializedPythonClass_ = s;
        return s;
      }
    }
    /**
     * <code>optional string serialized_python_class = 4;</code>
     * @return The bytes for serializedPythonClass.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getSerializedPythonClassBytes() {
      java.lang.Object ref = serializedPythonClass_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        serializedPythonClass_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SQL_TYPE_FIELD_NUMBER = 5;
    private org.apache.kyuubi.engine.spark.connect.proto.DataType sqlType_;
    /**
     * <code>.spark.connect.DataType sql_type = 5;</code>
     * @return Whether the sqlType field is set.
     */
    @java.lang.Override
    public boolean hasSqlType() {
      return sqlType_ != null;
    }
    /**
     * <code>.spark.connect.DataType sql_type = 5;</code>
     * @return The sqlType.
     */
    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.DataType getSqlType() {
      return sqlType_ == null ? org.apache.kyuubi.engine.spark.connect.proto.DataType.getDefaultInstance() : sqlType_;
    }
    /**
     * <code>.spark.connect.DataType sql_type = 5;</code>
     */
    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.DataTypeOrBuilder getSqlTypeOrBuilder() {
      return getSqlType();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(type_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, type_);
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, jvmClass_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, pythonClass_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, serializedPythonClass_);
      }
      if (sqlType_ != null) {
        output.writeMessage(5, getSqlType());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(type_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, type_);
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, jvmClass_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, pythonClass_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, serializedPythonClass_);
      }
      if (sqlType_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getSqlType());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.kyuubi.engine.spark.connect.proto.DataType.UDT)) {
        return super.equals(obj);
      }
      org.apache.kyuubi.engine.spark.connect.proto.DataType.UDT other = (org.apache.kyuubi.engine.spark.connect.proto.DataType.UDT) obj;

      if (!getType()
          .equals(other.getType())) return false;
      if (hasJvmClass() != other.hasJvmClass()) return false;
      if (hasJvmClass()) {
        if (!getJvmClass()
            .equals(other.getJvmClass())) return false;
      }
      if (hasPythonClass() != other.hasPythonClass()) return false;
      if (hasPythonClass()) {
        if (!getPythonClass()
            .equals(other.getPythonClass())) return false;
      }
      if (hasSerializedPythonClass() != other.hasSerializedPythonClass()) return false;
      if (hasSerializedPythonClass()) {
        if (!getSerializedPythonClass()
            .equals(other.getSerializedPythonClass())) return false;
      }
      if (hasSqlType() != other.hasSqlType()) return false;
      if (hasSqlType()) {
        if (!getSqlType()
            .equals(other.getSqlType())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getType().hashCode();
      if (hasJvmClass()) {
        hash = (37 * hash) + JVM_CLASS_FIELD_NUMBER;
        hash = (53 * hash) + getJvmClass().hashCode();
      }
      if (hasPythonClass()) {
        hash = (37 * hash) + PYTHON_CLASS_FIELD_NUMBER;
        hash = (53 * hash) + getPythonClass().hashCode();
      }
      if (hasSerializedPythonClass()) {
        hash = (37 * hash) + SERIALIZED_PYTHON_CLASS_FIELD_NUMBER;
        hash = (53 * hash) + getSerializedPythonClass().hashCode();
      }
      if (hasSqlType()) {
        hash = (37 * hash) + SQL_TYPE_FIELD_NUMBER;
        hash = (53 * hash) + getSqlType().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.UDT parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.UDT parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.UDT parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.UDT parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.UDT parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.UDT parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.UDT parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.UDT parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.UDT parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.UDT parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.UDT parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.UDT parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.kyuubi.engine.spark.connect.proto.DataType.UDT prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code spark.connect.DataType.UDT}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:spark.connect.DataType.UDT)
        org.apache.kyuubi.engine.spark.connect.proto.DataType.UDTOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.kyuubi.engine.spark.connect.proto.Types.internal_static_spark_connect_DataType_UDT_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.kyuubi.engine.spark.connect.proto.Types.internal_static_spark_connect_DataType_UDT_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.kyuubi.engine.spark.connect.proto.DataType.UDT.class, org.apache.kyuubi.engine.spark.connect.proto.DataType.UDT.Builder.class);
      }

      // Construct using org.apache.kyuubi.engine.spark.connect.proto.DataType.UDT.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        type_ = "";

        jvmClass_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        pythonClass_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        serializedPythonClass_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        if (sqlTypeBuilder_ == null) {
          sqlType_ = null;
        } else {
          sqlType_ = null;
          sqlTypeBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.kyuubi.engine.spark.connect.proto.Types.internal_static_spark_connect_DataType_UDT_descriptor;
      }

      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.proto.DataType.UDT getDefaultInstanceForType() {
        return org.apache.kyuubi.engine.spark.connect.proto.DataType.UDT.getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.proto.DataType.UDT build() {
        org.apache.kyuubi.engine.spark.connect.proto.DataType.UDT result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.proto.DataType.UDT buildPartial() {
        org.apache.kyuubi.engine.spark.connect.proto.DataType.UDT result = new org.apache.kyuubi.engine.spark.connect.proto.DataType.UDT(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          to_bitField0_ |= 0x00000001;
        }
        result.jvmClass_ = jvmClass_;
        if (((from_bitField0_ & 0x00000002) != 0)) {
          to_bitField0_ |= 0x00000002;
        }
        result.pythonClass_ = pythonClass_;
        if (((from_bitField0_ & 0x00000004) != 0)) {
          to_bitField0_ |= 0x00000004;
        }
        result.serializedPythonClass_ = serializedPythonClass_;
        if (sqlTypeBuilder_ == null) {
          result.sqlType_ = sqlType_;
        } else {
          result.sqlType_ = sqlTypeBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.kyuubi.engine.spark.connect.proto.DataType.UDT) {
          return mergeFrom((org.apache.kyuubi.engine.spark.connect.proto.DataType.UDT)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.kyuubi.engine.spark.connect.proto.DataType.UDT other) {
        if (other == org.apache.kyuubi.engine.spark.connect.proto.DataType.UDT.getDefaultInstance()) return this;
        if (!other.getType().isEmpty()) {
          type_ = other.type_;
          onChanged();
        }
        if (other.hasJvmClass()) {
          bitField0_ |= 0x00000001;
          jvmClass_ = other.jvmClass_;
          onChanged();
        }
        if (other.hasPythonClass()) {
          bitField0_ |= 0x00000002;
          pythonClass_ = other.pythonClass_;
          onChanged();
        }
        if (other.hasSerializedPythonClass()) {
          bitField0_ |= 0x00000004;
          serializedPythonClass_ = other.serializedPythonClass_;
          onChanged();
        }
        if (other.hasSqlType()) {
          mergeSqlType(other.getSqlType());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                type_ = input.readStringRequireUtf8();

                break;
              } // case 10
              case 18: {
                jvmClass_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 18
              case 26: {
                pythonClass_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000002;
                break;
              } // case 26
              case 34: {
                serializedPythonClass_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000004;
                break;
              } // case 34
              case 42: {
                input.readMessage(
                    getSqlTypeFieldBuilder().getBuilder(),
                    extensionRegistry);

                break;
              } // case 42
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object type_ = "";
      /**
       * <code>string type = 1;</code>
       * @return The type.
       */
      public java.lang.String getType() {
        java.lang.Object ref = type_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          type_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string type = 1;</code>
       * @return The bytes for type.
       */
      public com.google.protobuf.ByteString
          getTypeBytes() {
        java.lang.Object ref = type_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          type_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string type = 1;</code>
       * @param value The type to set.
       * @return This builder for chaining.
       */
      public Builder setType(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string type = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearType() {
        
        type_ = getDefaultInstance().getType();
        onChanged();
        return this;
      }
      /**
       * <code>string type = 1;</code>
       * @param value The bytes for type to set.
       * @return This builder for chaining.
       */
      public Builder setTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        type_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object jvmClass_ = "";
      /**
       * <code>optional string jvm_class = 2;</code>
       * @return Whether the jvmClass field is set.
       */
      public boolean hasJvmClass() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional string jvm_class = 2;</code>
       * @return The jvmClass.
       */
      public java.lang.String getJvmClass() {
        java.lang.Object ref = jvmClass_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          jvmClass_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string jvm_class = 2;</code>
       * @return The bytes for jvmClass.
       */
      public com.google.protobuf.ByteString
          getJvmClassBytes() {
        java.lang.Object ref = jvmClass_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          jvmClass_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string jvm_class = 2;</code>
       * @param value The jvmClass to set.
       * @return This builder for chaining.
       */
      public Builder setJvmClass(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        jvmClass_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string jvm_class = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearJvmClass() {
        bitField0_ = (bitField0_ & ~0x00000001);
        jvmClass_ = getDefaultInstance().getJvmClass();
        onChanged();
        return this;
      }
      /**
       * <code>optional string jvm_class = 2;</code>
       * @param value The bytes for jvmClass to set.
       * @return This builder for chaining.
       */
      public Builder setJvmClassBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        bitField0_ |= 0x00000001;
        jvmClass_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object pythonClass_ = "";
      /**
       * <code>optional string python_class = 3;</code>
       * @return Whether the pythonClass field is set.
       */
      public boolean hasPythonClass() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional string python_class = 3;</code>
       * @return The pythonClass.
       */
      public java.lang.String getPythonClass() {
        java.lang.Object ref = pythonClass_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          pythonClass_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string python_class = 3;</code>
       * @return The bytes for pythonClass.
       */
      public com.google.protobuf.ByteString
          getPythonClassBytes() {
        java.lang.Object ref = pythonClass_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          pythonClass_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string python_class = 3;</code>
       * @param value The pythonClass to set.
       * @return This builder for chaining.
       */
      public Builder setPythonClass(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        pythonClass_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string python_class = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearPythonClass() {
        bitField0_ = (bitField0_ & ~0x00000002);
        pythonClass_ = getDefaultInstance().getPythonClass();
        onChanged();
        return this;
      }
      /**
       * <code>optional string python_class = 3;</code>
       * @param value The bytes for pythonClass to set.
       * @return This builder for chaining.
       */
      public Builder setPythonClassBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        bitField0_ |= 0x00000002;
        pythonClass_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object serializedPythonClass_ = "";
      /**
       * <code>optional string serialized_python_class = 4;</code>
       * @return Whether the serializedPythonClass field is set.
       */
      public boolean hasSerializedPythonClass() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional string serialized_python_class = 4;</code>
       * @return The serializedPythonClass.
       */
      public java.lang.String getSerializedPythonClass() {
        java.lang.Object ref = serializedPythonClass_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          serializedPythonClass_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string serialized_python_class = 4;</code>
       * @return The bytes for serializedPythonClass.
       */
      public com.google.protobuf.ByteString
          getSerializedPythonClassBytes() {
        java.lang.Object ref = serializedPythonClass_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          serializedPythonClass_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string serialized_python_class = 4;</code>
       * @param value The serializedPythonClass to set.
       * @return This builder for chaining.
       */
      public Builder setSerializedPythonClass(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        serializedPythonClass_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string serialized_python_class = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearSerializedPythonClass() {
        bitField0_ = (bitField0_ & ~0x00000004);
        serializedPythonClass_ = getDefaultInstance().getSerializedPythonClass();
        onChanged();
        return this;
      }
      /**
       * <code>optional string serialized_python_class = 4;</code>
       * @param value The bytes for serializedPythonClass to set.
       * @return This builder for chaining.
       */
      public Builder setSerializedPythonClassBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        bitField0_ |= 0x00000004;
        serializedPythonClass_ = value;
        onChanged();
        return this;
      }

      private org.apache.kyuubi.engine.spark.connect.proto.DataType sqlType_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.kyuubi.engine.spark.connect.proto.DataType, org.apache.kyuubi.engine.spark.connect.proto.DataType.Builder, org.apache.kyuubi.engine.spark.connect.proto.DataTypeOrBuilder> sqlTypeBuilder_;
      /**
       * <code>.spark.connect.DataType sql_type = 5;</code>
       * @return Whether the sqlType field is set.
       */
      public boolean hasSqlType() {
        return sqlTypeBuilder_ != null || sqlType_ != null;
      }
      /**
       * <code>.spark.connect.DataType sql_type = 5;</code>
       * @return The sqlType.
       */
      public org.apache.kyuubi.engine.spark.connect.proto.DataType getSqlType() {
        if (sqlTypeBuilder_ == null) {
          return sqlType_ == null ? org.apache.kyuubi.engine.spark.connect.proto.DataType.getDefaultInstance() : sqlType_;
        } else {
          return sqlTypeBuilder_.getMessage();
        }
      }
      /**
       * <code>.spark.connect.DataType sql_type = 5;</code>
       */
      public Builder setSqlType(org.apache.kyuubi.engine.spark.connect.proto.DataType value) {
        if (sqlTypeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          sqlType_ = value;
          onChanged();
        } else {
          sqlTypeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.spark.connect.DataType sql_type = 5;</code>
       */
      public Builder setSqlType(
          org.apache.kyuubi.engine.spark.connect.proto.DataType.Builder builderForValue) {
        if (sqlTypeBuilder_ == null) {
          sqlType_ = builderForValue.build();
          onChanged();
        } else {
          sqlTypeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.spark.connect.DataType sql_type = 5;</code>
       */
      public Builder mergeSqlType(org.apache.kyuubi.engine.spark.connect.proto.DataType value) {
        if (sqlTypeBuilder_ == null) {
          if (sqlType_ != null) {
            sqlType_ =
              org.apache.kyuubi.engine.spark.connect.proto.DataType.newBuilder(sqlType_).mergeFrom(value).buildPartial();
          } else {
            sqlType_ = value;
          }
          onChanged();
        } else {
          sqlTypeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.spark.connect.DataType sql_type = 5;</code>
       */
      public Builder clearSqlType() {
        if (sqlTypeBuilder_ == null) {
          sqlType_ = null;
          onChanged();
        } else {
          sqlType_ = null;
          sqlTypeBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.spark.connect.DataType sql_type = 5;</code>
       */
      public org.apache.kyuubi.engine.spark.connect.proto.DataType.Builder getSqlTypeBuilder() {
        
        onChanged();
        return getSqlTypeFieldBuilder().getBuilder();
      }
      /**
       * <code>.spark.connect.DataType sql_type = 5;</code>
       */
      public org.apache.kyuubi.engine.spark.connect.proto.DataTypeOrBuilder getSqlTypeOrBuilder() {
        if (sqlTypeBuilder_ != null) {
          return sqlTypeBuilder_.getMessageOrBuilder();
        } else {
          return sqlType_ == null ?
              org.apache.kyuubi.engine.spark.connect.proto.DataType.getDefaultInstance() : sqlType_;
        }
      }
      /**
       * <code>.spark.connect.DataType sql_type = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.kyuubi.engine.spark.connect.proto.DataType, org.apache.kyuubi.engine.spark.connect.proto.DataType.Builder, org.apache.kyuubi.engine.spark.connect.proto.DataTypeOrBuilder> 
          getSqlTypeFieldBuilder() {
        if (sqlTypeBuilder_ == null) {
          sqlTypeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.apache.kyuubi.engine.spark.connect.proto.DataType, org.apache.kyuubi.engine.spark.connect.proto.DataType.Builder, org.apache.kyuubi.engine.spark.connect.proto.DataTypeOrBuilder>(
                  getSqlType(),
                  getParentForChildren(),
                  isClean());
          sqlType_ = null;
        }
        return sqlTypeBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:spark.connect.DataType.UDT)
    }

    // @@protoc_insertion_point(class_scope:spark.connect.DataType.UDT)
    private static final org.apache.kyuubi.engine.spark.connect.proto.DataType.UDT DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.kyuubi.engine.spark.connect.proto.DataType.UDT();
    }

    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.UDT getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<UDT>
        PARSER = new com.google.protobuf.AbstractParser<UDT>() {
      @java.lang.Override
      public UDT parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<UDT> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<UDT> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.DataType.UDT getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface UnparsedOrBuilder extends
      // @@protoc_insertion_point(interface_extends:spark.connect.DataType.Unparsed)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * (Required) The unparsed data type string
     * </pre>
     *
     * <code>string data_type_string = 1;</code>
     * @return The dataTypeString.
     */
    java.lang.String getDataTypeString();
    /**
     * <pre>
     * (Required) The unparsed data type string
     * </pre>
     *
     * <code>string data_type_string = 1;</code>
     * @return The bytes for dataTypeString.
     */
    com.google.protobuf.ByteString
        getDataTypeStringBytes();
  }
  /**
   * Protobuf type {@code spark.connect.DataType.Unparsed}
   */
  public static final class Unparsed extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:spark.connect.DataType.Unparsed)
      UnparsedOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Unparsed.newBuilder() to construct.
    private Unparsed(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Unparsed() {
      dataTypeString_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Unparsed();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.kyuubi.engine.spark.connect.proto.Types.internal_static_spark_connect_DataType_Unparsed_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.kyuubi.engine.spark.connect.proto.Types.internal_static_spark_connect_DataType_Unparsed_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.kyuubi.engine.spark.connect.proto.DataType.Unparsed.class, org.apache.kyuubi.engine.spark.connect.proto.DataType.Unparsed.Builder.class);
    }

    public static final int DATA_TYPE_STRING_FIELD_NUMBER = 1;
    private volatile java.lang.Object dataTypeString_;
    /**
     * <pre>
     * (Required) The unparsed data type string
     * </pre>
     *
     * <code>string data_type_string = 1;</code>
     * @return The dataTypeString.
     */
    @java.lang.Override
    public java.lang.String getDataTypeString() {
      java.lang.Object ref = dataTypeString_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        dataTypeString_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * (Required) The unparsed data type string
     * </pre>
     *
     * <code>string data_type_string = 1;</code>
     * @return The bytes for dataTypeString.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getDataTypeStringBytes() {
      java.lang.Object ref = dataTypeString_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        dataTypeString_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(dataTypeString_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, dataTypeString_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(dataTypeString_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, dataTypeString_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.kyuubi.engine.spark.connect.proto.DataType.Unparsed)) {
        return super.equals(obj);
      }
      org.apache.kyuubi.engine.spark.connect.proto.DataType.Unparsed other = (org.apache.kyuubi.engine.spark.connect.proto.DataType.Unparsed) obj;

      if (!getDataTypeString()
          .equals(other.getDataTypeString())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + DATA_TYPE_STRING_FIELD_NUMBER;
      hash = (53 * hash) + getDataTypeString().hashCode();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Unparsed parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Unparsed parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Unparsed parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Unparsed parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Unparsed parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Unparsed parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Unparsed parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Unparsed parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Unparsed parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Unparsed parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Unparsed parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Unparsed parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.kyuubi.engine.spark.connect.proto.DataType.Unparsed prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code spark.connect.DataType.Unparsed}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:spark.connect.DataType.Unparsed)
        org.apache.kyuubi.engine.spark.connect.proto.DataType.UnparsedOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.kyuubi.engine.spark.connect.proto.Types.internal_static_spark_connect_DataType_Unparsed_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.kyuubi.engine.spark.connect.proto.Types.internal_static_spark_connect_DataType_Unparsed_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.kyuubi.engine.spark.connect.proto.DataType.Unparsed.class, org.apache.kyuubi.engine.spark.connect.proto.DataType.Unparsed.Builder.class);
      }

      // Construct using org.apache.kyuubi.engine.spark.connect.proto.DataType.Unparsed.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        dataTypeString_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.kyuubi.engine.spark.connect.proto.Types.internal_static_spark_connect_DataType_Unparsed_descriptor;
      }

      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.proto.DataType.Unparsed getDefaultInstanceForType() {
        return org.apache.kyuubi.engine.spark.connect.proto.DataType.Unparsed.getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.proto.DataType.Unparsed build() {
        org.apache.kyuubi.engine.spark.connect.proto.DataType.Unparsed result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.proto.DataType.Unparsed buildPartial() {
        org.apache.kyuubi.engine.spark.connect.proto.DataType.Unparsed result = new org.apache.kyuubi.engine.spark.connect.proto.DataType.Unparsed(this);
        result.dataTypeString_ = dataTypeString_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.kyuubi.engine.spark.connect.proto.DataType.Unparsed) {
          return mergeFrom((org.apache.kyuubi.engine.spark.connect.proto.DataType.Unparsed)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.kyuubi.engine.spark.connect.proto.DataType.Unparsed other) {
        if (other == org.apache.kyuubi.engine.spark.connect.proto.DataType.Unparsed.getDefaultInstance()) return this;
        if (!other.getDataTypeString().isEmpty()) {
          dataTypeString_ = other.dataTypeString_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                dataTypeString_ = input.readStringRequireUtf8();

                break;
              } // case 10
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }

      private java.lang.Object dataTypeString_ = "";
      /**
       * <pre>
       * (Required) The unparsed data type string
       * </pre>
       *
       * <code>string data_type_string = 1;</code>
       * @return The dataTypeString.
       */
      public java.lang.String getDataTypeString() {
        java.lang.Object ref = dataTypeString_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          dataTypeString_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * (Required) The unparsed data type string
       * </pre>
       *
       * <code>string data_type_string = 1;</code>
       * @return The bytes for dataTypeString.
       */
      public com.google.protobuf.ByteString
          getDataTypeStringBytes() {
        java.lang.Object ref = dataTypeString_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          dataTypeString_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * (Required) The unparsed data type string
       * </pre>
       *
       * <code>string data_type_string = 1;</code>
       * @param value The dataTypeString to set.
       * @return This builder for chaining.
       */
      public Builder setDataTypeString(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        dataTypeString_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * (Required) The unparsed data type string
       * </pre>
       *
       * <code>string data_type_string = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearDataTypeString() {
        
        dataTypeString_ = getDefaultInstance().getDataTypeString();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * (Required) The unparsed data type string
       * </pre>
       *
       * <code>string data_type_string = 1;</code>
       * @param value The bytes for dataTypeString to set.
       * @return This builder for chaining.
       */
      public Builder setDataTypeStringBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        dataTypeString_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:spark.connect.DataType.Unparsed)
    }

    // @@protoc_insertion_point(class_scope:spark.connect.DataType.Unparsed)
    private static final org.apache.kyuubi.engine.spark.connect.proto.DataType.Unparsed DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.kyuubi.engine.spark.connect.proto.DataType.Unparsed();
    }

    public static org.apache.kyuubi.engine.spark.connect.proto.DataType.Unparsed getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Unparsed>
        PARSER = new com.google.protobuf.AbstractParser<Unparsed>() {
      @java.lang.Override
      public Unparsed parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<Unparsed> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Unparsed> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.DataType.Unparsed getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private int kindCase_ = 0;
  private java.lang.Object kind_;
  public enum KindCase
      implements com.google.protobuf.Internal.EnumLite,
          com.google.protobuf.AbstractMessage.InternalOneOfEnum {
    NULL(1),
    BINARY(2),
    BOOLEAN(3),
    BYTE(4),
    SHORT(5),
    INTEGER(6),
    LONG(7),
    FLOAT(8),
    DOUBLE(9),
    DECIMAL(10),
    STRING(11),
    CHAR(12),
    VAR_CHAR(13),
    DATE(14),
    TIMESTAMP(15),
    TIMESTAMP_NTZ(16),
    CALENDAR_INTERVAL(17),
    YEAR_MONTH_INTERVAL(18),
    DAY_TIME_INTERVAL(19),
    ARRAY(20),
    STRUCT(21),
    MAP(22),
    UDT(23),
    UNPARSED(24),
    KIND_NOT_SET(0);
    private final int value;
    private KindCase(int value) {
      this.value = value;
    }
    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static KindCase valueOf(int value) {
      return forNumber(value);
    }

    public static KindCase forNumber(int value) {
      switch (value) {
        case 1: return NULL;
        case 2: return BINARY;
        case 3: return BOOLEAN;
        case 4: return BYTE;
        case 5: return SHORT;
        case 6: return INTEGER;
        case 7: return LONG;
        case 8: return FLOAT;
        case 9: return DOUBLE;
        case 10: return DECIMAL;
        case 11: return STRING;
        case 12: return CHAR;
        case 13: return VAR_CHAR;
        case 14: return DATE;
        case 15: return TIMESTAMP;
        case 16: return TIMESTAMP_NTZ;
        case 17: return CALENDAR_INTERVAL;
        case 18: return YEAR_MONTH_INTERVAL;
        case 19: return DAY_TIME_INTERVAL;
        case 20: return ARRAY;
        case 21: return STRUCT;
        case 22: return MAP;
        case 23: return UDT;
        case 24: return UNPARSED;
        case 0: return KIND_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public KindCase
  getKindCase() {
    return KindCase.forNumber(
        kindCase_);
  }

  public static final int NULL_FIELD_NUMBER = 1;
  /**
   * <code>.spark.connect.DataType.NULL null = 1;</code>
   * @return Whether the null field is set.
   */
  @java.lang.Override
  public boolean hasNull() {
    return kindCase_ == 1;
  }
  /**
   * <code>.spark.connect.DataType.NULL null = 1;</code>
   * @return The null.
   */
  @java.lang.Override
  public org.apache.kyuubi.engine.spark.connect.proto.DataType.NULL getNull() {
    if (kindCase_ == 1) {
       return (org.apache.kyuubi.engine.spark.connect.proto.DataType.NULL) kind_;
    }
    return org.apache.kyuubi.engine.spark.connect.proto.DataType.NULL.getDefaultInstance();
  }
  /**
   * <code>.spark.connect.DataType.NULL null = 1;</code>
   */
  @java.lang.Override
  public org.apache.kyuubi.engine.spark.connect.proto.DataType.NULLOrBuilder getNullOrBuilder() {
    if (kindCase_ == 1) {
       return (org.apache.kyuubi.engine.spark.connect.proto.DataType.NULL) kind_;
    }
    return org.apache.kyuubi.engine.spark.connect.proto.DataType.NULL.getDefaultInstance();
  }

  public static final int BINARY_FIELD_NUMBER = 2;
  /**
   * <code>.spark.connect.DataType.Binary binary = 2;</code>
   * @return Whether the binary field is set.
   */
  @java.lang.Override
  public boolean hasBinary() {
    return kindCase_ == 2;
  }
  /**
   * <code>.spark.connect.DataType.Binary binary = 2;</code>
   * @return The binary.
   */
  @java.lang.Override
  public org.apache.kyuubi.engine.spark.connect.proto.DataType.Binary getBinary() {
    if (kindCase_ == 2) {
       return (org.apache.kyuubi.engine.spark.connect.proto.DataType.Binary) kind_;
    }
    return org.apache.kyuubi.engine.spark.connect.proto.DataType.Binary.getDefaultInstance();
  }
  /**
   * <code>.spark.connect.DataType.Binary binary = 2;</code>
   */
  @java.lang.Override
  public org.apache.kyuubi.engine.spark.connect.proto.DataType.BinaryOrBuilder getBinaryOrBuilder() {
    if (kindCase_ == 2) {
       return (org.apache.kyuubi.engine.spark.connect.proto.DataType.Binary) kind_;
    }
    return org.apache.kyuubi.engine.spark.connect.proto.DataType.Binary.getDefaultInstance();
  }

  public static final int BOOLEAN_FIELD_NUMBER = 3;
  /**
   * <code>.spark.connect.DataType.Boolean boolean = 3;</code>
   * @return Whether the boolean field is set.
   */
  @java.lang.Override
  public boolean hasBoolean() {
    return kindCase_ == 3;
  }
  /**
   * <code>.spark.connect.DataType.Boolean boolean = 3;</code>
   * @return The boolean.
   */
  @java.lang.Override
  public org.apache.kyuubi.engine.spark.connect.proto.DataType.Boolean getBoolean() {
    if (kindCase_ == 3) {
       return (org.apache.kyuubi.engine.spark.connect.proto.DataType.Boolean) kind_;
    }
    return org.apache.kyuubi.engine.spark.connect.proto.DataType.Boolean.getDefaultInstance();
  }
  /**
   * <code>.spark.connect.DataType.Boolean boolean = 3;</code>
   */
  @java.lang.Override
  public org.apache.kyuubi.engine.spark.connect.proto.DataType.BooleanOrBuilder getBooleanOrBuilder() {
    if (kindCase_ == 3) {
       return (org.apache.kyuubi.engine.spark.connect.proto.DataType.Boolean) kind_;
    }
    return org.apache.kyuubi.engine.spark.connect.proto.DataType.Boolean.getDefaultInstance();
  }

  public static final int BYTE_FIELD_NUMBER = 4;
  /**
   * <pre>
   * Numeric types
   * </pre>
   *
   * <code>.spark.connect.DataType.Byte byte = 4;</code>
   * @return Whether the byte field is set.
   */
  @java.lang.Override
  public boolean hasByte() {
    return kindCase_ == 4;
  }
  /**
   * <pre>
   * Numeric types
   * </pre>
   *
   * <code>.spark.connect.DataType.Byte byte = 4;</code>
   * @return The byte.
   */
  @java.lang.Override
  public org.apache.kyuubi.engine.spark.connect.proto.DataType.Byte getByte() {
    if (kindCase_ == 4) {
       return (org.apache.kyuubi.engine.spark.connect.proto.DataType.Byte) kind_;
    }
    return org.apache.kyuubi.engine.spark.connect.proto.DataType.Byte.getDefaultInstance();
  }
  /**
   * <pre>
   * Numeric types
   * </pre>
   *
   * <code>.spark.connect.DataType.Byte byte = 4;</code>
   */
  @java.lang.Override
  public org.apache.kyuubi.engine.spark.connect.proto.DataType.ByteOrBuilder getByteOrBuilder() {
    if (kindCase_ == 4) {
       return (org.apache.kyuubi.engine.spark.connect.proto.DataType.Byte) kind_;
    }
    return org.apache.kyuubi.engine.spark.connect.proto.DataType.Byte.getDefaultInstance();
  }

  public static final int SHORT_FIELD_NUMBER = 5;
  /**
   * <code>.spark.connect.DataType.Short short = 5;</code>
   * @return Whether the short field is set.
   */
  @java.lang.Override
  public boolean hasShort() {
    return kindCase_ == 5;
  }
  /**
   * <code>.spark.connect.DataType.Short short = 5;</code>
   * @return The short.
   */
  @java.lang.Override
  public org.apache.kyuubi.engine.spark.connect.proto.DataType.Short getShort() {
    if (kindCase_ == 5) {
       return (org.apache.kyuubi.engine.spark.connect.proto.DataType.Short) kind_;
    }
    return org.apache.kyuubi.engine.spark.connect.proto.DataType.Short.getDefaultInstance();
  }
  /**
   * <code>.spark.connect.DataType.Short short = 5;</code>
   */
  @java.lang.Override
  public org.apache.kyuubi.engine.spark.connect.proto.DataType.ShortOrBuilder getShortOrBuilder() {
    if (kindCase_ == 5) {
       return (org.apache.kyuubi.engine.spark.connect.proto.DataType.Short) kind_;
    }
    return org.apache.kyuubi.engine.spark.connect.proto.DataType.Short.getDefaultInstance();
  }

  public static final int INTEGER_FIELD_NUMBER = 6;
  /**
   * <code>.spark.connect.DataType.Integer integer = 6;</code>
   * @return Whether the integer field is set.
   */
  @java.lang.Override
  public boolean hasInteger() {
    return kindCase_ == 6;
  }
  /**
   * <code>.spark.connect.DataType.Integer integer = 6;</code>
   * @return The integer.
   */
  @java.lang.Override
  public org.apache.kyuubi.engine.spark.connect.proto.DataType.Integer getInteger() {
    if (kindCase_ == 6) {
       return (org.apache.kyuubi.engine.spark.connect.proto.DataType.Integer) kind_;
    }
    return org.apache.kyuubi.engine.spark.connect.proto.DataType.Integer.getDefaultInstance();
  }
  /**
   * <code>.spark.connect.DataType.Integer integer = 6;</code>
   */
  @java.lang.Override
  public org.apache.kyuubi.engine.spark.connect.proto.DataType.IntegerOrBuilder getIntegerOrBuilder() {
    if (kindCase_ == 6) {
       return (org.apache.kyuubi.engine.spark.connect.proto.DataType.Integer) kind_;
    }
    return org.apache.kyuubi.engine.spark.connect.proto.DataType.Integer.getDefaultInstance();
  }

  public static final int LONG_FIELD_NUMBER = 7;
  /**
   * <code>.spark.connect.DataType.Long long = 7;</code>
   * @return Whether the long field is set.
   */
  @java.lang.Override
  public boolean hasLong() {
    return kindCase_ == 7;
  }
  /**
   * <code>.spark.connect.DataType.Long long = 7;</code>
   * @return The long.
   */
  @java.lang.Override
  public org.apache.kyuubi.engine.spark.connect.proto.DataType.Long getLong() {
    if (kindCase_ == 7) {
       return (org.apache.kyuubi.engine.spark.connect.proto.DataType.Long) kind_;
    }
    return org.apache.kyuubi.engine.spark.connect.proto.DataType.Long.getDefaultInstance();
  }
  /**
   * <code>.spark.connect.DataType.Long long = 7;</code>
   */
  @java.lang.Override
  public org.apache.kyuubi.engine.spark.connect.proto.DataType.LongOrBuilder getLongOrBuilder() {
    if (kindCase_ == 7) {
       return (org.apache.kyuubi.engine.spark.connect.proto.DataType.Long) kind_;
    }
    return org.apache.kyuubi.engine.spark.connect.proto.DataType.Long.getDefaultInstance();
  }

  public static final int FLOAT_FIELD_NUMBER = 8;
  /**
   * <code>.spark.connect.DataType.Float float = 8;</code>
   * @return Whether the float field is set.
   */
  @java.lang.Override
  public boolean hasFloat() {
    return kindCase_ == 8;
  }
  /**
   * <code>.spark.connect.DataType.Float float = 8;</code>
   * @return The float.
   */
  @java.lang.Override
  public org.apache.kyuubi.engine.spark.connect.proto.DataType.Float getFloat() {
    if (kindCase_ == 8) {
       return (org.apache.kyuubi.engine.spark.connect.proto.DataType.Float) kind_;
    }
    return org.apache.kyuubi.engine.spark.connect.proto.DataType.Float.getDefaultInstance();
  }
  /**
   * <code>.spark.connect.DataType.Float float = 8;</code>
   */
  @java.lang.Override
  public org.apache.kyuubi.engine.spark.connect.proto.DataType.FloatOrBuilder getFloatOrBuilder() {
    if (kindCase_ == 8) {
       return (org.apache.kyuubi.engine.spark.connect.proto.DataType.Float) kind_;
    }
    return org.apache.kyuubi.engine.spark.connect.proto.DataType.Float.getDefaultInstance();
  }

  public static final int DOUBLE_FIELD_NUMBER = 9;
  /**
   * <code>.spark.connect.DataType.Double double = 9;</code>
   * @return Whether the double field is set.
   */
  @java.lang.Override
  public boolean hasDouble() {
    return kindCase_ == 9;
  }
  /**
   * <code>.spark.connect.DataType.Double double = 9;</code>
   * @return The double.
   */
  @java.lang.Override
  public org.apache.kyuubi.engine.spark.connect.proto.DataType.Double getDouble() {
    if (kindCase_ == 9) {
       return (org.apache.kyuubi.engine.spark.connect.proto.DataType.Double) kind_;
    }
    return org.apache.kyuubi.engine.spark.connect.proto.DataType.Double.getDefaultInstance();
  }
  /**
   * <code>.spark.connect.DataType.Double double = 9;</code>
   */
  @java.lang.Override
  public org.apache.kyuubi.engine.spark.connect.proto.DataType.DoubleOrBuilder getDoubleOrBuilder() {
    if (kindCase_ == 9) {
       return (org.apache.kyuubi.engine.spark.connect.proto.DataType.Double) kind_;
    }
    return org.apache.kyuubi.engine.spark.connect.proto.DataType.Double.getDefaultInstance();
  }

  public static final int DECIMAL_FIELD_NUMBER = 10;
  /**
   * <code>.spark.connect.DataType.Decimal decimal = 10;</code>
   * @return Whether the decimal field is set.
   */
  @java.lang.Override
  public boolean hasDecimal() {
    return kindCase_ == 10;
  }
  /**
   * <code>.spark.connect.DataType.Decimal decimal = 10;</code>
   * @return The decimal.
   */
  @java.lang.Override
  public org.apache.kyuubi.engine.spark.connect.proto.DataType.Decimal getDecimal() {
    if (kindCase_ == 10) {
       return (org.apache.kyuubi.engine.spark.connect.proto.DataType.Decimal) kind_;
    }
    return org.apache.kyuubi.engine.spark.connect.proto.DataType.Decimal.getDefaultInstance();
  }
  /**
   * <code>.spark.connect.DataType.Decimal decimal = 10;</code>
   */
  @java.lang.Override
  public org.apache.kyuubi.engine.spark.connect.proto.DataType.DecimalOrBuilder getDecimalOrBuilder() {
    if (kindCase_ == 10) {
       return (org.apache.kyuubi.engine.spark.connect.proto.DataType.Decimal) kind_;
    }
    return org.apache.kyuubi.engine.spark.connect.proto.DataType.Decimal.getDefaultInstance();
  }

  public static final int STRING_FIELD_NUMBER = 11;
  /**
   * <pre>
   * String types
   * </pre>
   *
   * <code>.spark.connect.DataType.String string = 11;</code>
   * @return Whether the string field is set.
   */
  @java.lang.Override
  public boolean hasString() {
    return kindCase_ == 11;
  }
  /**
   * <pre>
   * String types
   * </pre>
   *
   * <code>.spark.connect.DataType.String string = 11;</code>
   * @return The string.
   */
  @java.lang.Override
  public org.apache.kyuubi.engine.spark.connect.proto.DataType.String getString() {
    if (kindCase_ == 11) {
       return (org.apache.kyuubi.engine.spark.connect.proto.DataType.String) kind_;
    }
    return org.apache.kyuubi.engine.spark.connect.proto.DataType.String.getDefaultInstance();
  }
  /**
   * <pre>
   * String types
   * </pre>
   *
   * <code>.spark.connect.DataType.String string = 11;</code>
   */
  @java.lang.Override
  public org.apache.kyuubi.engine.spark.connect.proto.DataType.StringOrBuilder getStringOrBuilder() {
    if (kindCase_ == 11) {
       return (org.apache.kyuubi.engine.spark.connect.proto.DataType.String) kind_;
    }
    return org.apache.kyuubi.engine.spark.connect.proto.DataType.String.getDefaultInstance();
  }

  public static final int CHAR_FIELD_NUMBER = 12;
  /**
   * <code>.spark.connect.DataType.Char char = 12;</code>
   * @return Whether the char field is set.
   */
  @java.lang.Override
  public boolean hasChar() {
    return kindCase_ == 12;
  }
  /**
   * <code>.spark.connect.DataType.Char char = 12;</code>
   * @return The char.
   */
  @java.lang.Override
  public org.apache.kyuubi.engine.spark.connect.proto.DataType.Char getChar() {
    if (kindCase_ == 12) {
       return (org.apache.kyuubi.engine.spark.connect.proto.DataType.Char) kind_;
    }
    return org.apache.kyuubi.engine.spark.connect.proto.DataType.Char.getDefaultInstance();
  }
  /**
   * <code>.spark.connect.DataType.Char char = 12;</code>
   */
  @java.lang.Override
  public org.apache.kyuubi.engine.spark.connect.proto.DataType.CharOrBuilder getCharOrBuilder() {
    if (kindCase_ == 12) {
       return (org.apache.kyuubi.engine.spark.connect.proto.DataType.Char) kind_;
    }
    return org.apache.kyuubi.engine.spark.connect.proto.DataType.Char.getDefaultInstance();
  }

  public static final int VAR_CHAR_FIELD_NUMBER = 13;
  /**
   * <code>.spark.connect.DataType.VarChar var_char = 13;</code>
   * @return Whether the varChar field is set.
   */
  @java.lang.Override
  public boolean hasVarChar() {
    return kindCase_ == 13;
  }
  /**
   * <code>.spark.connect.DataType.VarChar var_char = 13;</code>
   * @return The varChar.
   */
  @java.lang.Override
  public org.apache.kyuubi.engine.spark.connect.proto.DataType.VarChar getVarChar() {
    if (kindCase_ == 13) {
       return (org.apache.kyuubi.engine.spark.connect.proto.DataType.VarChar) kind_;
    }
    return org.apache.kyuubi.engine.spark.connect.proto.DataType.VarChar.getDefaultInstance();
  }
  /**
   * <code>.spark.connect.DataType.VarChar var_char = 13;</code>
   */
  @java.lang.Override
  public org.apache.kyuubi.engine.spark.connect.proto.DataType.VarCharOrBuilder getVarCharOrBuilder() {
    if (kindCase_ == 13) {
       return (org.apache.kyuubi.engine.spark.connect.proto.DataType.VarChar) kind_;
    }
    return org.apache.kyuubi.engine.spark.connect.proto.DataType.VarChar.getDefaultInstance();
  }

  public static final int DATE_FIELD_NUMBER = 14;
  /**
   * <pre>
   * Datatime types
   * </pre>
   *
   * <code>.spark.connect.DataType.Date date = 14;</code>
   * @return Whether the date field is set.
   */
  @java.lang.Override
  public boolean hasDate() {
    return kindCase_ == 14;
  }
  /**
   * <pre>
   * Datatime types
   * </pre>
   *
   * <code>.spark.connect.DataType.Date date = 14;</code>
   * @return The date.
   */
  @java.lang.Override
  public org.apache.kyuubi.engine.spark.connect.proto.DataType.Date getDate() {
    if (kindCase_ == 14) {
       return (org.apache.kyuubi.engine.spark.connect.proto.DataType.Date) kind_;
    }
    return org.apache.kyuubi.engine.spark.connect.proto.DataType.Date.getDefaultInstance();
  }
  /**
   * <pre>
   * Datatime types
   * </pre>
   *
   * <code>.spark.connect.DataType.Date date = 14;</code>
   */
  @java.lang.Override
  public org.apache.kyuubi.engine.spark.connect.proto.DataType.DateOrBuilder getDateOrBuilder() {
    if (kindCase_ == 14) {
       return (org.apache.kyuubi.engine.spark.connect.proto.DataType.Date) kind_;
    }
    return org.apache.kyuubi.engine.spark.connect.proto.DataType.Date.getDefaultInstance();
  }

  public static final int TIMESTAMP_FIELD_NUMBER = 15;
  /**
   * <code>.spark.connect.DataType.Timestamp timestamp = 15;</code>
   * @return Whether the timestamp field is set.
   */
  @java.lang.Override
  public boolean hasTimestamp() {
    return kindCase_ == 15;
  }
  /**
   * <code>.spark.connect.DataType.Timestamp timestamp = 15;</code>
   * @return The timestamp.
   */
  @java.lang.Override
  public org.apache.kyuubi.engine.spark.connect.proto.DataType.Timestamp getTimestamp() {
    if (kindCase_ == 15) {
       return (org.apache.kyuubi.engine.spark.connect.proto.DataType.Timestamp) kind_;
    }
    return org.apache.kyuubi.engine.spark.connect.proto.DataType.Timestamp.getDefaultInstance();
  }
  /**
   * <code>.spark.connect.DataType.Timestamp timestamp = 15;</code>
   */
  @java.lang.Override
  public org.apache.kyuubi.engine.spark.connect.proto.DataType.TimestampOrBuilder getTimestampOrBuilder() {
    if (kindCase_ == 15) {
       return (org.apache.kyuubi.engine.spark.connect.proto.DataType.Timestamp) kind_;
    }
    return org.apache.kyuubi.engine.spark.connect.proto.DataType.Timestamp.getDefaultInstance();
  }

  public static final int TIMESTAMP_NTZ_FIELD_NUMBER = 16;
  /**
   * <code>.spark.connect.DataType.TimestampNTZ timestamp_ntz = 16;</code>
   * @return Whether the timestampNtz field is set.
   */
  @java.lang.Override
  public boolean hasTimestampNtz() {
    return kindCase_ == 16;
  }
  /**
   * <code>.spark.connect.DataType.TimestampNTZ timestamp_ntz = 16;</code>
   * @return The timestampNtz.
   */
  @java.lang.Override
  public org.apache.kyuubi.engine.spark.connect.proto.DataType.TimestampNTZ getTimestampNtz() {
    if (kindCase_ == 16) {
       return (org.apache.kyuubi.engine.spark.connect.proto.DataType.TimestampNTZ) kind_;
    }
    return org.apache.kyuubi.engine.spark.connect.proto.DataType.TimestampNTZ.getDefaultInstance();
  }
  /**
   * <code>.spark.connect.DataType.TimestampNTZ timestamp_ntz = 16;</code>
   */
  @java.lang.Override
  public org.apache.kyuubi.engine.spark.connect.proto.DataType.TimestampNTZOrBuilder getTimestampNtzOrBuilder() {
    if (kindCase_ == 16) {
       return (org.apache.kyuubi.engine.spark.connect.proto.DataType.TimestampNTZ) kind_;
    }
    return org.apache.kyuubi.engine.spark.connect.proto.DataType.TimestampNTZ.getDefaultInstance();
  }

  public static final int CALENDAR_INTERVAL_FIELD_NUMBER = 17;
  /**
   * <pre>
   * Interval types
   * </pre>
   *
   * <code>.spark.connect.DataType.CalendarInterval calendar_interval = 17;</code>
   * @return Whether the calendarInterval field is set.
   */
  @java.lang.Override
  public boolean hasCalendarInterval() {
    return kindCase_ == 17;
  }
  /**
   * <pre>
   * Interval types
   * </pre>
   *
   * <code>.spark.connect.DataType.CalendarInterval calendar_interval = 17;</code>
   * @return The calendarInterval.
   */
  @java.lang.Override
  public org.apache.kyuubi.engine.spark.connect.proto.DataType.CalendarInterval getCalendarInterval() {
    if (kindCase_ == 17) {
       return (org.apache.kyuubi.engine.spark.connect.proto.DataType.CalendarInterval) kind_;
    }
    return org.apache.kyuubi.engine.spark.connect.proto.DataType.CalendarInterval.getDefaultInstance();
  }
  /**
   * <pre>
   * Interval types
   * </pre>
   *
   * <code>.spark.connect.DataType.CalendarInterval calendar_interval = 17;</code>
   */
  @java.lang.Override
  public org.apache.kyuubi.engine.spark.connect.proto.DataType.CalendarIntervalOrBuilder getCalendarIntervalOrBuilder() {
    if (kindCase_ == 17) {
       return (org.apache.kyuubi.engine.spark.connect.proto.DataType.CalendarInterval) kind_;
    }
    return org.apache.kyuubi.engine.spark.connect.proto.DataType.CalendarInterval.getDefaultInstance();
  }

  public static final int YEAR_MONTH_INTERVAL_FIELD_NUMBER = 18;
  /**
   * <code>.spark.connect.DataType.YearMonthInterval year_month_interval = 18;</code>
   * @return Whether the yearMonthInterval field is set.
   */
  @java.lang.Override
  public boolean hasYearMonthInterval() {
    return kindCase_ == 18;
  }
  /**
   * <code>.spark.connect.DataType.YearMonthInterval year_month_interval = 18;</code>
   * @return The yearMonthInterval.
   */
  @java.lang.Override
  public org.apache.kyuubi.engine.spark.connect.proto.DataType.YearMonthInterval getYearMonthInterval() {
    if (kindCase_ == 18) {
       return (org.apache.kyuubi.engine.spark.connect.proto.DataType.YearMonthInterval) kind_;
    }
    return org.apache.kyuubi.engine.spark.connect.proto.DataType.YearMonthInterval.getDefaultInstance();
  }
  /**
   * <code>.spark.connect.DataType.YearMonthInterval year_month_interval = 18;</code>
   */
  @java.lang.Override
  public org.apache.kyuubi.engine.spark.connect.proto.DataType.YearMonthIntervalOrBuilder getYearMonthIntervalOrBuilder() {
    if (kindCase_ == 18) {
       return (org.apache.kyuubi.engine.spark.connect.proto.DataType.YearMonthInterval) kind_;
    }
    return org.apache.kyuubi.engine.spark.connect.proto.DataType.YearMonthInterval.getDefaultInstance();
  }

  public static final int DAY_TIME_INTERVAL_FIELD_NUMBER = 19;
  /**
   * <code>.spark.connect.DataType.DayTimeInterval day_time_interval = 19;</code>
   * @return Whether the dayTimeInterval field is set.
   */
  @java.lang.Override
  public boolean hasDayTimeInterval() {
    return kindCase_ == 19;
  }
  /**
   * <code>.spark.connect.DataType.DayTimeInterval day_time_interval = 19;</code>
   * @return The dayTimeInterval.
   */
  @java.lang.Override
  public org.apache.kyuubi.engine.spark.connect.proto.DataType.DayTimeInterval getDayTimeInterval() {
    if (kindCase_ == 19) {
       return (org.apache.kyuubi.engine.spark.connect.proto.DataType.DayTimeInterval) kind_;
    }
    return org.apache.kyuubi.engine.spark.connect.proto.DataType.DayTimeInterval.getDefaultInstance();
  }
  /**
   * <code>.spark.connect.DataType.DayTimeInterval day_time_interval = 19;</code>
   */
  @java.lang.Override
  public org.apache.kyuubi.engine.spark.connect.proto.DataType.DayTimeIntervalOrBuilder getDayTimeIntervalOrBuilder() {
    if (kindCase_ == 19) {
       return (org.apache.kyuubi.engine.spark.connect.proto.DataType.DayTimeInterval) kind_;
    }
    return org.apache.kyuubi.engine.spark.connect.proto.DataType.DayTimeInterval.getDefaultInstance();
  }

  public static final int ARRAY_FIELD_NUMBER = 20;
  /**
   * <pre>
   * Complex types
   * </pre>
   *
   * <code>.spark.connect.DataType.Array array = 20;</code>
   * @return Whether the array field is set.
   */
  @java.lang.Override
  public boolean hasArray() {
    return kindCase_ == 20;
  }
  /**
   * <pre>
   * Complex types
   * </pre>
   *
   * <code>.spark.connect.DataType.Array array = 20;</code>
   * @return The array.
   */
  @java.lang.Override
  public org.apache.kyuubi.engine.spark.connect.proto.DataType.Array getArray() {
    if (kindCase_ == 20) {
       return (org.apache.kyuubi.engine.spark.connect.proto.DataType.Array) kind_;
    }
    return org.apache.kyuubi.engine.spark.connect.proto.DataType.Array.getDefaultInstance();
  }
  /**
   * <pre>
   * Complex types
   * </pre>
   *
   * <code>.spark.connect.DataType.Array array = 20;</code>
   */
  @java.lang.Override
  public org.apache.kyuubi.engine.spark.connect.proto.DataType.ArrayOrBuilder getArrayOrBuilder() {
    if (kindCase_ == 20) {
       return (org.apache.kyuubi.engine.spark.connect.proto.DataType.Array) kind_;
    }
    return org.apache.kyuubi.engine.spark.connect.proto.DataType.Array.getDefaultInstance();
  }

  public static final int STRUCT_FIELD_NUMBER = 21;
  /**
   * <code>.spark.connect.DataType.Struct struct = 21;</code>
   * @return Whether the struct field is set.
   */
  @java.lang.Override
  public boolean hasStruct() {
    return kindCase_ == 21;
  }
  /**
   * <code>.spark.connect.DataType.Struct struct = 21;</code>
   * @return The struct.
   */
  @java.lang.Override
  public org.apache.kyuubi.engine.spark.connect.proto.DataType.Struct getStruct() {
    if (kindCase_ == 21) {
       return (org.apache.kyuubi.engine.spark.connect.proto.DataType.Struct) kind_;
    }
    return org.apache.kyuubi.engine.spark.connect.proto.DataType.Struct.getDefaultInstance();
  }
  /**
   * <code>.spark.connect.DataType.Struct struct = 21;</code>
   */
  @java.lang.Override
  public org.apache.kyuubi.engine.spark.connect.proto.DataType.StructOrBuilder getStructOrBuilder() {
    if (kindCase_ == 21) {
       return (org.apache.kyuubi.engine.spark.connect.proto.DataType.Struct) kind_;
    }
    return org.apache.kyuubi.engine.spark.connect.proto.DataType.Struct.getDefaultInstance();
  }

  public static final int MAP_FIELD_NUMBER = 22;
  /**
   * <code>.spark.connect.DataType.Map map = 22;</code>
   * @return Whether the map field is set.
   */
  @java.lang.Override
  public boolean hasMap() {
    return kindCase_ == 22;
  }
  /**
   * <code>.spark.connect.DataType.Map map = 22;</code>
   * @return The map.
   */
  @java.lang.Override
  public org.apache.kyuubi.engine.spark.connect.proto.DataType.Map getMap() {
    if (kindCase_ == 22) {
       return (org.apache.kyuubi.engine.spark.connect.proto.DataType.Map) kind_;
    }
    return org.apache.kyuubi.engine.spark.connect.proto.DataType.Map.getDefaultInstance();
  }
  /**
   * <code>.spark.connect.DataType.Map map = 22;</code>
   */
  @java.lang.Override
  public org.apache.kyuubi.engine.spark.connect.proto.DataType.MapOrBuilder getMapOrBuilder() {
    if (kindCase_ == 22) {
       return (org.apache.kyuubi.engine.spark.connect.proto.DataType.Map) kind_;
    }
    return org.apache.kyuubi.engine.spark.connect.proto.DataType.Map.getDefaultInstance();
  }

  public static final int UDT_FIELD_NUMBER = 23;
  /**
   * <pre>
   * UserDefinedType
   * </pre>
   *
   * <code>.spark.connect.DataType.UDT udt = 23;</code>
   * @return Whether the udt field is set.
   */
  @java.lang.Override
  public boolean hasUdt() {
    return kindCase_ == 23;
  }
  /**
   * <pre>
   * UserDefinedType
   * </pre>
   *
   * <code>.spark.connect.DataType.UDT udt = 23;</code>
   * @return The udt.
   */
  @java.lang.Override
  public org.apache.kyuubi.engine.spark.connect.proto.DataType.UDT getUdt() {
    if (kindCase_ == 23) {
       return (org.apache.kyuubi.engine.spark.connect.proto.DataType.UDT) kind_;
    }
    return org.apache.kyuubi.engine.spark.connect.proto.DataType.UDT.getDefaultInstance();
  }
  /**
   * <pre>
   * UserDefinedType
   * </pre>
   *
   * <code>.spark.connect.DataType.UDT udt = 23;</code>
   */
  @java.lang.Override
  public org.apache.kyuubi.engine.spark.connect.proto.DataType.UDTOrBuilder getUdtOrBuilder() {
    if (kindCase_ == 23) {
       return (org.apache.kyuubi.engine.spark.connect.proto.DataType.UDT) kind_;
    }
    return org.apache.kyuubi.engine.spark.connect.proto.DataType.UDT.getDefaultInstance();
  }

  public static final int UNPARSED_FIELD_NUMBER = 24;
  /**
   * <pre>
   * UnparsedDataType
   * </pre>
   *
   * <code>.spark.connect.DataType.Unparsed unparsed = 24;</code>
   * @return Whether the unparsed field is set.
   */
  @java.lang.Override
  public boolean hasUnparsed() {
    return kindCase_ == 24;
  }
  /**
   * <pre>
   * UnparsedDataType
   * </pre>
   *
   * <code>.spark.connect.DataType.Unparsed unparsed = 24;</code>
   * @return The unparsed.
   */
  @java.lang.Override
  public org.apache.kyuubi.engine.spark.connect.proto.DataType.Unparsed getUnparsed() {
    if (kindCase_ == 24) {
       return (org.apache.kyuubi.engine.spark.connect.proto.DataType.Unparsed) kind_;
    }
    return org.apache.kyuubi.engine.spark.connect.proto.DataType.Unparsed.getDefaultInstance();
  }
  /**
   * <pre>
   * UnparsedDataType
   * </pre>
   *
   * <code>.spark.connect.DataType.Unparsed unparsed = 24;</code>
   */
  @java.lang.Override
  public org.apache.kyuubi.engine.spark.connect.proto.DataType.UnparsedOrBuilder getUnparsedOrBuilder() {
    if (kindCase_ == 24) {
       return (org.apache.kyuubi.engine.spark.connect.proto.DataType.Unparsed) kind_;
    }
    return org.apache.kyuubi.engine.spark.connect.proto.DataType.Unparsed.getDefaultInstance();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (kindCase_ == 1) {
      output.writeMessage(1, (org.apache.kyuubi.engine.spark.connect.proto.DataType.NULL) kind_);
    }
    if (kindCase_ == 2) {
      output.writeMessage(2, (org.apache.kyuubi.engine.spark.connect.proto.DataType.Binary) kind_);
    }
    if (kindCase_ == 3) {
      output.writeMessage(3, (org.apache.kyuubi.engine.spark.connect.proto.DataType.Boolean) kind_);
    }
    if (kindCase_ == 4) {
      output.writeMessage(4, (org.apache.kyuubi.engine.spark.connect.proto.DataType.Byte) kind_);
    }
    if (kindCase_ == 5) {
      output.writeMessage(5, (org.apache.kyuubi.engine.spark.connect.proto.DataType.Short) kind_);
    }
    if (kindCase_ == 6) {
      output.writeMessage(6, (org.apache.kyuubi.engine.spark.connect.proto.DataType.Integer) kind_);
    }
    if (kindCase_ == 7) {
      output.writeMessage(7, (org.apache.kyuubi.engine.spark.connect.proto.DataType.Long) kind_);
    }
    if (kindCase_ == 8) {
      output.writeMessage(8, (org.apache.kyuubi.engine.spark.connect.proto.DataType.Float) kind_);
    }
    if (kindCase_ == 9) {
      output.writeMessage(9, (org.apache.kyuubi.engine.spark.connect.proto.DataType.Double) kind_);
    }
    if (kindCase_ == 10) {
      output.writeMessage(10, (org.apache.kyuubi.engine.spark.connect.proto.DataType.Decimal) kind_);
    }
    if (kindCase_ == 11) {
      output.writeMessage(11, (org.apache.kyuubi.engine.spark.connect.proto.DataType.String) kind_);
    }
    if (kindCase_ == 12) {
      output.writeMessage(12, (org.apache.kyuubi.engine.spark.connect.proto.DataType.Char) kind_);
    }
    if (kindCase_ == 13) {
      output.writeMessage(13, (org.apache.kyuubi.engine.spark.connect.proto.DataType.VarChar) kind_);
    }
    if (kindCase_ == 14) {
      output.writeMessage(14, (org.apache.kyuubi.engine.spark.connect.proto.DataType.Date) kind_);
    }
    if (kindCase_ == 15) {
      output.writeMessage(15, (org.apache.kyuubi.engine.spark.connect.proto.DataType.Timestamp) kind_);
    }
    if (kindCase_ == 16) {
      output.writeMessage(16, (org.apache.kyuubi.engine.spark.connect.proto.DataType.TimestampNTZ) kind_);
    }
    if (kindCase_ == 17) {
      output.writeMessage(17, (org.apache.kyuubi.engine.spark.connect.proto.DataType.CalendarInterval) kind_);
    }
    if (kindCase_ == 18) {
      output.writeMessage(18, (org.apache.kyuubi.engine.spark.connect.proto.DataType.YearMonthInterval) kind_);
    }
    if (kindCase_ == 19) {
      output.writeMessage(19, (org.apache.kyuubi.engine.spark.connect.proto.DataType.DayTimeInterval) kind_);
    }
    if (kindCase_ == 20) {
      output.writeMessage(20, (org.apache.kyuubi.engine.spark.connect.proto.DataType.Array) kind_);
    }
    if (kindCase_ == 21) {
      output.writeMessage(21, (org.apache.kyuubi.engine.spark.connect.proto.DataType.Struct) kind_);
    }
    if (kindCase_ == 22) {
      output.writeMessage(22, (org.apache.kyuubi.engine.spark.connect.proto.DataType.Map) kind_);
    }
    if (kindCase_ == 23) {
      output.writeMessage(23, (org.apache.kyuubi.engine.spark.connect.proto.DataType.UDT) kind_);
    }
    if (kindCase_ == 24) {
      output.writeMessage(24, (org.apache.kyuubi.engine.spark.connect.proto.DataType.Unparsed) kind_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (kindCase_ == 1) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, (org.apache.kyuubi.engine.spark.connect.proto.DataType.NULL) kind_);
    }
    if (kindCase_ == 2) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, (org.apache.kyuubi.engine.spark.connect.proto.DataType.Binary) kind_);
    }
    if (kindCase_ == 3) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, (org.apache.kyuubi.engine.spark.connect.proto.DataType.Boolean) kind_);
    }
    if (kindCase_ == 4) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, (org.apache.kyuubi.engine.spark.connect.proto.DataType.Byte) kind_);
    }
    if (kindCase_ == 5) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, (org.apache.kyuubi.engine.spark.connect.proto.DataType.Short) kind_);
    }
    if (kindCase_ == 6) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(6, (org.apache.kyuubi.engine.spark.connect.proto.DataType.Integer) kind_);
    }
    if (kindCase_ == 7) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(7, (org.apache.kyuubi.engine.spark.connect.proto.DataType.Long) kind_);
    }
    if (kindCase_ == 8) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(8, (org.apache.kyuubi.engine.spark.connect.proto.DataType.Float) kind_);
    }
    if (kindCase_ == 9) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(9, (org.apache.kyuubi.engine.spark.connect.proto.DataType.Double) kind_);
    }
    if (kindCase_ == 10) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(10, (org.apache.kyuubi.engine.spark.connect.proto.DataType.Decimal) kind_);
    }
    if (kindCase_ == 11) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(11, (org.apache.kyuubi.engine.spark.connect.proto.DataType.String) kind_);
    }
    if (kindCase_ == 12) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(12, (org.apache.kyuubi.engine.spark.connect.proto.DataType.Char) kind_);
    }
    if (kindCase_ == 13) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(13, (org.apache.kyuubi.engine.spark.connect.proto.DataType.VarChar) kind_);
    }
    if (kindCase_ == 14) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(14, (org.apache.kyuubi.engine.spark.connect.proto.DataType.Date) kind_);
    }
    if (kindCase_ == 15) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(15, (org.apache.kyuubi.engine.spark.connect.proto.DataType.Timestamp) kind_);
    }
    if (kindCase_ == 16) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(16, (org.apache.kyuubi.engine.spark.connect.proto.DataType.TimestampNTZ) kind_);
    }
    if (kindCase_ == 17) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(17, (org.apache.kyuubi.engine.spark.connect.proto.DataType.CalendarInterval) kind_);
    }
    if (kindCase_ == 18) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(18, (org.apache.kyuubi.engine.spark.connect.proto.DataType.YearMonthInterval) kind_);
    }
    if (kindCase_ == 19) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(19, (org.apache.kyuubi.engine.spark.connect.proto.DataType.DayTimeInterval) kind_);
    }
    if (kindCase_ == 20) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(20, (org.apache.kyuubi.engine.spark.connect.proto.DataType.Array) kind_);
    }
    if (kindCase_ == 21) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(21, (org.apache.kyuubi.engine.spark.connect.proto.DataType.Struct) kind_);
    }
    if (kindCase_ == 22) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(22, (org.apache.kyuubi.engine.spark.connect.proto.DataType.Map) kind_);
    }
    if (kindCase_ == 23) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(23, (org.apache.kyuubi.engine.spark.connect.proto.DataType.UDT) kind_);
    }
    if (kindCase_ == 24) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(24, (org.apache.kyuubi.engine.spark.connect.proto.DataType.Unparsed) kind_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof org.apache.kyuubi.engine.spark.connect.proto.DataType)) {
      return super.equals(obj);
    }
    org.apache.kyuubi.engine.spark.connect.proto.DataType other = (org.apache.kyuubi.engine.spark.connect.proto.DataType) obj;

    if (!getKindCase().equals(other.getKindCase())) return false;
    switch (kindCase_) {
      case 1:
        if (!getNull()
            .equals(other.getNull())) return false;
        break;
      case 2:
        if (!getBinary()
            .equals(other.getBinary())) return false;
        break;
      case 3:
        if (!getBoolean()
            .equals(other.getBoolean())) return false;
        break;
      case 4:
        if (!getByte()
            .equals(other.getByte())) return false;
        break;
      case 5:
        if (!getShort()
            .equals(other.getShort())) return false;
        break;
      case 6:
        if (!getInteger()
            .equals(other.getInteger())) return false;
        break;
      case 7:
        if (!getLong()
            .equals(other.getLong())) return false;
        break;
      case 8:
        if (!getFloat()
            .equals(other.getFloat())) return false;
        break;
      case 9:
        if (!getDouble()
            .equals(other.getDouble())) return false;
        break;
      case 10:
        if (!getDecimal()
            .equals(other.getDecimal())) return false;
        break;
      case 11:
        if (!getString()
            .equals(other.getString())) return false;
        break;
      case 12:
        if (!getChar()
            .equals(other.getChar())) return false;
        break;
      case 13:
        if (!getVarChar()
            .equals(other.getVarChar())) return false;
        break;
      case 14:
        if (!getDate()
            .equals(other.getDate())) return false;
        break;
      case 15:
        if (!getTimestamp()
            .equals(other.getTimestamp())) return false;
        break;
      case 16:
        if (!getTimestampNtz()
            .equals(other.getTimestampNtz())) return false;
        break;
      case 17:
        if (!getCalendarInterval()
            .equals(other.getCalendarInterval())) return false;
        break;
      case 18:
        if (!getYearMonthInterval()
            .equals(other.getYearMonthInterval())) return false;
        break;
      case 19:
        if (!getDayTimeInterval()
            .equals(other.getDayTimeInterval())) return false;
        break;
      case 20:
        if (!getArray()
            .equals(other.getArray())) return false;
        break;
      case 21:
        if (!getStruct()
            .equals(other.getStruct())) return false;
        break;
      case 22:
        if (!getMap()
            .equals(other.getMap())) return false;
        break;
      case 23:
        if (!getUdt()
            .equals(other.getUdt())) return false;
        break;
      case 24:
        if (!getUnparsed()
            .equals(other.getUnparsed())) return false;
        break;
      case 0:
      default:
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    switch (kindCase_) {
      case 1:
        hash = (37 * hash) + NULL_FIELD_NUMBER;
        hash = (53 * hash) + getNull().hashCode();
        break;
      case 2:
        hash = (37 * hash) + BINARY_FIELD_NUMBER;
        hash = (53 * hash) + getBinary().hashCode();
        break;
      case 3:
        hash = (37 * hash) + BOOLEAN_FIELD_NUMBER;
        hash = (53 * hash) + getBoolean().hashCode();
        break;
      case 4:
        hash = (37 * hash) + BYTE_FIELD_NUMBER;
        hash = (53 * hash) + getByte().hashCode();
        break;
      case 5:
        hash = (37 * hash) + SHORT_FIELD_NUMBER;
        hash = (53 * hash) + getShort().hashCode();
        break;
      case 6:
        hash = (37 * hash) + INTEGER_FIELD_NUMBER;
        hash = (53 * hash) + getInteger().hashCode();
        break;
      case 7:
        hash = (37 * hash) + LONG_FIELD_NUMBER;
        hash = (53 * hash) + getLong().hashCode();
        break;
      case 8:
        hash = (37 * hash) + FLOAT_FIELD_NUMBER;
        hash = (53 * hash) + getFloat().hashCode();
        break;
      case 9:
        hash = (37 * hash) + DOUBLE_FIELD_NUMBER;
        hash = (53 * hash) + getDouble().hashCode();
        break;
      case 10:
        hash = (37 * hash) + DECIMAL_FIELD_NUMBER;
        hash = (53 * hash) + getDecimal().hashCode();
        break;
      case 11:
        hash = (37 * hash) + STRING_FIELD_NUMBER;
        hash = (53 * hash) + getString().hashCode();
        break;
      case 12:
        hash = (37 * hash) + CHAR_FIELD_NUMBER;
        hash = (53 * hash) + getChar().hashCode();
        break;
      case 13:
        hash = (37 * hash) + VAR_CHAR_FIELD_NUMBER;
        hash = (53 * hash) + getVarChar().hashCode();
        break;
      case 14:
        hash = (37 * hash) + DATE_FIELD_NUMBER;
        hash = (53 * hash) + getDate().hashCode();
        break;
      case 15:
        hash = (37 * hash) + TIMESTAMP_FIELD_NUMBER;
        hash = (53 * hash) + getTimestamp().hashCode();
        break;
      case 16:
        hash = (37 * hash) + TIMESTAMP_NTZ_FIELD_NUMBER;
        hash = (53 * hash) + getTimestampNtz().hashCode();
        break;
      case 17:
        hash = (37 * hash) + CALENDAR_INTERVAL_FIELD_NUMBER;
        hash = (53 * hash) + getCalendarInterval().hashCode();
        break;
      case 18:
        hash = (37 * hash) + YEAR_MONTH_INTERVAL_FIELD_NUMBER;
        hash = (53 * hash) + getYearMonthInterval().hashCode();
        break;
      case 19:
        hash = (37 * hash) + DAY_TIME_INTERVAL_FIELD_NUMBER;
        hash = (53 * hash) + getDayTimeInterval().hashCode();
        break;
      case 20:
        hash = (37 * hash) + ARRAY_FIELD_NUMBER;
        hash = (53 * hash) + getArray().hashCode();
        break;
      case 21:
        hash = (37 * hash) + STRUCT_FIELD_NUMBER;
        hash = (53 * hash) + getStruct().hashCode();
        break;
      case 22:
        hash = (37 * hash) + MAP_FIELD_NUMBER;
        hash = (53 * hash) + getMap().hashCode();
        break;
      case 23:
        hash = (37 * hash) + UDT_FIELD_NUMBER;
        hash = (53 * hash) + getUdt().hashCode();
        break;
      case 24:
        hash = (37 * hash) + UNPARSED_FIELD_NUMBER;
        hash = (53 * hash) + getUnparsed().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static org.apache.kyuubi.engine.spark.connect.proto.DataType parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.apache.kyuubi.engine.spark.connect.proto.DataType parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.apache.kyuubi.engine.spark.connect.proto.DataType parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.apache.kyuubi.engine.spark.connect.proto.DataType parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.apache.kyuubi.engine.spark.connect.proto.DataType parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.apache.kyuubi.engine.spark.connect.proto.DataType parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.apache.kyuubi.engine.spark.connect.proto.DataType parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.apache.kyuubi.engine.spark.connect.proto.DataType parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.apache.kyuubi.engine.spark.connect.proto.DataType parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static org.apache.kyuubi.engine.spark.connect.proto.DataType parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.apache.kyuubi.engine.spark.connect.proto.DataType parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.apache.kyuubi.engine.spark.connect.proto.DataType parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(org.apache.kyuubi.engine.spark.connect.proto.DataType prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * This message describes the logical [[DataType]] of something. It does not carry the value
   * itself but only describes it.
   * </pre>
   *
   * Protobuf type {@code spark.connect.DataType}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:spark.connect.DataType)
      org.apache.kyuubi.engine.spark.connect.proto.DataTypeOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.kyuubi.engine.spark.connect.proto.Types.internal_static_spark_connect_DataType_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.kyuubi.engine.spark.connect.proto.Types.internal_static_spark_connect_DataType_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.kyuubi.engine.spark.connect.proto.DataType.class, org.apache.kyuubi.engine.spark.connect.proto.DataType.Builder.class);
    }

    // Construct using org.apache.kyuubi.engine.spark.connect.proto.DataType.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      if (nullBuilder_ != null) {
        nullBuilder_.clear();
      }
      if (binaryBuilder_ != null) {
        binaryBuilder_.clear();
      }
      if (booleanBuilder_ != null) {
        booleanBuilder_.clear();
      }
      if (byteBuilder_ != null) {
        byteBuilder_.clear();
      }
      if (shortBuilder_ != null) {
        shortBuilder_.clear();
      }
      if (integerBuilder_ != null) {
        integerBuilder_.clear();
      }
      if (longBuilder_ != null) {
        longBuilder_.clear();
      }
      if (floatBuilder_ != null) {
        floatBuilder_.clear();
      }
      if (doubleBuilder_ != null) {
        doubleBuilder_.clear();
      }
      if (decimalBuilder_ != null) {
        decimalBuilder_.clear();
      }
      if (stringBuilder_ != null) {
        stringBuilder_.clear();
      }
      if (charBuilder_ != null) {
        charBuilder_.clear();
      }
      if (varCharBuilder_ != null) {
        varCharBuilder_.clear();
      }
      if (dateBuilder_ != null) {
        dateBuilder_.clear();
      }
      if (timestampBuilder_ != null) {
        timestampBuilder_.clear();
      }
      if (timestampNtzBuilder_ != null) {
        timestampNtzBuilder_.clear();
      }
      if (calendarIntervalBuilder_ != null) {
        calendarIntervalBuilder_.clear();
      }
      if (yearMonthIntervalBuilder_ != null) {
        yearMonthIntervalBuilder_.clear();
      }
      if (dayTimeIntervalBuilder_ != null) {
        dayTimeIntervalBuilder_.clear();
      }
      if (arrayBuilder_ != null) {
        arrayBuilder_.clear();
      }
      if (structBuilder_ != null) {
        structBuilder_.clear();
      }
      if (mapBuilder_ != null) {
        mapBuilder_.clear();
      }
      if (udtBuilder_ != null) {
        udtBuilder_.clear();
      }
      if (unparsedBuilder_ != null) {
        unparsedBuilder_.clear();
      }
      kindCase_ = 0;
      kind_ = null;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return org.apache.kyuubi.engine.spark.connect.proto.Types.internal_static_spark_connect_DataType_descriptor;
    }

    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.DataType getDefaultInstanceForType() {
      return org.apache.kyuubi.engine.spark.connect.proto.DataType.getDefaultInstance();
    }

    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.DataType build() {
      org.apache.kyuubi.engine.spark.connect.proto.DataType result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.DataType buildPartial() {
      org.apache.kyuubi.engine.spark.connect.proto.DataType result = new org.apache.kyuubi.engine.spark.connect.proto.DataType(this);
      if (kindCase_ == 1) {
        if (nullBuilder_ == null) {
          result.kind_ = kind_;
        } else {
          result.kind_ = nullBuilder_.build();
        }
      }
      if (kindCase_ == 2) {
        if (binaryBuilder_ == null) {
          result.kind_ = kind_;
        } else {
          result.kind_ = binaryBuilder_.build();
        }
      }
      if (kindCase_ == 3) {
        if (booleanBuilder_ == null) {
          result.kind_ = kind_;
        } else {
          result.kind_ = booleanBuilder_.build();
        }
      }
      if (kindCase_ == 4) {
        if (byteBuilder_ == null) {
          result.kind_ = kind_;
        } else {
          result.kind_ = byteBuilder_.build();
        }
      }
      if (kindCase_ == 5) {
        if (shortBuilder_ == null) {
          result.kind_ = kind_;
        } else {
          result.kind_ = shortBuilder_.build();
        }
      }
      if (kindCase_ == 6) {
        if (integerBuilder_ == null) {
          result.kind_ = kind_;
        } else {
          result.kind_ = integerBuilder_.build();
        }
      }
      if (kindCase_ == 7) {
        if (longBuilder_ == null) {
          result.kind_ = kind_;
        } else {
          result.kind_ = longBuilder_.build();
        }
      }
      if (kindCase_ == 8) {
        if (floatBuilder_ == null) {
          result.kind_ = kind_;
        } else {
          result.kind_ = floatBuilder_.build();
        }
      }
      if (kindCase_ == 9) {
        if (doubleBuilder_ == null) {
          result.kind_ = kind_;
        } else {
          result.kind_ = doubleBuilder_.build();
        }
      }
      if (kindCase_ == 10) {
        if (decimalBuilder_ == null) {
          result.kind_ = kind_;
        } else {
          result.kind_ = decimalBuilder_.build();
        }
      }
      if (kindCase_ == 11) {
        if (stringBuilder_ == null) {
          result.kind_ = kind_;
        } else {
          result.kind_ = stringBuilder_.build();
        }
      }
      if (kindCase_ == 12) {
        if (charBuilder_ == null) {
          result.kind_ = kind_;
        } else {
          result.kind_ = charBuilder_.build();
        }
      }
      if (kindCase_ == 13) {
        if (varCharBuilder_ == null) {
          result.kind_ = kind_;
        } else {
          result.kind_ = varCharBuilder_.build();
        }
      }
      if (kindCase_ == 14) {
        if (dateBuilder_ == null) {
          result.kind_ = kind_;
        } else {
          result.kind_ = dateBuilder_.build();
        }
      }
      if (kindCase_ == 15) {
        if (timestampBuilder_ == null) {
          result.kind_ = kind_;
        } else {
          result.kind_ = timestampBuilder_.build();
        }
      }
      if (kindCase_ == 16) {
        if (timestampNtzBuilder_ == null) {
          result.kind_ = kind_;
        } else {
          result.kind_ = timestampNtzBuilder_.build();
        }
      }
      if (kindCase_ == 17) {
        if (calendarIntervalBuilder_ == null) {
          result.kind_ = kind_;
        } else {
          result.kind_ = calendarIntervalBuilder_.build();
        }
      }
      if (kindCase_ == 18) {
        if (yearMonthIntervalBuilder_ == null) {
          result.kind_ = kind_;
        } else {
          result.kind_ = yearMonthIntervalBuilder_.build();
        }
      }
      if (kindCase_ == 19) {
        if (dayTimeIntervalBuilder_ == null) {
          result.kind_ = kind_;
        } else {
          result.kind_ = dayTimeIntervalBuilder_.build();
        }
      }
      if (kindCase_ == 20) {
        if (arrayBuilder_ == null) {
          result.kind_ = kind_;
        } else {
          result.kind_ = arrayBuilder_.build();
        }
      }
      if (kindCase_ == 21) {
        if (structBuilder_ == null) {
          result.kind_ = kind_;
        } else {
          result.kind_ = structBuilder_.build();
        }
      }
      if (kindCase_ == 22) {
        if (mapBuilder_ == null) {
          result.kind_ = kind_;
        } else {
          result.kind_ = mapBuilder_.build();
        }
      }
      if (kindCase_ == 23) {
        if (udtBuilder_ == null) {
          result.kind_ = kind_;
        } else {
          result.kind_ = udtBuilder_.build();
        }
      }
      if (kindCase_ == 24) {
        if (unparsedBuilder_ == null) {
          result.kind_ = kind_;
        } else {
          result.kind_ = unparsedBuilder_.build();
        }
      }
      result.kindCase_ = kindCase_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof org.apache.kyuubi.engine.spark.connect.proto.DataType) {
        return mergeFrom((org.apache.kyuubi.engine.spark.connect.proto.DataType)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(org.apache.kyuubi.engine.spark.connect.proto.DataType other) {
      if (other == org.apache.kyuubi.engine.spark.connect.proto.DataType.getDefaultInstance()) return this;
      switch (other.getKindCase()) {
        case NULL: {
          mergeNull(other.getNull());
          break;
        }
        case BINARY: {
          mergeBinary(other.getBinary());
          break;
        }
        case BOOLEAN: {
          mergeBoolean(other.getBoolean());
          break;
        }
        case BYTE: {
          mergeByte(other.getByte());
          break;
        }
        case SHORT: {
          mergeShort(other.getShort());
          break;
        }
        case INTEGER: {
          mergeInteger(other.getInteger());
          break;
        }
        case LONG: {
          mergeLong(other.getLong());
          break;
        }
        case FLOAT: {
          mergeFloat(other.getFloat());
          break;
        }
        case DOUBLE: {
          mergeDouble(other.getDouble());
          break;
        }
        case DECIMAL: {
          mergeDecimal(other.getDecimal());
          break;
        }
        case STRING: {
          mergeString(other.getString());
          break;
        }
        case CHAR: {
          mergeChar(other.getChar());
          break;
        }
        case VAR_CHAR: {
          mergeVarChar(other.getVarChar());
          break;
        }
        case DATE: {
          mergeDate(other.getDate());
          break;
        }
        case TIMESTAMP: {
          mergeTimestamp(other.getTimestamp());
          break;
        }
        case TIMESTAMP_NTZ: {
          mergeTimestampNtz(other.getTimestampNtz());
          break;
        }
        case CALENDAR_INTERVAL: {
          mergeCalendarInterval(other.getCalendarInterval());
          break;
        }
        case YEAR_MONTH_INTERVAL: {
          mergeYearMonthInterval(other.getYearMonthInterval());
          break;
        }
        case DAY_TIME_INTERVAL: {
          mergeDayTimeInterval(other.getDayTimeInterval());
          break;
        }
        case ARRAY: {
          mergeArray(other.getArray());
          break;
        }
        case STRUCT: {
          mergeStruct(other.getStruct());
          break;
        }
        case MAP: {
          mergeMap(other.getMap());
          break;
        }
        case UDT: {
          mergeUdt(other.getUdt());
          break;
        }
        case UNPARSED: {
          mergeUnparsed(other.getUnparsed());
          break;
        }
        case KIND_NOT_SET: {
          break;
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              input.readMessage(
                  getNullFieldBuilder().getBuilder(),
                  extensionRegistry);
              kindCase_ = 1;
              break;
            } // case 10
            case 18: {
              input.readMessage(
                  getBinaryFieldBuilder().getBuilder(),
                  extensionRegistry);
              kindCase_ = 2;
              break;
            } // case 18
            case 26: {
              input.readMessage(
                  getBooleanFieldBuilder().getBuilder(),
                  extensionRegistry);
              kindCase_ = 3;
              break;
            } // case 26
            case 34: {
              input.readMessage(
                  getByteFieldBuilder().getBuilder(),
                  extensionRegistry);
              kindCase_ = 4;
              break;
            } // case 34
            case 42: {
              input.readMessage(
                  getShortFieldBuilder().getBuilder(),
                  extensionRegistry);
              kindCase_ = 5;
              break;
            } // case 42
            case 50: {
              input.readMessage(
                  getIntegerFieldBuilder().getBuilder(),
                  extensionRegistry);
              kindCase_ = 6;
              break;
            } // case 50
            case 58: {
              input.readMessage(
                  getLongFieldBuilder().getBuilder(),
                  extensionRegistry);
              kindCase_ = 7;
              break;
            } // case 58
            case 66: {
              input.readMessage(
                  getFloatFieldBuilder().getBuilder(),
                  extensionRegistry);
              kindCase_ = 8;
              break;
            } // case 66
            case 74: {
              input.readMessage(
                  getDoubleFieldBuilder().getBuilder(),
                  extensionRegistry);
              kindCase_ = 9;
              break;
            } // case 74
            case 82: {
              input.readMessage(
                  getDecimalFieldBuilder().getBuilder(),
                  extensionRegistry);
              kindCase_ = 10;
              break;
            } // case 82
            case 90: {
              input.readMessage(
                  getStringFieldBuilder().getBuilder(),
                  extensionRegistry);
              kindCase_ = 11;
              break;
            } // case 90
            case 98: {
              input.readMessage(
                  getCharFieldBuilder().getBuilder(),
                  extensionRegistry);
              kindCase_ = 12;
              break;
            } // case 98
            case 106: {
              input.readMessage(
                  getVarCharFieldBuilder().getBuilder(),
                  extensionRegistry);
              kindCase_ = 13;
              break;
            } // case 106
            case 114: {
              input.readMessage(
                  getDateFieldBuilder().getBuilder(),
                  extensionRegistry);
              kindCase_ = 14;
              break;
            } // case 114
            case 122: {
              input.readMessage(
                  getTimestampFieldBuilder().getBuilder(),
                  extensionRegistry);
              kindCase_ = 15;
              break;
            } // case 122
            case 130: {
              input.readMessage(
                  getTimestampNtzFieldBuilder().getBuilder(),
                  extensionRegistry);
              kindCase_ = 16;
              break;
            } // case 130
            case 138: {
              input.readMessage(
                  getCalendarIntervalFieldBuilder().getBuilder(),
                  extensionRegistry);
              kindCase_ = 17;
              break;
            } // case 138
            case 146: {
              input.readMessage(
                  getYearMonthIntervalFieldBuilder().getBuilder(),
                  extensionRegistry);
              kindCase_ = 18;
              break;
            } // case 146
            case 154: {
              input.readMessage(
                  getDayTimeIntervalFieldBuilder().getBuilder(),
                  extensionRegistry);
              kindCase_ = 19;
              break;
            } // case 154
            case 162: {
              input.readMessage(
                  getArrayFieldBuilder().getBuilder(),
                  extensionRegistry);
              kindCase_ = 20;
              break;
            } // case 162
            case 170: {
              input.readMessage(
                  getStructFieldBuilder().getBuilder(),
                  extensionRegistry);
              kindCase_ = 21;
              break;
            } // case 170
            case 178: {
              input.readMessage(
                  getMapFieldBuilder().getBuilder(),
                  extensionRegistry);
              kindCase_ = 22;
              break;
            } // case 178
            case 186: {
              input.readMessage(
                  getUdtFieldBuilder().getBuilder(),
                  extensionRegistry);
              kindCase_ = 23;
              break;
            } // case 186
            case 194: {
              input.readMessage(
                  getUnparsedFieldBuilder().getBuilder(),
                  extensionRegistry);
              kindCase_ = 24;
              break;
            } // case 194
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int kindCase_ = 0;
    private java.lang.Object kind_;
    public KindCase
        getKindCase() {
      return KindCase.forNumber(
          kindCase_);
    }

    public Builder clearKind() {
      kindCase_ = 0;
      kind_ = null;
      onChanged();
      return this;
    }


    private com.google.protobuf.SingleFieldBuilderV3<
        org.apache.kyuubi.engine.spark.connect.proto.DataType.NULL, org.apache.kyuubi.engine.spark.connect.proto.DataType.NULL.Builder, org.apache.kyuubi.engine.spark.connect.proto.DataType.NULLOrBuilder> nullBuilder_;
    /**
     * <code>.spark.connect.DataType.NULL null = 1;</code>
     * @return Whether the null field is set.
     */
    @java.lang.Override
    public boolean hasNull() {
      return kindCase_ == 1;
    }
    /**
     * <code>.spark.connect.DataType.NULL null = 1;</code>
     * @return The null.
     */
    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.DataType.NULL getNull() {
      if (nullBuilder_ == null) {
        if (kindCase_ == 1) {
          return (org.apache.kyuubi.engine.spark.connect.proto.DataType.NULL) kind_;
        }
        return org.apache.kyuubi.engine.spark.connect.proto.DataType.NULL.getDefaultInstance();
      } else {
        if (kindCase_ == 1) {
          return nullBuilder_.getMessage();
        }
        return org.apache.kyuubi.engine.spark.connect.proto.DataType.NULL.getDefaultInstance();
      }
    }
    /**
     * <code>.spark.connect.DataType.NULL null = 1;</code>
     */
    public Builder setNull(org.apache.kyuubi.engine.spark.connect.proto.DataType.NULL value) {
      if (nullBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        kind_ = value;
        onChanged();
      } else {
        nullBuilder_.setMessage(value);
      }
      kindCase_ = 1;
      return this;
    }
    /**
     * <code>.spark.connect.DataType.NULL null = 1;</code>
     */
    public Builder setNull(
        org.apache.kyuubi.engine.spark.connect.proto.DataType.NULL.Builder builderForValue) {
      if (nullBuilder_ == null) {
        kind_ = builderForValue.build();
        onChanged();
      } else {
        nullBuilder_.setMessage(builderForValue.build());
      }
      kindCase_ = 1;
      return this;
    }
    /**
     * <code>.spark.connect.DataType.NULL null = 1;</code>
     */
    public Builder mergeNull(org.apache.kyuubi.engine.spark.connect.proto.DataType.NULL value) {
      if (nullBuilder_ == null) {
        if (kindCase_ == 1 &&
            kind_ != org.apache.kyuubi.engine.spark.connect.proto.DataType.NULL.getDefaultInstance()) {
          kind_ = org.apache.kyuubi.engine.spark.connect.proto.DataType.NULL.newBuilder((org.apache.kyuubi.engine.spark.connect.proto.DataType.NULL) kind_)
              .mergeFrom(value).buildPartial();
        } else {
          kind_ = value;
        }
        onChanged();
      } else {
        if (kindCase_ == 1) {
          nullBuilder_.mergeFrom(value);
        } else {
          nullBuilder_.setMessage(value);
        }
      }
      kindCase_ = 1;
      return this;
    }
    /**
     * <code>.spark.connect.DataType.NULL null = 1;</code>
     */
    public Builder clearNull() {
      if (nullBuilder_ == null) {
        if (kindCase_ == 1) {
          kindCase_ = 0;
          kind_ = null;
          onChanged();
        }
      } else {
        if (kindCase_ == 1) {
          kindCase_ = 0;
          kind_ = null;
        }
        nullBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.spark.connect.DataType.NULL null = 1;</code>
     */
    public org.apache.kyuubi.engine.spark.connect.proto.DataType.NULL.Builder getNullBuilder() {
      return getNullFieldBuilder().getBuilder();
    }
    /**
     * <code>.spark.connect.DataType.NULL null = 1;</code>
     */
    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.DataType.NULLOrBuilder getNullOrBuilder() {
      if ((kindCase_ == 1) && (nullBuilder_ != null)) {
        return nullBuilder_.getMessageOrBuilder();
      } else {
        if (kindCase_ == 1) {
          return (org.apache.kyuubi.engine.spark.connect.proto.DataType.NULL) kind_;
        }
        return org.apache.kyuubi.engine.spark.connect.proto.DataType.NULL.getDefaultInstance();
      }
    }
    /**
     * <code>.spark.connect.DataType.NULL null = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.apache.kyuubi.engine.spark.connect.proto.DataType.NULL, org.apache.kyuubi.engine.spark.connect.proto.DataType.NULL.Builder, org.apache.kyuubi.engine.spark.connect.proto.DataType.NULLOrBuilder> 
        getNullFieldBuilder() {
      if (nullBuilder_ == null) {
        if (!(kindCase_ == 1)) {
          kind_ = org.apache.kyuubi.engine.spark.connect.proto.DataType.NULL.getDefaultInstance();
        }
        nullBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.apache.kyuubi.engine.spark.connect.proto.DataType.NULL, org.apache.kyuubi.engine.spark.connect.proto.DataType.NULL.Builder, org.apache.kyuubi.engine.spark.connect.proto.DataType.NULLOrBuilder>(
                (org.apache.kyuubi.engine.spark.connect.proto.DataType.NULL) kind_,
                getParentForChildren(),
                isClean());
        kind_ = null;
      }
      kindCase_ = 1;
      onChanged();;
      return nullBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        org.apache.kyuubi.engine.spark.connect.proto.DataType.Binary, org.apache.kyuubi.engine.spark.connect.proto.DataType.Binary.Builder, org.apache.kyuubi.engine.spark.connect.proto.DataType.BinaryOrBuilder> binaryBuilder_;
    /**
     * <code>.spark.connect.DataType.Binary binary = 2;</code>
     * @return Whether the binary field is set.
     */
    @java.lang.Override
    public boolean hasBinary() {
      return kindCase_ == 2;
    }
    /**
     * <code>.spark.connect.DataType.Binary binary = 2;</code>
     * @return The binary.
     */
    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.DataType.Binary getBinary() {
      if (binaryBuilder_ == null) {
        if (kindCase_ == 2) {
          return (org.apache.kyuubi.engine.spark.connect.proto.DataType.Binary) kind_;
        }
        return org.apache.kyuubi.engine.spark.connect.proto.DataType.Binary.getDefaultInstance();
      } else {
        if (kindCase_ == 2) {
          return binaryBuilder_.getMessage();
        }
        return org.apache.kyuubi.engine.spark.connect.proto.DataType.Binary.getDefaultInstance();
      }
    }
    /**
     * <code>.spark.connect.DataType.Binary binary = 2;</code>
     */
    public Builder setBinary(org.apache.kyuubi.engine.spark.connect.proto.DataType.Binary value) {
      if (binaryBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        kind_ = value;
        onChanged();
      } else {
        binaryBuilder_.setMessage(value);
      }
      kindCase_ = 2;
      return this;
    }
    /**
     * <code>.spark.connect.DataType.Binary binary = 2;</code>
     */
    public Builder setBinary(
        org.apache.kyuubi.engine.spark.connect.proto.DataType.Binary.Builder builderForValue) {
      if (binaryBuilder_ == null) {
        kind_ = builderForValue.build();
        onChanged();
      } else {
        binaryBuilder_.setMessage(builderForValue.build());
      }
      kindCase_ = 2;
      return this;
    }
    /**
     * <code>.spark.connect.DataType.Binary binary = 2;</code>
     */
    public Builder mergeBinary(org.apache.kyuubi.engine.spark.connect.proto.DataType.Binary value) {
      if (binaryBuilder_ == null) {
        if (kindCase_ == 2 &&
            kind_ != org.apache.kyuubi.engine.spark.connect.proto.DataType.Binary.getDefaultInstance()) {
          kind_ = org.apache.kyuubi.engine.spark.connect.proto.DataType.Binary.newBuilder((org.apache.kyuubi.engine.spark.connect.proto.DataType.Binary) kind_)
              .mergeFrom(value).buildPartial();
        } else {
          kind_ = value;
        }
        onChanged();
      } else {
        if (kindCase_ == 2) {
          binaryBuilder_.mergeFrom(value);
        } else {
          binaryBuilder_.setMessage(value);
        }
      }
      kindCase_ = 2;
      return this;
    }
    /**
     * <code>.spark.connect.DataType.Binary binary = 2;</code>
     */
    public Builder clearBinary() {
      if (binaryBuilder_ == null) {
        if (kindCase_ == 2) {
          kindCase_ = 0;
          kind_ = null;
          onChanged();
        }
      } else {
        if (kindCase_ == 2) {
          kindCase_ = 0;
          kind_ = null;
        }
        binaryBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.spark.connect.DataType.Binary binary = 2;</code>
     */
    public org.apache.kyuubi.engine.spark.connect.proto.DataType.Binary.Builder getBinaryBuilder() {
      return getBinaryFieldBuilder().getBuilder();
    }
    /**
     * <code>.spark.connect.DataType.Binary binary = 2;</code>
     */
    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.DataType.BinaryOrBuilder getBinaryOrBuilder() {
      if ((kindCase_ == 2) && (binaryBuilder_ != null)) {
        return binaryBuilder_.getMessageOrBuilder();
      } else {
        if (kindCase_ == 2) {
          return (org.apache.kyuubi.engine.spark.connect.proto.DataType.Binary) kind_;
        }
        return org.apache.kyuubi.engine.spark.connect.proto.DataType.Binary.getDefaultInstance();
      }
    }
    /**
     * <code>.spark.connect.DataType.Binary binary = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.apache.kyuubi.engine.spark.connect.proto.DataType.Binary, org.apache.kyuubi.engine.spark.connect.proto.DataType.Binary.Builder, org.apache.kyuubi.engine.spark.connect.proto.DataType.BinaryOrBuilder> 
        getBinaryFieldBuilder() {
      if (binaryBuilder_ == null) {
        if (!(kindCase_ == 2)) {
          kind_ = org.apache.kyuubi.engine.spark.connect.proto.DataType.Binary.getDefaultInstance();
        }
        binaryBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.apache.kyuubi.engine.spark.connect.proto.DataType.Binary, org.apache.kyuubi.engine.spark.connect.proto.DataType.Binary.Builder, org.apache.kyuubi.engine.spark.connect.proto.DataType.BinaryOrBuilder>(
                (org.apache.kyuubi.engine.spark.connect.proto.DataType.Binary) kind_,
                getParentForChildren(),
                isClean());
        kind_ = null;
      }
      kindCase_ = 2;
      onChanged();;
      return binaryBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        org.apache.kyuubi.engine.spark.connect.proto.DataType.Boolean, org.apache.kyuubi.engine.spark.connect.proto.DataType.Boolean.Builder, org.apache.kyuubi.engine.spark.connect.proto.DataType.BooleanOrBuilder> booleanBuilder_;
    /**
     * <code>.spark.connect.DataType.Boolean boolean = 3;</code>
     * @return Whether the boolean field is set.
     */
    @java.lang.Override
    public boolean hasBoolean() {
      return kindCase_ == 3;
    }
    /**
     * <code>.spark.connect.DataType.Boolean boolean = 3;</code>
     * @return The boolean.
     */
    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.DataType.Boolean getBoolean() {
      if (booleanBuilder_ == null) {
        if (kindCase_ == 3) {
          return (org.apache.kyuubi.engine.spark.connect.proto.DataType.Boolean) kind_;
        }
        return org.apache.kyuubi.engine.spark.connect.proto.DataType.Boolean.getDefaultInstance();
      } else {
        if (kindCase_ == 3) {
          return booleanBuilder_.getMessage();
        }
        return org.apache.kyuubi.engine.spark.connect.proto.DataType.Boolean.getDefaultInstance();
      }
    }
    /**
     * <code>.spark.connect.DataType.Boolean boolean = 3;</code>
     */
    public Builder setBoolean(org.apache.kyuubi.engine.spark.connect.proto.DataType.Boolean value) {
      if (booleanBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        kind_ = value;
        onChanged();
      } else {
        booleanBuilder_.setMessage(value);
      }
      kindCase_ = 3;
      return this;
    }
    /**
     * <code>.spark.connect.DataType.Boolean boolean = 3;</code>
     */
    public Builder setBoolean(
        org.apache.kyuubi.engine.spark.connect.proto.DataType.Boolean.Builder builderForValue) {
      if (booleanBuilder_ == null) {
        kind_ = builderForValue.build();
        onChanged();
      } else {
        booleanBuilder_.setMessage(builderForValue.build());
      }
      kindCase_ = 3;
      return this;
    }
    /**
     * <code>.spark.connect.DataType.Boolean boolean = 3;</code>
     */
    public Builder mergeBoolean(org.apache.kyuubi.engine.spark.connect.proto.DataType.Boolean value) {
      if (booleanBuilder_ == null) {
        if (kindCase_ == 3 &&
            kind_ != org.apache.kyuubi.engine.spark.connect.proto.DataType.Boolean.getDefaultInstance()) {
          kind_ = org.apache.kyuubi.engine.spark.connect.proto.DataType.Boolean.newBuilder((org.apache.kyuubi.engine.spark.connect.proto.DataType.Boolean) kind_)
              .mergeFrom(value).buildPartial();
        } else {
          kind_ = value;
        }
        onChanged();
      } else {
        if (kindCase_ == 3) {
          booleanBuilder_.mergeFrom(value);
        } else {
          booleanBuilder_.setMessage(value);
        }
      }
      kindCase_ = 3;
      return this;
    }
    /**
     * <code>.spark.connect.DataType.Boolean boolean = 3;</code>
     */
    public Builder clearBoolean() {
      if (booleanBuilder_ == null) {
        if (kindCase_ == 3) {
          kindCase_ = 0;
          kind_ = null;
          onChanged();
        }
      } else {
        if (kindCase_ == 3) {
          kindCase_ = 0;
          kind_ = null;
        }
        booleanBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.spark.connect.DataType.Boolean boolean = 3;</code>
     */
    public org.apache.kyuubi.engine.spark.connect.proto.DataType.Boolean.Builder getBooleanBuilder() {
      return getBooleanFieldBuilder().getBuilder();
    }
    /**
     * <code>.spark.connect.DataType.Boolean boolean = 3;</code>
     */
    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.DataType.BooleanOrBuilder getBooleanOrBuilder() {
      if ((kindCase_ == 3) && (booleanBuilder_ != null)) {
        return booleanBuilder_.getMessageOrBuilder();
      } else {
        if (kindCase_ == 3) {
          return (org.apache.kyuubi.engine.spark.connect.proto.DataType.Boolean) kind_;
        }
        return org.apache.kyuubi.engine.spark.connect.proto.DataType.Boolean.getDefaultInstance();
      }
    }
    /**
     * <code>.spark.connect.DataType.Boolean boolean = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.apache.kyuubi.engine.spark.connect.proto.DataType.Boolean, org.apache.kyuubi.engine.spark.connect.proto.DataType.Boolean.Builder, org.apache.kyuubi.engine.spark.connect.proto.DataType.BooleanOrBuilder> 
        getBooleanFieldBuilder() {
      if (booleanBuilder_ == null) {
        if (!(kindCase_ == 3)) {
          kind_ = org.apache.kyuubi.engine.spark.connect.proto.DataType.Boolean.getDefaultInstance();
        }
        booleanBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.apache.kyuubi.engine.spark.connect.proto.DataType.Boolean, org.apache.kyuubi.engine.spark.connect.proto.DataType.Boolean.Builder, org.apache.kyuubi.engine.spark.connect.proto.DataType.BooleanOrBuilder>(
                (org.apache.kyuubi.engine.spark.connect.proto.DataType.Boolean) kind_,
                getParentForChildren(),
                isClean());
        kind_ = null;
      }
      kindCase_ = 3;
      onChanged();;
      return booleanBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        org.apache.kyuubi.engine.spark.connect.proto.DataType.Byte, org.apache.kyuubi.engine.spark.connect.proto.DataType.Byte.Builder, org.apache.kyuubi.engine.spark.connect.proto.DataType.ByteOrBuilder> byteBuilder_;
    /**
     * <pre>
     * Numeric types
     * </pre>
     *
     * <code>.spark.connect.DataType.Byte byte = 4;</code>
     * @return Whether the byte field is set.
     */
    @java.lang.Override
    public boolean hasByte() {
      return kindCase_ == 4;
    }
    /**
     * <pre>
     * Numeric types
     * </pre>
     *
     * <code>.spark.connect.DataType.Byte byte = 4;</code>
     * @return The byte.
     */
    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.DataType.Byte getByte() {
      if (byteBuilder_ == null) {
        if (kindCase_ == 4) {
          return (org.apache.kyuubi.engine.spark.connect.proto.DataType.Byte) kind_;
        }
        return org.apache.kyuubi.engine.spark.connect.proto.DataType.Byte.getDefaultInstance();
      } else {
        if (kindCase_ == 4) {
          return byteBuilder_.getMessage();
        }
        return org.apache.kyuubi.engine.spark.connect.proto.DataType.Byte.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Numeric types
     * </pre>
     *
     * <code>.spark.connect.DataType.Byte byte = 4;</code>
     */
    public Builder setByte(org.apache.kyuubi.engine.spark.connect.proto.DataType.Byte value) {
      if (byteBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        kind_ = value;
        onChanged();
      } else {
        byteBuilder_.setMessage(value);
      }
      kindCase_ = 4;
      return this;
    }
    /**
     * <pre>
     * Numeric types
     * </pre>
     *
     * <code>.spark.connect.DataType.Byte byte = 4;</code>
     */
    public Builder setByte(
        org.apache.kyuubi.engine.spark.connect.proto.DataType.Byte.Builder builderForValue) {
      if (byteBuilder_ == null) {
        kind_ = builderForValue.build();
        onChanged();
      } else {
        byteBuilder_.setMessage(builderForValue.build());
      }
      kindCase_ = 4;
      return this;
    }
    /**
     * <pre>
     * Numeric types
     * </pre>
     *
     * <code>.spark.connect.DataType.Byte byte = 4;</code>
     */
    public Builder mergeByte(org.apache.kyuubi.engine.spark.connect.proto.DataType.Byte value) {
      if (byteBuilder_ == null) {
        if (kindCase_ == 4 &&
            kind_ != org.apache.kyuubi.engine.spark.connect.proto.DataType.Byte.getDefaultInstance()) {
          kind_ = org.apache.kyuubi.engine.spark.connect.proto.DataType.Byte.newBuilder((org.apache.kyuubi.engine.spark.connect.proto.DataType.Byte) kind_)
              .mergeFrom(value).buildPartial();
        } else {
          kind_ = value;
        }
        onChanged();
      } else {
        if (kindCase_ == 4) {
          byteBuilder_.mergeFrom(value);
        } else {
          byteBuilder_.setMessage(value);
        }
      }
      kindCase_ = 4;
      return this;
    }
    /**
     * <pre>
     * Numeric types
     * </pre>
     *
     * <code>.spark.connect.DataType.Byte byte = 4;</code>
     */
    public Builder clearByte() {
      if (byteBuilder_ == null) {
        if (kindCase_ == 4) {
          kindCase_ = 0;
          kind_ = null;
          onChanged();
        }
      } else {
        if (kindCase_ == 4) {
          kindCase_ = 0;
          kind_ = null;
        }
        byteBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Numeric types
     * </pre>
     *
     * <code>.spark.connect.DataType.Byte byte = 4;</code>
     */
    public org.apache.kyuubi.engine.spark.connect.proto.DataType.Byte.Builder getByteBuilder() {
      return getByteFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Numeric types
     * </pre>
     *
     * <code>.spark.connect.DataType.Byte byte = 4;</code>
     */
    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.DataType.ByteOrBuilder getByteOrBuilder() {
      if ((kindCase_ == 4) && (byteBuilder_ != null)) {
        return byteBuilder_.getMessageOrBuilder();
      } else {
        if (kindCase_ == 4) {
          return (org.apache.kyuubi.engine.spark.connect.proto.DataType.Byte) kind_;
        }
        return org.apache.kyuubi.engine.spark.connect.proto.DataType.Byte.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Numeric types
     * </pre>
     *
     * <code>.spark.connect.DataType.Byte byte = 4;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.apache.kyuubi.engine.spark.connect.proto.DataType.Byte, org.apache.kyuubi.engine.spark.connect.proto.DataType.Byte.Builder, org.apache.kyuubi.engine.spark.connect.proto.DataType.ByteOrBuilder> 
        getByteFieldBuilder() {
      if (byteBuilder_ == null) {
        if (!(kindCase_ == 4)) {
          kind_ = org.apache.kyuubi.engine.spark.connect.proto.DataType.Byte.getDefaultInstance();
        }
        byteBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.apache.kyuubi.engine.spark.connect.proto.DataType.Byte, org.apache.kyuubi.engine.spark.connect.proto.DataType.Byte.Builder, org.apache.kyuubi.engine.spark.connect.proto.DataType.ByteOrBuilder>(
                (org.apache.kyuubi.engine.spark.connect.proto.DataType.Byte) kind_,
                getParentForChildren(),
                isClean());
        kind_ = null;
      }
      kindCase_ = 4;
      onChanged();;
      return byteBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        org.apache.kyuubi.engine.spark.connect.proto.DataType.Short, org.apache.kyuubi.engine.spark.connect.proto.DataType.Short.Builder, org.apache.kyuubi.engine.spark.connect.proto.DataType.ShortOrBuilder> shortBuilder_;
    /**
     * <code>.spark.connect.DataType.Short short = 5;</code>
     * @return Whether the short field is set.
     */
    @java.lang.Override
    public boolean hasShort() {
      return kindCase_ == 5;
    }
    /**
     * <code>.spark.connect.DataType.Short short = 5;</code>
     * @return The short.
     */
    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.DataType.Short getShort() {
      if (shortBuilder_ == null) {
        if (kindCase_ == 5) {
          return (org.apache.kyuubi.engine.spark.connect.proto.DataType.Short) kind_;
        }
        return org.apache.kyuubi.engine.spark.connect.proto.DataType.Short.getDefaultInstance();
      } else {
        if (kindCase_ == 5) {
          return shortBuilder_.getMessage();
        }
        return org.apache.kyuubi.engine.spark.connect.proto.DataType.Short.getDefaultInstance();
      }
    }
    /**
     * <code>.spark.connect.DataType.Short short = 5;</code>
     */
    public Builder setShort(org.apache.kyuubi.engine.spark.connect.proto.DataType.Short value) {
      if (shortBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        kind_ = value;
        onChanged();
      } else {
        shortBuilder_.setMessage(value);
      }
      kindCase_ = 5;
      return this;
    }
    /**
     * <code>.spark.connect.DataType.Short short = 5;</code>
     */
    public Builder setShort(
        org.apache.kyuubi.engine.spark.connect.proto.DataType.Short.Builder builderForValue) {
      if (shortBuilder_ == null) {
        kind_ = builderForValue.build();
        onChanged();
      } else {
        shortBuilder_.setMessage(builderForValue.build());
      }
      kindCase_ = 5;
      return this;
    }
    /**
     * <code>.spark.connect.DataType.Short short = 5;</code>
     */
    public Builder mergeShort(org.apache.kyuubi.engine.spark.connect.proto.DataType.Short value) {
      if (shortBuilder_ == null) {
        if (kindCase_ == 5 &&
            kind_ != org.apache.kyuubi.engine.spark.connect.proto.DataType.Short.getDefaultInstance()) {
          kind_ = org.apache.kyuubi.engine.spark.connect.proto.DataType.Short.newBuilder((org.apache.kyuubi.engine.spark.connect.proto.DataType.Short) kind_)
              .mergeFrom(value).buildPartial();
        } else {
          kind_ = value;
        }
        onChanged();
      } else {
        if (kindCase_ == 5) {
          shortBuilder_.mergeFrom(value);
        } else {
          shortBuilder_.setMessage(value);
        }
      }
      kindCase_ = 5;
      return this;
    }
    /**
     * <code>.spark.connect.DataType.Short short = 5;</code>
     */
    public Builder clearShort() {
      if (shortBuilder_ == null) {
        if (kindCase_ == 5) {
          kindCase_ = 0;
          kind_ = null;
          onChanged();
        }
      } else {
        if (kindCase_ == 5) {
          kindCase_ = 0;
          kind_ = null;
        }
        shortBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.spark.connect.DataType.Short short = 5;</code>
     */
    public org.apache.kyuubi.engine.spark.connect.proto.DataType.Short.Builder getShortBuilder() {
      return getShortFieldBuilder().getBuilder();
    }
    /**
     * <code>.spark.connect.DataType.Short short = 5;</code>
     */
    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.DataType.ShortOrBuilder getShortOrBuilder() {
      if ((kindCase_ == 5) && (shortBuilder_ != null)) {
        return shortBuilder_.getMessageOrBuilder();
      } else {
        if (kindCase_ == 5) {
          return (org.apache.kyuubi.engine.spark.connect.proto.DataType.Short) kind_;
        }
        return org.apache.kyuubi.engine.spark.connect.proto.DataType.Short.getDefaultInstance();
      }
    }
    /**
     * <code>.spark.connect.DataType.Short short = 5;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.apache.kyuubi.engine.spark.connect.proto.DataType.Short, org.apache.kyuubi.engine.spark.connect.proto.DataType.Short.Builder, org.apache.kyuubi.engine.spark.connect.proto.DataType.ShortOrBuilder> 
        getShortFieldBuilder() {
      if (shortBuilder_ == null) {
        if (!(kindCase_ == 5)) {
          kind_ = org.apache.kyuubi.engine.spark.connect.proto.DataType.Short.getDefaultInstance();
        }
        shortBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.apache.kyuubi.engine.spark.connect.proto.DataType.Short, org.apache.kyuubi.engine.spark.connect.proto.DataType.Short.Builder, org.apache.kyuubi.engine.spark.connect.proto.DataType.ShortOrBuilder>(
                (org.apache.kyuubi.engine.spark.connect.proto.DataType.Short) kind_,
                getParentForChildren(),
                isClean());
        kind_ = null;
      }
      kindCase_ = 5;
      onChanged();;
      return shortBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        org.apache.kyuubi.engine.spark.connect.proto.DataType.Integer, org.apache.kyuubi.engine.spark.connect.proto.DataType.Integer.Builder, org.apache.kyuubi.engine.spark.connect.proto.DataType.IntegerOrBuilder> integerBuilder_;
    /**
     * <code>.spark.connect.DataType.Integer integer = 6;</code>
     * @return Whether the integer field is set.
     */
    @java.lang.Override
    public boolean hasInteger() {
      return kindCase_ == 6;
    }
    /**
     * <code>.spark.connect.DataType.Integer integer = 6;</code>
     * @return The integer.
     */
    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.DataType.Integer getInteger() {
      if (integerBuilder_ == null) {
        if (kindCase_ == 6) {
          return (org.apache.kyuubi.engine.spark.connect.proto.DataType.Integer) kind_;
        }
        return org.apache.kyuubi.engine.spark.connect.proto.DataType.Integer.getDefaultInstance();
      } else {
        if (kindCase_ == 6) {
          return integerBuilder_.getMessage();
        }
        return org.apache.kyuubi.engine.spark.connect.proto.DataType.Integer.getDefaultInstance();
      }
    }
    /**
     * <code>.spark.connect.DataType.Integer integer = 6;</code>
     */
    public Builder setInteger(org.apache.kyuubi.engine.spark.connect.proto.DataType.Integer value) {
      if (integerBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        kind_ = value;
        onChanged();
      } else {
        integerBuilder_.setMessage(value);
      }
      kindCase_ = 6;
      return this;
    }
    /**
     * <code>.spark.connect.DataType.Integer integer = 6;</code>
     */
    public Builder setInteger(
        org.apache.kyuubi.engine.spark.connect.proto.DataType.Integer.Builder builderForValue) {
      if (integerBuilder_ == null) {
        kind_ = builderForValue.build();
        onChanged();
      } else {
        integerBuilder_.setMessage(builderForValue.build());
      }
      kindCase_ = 6;
      return this;
    }
    /**
     * <code>.spark.connect.DataType.Integer integer = 6;</code>
     */
    public Builder mergeInteger(org.apache.kyuubi.engine.spark.connect.proto.DataType.Integer value) {
      if (integerBuilder_ == null) {
        if (kindCase_ == 6 &&
            kind_ != org.apache.kyuubi.engine.spark.connect.proto.DataType.Integer.getDefaultInstance()) {
          kind_ = org.apache.kyuubi.engine.spark.connect.proto.DataType.Integer.newBuilder((org.apache.kyuubi.engine.spark.connect.proto.DataType.Integer) kind_)
              .mergeFrom(value).buildPartial();
        } else {
          kind_ = value;
        }
        onChanged();
      } else {
        if (kindCase_ == 6) {
          integerBuilder_.mergeFrom(value);
        } else {
          integerBuilder_.setMessage(value);
        }
      }
      kindCase_ = 6;
      return this;
    }
    /**
     * <code>.spark.connect.DataType.Integer integer = 6;</code>
     */
    public Builder clearInteger() {
      if (integerBuilder_ == null) {
        if (kindCase_ == 6) {
          kindCase_ = 0;
          kind_ = null;
          onChanged();
        }
      } else {
        if (kindCase_ == 6) {
          kindCase_ = 0;
          kind_ = null;
        }
        integerBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.spark.connect.DataType.Integer integer = 6;</code>
     */
    public org.apache.kyuubi.engine.spark.connect.proto.DataType.Integer.Builder getIntegerBuilder() {
      return getIntegerFieldBuilder().getBuilder();
    }
    /**
     * <code>.spark.connect.DataType.Integer integer = 6;</code>
     */
    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.DataType.IntegerOrBuilder getIntegerOrBuilder() {
      if ((kindCase_ == 6) && (integerBuilder_ != null)) {
        return integerBuilder_.getMessageOrBuilder();
      } else {
        if (kindCase_ == 6) {
          return (org.apache.kyuubi.engine.spark.connect.proto.DataType.Integer) kind_;
        }
        return org.apache.kyuubi.engine.spark.connect.proto.DataType.Integer.getDefaultInstance();
      }
    }
    /**
     * <code>.spark.connect.DataType.Integer integer = 6;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.apache.kyuubi.engine.spark.connect.proto.DataType.Integer, org.apache.kyuubi.engine.spark.connect.proto.DataType.Integer.Builder, org.apache.kyuubi.engine.spark.connect.proto.DataType.IntegerOrBuilder> 
        getIntegerFieldBuilder() {
      if (integerBuilder_ == null) {
        if (!(kindCase_ == 6)) {
          kind_ = org.apache.kyuubi.engine.spark.connect.proto.DataType.Integer.getDefaultInstance();
        }
        integerBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.apache.kyuubi.engine.spark.connect.proto.DataType.Integer, org.apache.kyuubi.engine.spark.connect.proto.DataType.Integer.Builder, org.apache.kyuubi.engine.spark.connect.proto.DataType.IntegerOrBuilder>(
                (org.apache.kyuubi.engine.spark.connect.proto.DataType.Integer) kind_,
                getParentForChildren(),
                isClean());
        kind_ = null;
      }
      kindCase_ = 6;
      onChanged();;
      return integerBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        org.apache.kyuubi.engine.spark.connect.proto.DataType.Long, org.apache.kyuubi.engine.spark.connect.proto.DataType.Long.Builder, org.apache.kyuubi.engine.spark.connect.proto.DataType.LongOrBuilder> longBuilder_;
    /**
     * <code>.spark.connect.DataType.Long long = 7;</code>
     * @return Whether the long field is set.
     */
    @java.lang.Override
    public boolean hasLong() {
      return kindCase_ == 7;
    }
    /**
     * <code>.spark.connect.DataType.Long long = 7;</code>
     * @return The long.
     */
    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.DataType.Long getLong() {
      if (longBuilder_ == null) {
        if (kindCase_ == 7) {
          return (org.apache.kyuubi.engine.spark.connect.proto.DataType.Long) kind_;
        }
        return org.apache.kyuubi.engine.spark.connect.proto.DataType.Long.getDefaultInstance();
      } else {
        if (kindCase_ == 7) {
          return longBuilder_.getMessage();
        }
        return org.apache.kyuubi.engine.spark.connect.proto.DataType.Long.getDefaultInstance();
      }
    }
    /**
     * <code>.spark.connect.DataType.Long long = 7;</code>
     */
    public Builder setLong(org.apache.kyuubi.engine.spark.connect.proto.DataType.Long value) {
      if (longBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        kind_ = value;
        onChanged();
      } else {
        longBuilder_.setMessage(value);
      }
      kindCase_ = 7;
      return this;
    }
    /**
     * <code>.spark.connect.DataType.Long long = 7;</code>
     */
    public Builder setLong(
        org.apache.kyuubi.engine.spark.connect.proto.DataType.Long.Builder builderForValue) {
      if (longBuilder_ == null) {
        kind_ = builderForValue.build();
        onChanged();
      } else {
        longBuilder_.setMessage(builderForValue.build());
      }
      kindCase_ = 7;
      return this;
    }
    /**
     * <code>.spark.connect.DataType.Long long = 7;</code>
     */
    public Builder mergeLong(org.apache.kyuubi.engine.spark.connect.proto.DataType.Long value) {
      if (longBuilder_ == null) {
        if (kindCase_ == 7 &&
            kind_ != org.apache.kyuubi.engine.spark.connect.proto.DataType.Long.getDefaultInstance()) {
          kind_ = org.apache.kyuubi.engine.spark.connect.proto.DataType.Long.newBuilder((org.apache.kyuubi.engine.spark.connect.proto.DataType.Long) kind_)
              .mergeFrom(value).buildPartial();
        } else {
          kind_ = value;
        }
        onChanged();
      } else {
        if (kindCase_ == 7) {
          longBuilder_.mergeFrom(value);
        } else {
          longBuilder_.setMessage(value);
        }
      }
      kindCase_ = 7;
      return this;
    }
    /**
     * <code>.spark.connect.DataType.Long long = 7;</code>
     */
    public Builder clearLong() {
      if (longBuilder_ == null) {
        if (kindCase_ == 7) {
          kindCase_ = 0;
          kind_ = null;
          onChanged();
        }
      } else {
        if (kindCase_ == 7) {
          kindCase_ = 0;
          kind_ = null;
        }
        longBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.spark.connect.DataType.Long long = 7;</code>
     */
    public org.apache.kyuubi.engine.spark.connect.proto.DataType.Long.Builder getLongBuilder() {
      return getLongFieldBuilder().getBuilder();
    }
    /**
     * <code>.spark.connect.DataType.Long long = 7;</code>
     */
    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.DataType.LongOrBuilder getLongOrBuilder() {
      if ((kindCase_ == 7) && (longBuilder_ != null)) {
        return longBuilder_.getMessageOrBuilder();
      } else {
        if (kindCase_ == 7) {
          return (org.apache.kyuubi.engine.spark.connect.proto.DataType.Long) kind_;
        }
        return org.apache.kyuubi.engine.spark.connect.proto.DataType.Long.getDefaultInstance();
      }
    }
    /**
     * <code>.spark.connect.DataType.Long long = 7;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.apache.kyuubi.engine.spark.connect.proto.DataType.Long, org.apache.kyuubi.engine.spark.connect.proto.DataType.Long.Builder, org.apache.kyuubi.engine.spark.connect.proto.DataType.LongOrBuilder> 
        getLongFieldBuilder() {
      if (longBuilder_ == null) {
        if (!(kindCase_ == 7)) {
          kind_ = org.apache.kyuubi.engine.spark.connect.proto.DataType.Long.getDefaultInstance();
        }
        longBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.apache.kyuubi.engine.spark.connect.proto.DataType.Long, org.apache.kyuubi.engine.spark.connect.proto.DataType.Long.Builder, org.apache.kyuubi.engine.spark.connect.proto.DataType.LongOrBuilder>(
                (org.apache.kyuubi.engine.spark.connect.proto.DataType.Long) kind_,
                getParentForChildren(),
                isClean());
        kind_ = null;
      }
      kindCase_ = 7;
      onChanged();;
      return longBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        org.apache.kyuubi.engine.spark.connect.proto.DataType.Float, org.apache.kyuubi.engine.spark.connect.proto.DataType.Float.Builder, org.apache.kyuubi.engine.spark.connect.proto.DataType.FloatOrBuilder> floatBuilder_;
    /**
     * <code>.spark.connect.DataType.Float float = 8;</code>
     * @return Whether the float field is set.
     */
    @java.lang.Override
    public boolean hasFloat() {
      return kindCase_ == 8;
    }
    /**
     * <code>.spark.connect.DataType.Float float = 8;</code>
     * @return The float.
     */
    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.DataType.Float getFloat() {
      if (floatBuilder_ == null) {
        if (kindCase_ == 8) {
          return (org.apache.kyuubi.engine.spark.connect.proto.DataType.Float) kind_;
        }
        return org.apache.kyuubi.engine.spark.connect.proto.DataType.Float.getDefaultInstance();
      } else {
        if (kindCase_ == 8) {
          return floatBuilder_.getMessage();
        }
        return org.apache.kyuubi.engine.spark.connect.proto.DataType.Float.getDefaultInstance();
      }
    }
    /**
     * <code>.spark.connect.DataType.Float float = 8;</code>
     */
    public Builder setFloat(org.apache.kyuubi.engine.spark.connect.proto.DataType.Float value) {
      if (floatBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        kind_ = value;
        onChanged();
      } else {
        floatBuilder_.setMessage(value);
      }
      kindCase_ = 8;
      return this;
    }
    /**
     * <code>.spark.connect.DataType.Float float = 8;</code>
     */
    public Builder setFloat(
        org.apache.kyuubi.engine.spark.connect.proto.DataType.Float.Builder builderForValue) {
      if (floatBuilder_ == null) {
        kind_ = builderForValue.build();
        onChanged();
      } else {
        floatBuilder_.setMessage(builderForValue.build());
      }
      kindCase_ = 8;
      return this;
    }
    /**
     * <code>.spark.connect.DataType.Float float = 8;</code>
     */
    public Builder mergeFloat(org.apache.kyuubi.engine.spark.connect.proto.DataType.Float value) {
      if (floatBuilder_ == null) {
        if (kindCase_ == 8 &&
            kind_ != org.apache.kyuubi.engine.spark.connect.proto.DataType.Float.getDefaultInstance()) {
          kind_ = org.apache.kyuubi.engine.spark.connect.proto.DataType.Float.newBuilder((org.apache.kyuubi.engine.spark.connect.proto.DataType.Float) kind_)
              .mergeFrom(value).buildPartial();
        } else {
          kind_ = value;
        }
        onChanged();
      } else {
        if (kindCase_ == 8) {
          floatBuilder_.mergeFrom(value);
        } else {
          floatBuilder_.setMessage(value);
        }
      }
      kindCase_ = 8;
      return this;
    }
    /**
     * <code>.spark.connect.DataType.Float float = 8;</code>
     */
    public Builder clearFloat() {
      if (floatBuilder_ == null) {
        if (kindCase_ == 8) {
          kindCase_ = 0;
          kind_ = null;
          onChanged();
        }
      } else {
        if (kindCase_ == 8) {
          kindCase_ = 0;
          kind_ = null;
        }
        floatBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.spark.connect.DataType.Float float = 8;</code>
     */
    public org.apache.kyuubi.engine.spark.connect.proto.DataType.Float.Builder getFloatBuilder() {
      return getFloatFieldBuilder().getBuilder();
    }
    /**
     * <code>.spark.connect.DataType.Float float = 8;</code>
     */
    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.DataType.FloatOrBuilder getFloatOrBuilder() {
      if ((kindCase_ == 8) && (floatBuilder_ != null)) {
        return floatBuilder_.getMessageOrBuilder();
      } else {
        if (kindCase_ == 8) {
          return (org.apache.kyuubi.engine.spark.connect.proto.DataType.Float) kind_;
        }
        return org.apache.kyuubi.engine.spark.connect.proto.DataType.Float.getDefaultInstance();
      }
    }
    /**
     * <code>.spark.connect.DataType.Float float = 8;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.apache.kyuubi.engine.spark.connect.proto.DataType.Float, org.apache.kyuubi.engine.spark.connect.proto.DataType.Float.Builder, org.apache.kyuubi.engine.spark.connect.proto.DataType.FloatOrBuilder> 
        getFloatFieldBuilder() {
      if (floatBuilder_ == null) {
        if (!(kindCase_ == 8)) {
          kind_ = org.apache.kyuubi.engine.spark.connect.proto.DataType.Float.getDefaultInstance();
        }
        floatBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.apache.kyuubi.engine.spark.connect.proto.DataType.Float, org.apache.kyuubi.engine.spark.connect.proto.DataType.Float.Builder, org.apache.kyuubi.engine.spark.connect.proto.DataType.FloatOrBuilder>(
                (org.apache.kyuubi.engine.spark.connect.proto.DataType.Float) kind_,
                getParentForChildren(),
                isClean());
        kind_ = null;
      }
      kindCase_ = 8;
      onChanged();;
      return floatBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        org.apache.kyuubi.engine.spark.connect.proto.DataType.Double, org.apache.kyuubi.engine.spark.connect.proto.DataType.Double.Builder, org.apache.kyuubi.engine.spark.connect.proto.DataType.DoubleOrBuilder> doubleBuilder_;
    /**
     * <code>.spark.connect.DataType.Double double = 9;</code>
     * @return Whether the double field is set.
     */
    @java.lang.Override
    public boolean hasDouble() {
      return kindCase_ == 9;
    }
    /**
     * <code>.spark.connect.DataType.Double double = 9;</code>
     * @return The double.
     */
    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.DataType.Double getDouble() {
      if (doubleBuilder_ == null) {
        if (kindCase_ == 9) {
          return (org.apache.kyuubi.engine.spark.connect.proto.DataType.Double) kind_;
        }
        return org.apache.kyuubi.engine.spark.connect.proto.DataType.Double.getDefaultInstance();
      } else {
        if (kindCase_ == 9) {
          return doubleBuilder_.getMessage();
        }
        return org.apache.kyuubi.engine.spark.connect.proto.DataType.Double.getDefaultInstance();
      }
    }
    /**
     * <code>.spark.connect.DataType.Double double = 9;</code>
     */
    public Builder setDouble(org.apache.kyuubi.engine.spark.connect.proto.DataType.Double value) {
      if (doubleBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        kind_ = value;
        onChanged();
      } else {
        doubleBuilder_.setMessage(value);
      }
      kindCase_ = 9;
      return this;
    }
    /**
     * <code>.spark.connect.DataType.Double double = 9;</code>
     */
    public Builder setDouble(
        org.apache.kyuubi.engine.spark.connect.proto.DataType.Double.Builder builderForValue) {
      if (doubleBuilder_ == null) {
        kind_ = builderForValue.build();
        onChanged();
      } else {
        doubleBuilder_.setMessage(builderForValue.build());
      }
      kindCase_ = 9;
      return this;
    }
    /**
     * <code>.spark.connect.DataType.Double double = 9;</code>
     */
    public Builder mergeDouble(org.apache.kyuubi.engine.spark.connect.proto.DataType.Double value) {
      if (doubleBuilder_ == null) {
        if (kindCase_ == 9 &&
            kind_ != org.apache.kyuubi.engine.spark.connect.proto.DataType.Double.getDefaultInstance()) {
          kind_ = org.apache.kyuubi.engine.spark.connect.proto.DataType.Double.newBuilder((org.apache.kyuubi.engine.spark.connect.proto.DataType.Double) kind_)
              .mergeFrom(value).buildPartial();
        } else {
          kind_ = value;
        }
        onChanged();
      } else {
        if (kindCase_ == 9) {
          doubleBuilder_.mergeFrom(value);
        } else {
          doubleBuilder_.setMessage(value);
        }
      }
      kindCase_ = 9;
      return this;
    }
    /**
     * <code>.spark.connect.DataType.Double double = 9;</code>
     */
    public Builder clearDouble() {
      if (doubleBuilder_ == null) {
        if (kindCase_ == 9) {
          kindCase_ = 0;
          kind_ = null;
          onChanged();
        }
      } else {
        if (kindCase_ == 9) {
          kindCase_ = 0;
          kind_ = null;
        }
        doubleBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.spark.connect.DataType.Double double = 9;</code>
     */
    public org.apache.kyuubi.engine.spark.connect.proto.DataType.Double.Builder getDoubleBuilder() {
      return getDoubleFieldBuilder().getBuilder();
    }
    /**
     * <code>.spark.connect.DataType.Double double = 9;</code>
     */
    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.DataType.DoubleOrBuilder getDoubleOrBuilder() {
      if ((kindCase_ == 9) && (doubleBuilder_ != null)) {
        return doubleBuilder_.getMessageOrBuilder();
      } else {
        if (kindCase_ == 9) {
          return (org.apache.kyuubi.engine.spark.connect.proto.DataType.Double) kind_;
        }
        return org.apache.kyuubi.engine.spark.connect.proto.DataType.Double.getDefaultInstance();
      }
    }
    /**
     * <code>.spark.connect.DataType.Double double = 9;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.apache.kyuubi.engine.spark.connect.proto.DataType.Double, org.apache.kyuubi.engine.spark.connect.proto.DataType.Double.Builder, org.apache.kyuubi.engine.spark.connect.proto.DataType.DoubleOrBuilder> 
        getDoubleFieldBuilder() {
      if (doubleBuilder_ == null) {
        if (!(kindCase_ == 9)) {
          kind_ = org.apache.kyuubi.engine.spark.connect.proto.DataType.Double.getDefaultInstance();
        }
        doubleBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.apache.kyuubi.engine.spark.connect.proto.DataType.Double, org.apache.kyuubi.engine.spark.connect.proto.DataType.Double.Builder, org.apache.kyuubi.engine.spark.connect.proto.DataType.DoubleOrBuilder>(
                (org.apache.kyuubi.engine.spark.connect.proto.DataType.Double) kind_,
                getParentForChildren(),
                isClean());
        kind_ = null;
      }
      kindCase_ = 9;
      onChanged();;
      return doubleBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        org.apache.kyuubi.engine.spark.connect.proto.DataType.Decimal, org.apache.kyuubi.engine.spark.connect.proto.DataType.Decimal.Builder, org.apache.kyuubi.engine.spark.connect.proto.DataType.DecimalOrBuilder> decimalBuilder_;
    /**
     * <code>.spark.connect.DataType.Decimal decimal = 10;</code>
     * @return Whether the decimal field is set.
     */
    @java.lang.Override
    public boolean hasDecimal() {
      return kindCase_ == 10;
    }
    /**
     * <code>.spark.connect.DataType.Decimal decimal = 10;</code>
     * @return The decimal.
     */
    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.DataType.Decimal getDecimal() {
      if (decimalBuilder_ == null) {
        if (kindCase_ == 10) {
          return (org.apache.kyuubi.engine.spark.connect.proto.DataType.Decimal) kind_;
        }
        return org.apache.kyuubi.engine.spark.connect.proto.DataType.Decimal.getDefaultInstance();
      } else {
        if (kindCase_ == 10) {
          return decimalBuilder_.getMessage();
        }
        return org.apache.kyuubi.engine.spark.connect.proto.DataType.Decimal.getDefaultInstance();
      }
    }
    /**
     * <code>.spark.connect.DataType.Decimal decimal = 10;</code>
     */
    public Builder setDecimal(org.apache.kyuubi.engine.spark.connect.proto.DataType.Decimal value) {
      if (decimalBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        kind_ = value;
        onChanged();
      } else {
        decimalBuilder_.setMessage(value);
      }
      kindCase_ = 10;
      return this;
    }
    /**
     * <code>.spark.connect.DataType.Decimal decimal = 10;</code>
     */
    public Builder setDecimal(
        org.apache.kyuubi.engine.spark.connect.proto.DataType.Decimal.Builder builderForValue) {
      if (decimalBuilder_ == null) {
        kind_ = builderForValue.build();
        onChanged();
      } else {
        decimalBuilder_.setMessage(builderForValue.build());
      }
      kindCase_ = 10;
      return this;
    }
    /**
     * <code>.spark.connect.DataType.Decimal decimal = 10;</code>
     */
    public Builder mergeDecimal(org.apache.kyuubi.engine.spark.connect.proto.DataType.Decimal value) {
      if (decimalBuilder_ == null) {
        if (kindCase_ == 10 &&
            kind_ != org.apache.kyuubi.engine.spark.connect.proto.DataType.Decimal.getDefaultInstance()) {
          kind_ = org.apache.kyuubi.engine.spark.connect.proto.DataType.Decimal.newBuilder((org.apache.kyuubi.engine.spark.connect.proto.DataType.Decimal) kind_)
              .mergeFrom(value).buildPartial();
        } else {
          kind_ = value;
        }
        onChanged();
      } else {
        if (kindCase_ == 10) {
          decimalBuilder_.mergeFrom(value);
        } else {
          decimalBuilder_.setMessage(value);
        }
      }
      kindCase_ = 10;
      return this;
    }
    /**
     * <code>.spark.connect.DataType.Decimal decimal = 10;</code>
     */
    public Builder clearDecimal() {
      if (decimalBuilder_ == null) {
        if (kindCase_ == 10) {
          kindCase_ = 0;
          kind_ = null;
          onChanged();
        }
      } else {
        if (kindCase_ == 10) {
          kindCase_ = 0;
          kind_ = null;
        }
        decimalBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.spark.connect.DataType.Decimal decimal = 10;</code>
     */
    public org.apache.kyuubi.engine.spark.connect.proto.DataType.Decimal.Builder getDecimalBuilder() {
      return getDecimalFieldBuilder().getBuilder();
    }
    /**
     * <code>.spark.connect.DataType.Decimal decimal = 10;</code>
     */
    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.DataType.DecimalOrBuilder getDecimalOrBuilder() {
      if ((kindCase_ == 10) && (decimalBuilder_ != null)) {
        return decimalBuilder_.getMessageOrBuilder();
      } else {
        if (kindCase_ == 10) {
          return (org.apache.kyuubi.engine.spark.connect.proto.DataType.Decimal) kind_;
        }
        return org.apache.kyuubi.engine.spark.connect.proto.DataType.Decimal.getDefaultInstance();
      }
    }
    /**
     * <code>.spark.connect.DataType.Decimal decimal = 10;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.apache.kyuubi.engine.spark.connect.proto.DataType.Decimal, org.apache.kyuubi.engine.spark.connect.proto.DataType.Decimal.Builder, org.apache.kyuubi.engine.spark.connect.proto.DataType.DecimalOrBuilder> 
        getDecimalFieldBuilder() {
      if (decimalBuilder_ == null) {
        if (!(kindCase_ == 10)) {
          kind_ = org.apache.kyuubi.engine.spark.connect.proto.DataType.Decimal.getDefaultInstance();
        }
        decimalBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.apache.kyuubi.engine.spark.connect.proto.DataType.Decimal, org.apache.kyuubi.engine.spark.connect.proto.DataType.Decimal.Builder, org.apache.kyuubi.engine.spark.connect.proto.DataType.DecimalOrBuilder>(
                (org.apache.kyuubi.engine.spark.connect.proto.DataType.Decimal) kind_,
                getParentForChildren(),
                isClean());
        kind_ = null;
      }
      kindCase_ = 10;
      onChanged();;
      return decimalBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        org.apache.kyuubi.engine.spark.connect.proto.DataType.String, org.apache.kyuubi.engine.spark.connect.proto.DataType.String.Builder, org.apache.kyuubi.engine.spark.connect.proto.DataType.StringOrBuilder> stringBuilder_;
    /**
     * <pre>
     * String types
     * </pre>
     *
     * <code>.spark.connect.DataType.String string = 11;</code>
     * @return Whether the string field is set.
     */
    @java.lang.Override
    public boolean hasString() {
      return kindCase_ == 11;
    }
    /**
     * <pre>
     * String types
     * </pre>
     *
     * <code>.spark.connect.DataType.String string = 11;</code>
     * @return The string.
     */
    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.DataType.String getString() {
      if (stringBuilder_ == null) {
        if (kindCase_ == 11) {
          return (org.apache.kyuubi.engine.spark.connect.proto.DataType.String) kind_;
        }
        return org.apache.kyuubi.engine.spark.connect.proto.DataType.String.getDefaultInstance();
      } else {
        if (kindCase_ == 11) {
          return stringBuilder_.getMessage();
        }
        return org.apache.kyuubi.engine.spark.connect.proto.DataType.String.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * String types
     * </pre>
     *
     * <code>.spark.connect.DataType.String string = 11;</code>
     */
    public Builder setString(org.apache.kyuubi.engine.spark.connect.proto.DataType.String value) {
      if (stringBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        kind_ = value;
        onChanged();
      } else {
        stringBuilder_.setMessage(value);
      }
      kindCase_ = 11;
      return this;
    }
    /**
     * <pre>
     * String types
     * </pre>
     *
     * <code>.spark.connect.DataType.String string = 11;</code>
     */
    public Builder setString(
        org.apache.kyuubi.engine.spark.connect.proto.DataType.String.Builder builderForValue) {
      if (stringBuilder_ == null) {
        kind_ = builderForValue.build();
        onChanged();
      } else {
        stringBuilder_.setMessage(builderForValue.build());
      }
      kindCase_ = 11;
      return this;
    }
    /**
     * <pre>
     * String types
     * </pre>
     *
     * <code>.spark.connect.DataType.String string = 11;</code>
     */
    public Builder mergeString(org.apache.kyuubi.engine.spark.connect.proto.DataType.String value) {
      if (stringBuilder_ == null) {
        if (kindCase_ == 11 &&
            kind_ != org.apache.kyuubi.engine.spark.connect.proto.DataType.String.getDefaultInstance()) {
          kind_ = org.apache.kyuubi.engine.spark.connect.proto.DataType.String.newBuilder((org.apache.kyuubi.engine.spark.connect.proto.DataType.String) kind_)
              .mergeFrom(value).buildPartial();
        } else {
          kind_ = value;
        }
        onChanged();
      } else {
        if (kindCase_ == 11) {
          stringBuilder_.mergeFrom(value);
        } else {
          stringBuilder_.setMessage(value);
        }
      }
      kindCase_ = 11;
      return this;
    }
    /**
     * <pre>
     * String types
     * </pre>
     *
     * <code>.spark.connect.DataType.String string = 11;</code>
     */
    public Builder clearString() {
      if (stringBuilder_ == null) {
        if (kindCase_ == 11) {
          kindCase_ = 0;
          kind_ = null;
          onChanged();
        }
      } else {
        if (kindCase_ == 11) {
          kindCase_ = 0;
          kind_ = null;
        }
        stringBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * String types
     * </pre>
     *
     * <code>.spark.connect.DataType.String string = 11;</code>
     */
    public org.apache.kyuubi.engine.spark.connect.proto.DataType.String.Builder getStringBuilder() {
      return getStringFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * String types
     * </pre>
     *
     * <code>.spark.connect.DataType.String string = 11;</code>
     */
    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.DataType.StringOrBuilder getStringOrBuilder() {
      if ((kindCase_ == 11) && (stringBuilder_ != null)) {
        return stringBuilder_.getMessageOrBuilder();
      } else {
        if (kindCase_ == 11) {
          return (org.apache.kyuubi.engine.spark.connect.proto.DataType.String) kind_;
        }
        return org.apache.kyuubi.engine.spark.connect.proto.DataType.String.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * String types
     * </pre>
     *
     * <code>.spark.connect.DataType.String string = 11;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.apache.kyuubi.engine.spark.connect.proto.DataType.String, org.apache.kyuubi.engine.spark.connect.proto.DataType.String.Builder, org.apache.kyuubi.engine.spark.connect.proto.DataType.StringOrBuilder> 
        getStringFieldBuilder() {
      if (stringBuilder_ == null) {
        if (!(kindCase_ == 11)) {
          kind_ = org.apache.kyuubi.engine.spark.connect.proto.DataType.String.getDefaultInstance();
        }
        stringBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.apache.kyuubi.engine.spark.connect.proto.DataType.String, org.apache.kyuubi.engine.spark.connect.proto.DataType.String.Builder, org.apache.kyuubi.engine.spark.connect.proto.DataType.StringOrBuilder>(
                (org.apache.kyuubi.engine.spark.connect.proto.DataType.String) kind_,
                getParentForChildren(),
                isClean());
        kind_ = null;
      }
      kindCase_ = 11;
      onChanged();;
      return stringBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        org.apache.kyuubi.engine.spark.connect.proto.DataType.Char, org.apache.kyuubi.engine.spark.connect.proto.DataType.Char.Builder, org.apache.kyuubi.engine.spark.connect.proto.DataType.CharOrBuilder> charBuilder_;
    /**
     * <code>.spark.connect.DataType.Char char = 12;</code>
     * @return Whether the char field is set.
     */
    @java.lang.Override
    public boolean hasChar() {
      return kindCase_ == 12;
    }
    /**
     * <code>.spark.connect.DataType.Char char = 12;</code>
     * @return The char.
     */
    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.DataType.Char getChar() {
      if (charBuilder_ == null) {
        if (kindCase_ == 12) {
          return (org.apache.kyuubi.engine.spark.connect.proto.DataType.Char) kind_;
        }
        return org.apache.kyuubi.engine.spark.connect.proto.DataType.Char.getDefaultInstance();
      } else {
        if (kindCase_ == 12) {
          return charBuilder_.getMessage();
        }
        return org.apache.kyuubi.engine.spark.connect.proto.DataType.Char.getDefaultInstance();
      }
    }
    /**
     * <code>.spark.connect.DataType.Char char = 12;</code>
     */
    public Builder setChar(org.apache.kyuubi.engine.spark.connect.proto.DataType.Char value) {
      if (charBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        kind_ = value;
        onChanged();
      } else {
        charBuilder_.setMessage(value);
      }
      kindCase_ = 12;
      return this;
    }
    /**
     * <code>.spark.connect.DataType.Char char = 12;</code>
     */
    public Builder setChar(
        org.apache.kyuubi.engine.spark.connect.proto.DataType.Char.Builder builderForValue) {
      if (charBuilder_ == null) {
        kind_ = builderForValue.build();
        onChanged();
      } else {
        charBuilder_.setMessage(builderForValue.build());
      }
      kindCase_ = 12;
      return this;
    }
    /**
     * <code>.spark.connect.DataType.Char char = 12;</code>
     */
    public Builder mergeChar(org.apache.kyuubi.engine.spark.connect.proto.DataType.Char value) {
      if (charBuilder_ == null) {
        if (kindCase_ == 12 &&
            kind_ != org.apache.kyuubi.engine.spark.connect.proto.DataType.Char.getDefaultInstance()) {
          kind_ = org.apache.kyuubi.engine.spark.connect.proto.DataType.Char.newBuilder((org.apache.kyuubi.engine.spark.connect.proto.DataType.Char) kind_)
              .mergeFrom(value).buildPartial();
        } else {
          kind_ = value;
        }
        onChanged();
      } else {
        if (kindCase_ == 12) {
          charBuilder_.mergeFrom(value);
        } else {
          charBuilder_.setMessage(value);
        }
      }
      kindCase_ = 12;
      return this;
    }
    /**
     * <code>.spark.connect.DataType.Char char = 12;</code>
     */
    public Builder clearChar() {
      if (charBuilder_ == null) {
        if (kindCase_ == 12) {
          kindCase_ = 0;
          kind_ = null;
          onChanged();
        }
      } else {
        if (kindCase_ == 12) {
          kindCase_ = 0;
          kind_ = null;
        }
        charBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.spark.connect.DataType.Char char = 12;</code>
     */
    public org.apache.kyuubi.engine.spark.connect.proto.DataType.Char.Builder getCharBuilder() {
      return getCharFieldBuilder().getBuilder();
    }
    /**
     * <code>.spark.connect.DataType.Char char = 12;</code>
     */
    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.DataType.CharOrBuilder getCharOrBuilder() {
      if ((kindCase_ == 12) && (charBuilder_ != null)) {
        return charBuilder_.getMessageOrBuilder();
      } else {
        if (kindCase_ == 12) {
          return (org.apache.kyuubi.engine.spark.connect.proto.DataType.Char) kind_;
        }
        return org.apache.kyuubi.engine.spark.connect.proto.DataType.Char.getDefaultInstance();
      }
    }
    /**
     * <code>.spark.connect.DataType.Char char = 12;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.apache.kyuubi.engine.spark.connect.proto.DataType.Char, org.apache.kyuubi.engine.spark.connect.proto.DataType.Char.Builder, org.apache.kyuubi.engine.spark.connect.proto.DataType.CharOrBuilder> 
        getCharFieldBuilder() {
      if (charBuilder_ == null) {
        if (!(kindCase_ == 12)) {
          kind_ = org.apache.kyuubi.engine.spark.connect.proto.DataType.Char.getDefaultInstance();
        }
        charBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.apache.kyuubi.engine.spark.connect.proto.DataType.Char, org.apache.kyuubi.engine.spark.connect.proto.DataType.Char.Builder, org.apache.kyuubi.engine.spark.connect.proto.DataType.CharOrBuilder>(
                (org.apache.kyuubi.engine.spark.connect.proto.DataType.Char) kind_,
                getParentForChildren(),
                isClean());
        kind_ = null;
      }
      kindCase_ = 12;
      onChanged();;
      return charBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        org.apache.kyuubi.engine.spark.connect.proto.DataType.VarChar, org.apache.kyuubi.engine.spark.connect.proto.DataType.VarChar.Builder, org.apache.kyuubi.engine.spark.connect.proto.DataType.VarCharOrBuilder> varCharBuilder_;
    /**
     * <code>.spark.connect.DataType.VarChar var_char = 13;</code>
     * @return Whether the varChar field is set.
     */
    @java.lang.Override
    public boolean hasVarChar() {
      return kindCase_ == 13;
    }
    /**
     * <code>.spark.connect.DataType.VarChar var_char = 13;</code>
     * @return The varChar.
     */
    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.DataType.VarChar getVarChar() {
      if (varCharBuilder_ == null) {
        if (kindCase_ == 13) {
          return (org.apache.kyuubi.engine.spark.connect.proto.DataType.VarChar) kind_;
        }
        return org.apache.kyuubi.engine.spark.connect.proto.DataType.VarChar.getDefaultInstance();
      } else {
        if (kindCase_ == 13) {
          return varCharBuilder_.getMessage();
        }
        return org.apache.kyuubi.engine.spark.connect.proto.DataType.VarChar.getDefaultInstance();
      }
    }
    /**
     * <code>.spark.connect.DataType.VarChar var_char = 13;</code>
     */
    public Builder setVarChar(org.apache.kyuubi.engine.spark.connect.proto.DataType.VarChar value) {
      if (varCharBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        kind_ = value;
        onChanged();
      } else {
        varCharBuilder_.setMessage(value);
      }
      kindCase_ = 13;
      return this;
    }
    /**
     * <code>.spark.connect.DataType.VarChar var_char = 13;</code>
     */
    public Builder setVarChar(
        org.apache.kyuubi.engine.spark.connect.proto.DataType.VarChar.Builder builderForValue) {
      if (varCharBuilder_ == null) {
        kind_ = builderForValue.build();
        onChanged();
      } else {
        varCharBuilder_.setMessage(builderForValue.build());
      }
      kindCase_ = 13;
      return this;
    }
    /**
     * <code>.spark.connect.DataType.VarChar var_char = 13;</code>
     */
    public Builder mergeVarChar(org.apache.kyuubi.engine.spark.connect.proto.DataType.VarChar value) {
      if (varCharBuilder_ == null) {
        if (kindCase_ == 13 &&
            kind_ != org.apache.kyuubi.engine.spark.connect.proto.DataType.VarChar.getDefaultInstance()) {
          kind_ = org.apache.kyuubi.engine.spark.connect.proto.DataType.VarChar.newBuilder((org.apache.kyuubi.engine.spark.connect.proto.DataType.VarChar) kind_)
              .mergeFrom(value).buildPartial();
        } else {
          kind_ = value;
        }
        onChanged();
      } else {
        if (kindCase_ == 13) {
          varCharBuilder_.mergeFrom(value);
        } else {
          varCharBuilder_.setMessage(value);
        }
      }
      kindCase_ = 13;
      return this;
    }
    /**
     * <code>.spark.connect.DataType.VarChar var_char = 13;</code>
     */
    public Builder clearVarChar() {
      if (varCharBuilder_ == null) {
        if (kindCase_ == 13) {
          kindCase_ = 0;
          kind_ = null;
          onChanged();
        }
      } else {
        if (kindCase_ == 13) {
          kindCase_ = 0;
          kind_ = null;
        }
        varCharBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.spark.connect.DataType.VarChar var_char = 13;</code>
     */
    public org.apache.kyuubi.engine.spark.connect.proto.DataType.VarChar.Builder getVarCharBuilder() {
      return getVarCharFieldBuilder().getBuilder();
    }
    /**
     * <code>.spark.connect.DataType.VarChar var_char = 13;</code>
     */
    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.DataType.VarCharOrBuilder getVarCharOrBuilder() {
      if ((kindCase_ == 13) && (varCharBuilder_ != null)) {
        return varCharBuilder_.getMessageOrBuilder();
      } else {
        if (kindCase_ == 13) {
          return (org.apache.kyuubi.engine.spark.connect.proto.DataType.VarChar) kind_;
        }
        return org.apache.kyuubi.engine.spark.connect.proto.DataType.VarChar.getDefaultInstance();
      }
    }
    /**
     * <code>.spark.connect.DataType.VarChar var_char = 13;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.apache.kyuubi.engine.spark.connect.proto.DataType.VarChar, org.apache.kyuubi.engine.spark.connect.proto.DataType.VarChar.Builder, org.apache.kyuubi.engine.spark.connect.proto.DataType.VarCharOrBuilder> 
        getVarCharFieldBuilder() {
      if (varCharBuilder_ == null) {
        if (!(kindCase_ == 13)) {
          kind_ = org.apache.kyuubi.engine.spark.connect.proto.DataType.VarChar.getDefaultInstance();
        }
        varCharBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.apache.kyuubi.engine.spark.connect.proto.DataType.VarChar, org.apache.kyuubi.engine.spark.connect.proto.DataType.VarChar.Builder, org.apache.kyuubi.engine.spark.connect.proto.DataType.VarCharOrBuilder>(
                (org.apache.kyuubi.engine.spark.connect.proto.DataType.VarChar) kind_,
                getParentForChildren(),
                isClean());
        kind_ = null;
      }
      kindCase_ = 13;
      onChanged();;
      return varCharBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        org.apache.kyuubi.engine.spark.connect.proto.DataType.Date, org.apache.kyuubi.engine.spark.connect.proto.DataType.Date.Builder, org.apache.kyuubi.engine.spark.connect.proto.DataType.DateOrBuilder> dateBuilder_;
    /**
     * <pre>
     * Datatime types
     * </pre>
     *
     * <code>.spark.connect.DataType.Date date = 14;</code>
     * @return Whether the date field is set.
     */
    @java.lang.Override
    public boolean hasDate() {
      return kindCase_ == 14;
    }
    /**
     * <pre>
     * Datatime types
     * </pre>
     *
     * <code>.spark.connect.DataType.Date date = 14;</code>
     * @return The date.
     */
    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.DataType.Date getDate() {
      if (dateBuilder_ == null) {
        if (kindCase_ == 14) {
          return (org.apache.kyuubi.engine.spark.connect.proto.DataType.Date) kind_;
        }
        return org.apache.kyuubi.engine.spark.connect.proto.DataType.Date.getDefaultInstance();
      } else {
        if (kindCase_ == 14) {
          return dateBuilder_.getMessage();
        }
        return org.apache.kyuubi.engine.spark.connect.proto.DataType.Date.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Datatime types
     * </pre>
     *
     * <code>.spark.connect.DataType.Date date = 14;</code>
     */
    public Builder setDate(org.apache.kyuubi.engine.spark.connect.proto.DataType.Date value) {
      if (dateBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        kind_ = value;
        onChanged();
      } else {
        dateBuilder_.setMessage(value);
      }
      kindCase_ = 14;
      return this;
    }
    /**
     * <pre>
     * Datatime types
     * </pre>
     *
     * <code>.spark.connect.DataType.Date date = 14;</code>
     */
    public Builder setDate(
        org.apache.kyuubi.engine.spark.connect.proto.DataType.Date.Builder builderForValue) {
      if (dateBuilder_ == null) {
        kind_ = builderForValue.build();
        onChanged();
      } else {
        dateBuilder_.setMessage(builderForValue.build());
      }
      kindCase_ = 14;
      return this;
    }
    /**
     * <pre>
     * Datatime types
     * </pre>
     *
     * <code>.spark.connect.DataType.Date date = 14;</code>
     */
    public Builder mergeDate(org.apache.kyuubi.engine.spark.connect.proto.DataType.Date value) {
      if (dateBuilder_ == null) {
        if (kindCase_ == 14 &&
            kind_ != org.apache.kyuubi.engine.spark.connect.proto.DataType.Date.getDefaultInstance()) {
          kind_ = org.apache.kyuubi.engine.spark.connect.proto.DataType.Date.newBuilder((org.apache.kyuubi.engine.spark.connect.proto.DataType.Date) kind_)
              .mergeFrom(value).buildPartial();
        } else {
          kind_ = value;
        }
        onChanged();
      } else {
        if (kindCase_ == 14) {
          dateBuilder_.mergeFrom(value);
        } else {
          dateBuilder_.setMessage(value);
        }
      }
      kindCase_ = 14;
      return this;
    }
    /**
     * <pre>
     * Datatime types
     * </pre>
     *
     * <code>.spark.connect.DataType.Date date = 14;</code>
     */
    public Builder clearDate() {
      if (dateBuilder_ == null) {
        if (kindCase_ == 14) {
          kindCase_ = 0;
          kind_ = null;
          onChanged();
        }
      } else {
        if (kindCase_ == 14) {
          kindCase_ = 0;
          kind_ = null;
        }
        dateBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Datatime types
     * </pre>
     *
     * <code>.spark.connect.DataType.Date date = 14;</code>
     */
    public org.apache.kyuubi.engine.spark.connect.proto.DataType.Date.Builder getDateBuilder() {
      return getDateFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Datatime types
     * </pre>
     *
     * <code>.spark.connect.DataType.Date date = 14;</code>
     */
    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.DataType.DateOrBuilder getDateOrBuilder() {
      if ((kindCase_ == 14) && (dateBuilder_ != null)) {
        return dateBuilder_.getMessageOrBuilder();
      } else {
        if (kindCase_ == 14) {
          return (org.apache.kyuubi.engine.spark.connect.proto.DataType.Date) kind_;
        }
        return org.apache.kyuubi.engine.spark.connect.proto.DataType.Date.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Datatime types
     * </pre>
     *
     * <code>.spark.connect.DataType.Date date = 14;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.apache.kyuubi.engine.spark.connect.proto.DataType.Date, org.apache.kyuubi.engine.spark.connect.proto.DataType.Date.Builder, org.apache.kyuubi.engine.spark.connect.proto.DataType.DateOrBuilder> 
        getDateFieldBuilder() {
      if (dateBuilder_ == null) {
        if (!(kindCase_ == 14)) {
          kind_ = org.apache.kyuubi.engine.spark.connect.proto.DataType.Date.getDefaultInstance();
        }
        dateBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.apache.kyuubi.engine.spark.connect.proto.DataType.Date, org.apache.kyuubi.engine.spark.connect.proto.DataType.Date.Builder, org.apache.kyuubi.engine.spark.connect.proto.DataType.DateOrBuilder>(
                (org.apache.kyuubi.engine.spark.connect.proto.DataType.Date) kind_,
                getParentForChildren(),
                isClean());
        kind_ = null;
      }
      kindCase_ = 14;
      onChanged();;
      return dateBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        org.apache.kyuubi.engine.spark.connect.proto.DataType.Timestamp, org.apache.kyuubi.engine.spark.connect.proto.DataType.Timestamp.Builder, org.apache.kyuubi.engine.spark.connect.proto.DataType.TimestampOrBuilder> timestampBuilder_;
    /**
     * <code>.spark.connect.DataType.Timestamp timestamp = 15;</code>
     * @return Whether the timestamp field is set.
     */
    @java.lang.Override
    public boolean hasTimestamp() {
      return kindCase_ == 15;
    }
    /**
     * <code>.spark.connect.DataType.Timestamp timestamp = 15;</code>
     * @return The timestamp.
     */
    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.DataType.Timestamp getTimestamp() {
      if (timestampBuilder_ == null) {
        if (kindCase_ == 15) {
          return (org.apache.kyuubi.engine.spark.connect.proto.DataType.Timestamp) kind_;
        }
        return org.apache.kyuubi.engine.spark.connect.proto.DataType.Timestamp.getDefaultInstance();
      } else {
        if (kindCase_ == 15) {
          return timestampBuilder_.getMessage();
        }
        return org.apache.kyuubi.engine.spark.connect.proto.DataType.Timestamp.getDefaultInstance();
      }
    }
    /**
     * <code>.spark.connect.DataType.Timestamp timestamp = 15;</code>
     */
    public Builder setTimestamp(org.apache.kyuubi.engine.spark.connect.proto.DataType.Timestamp value) {
      if (timestampBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        kind_ = value;
        onChanged();
      } else {
        timestampBuilder_.setMessage(value);
      }
      kindCase_ = 15;
      return this;
    }
    /**
     * <code>.spark.connect.DataType.Timestamp timestamp = 15;</code>
     */
    public Builder setTimestamp(
        org.apache.kyuubi.engine.spark.connect.proto.DataType.Timestamp.Builder builderForValue) {
      if (timestampBuilder_ == null) {
        kind_ = builderForValue.build();
        onChanged();
      } else {
        timestampBuilder_.setMessage(builderForValue.build());
      }
      kindCase_ = 15;
      return this;
    }
    /**
     * <code>.spark.connect.DataType.Timestamp timestamp = 15;</code>
     */
    public Builder mergeTimestamp(org.apache.kyuubi.engine.spark.connect.proto.DataType.Timestamp value) {
      if (timestampBuilder_ == null) {
        if (kindCase_ == 15 &&
            kind_ != org.apache.kyuubi.engine.spark.connect.proto.DataType.Timestamp.getDefaultInstance()) {
          kind_ = org.apache.kyuubi.engine.spark.connect.proto.DataType.Timestamp.newBuilder((org.apache.kyuubi.engine.spark.connect.proto.DataType.Timestamp) kind_)
              .mergeFrom(value).buildPartial();
        } else {
          kind_ = value;
        }
        onChanged();
      } else {
        if (kindCase_ == 15) {
          timestampBuilder_.mergeFrom(value);
        } else {
          timestampBuilder_.setMessage(value);
        }
      }
      kindCase_ = 15;
      return this;
    }
    /**
     * <code>.spark.connect.DataType.Timestamp timestamp = 15;</code>
     */
    public Builder clearTimestamp() {
      if (timestampBuilder_ == null) {
        if (kindCase_ == 15) {
          kindCase_ = 0;
          kind_ = null;
          onChanged();
        }
      } else {
        if (kindCase_ == 15) {
          kindCase_ = 0;
          kind_ = null;
        }
        timestampBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.spark.connect.DataType.Timestamp timestamp = 15;</code>
     */
    public org.apache.kyuubi.engine.spark.connect.proto.DataType.Timestamp.Builder getTimestampBuilder() {
      return getTimestampFieldBuilder().getBuilder();
    }
    /**
     * <code>.spark.connect.DataType.Timestamp timestamp = 15;</code>
     */
    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.DataType.TimestampOrBuilder getTimestampOrBuilder() {
      if ((kindCase_ == 15) && (timestampBuilder_ != null)) {
        return timestampBuilder_.getMessageOrBuilder();
      } else {
        if (kindCase_ == 15) {
          return (org.apache.kyuubi.engine.spark.connect.proto.DataType.Timestamp) kind_;
        }
        return org.apache.kyuubi.engine.spark.connect.proto.DataType.Timestamp.getDefaultInstance();
      }
    }
    /**
     * <code>.spark.connect.DataType.Timestamp timestamp = 15;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.apache.kyuubi.engine.spark.connect.proto.DataType.Timestamp, org.apache.kyuubi.engine.spark.connect.proto.DataType.Timestamp.Builder, org.apache.kyuubi.engine.spark.connect.proto.DataType.TimestampOrBuilder> 
        getTimestampFieldBuilder() {
      if (timestampBuilder_ == null) {
        if (!(kindCase_ == 15)) {
          kind_ = org.apache.kyuubi.engine.spark.connect.proto.DataType.Timestamp.getDefaultInstance();
        }
        timestampBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.apache.kyuubi.engine.spark.connect.proto.DataType.Timestamp, org.apache.kyuubi.engine.spark.connect.proto.DataType.Timestamp.Builder, org.apache.kyuubi.engine.spark.connect.proto.DataType.TimestampOrBuilder>(
                (org.apache.kyuubi.engine.spark.connect.proto.DataType.Timestamp) kind_,
                getParentForChildren(),
                isClean());
        kind_ = null;
      }
      kindCase_ = 15;
      onChanged();;
      return timestampBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        org.apache.kyuubi.engine.spark.connect.proto.DataType.TimestampNTZ, org.apache.kyuubi.engine.spark.connect.proto.DataType.TimestampNTZ.Builder, org.apache.kyuubi.engine.spark.connect.proto.DataType.TimestampNTZOrBuilder> timestampNtzBuilder_;
    /**
     * <code>.spark.connect.DataType.TimestampNTZ timestamp_ntz = 16;</code>
     * @return Whether the timestampNtz field is set.
     */
    @java.lang.Override
    public boolean hasTimestampNtz() {
      return kindCase_ == 16;
    }
    /**
     * <code>.spark.connect.DataType.TimestampNTZ timestamp_ntz = 16;</code>
     * @return The timestampNtz.
     */
    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.DataType.TimestampNTZ getTimestampNtz() {
      if (timestampNtzBuilder_ == null) {
        if (kindCase_ == 16) {
          return (org.apache.kyuubi.engine.spark.connect.proto.DataType.TimestampNTZ) kind_;
        }
        return org.apache.kyuubi.engine.spark.connect.proto.DataType.TimestampNTZ.getDefaultInstance();
      } else {
        if (kindCase_ == 16) {
          return timestampNtzBuilder_.getMessage();
        }
        return org.apache.kyuubi.engine.spark.connect.proto.DataType.TimestampNTZ.getDefaultInstance();
      }
    }
    /**
     * <code>.spark.connect.DataType.TimestampNTZ timestamp_ntz = 16;</code>
     */
    public Builder setTimestampNtz(org.apache.kyuubi.engine.spark.connect.proto.DataType.TimestampNTZ value) {
      if (timestampNtzBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        kind_ = value;
        onChanged();
      } else {
        timestampNtzBuilder_.setMessage(value);
      }
      kindCase_ = 16;
      return this;
    }
    /**
     * <code>.spark.connect.DataType.TimestampNTZ timestamp_ntz = 16;</code>
     */
    public Builder setTimestampNtz(
        org.apache.kyuubi.engine.spark.connect.proto.DataType.TimestampNTZ.Builder builderForValue) {
      if (timestampNtzBuilder_ == null) {
        kind_ = builderForValue.build();
        onChanged();
      } else {
        timestampNtzBuilder_.setMessage(builderForValue.build());
      }
      kindCase_ = 16;
      return this;
    }
    /**
     * <code>.spark.connect.DataType.TimestampNTZ timestamp_ntz = 16;</code>
     */
    public Builder mergeTimestampNtz(org.apache.kyuubi.engine.spark.connect.proto.DataType.TimestampNTZ value) {
      if (timestampNtzBuilder_ == null) {
        if (kindCase_ == 16 &&
            kind_ != org.apache.kyuubi.engine.spark.connect.proto.DataType.TimestampNTZ.getDefaultInstance()) {
          kind_ = org.apache.kyuubi.engine.spark.connect.proto.DataType.TimestampNTZ.newBuilder((org.apache.kyuubi.engine.spark.connect.proto.DataType.TimestampNTZ) kind_)
              .mergeFrom(value).buildPartial();
        } else {
          kind_ = value;
        }
        onChanged();
      } else {
        if (kindCase_ == 16) {
          timestampNtzBuilder_.mergeFrom(value);
        } else {
          timestampNtzBuilder_.setMessage(value);
        }
      }
      kindCase_ = 16;
      return this;
    }
    /**
     * <code>.spark.connect.DataType.TimestampNTZ timestamp_ntz = 16;</code>
     */
    public Builder clearTimestampNtz() {
      if (timestampNtzBuilder_ == null) {
        if (kindCase_ == 16) {
          kindCase_ = 0;
          kind_ = null;
          onChanged();
        }
      } else {
        if (kindCase_ == 16) {
          kindCase_ = 0;
          kind_ = null;
        }
        timestampNtzBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.spark.connect.DataType.TimestampNTZ timestamp_ntz = 16;</code>
     */
    public org.apache.kyuubi.engine.spark.connect.proto.DataType.TimestampNTZ.Builder getTimestampNtzBuilder() {
      return getTimestampNtzFieldBuilder().getBuilder();
    }
    /**
     * <code>.spark.connect.DataType.TimestampNTZ timestamp_ntz = 16;</code>
     */
    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.DataType.TimestampNTZOrBuilder getTimestampNtzOrBuilder() {
      if ((kindCase_ == 16) && (timestampNtzBuilder_ != null)) {
        return timestampNtzBuilder_.getMessageOrBuilder();
      } else {
        if (kindCase_ == 16) {
          return (org.apache.kyuubi.engine.spark.connect.proto.DataType.TimestampNTZ) kind_;
        }
        return org.apache.kyuubi.engine.spark.connect.proto.DataType.TimestampNTZ.getDefaultInstance();
      }
    }
    /**
     * <code>.spark.connect.DataType.TimestampNTZ timestamp_ntz = 16;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.apache.kyuubi.engine.spark.connect.proto.DataType.TimestampNTZ, org.apache.kyuubi.engine.spark.connect.proto.DataType.TimestampNTZ.Builder, org.apache.kyuubi.engine.spark.connect.proto.DataType.TimestampNTZOrBuilder> 
        getTimestampNtzFieldBuilder() {
      if (timestampNtzBuilder_ == null) {
        if (!(kindCase_ == 16)) {
          kind_ = org.apache.kyuubi.engine.spark.connect.proto.DataType.TimestampNTZ.getDefaultInstance();
        }
        timestampNtzBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.apache.kyuubi.engine.spark.connect.proto.DataType.TimestampNTZ, org.apache.kyuubi.engine.spark.connect.proto.DataType.TimestampNTZ.Builder, org.apache.kyuubi.engine.spark.connect.proto.DataType.TimestampNTZOrBuilder>(
                (org.apache.kyuubi.engine.spark.connect.proto.DataType.TimestampNTZ) kind_,
                getParentForChildren(),
                isClean());
        kind_ = null;
      }
      kindCase_ = 16;
      onChanged();;
      return timestampNtzBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        org.apache.kyuubi.engine.spark.connect.proto.DataType.CalendarInterval, org.apache.kyuubi.engine.spark.connect.proto.DataType.CalendarInterval.Builder, org.apache.kyuubi.engine.spark.connect.proto.DataType.CalendarIntervalOrBuilder> calendarIntervalBuilder_;
    /**
     * <pre>
     * Interval types
     * </pre>
     *
     * <code>.spark.connect.DataType.CalendarInterval calendar_interval = 17;</code>
     * @return Whether the calendarInterval field is set.
     */
    @java.lang.Override
    public boolean hasCalendarInterval() {
      return kindCase_ == 17;
    }
    /**
     * <pre>
     * Interval types
     * </pre>
     *
     * <code>.spark.connect.DataType.CalendarInterval calendar_interval = 17;</code>
     * @return The calendarInterval.
     */
    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.DataType.CalendarInterval getCalendarInterval() {
      if (calendarIntervalBuilder_ == null) {
        if (kindCase_ == 17) {
          return (org.apache.kyuubi.engine.spark.connect.proto.DataType.CalendarInterval) kind_;
        }
        return org.apache.kyuubi.engine.spark.connect.proto.DataType.CalendarInterval.getDefaultInstance();
      } else {
        if (kindCase_ == 17) {
          return calendarIntervalBuilder_.getMessage();
        }
        return org.apache.kyuubi.engine.spark.connect.proto.DataType.CalendarInterval.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Interval types
     * </pre>
     *
     * <code>.spark.connect.DataType.CalendarInterval calendar_interval = 17;</code>
     */
    public Builder setCalendarInterval(org.apache.kyuubi.engine.spark.connect.proto.DataType.CalendarInterval value) {
      if (calendarIntervalBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        kind_ = value;
        onChanged();
      } else {
        calendarIntervalBuilder_.setMessage(value);
      }
      kindCase_ = 17;
      return this;
    }
    /**
     * <pre>
     * Interval types
     * </pre>
     *
     * <code>.spark.connect.DataType.CalendarInterval calendar_interval = 17;</code>
     */
    public Builder setCalendarInterval(
        org.apache.kyuubi.engine.spark.connect.proto.DataType.CalendarInterval.Builder builderForValue) {
      if (calendarIntervalBuilder_ == null) {
        kind_ = builderForValue.build();
        onChanged();
      } else {
        calendarIntervalBuilder_.setMessage(builderForValue.build());
      }
      kindCase_ = 17;
      return this;
    }
    /**
     * <pre>
     * Interval types
     * </pre>
     *
     * <code>.spark.connect.DataType.CalendarInterval calendar_interval = 17;</code>
     */
    public Builder mergeCalendarInterval(org.apache.kyuubi.engine.spark.connect.proto.DataType.CalendarInterval value) {
      if (calendarIntervalBuilder_ == null) {
        if (kindCase_ == 17 &&
            kind_ != org.apache.kyuubi.engine.spark.connect.proto.DataType.CalendarInterval.getDefaultInstance()) {
          kind_ = org.apache.kyuubi.engine.spark.connect.proto.DataType.CalendarInterval.newBuilder((org.apache.kyuubi.engine.spark.connect.proto.DataType.CalendarInterval) kind_)
              .mergeFrom(value).buildPartial();
        } else {
          kind_ = value;
        }
        onChanged();
      } else {
        if (kindCase_ == 17) {
          calendarIntervalBuilder_.mergeFrom(value);
        } else {
          calendarIntervalBuilder_.setMessage(value);
        }
      }
      kindCase_ = 17;
      return this;
    }
    /**
     * <pre>
     * Interval types
     * </pre>
     *
     * <code>.spark.connect.DataType.CalendarInterval calendar_interval = 17;</code>
     */
    public Builder clearCalendarInterval() {
      if (calendarIntervalBuilder_ == null) {
        if (kindCase_ == 17) {
          kindCase_ = 0;
          kind_ = null;
          onChanged();
        }
      } else {
        if (kindCase_ == 17) {
          kindCase_ = 0;
          kind_ = null;
        }
        calendarIntervalBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Interval types
     * </pre>
     *
     * <code>.spark.connect.DataType.CalendarInterval calendar_interval = 17;</code>
     */
    public org.apache.kyuubi.engine.spark.connect.proto.DataType.CalendarInterval.Builder getCalendarIntervalBuilder() {
      return getCalendarIntervalFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Interval types
     * </pre>
     *
     * <code>.spark.connect.DataType.CalendarInterval calendar_interval = 17;</code>
     */
    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.DataType.CalendarIntervalOrBuilder getCalendarIntervalOrBuilder() {
      if ((kindCase_ == 17) && (calendarIntervalBuilder_ != null)) {
        return calendarIntervalBuilder_.getMessageOrBuilder();
      } else {
        if (kindCase_ == 17) {
          return (org.apache.kyuubi.engine.spark.connect.proto.DataType.CalendarInterval) kind_;
        }
        return org.apache.kyuubi.engine.spark.connect.proto.DataType.CalendarInterval.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Interval types
     * </pre>
     *
     * <code>.spark.connect.DataType.CalendarInterval calendar_interval = 17;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.apache.kyuubi.engine.spark.connect.proto.DataType.CalendarInterval, org.apache.kyuubi.engine.spark.connect.proto.DataType.CalendarInterval.Builder, org.apache.kyuubi.engine.spark.connect.proto.DataType.CalendarIntervalOrBuilder> 
        getCalendarIntervalFieldBuilder() {
      if (calendarIntervalBuilder_ == null) {
        if (!(kindCase_ == 17)) {
          kind_ = org.apache.kyuubi.engine.spark.connect.proto.DataType.CalendarInterval.getDefaultInstance();
        }
        calendarIntervalBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.apache.kyuubi.engine.spark.connect.proto.DataType.CalendarInterval, org.apache.kyuubi.engine.spark.connect.proto.DataType.CalendarInterval.Builder, org.apache.kyuubi.engine.spark.connect.proto.DataType.CalendarIntervalOrBuilder>(
                (org.apache.kyuubi.engine.spark.connect.proto.DataType.CalendarInterval) kind_,
                getParentForChildren(),
                isClean());
        kind_ = null;
      }
      kindCase_ = 17;
      onChanged();;
      return calendarIntervalBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        org.apache.kyuubi.engine.spark.connect.proto.DataType.YearMonthInterval, org.apache.kyuubi.engine.spark.connect.proto.DataType.YearMonthInterval.Builder, org.apache.kyuubi.engine.spark.connect.proto.DataType.YearMonthIntervalOrBuilder> yearMonthIntervalBuilder_;
    /**
     * <code>.spark.connect.DataType.YearMonthInterval year_month_interval = 18;</code>
     * @return Whether the yearMonthInterval field is set.
     */
    @java.lang.Override
    public boolean hasYearMonthInterval() {
      return kindCase_ == 18;
    }
    /**
     * <code>.spark.connect.DataType.YearMonthInterval year_month_interval = 18;</code>
     * @return The yearMonthInterval.
     */
    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.DataType.YearMonthInterval getYearMonthInterval() {
      if (yearMonthIntervalBuilder_ == null) {
        if (kindCase_ == 18) {
          return (org.apache.kyuubi.engine.spark.connect.proto.DataType.YearMonthInterval) kind_;
        }
        return org.apache.kyuubi.engine.spark.connect.proto.DataType.YearMonthInterval.getDefaultInstance();
      } else {
        if (kindCase_ == 18) {
          return yearMonthIntervalBuilder_.getMessage();
        }
        return org.apache.kyuubi.engine.spark.connect.proto.DataType.YearMonthInterval.getDefaultInstance();
      }
    }
    /**
     * <code>.spark.connect.DataType.YearMonthInterval year_month_interval = 18;</code>
     */
    public Builder setYearMonthInterval(org.apache.kyuubi.engine.spark.connect.proto.DataType.YearMonthInterval value) {
      if (yearMonthIntervalBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        kind_ = value;
        onChanged();
      } else {
        yearMonthIntervalBuilder_.setMessage(value);
      }
      kindCase_ = 18;
      return this;
    }
    /**
     * <code>.spark.connect.DataType.YearMonthInterval year_month_interval = 18;</code>
     */
    public Builder setYearMonthInterval(
        org.apache.kyuubi.engine.spark.connect.proto.DataType.YearMonthInterval.Builder builderForValue) {
      if (yearMonthIntervalBuilder_ == null) {
        kind_ = builderForValue.build();
        onChanged();
      } else {
        yearMonthIntervalBuilder_.setMessage(builderForValue.build());
      }
      kindCase_ = 18;
      return this;
    }
    /**
     * <code>.spark.connect.DataType.YearMonthInterval year_month_interval = 18;</code>
     */
    public Builder mergeYearMonthInterval(org.apache.kyuubi.engine.spark.connect.proto.DataType.YearMonthInterval value) {
      if (yearMonthIntervalBuilder_ == null) {
        if (kindCase_ == 18 &&
            kind_ != org.apache.kyuubi.engine.spark.connect.proto.DataType.YearMonthInterval.getDefaultInstance()) {
          kind_ = org.apache.kyuubi.engine.spark.connect.proto.DataType.YearMonthInterval.newBuilder((org.apache.kyuubi.engine.spark.connect.proto.DataType.YearMonthInterval) kind_)
              .mergeFrom(value).buildPartial();
        } else {
          kind_ = value;
        }
        onChanged();
      } else {
        if (kindCase_ == 18) {
          yearMonthIntervalBuilder_.mergeFrom(value);
        } else {
          yearMonthIntervalBuilder_.setMessage(value);
        }
      }
      kindCase_ = 18;
      return this;
    }
    /**
     * <code>.spark.connect.DataType.YearMonthInterval year_month_interval = 18;</code>
     */
    public Builder clearYearMonthInterval() {
      if (yearMonthIntervalBuilder_ == null) {
        if (kindCase_ == 18) {
          kindCase_ = 0;
          kind_ = null;
          onChanged();
        }
      } else {
        if (kindCase_ == 18) {
          kindCase_ = 0;
          kind_ = null;
        }
        yearMonthIntervalBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.spark.connect.DataType.YearMonthInterval year_month_interval = 18;</code>
     */
    public org.apache.kyuubi.engine.spark.connect.proto.DataType.YearMonthInterval.Builder getYearMonthIntervalBuilder() {
      return getYearMonthIntervalFieldBuilder().getBuilder();
    }
    /**
     * <code>.spark.connect.DataType.YearMonthInterval year_month_interval = 18;</code>
     */
    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.DataType.YearMonthIntervalOrBuilder getYearMonthIntervalOrBuilder() {
      if ((kindCase_ == 18) && (yearMonthIntervalBuilder_ != null)) {
        return yearMonthIntervalBuilder_.getMessageOrBuilder();
      } else {
        if (kindCase_ == 18) {
          return (org.apache.kyuubi.engine.spark.connect.proto.DataType.YearMonthInterval) kind_;
        }
        return org.apache.kyuubi.engine.spark.connect.proto.DataType.YearMonthInterval.getDefaultInstance();
      }
    }
    /**
     * <code>.spark.connect.DataType.YearMonthInterval year_month_interval = 18;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.apache.kyuubi.engine.spark.connect.proto.DataType.YearMonthInterval, org.apache.kyuubi.engine.spark.connect.proto.DataType.YearMonthInterval.Builder, org.apache.kyuubi.engine.spark.connect.proto.DataType.YearMonthIntervalOrBuilder> 
        getYearMonthIntervalFieldBuilder() {
      if (yearMonthIntervalBuilder_ == null) {
        if (!(kindCase_ == 18)) {
          kind_ = org.apache.kyuubi.engine.spark.connect.proto.DataType.YearMonthInterval.getDefaultInstance();
        }
        yearMonthIntervalBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.apache.kyuubi.engine.spark.connect.proto.DataType.YearMonthInterval, org.apache.kyuubi.engine.spark.connect.proto.DataType.YearMonthInterval.Builder, org.apache.kyuubi.engine.spark.connect.proto.DataType.YearMonthIntervalOrBuilder>(
                (org.apache.kyuubi.engine.spark.connect.proto.DataType.YearMonthInterval) kind_,
                getParentForChildren(),
                isClean());
        kind_ = null;
      }
      kindCase_ = 18;
      onChanged();;
      return yearMonthIntervalBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        org.apache.kyuubi.engine.spark.connect.proto.DataType.DayTimeInterval, org.apache.kyuubi.engine.spark.connect.proto.DataType.DayTimeInterval.Builder, org.apache.kyuubi.engine.spark.connect.proto.DataType.DayTimeIntervalOrBuilder> dayTimeIntervalBuilder_;
    /**
     * <code>.spark.connect.DataType.DayTimeInterval day_time_interval = 19;</code>
     * @return Whether the dayTimeInterval field is set.
     */
    @java.lang.Override
    public boolean hasDayTimeInterval() {
      return kindCase_ == 19;
    }
    /**
     * <code>.spark.connect.DataType.DayTimeInterval day_time_interval = 19;</code>
     * @return The dayTimeInterval.
     */
    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.DataType.DayTimeInterval getDayTimeInterval() {
      if (dayTimeIntervalBuilder_ == null) {
        if (kindCase_ == 19) {
          return (org.apache.kyuubi.engine.spark.connect.proto.DataType.DayTimeInterval) kind_;
        }
        return org.apache.kyuubi.engine.spark.connect.proto.DataType.DayTimeInterval.getDefaultInstance();
      } else {
        if (kindCase_ == 19) {
          return dayTimeIntervalBuilder_.getMessage();
        }
        return org.apache.kyuubi.engine.spark.connect.proto.DataType.DayTimeInterval.getDefaultInstance();
      }
    }
    /**
     * <code>.spark.connect.DataType.DayTimeInterval day_time_interval = 19;</code>
     */
    public Builder setDayTimeInterval(org.apache.kyuubi.engine.spark.connect.proto.DataType.DayTimeInterval value) {
      if (dayTimeIntervalBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        kind_ = value;
        onChanged();
      } else {
        dayTimeIntervalBuilder_.setMessage(value);
      }
      kindCase_ = 19;
      return this;
    }
    /**
     * <code>.spark.connect.DataType.DayTimeInterval day_time_interval = 19;</code>
     */
    public Builder setDayTimeInterval(
        org.apache.kyuubi.engine.spark.connect.proto.DataType.DayTimeInterval.Builder builderForValue) {
      if (dayTimeIntervalBuilder_ == null) {
        kind_ = builderForValue.build();
        onChanged();
      } else {
        dayTimeIntervalBuilder_.setMessage(builderForValue.build());
      }
      kindCase_ = 19;
      return this;
    }
    /**
     * <code>.spark.connect.DataType.DayTimeInterval day_time_interval = 19;</code>
     */
    public Builder mergeDayTimeInterval(org.apache.kyuubi.engine.spark.connect.proto.DataType.DayTimeInterval value) {
      if (dayTimeIntervalBuilder_ == null) {
        if (kindCase_ == 19 &&
            kind_ != org.apache.kyuubi.engine.spark.connect.proto.DataType.DayTimeInterval.getDefaultInstance()) {
          kind_ = org.apache.kyuubi.engine.spark.connect.proto.DataType.DayTimeInterval.newBuilder((org.apache.kyuubi.engine.spark.connect.proto.DataType.DayTimeInterval) kind_)
              .mergeFrom(value).buildPartial();
        } else {
          kind_ = value;
        }
        onChanged();
      } else {
        if (kindCase_ == 19) {
          dayTimeIntervalBuilder_.mergeFrom(value);
        } else {
          dayTimeIntervalBuilder_.setMessage(value);
        }
      }
      kindCase_ = 19;
      return this;
    }
    /**
     * <code>.spark.connect.DataType.DayTimeInterval day_time_interval = 19;</code>
     */
    public Builder clearDayTimeInterval() {
      if (dayTimeIntervalBuilder_ == null) {
        if (kindCase_ == 19) {
          kindCase_ = 0;
          kind_ = null;
          onChanged();
        }
      } else {
        if (kindCase_ == 19) {
          kindCase_ = 0;
          kind_ = null;
        }
        dayTimeIntervalBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.spark.connect.DataType.DayTimeInterval day_time_interval = 19;</code>
     */
    public org.apache.kyuubi.engine.spark.connect.proto.DataType.DayTimeInterval.Builder getDayTimeIntervalBuilder() {
      return getDayTimeIntervalFieldBuilder().getBuilder();
    }
    /**
     * <code>.spark.connect.DataType.DayTimeInterval day_time_interval = 19;</code>
     */
    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.DataType.DayTimeIntervalOrBuilder getDayTimeIntervalOrBuilder() {
      if ((kindCase_ == 19) && (dayTimeIntervalBuilder_ != null)) {
        return dayTimeIntervalBuilder_.getMessageOrBuilder();
      } else {
        if (kindCase_ == 19) {
          return (org.apache.kyuubi.engine.spark.connect.proto.DataType.DayTimeInterval) kind_;
        }
        return org.apache.kyuubi.engine.spark.connect.proto.DataType.DayTimeInterval.getDefaultInstance();
      }
    }
    /**
     * <code>.spark.connect.DataType.DayTimeInterval day_time_interval = 19;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.apache.kyuubi.engine.spark.connect.proto.DataType.DayTimeInterval, org.apache.kyuubi.engine.spark.connect.proto.DataType.DayTimeInterval.Builder, org.apache.kyuubi.engine.spark.connect.proto.DataType.DayTimeIntervalOrBuilder> 
        getDayTimeIntervalFieldBuilder() {
      if (dayTimeIntervalBuilder_ == null) {
        if (!(kindCase_ == 19)) {
          kind_ = org.apache.kyuubi.engine.spark.connect.proto.DataType.DayTimeInterval.getDefaultInstance();
        }
        dayTimeIntervalBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.apache.kyuubi.engine.spark.connect.proto.DataType.DayTimeInterval, org.apache.kyuubi.engine.spark.connect.proto.DataType.DayTimeInterval.Builder, org.apache.kyuubi.engine.spark.connect.proto.DataType.DayTimeIntervalOrBuilder>(
                (org.apache.kyuubi.engine.spark.connect.proto.DataType.DayTimeInterval) kind_,
                getParentForChildren(),
                isClean());
        kind_ = null;
      }
      kindCase_ = 19;
      onChanged();;
      return dayTimeIntervalBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        org.apache.kyuubi.engine.spark.connect.proto.DataType.Array, org.apache.kyuubi.engine.spark.connect.proto.DataType.Array.Builder, org.apache.kyuubi.engine.spark.connect.proto.DataType.ArrayOrBuilder> arrayBuilder_;
    /**
     * <pre>
     * Complex types
     * </pre>
     *
     * <code>.spark.connect.DataType.Array array = 20;</code>
     * @return Whether the array field is set.
     */
    @java.lang.Override
    public boolean hasArray() {
      return kindCase_ == 20;
    }
    /**
     * <pre>
     * Complex types
     * </pre>
     *
     * <code>.spark.connect.DataType.Array array = 20;</code>
     * @return The array.
     */
    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.DataType.Array getArray() {
      if (arrayBuilder_ == null) {
        if (kindCase_ == 20) {
          return (org.apache.kyuubi.engine.spark.connect.proto.DataType.Array) kind_;
        }
        return org.apache.kyuubi.engine.spark.connect.proto.DataType.Array.getDefaultInstance();
      } else {
        if (kindCase_ == 20) {
          return arrayBuilder_.getMessage();
        }
        return org.apache.kyuubi.engine.spark.connect.proto.DataType.Array.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Complex types
     * </pre>
     *
     * <code>.spark.connect.DataType.Array array = 20;</code>
     */
    public Builder setArray(org.apache.kyuubi.engine.spark.connect.proto.DataType.Array value) {
      if (arrayBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        kind_ = value;
        onChanged();
      } else {
        arrayBuilder_.setMessage(value);
      }
      kindCase_ = 20;
      return this;
    }
    /**
     * <pre>
     * Complex types
     * </pre>
     *
     * <code>.spark.connect.DataType.Array array = 20;</code>
     */
    public Builder setArray(
        org.apache.kyuubi.engine.spark.connect.proto.DataType.Array.Builder builderForValue) {
      if (arrayBuilder_ == null) {
        kind_ = builderForValue.build();
        onChanged();
      } else {
        arrayBuilder_.setMessage(builderForValue.build());
      }
      kindCase_ = 20;
      return this;
    }
    /**
     * <pre>
     * Complex types
     * </pre>
     *
     * <code>.spark.connect.DataType.Array array = 20;</code>
     */
    public Builder mergeArray(org.apache.kyuubi.engine.spark.connect.proto.DataType.Array value) {
      if (arrayBuilder_ == null) {
        if (kindCase_ == 20 &&
            kind_ != org.apache.kyuubi.engine.spark.connect.proto.DataType.Array.getDefaultInstance()) {
          kind_ = org.apache.kyuubi.engine.spark.connect.proto.DataType.Array.newBuilder((org.apache.kyuubi.engine.spark.connect.proto.DataType.Array) kind_)
              .mergeFrom(value).buildPartial();
        } else {
          kind_ = value;
        }
        onChanged();
      } else {
        if (kindCase_ == 20) {
          arrayBuilder_.mergeFrom(value);
        } else {
          arrayBuilder_.setMessage(value);
        }
      }
      kindCase_ = 20;
      return this;
    }
    /**
     * <pre>
     * Complex types
     * </pre>
     *
     * <code>.spark.connect.DataType.Array array = 20;</code>
     */
    public Builder clearArray() {
      if (arrayBuilder_ == null) {
        if (kindCase_ == 20) {
          kindCase_ = 0;
          kind_ = null;
          onChanged();
        }
      } else {
        if (kindCase_ == 20) {
          kindCase_ = 0;
          kind_ = null;
        }
        arrayBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Complex types
     * </pre>
     *
     * <code>.spark.connect.DataType.Array array = 20;</code>
     */
    public org.apache.kyuubi.engine.spark.connect.proto.DataType.Array.Builder getArrayBuilder() {
      return getArrayFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Complex types
     * </pre>
     *
     * <code>.spark.connect.DataType.Array array = 20;</code>
     */
    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.DataType.ArrayOrBuilder getArrayOrBuilder() {
      if ((kindCase_ == 20) && (arrayBuilder_ != null)) {
        return arrayBuilder_.getMessageOrBuilder();
      } else {
        if (kindCase_ == 20) {
          return (org.apache.kyuubi.engine.spark.connect.proto.DataType.Array) kind_;
        }
        return org.apache.kyuubi.engine.spark.connect.proto.DataType.Array.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Complex types
     * </pre>
     *
     * <code>.spark.connect.DataType.Array array = 20;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.apache.kyuubi.engine.spark.connect.proto.DataType.Array, org.apache.kyuubi.engine.spark.connect.proto.DataType.Array.Builder, org.apache.kyuubi.engine.spark.connect.proto.DataType.ArrayOrBuilder> 
        getArrayFieldBuilder() {
      if (arrayBuilder_ == null) {
        if (!(kindCase_ == 20)) {
          kind_ = org.apache.kyuubi.engine.spark.connect.proto.DataType.Array.getDefaultInstance();
        }
        arrayBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.apache.kyuubi.engine.spark.connect.proto.DataType.Array, org.apache.kyuubi.engine.spark.connect.proto.DataType.Array.Builder, org.apache.kyuubi.engine.spark.connect.proto.DataType.ArrayOrBuilder>(
                (org.apache.kyuubi.engine.spark.connect.proto.DataType.Array) kind_,
                getParentForChildren(),
                isClean());
        kind_ = null;
      }
      kindCase_ = 20;
      onChanged();;
      return arrayBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        org.apache.kyuubi.engine.spark.connect.proto.DataType.Struct, org.apache.kyuubi.engine.spark.connect.proto.DataType.Struct.Builder, org.apache.kyuubi.engine.spark.connect.proto.DataType.StructOrBuilder> structBuilder_;
    /**
     * <code>.spark.connect.DataType.Struct struct = 21;</code>
     * @return Whether the struct field is set.
     */
    @java.lang.Override
    public boolean hasStruct() {
      return kindCase_ == 21;
    }
    /**
     * <code>.spark.connect.DataType.Struct struct = 21;</code>
     * @return The struct.
     */
    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.DataType.Struct getStruct() {
      if (structBuilder_ == null) {
        if (kindCase_ == 21) {
          return (org.apache.kyuubi.engine.spark.connect.proto.DataType.Struct) kind_;
        }
        return org.apache.kyuubi.engine.spark.connect.proto.DataType.Struct.getDefaultInstance();
      } else {
        if (kindCase_ == 21) {
          return structBuilder_.getMessage();
        }
        return org.apache.kyuubi.engine.spark.connect.proto.DataType.Struct.getDefaultInstance();
      }
    }
    /**
     * <code>.spark.connect.DataType.Struct struct = 21;</code>
     */
    public Builder setStruct(org.apache.kyuubi.engine.spark.connect.proto.DataType.Struct value) {
      if (structBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        kind_ = value;
        onChanged();
      } else {
        structBuilder_.setMessage(value);
      }
      kindCase_ = 21;
      return this;
    }
    /**
     * <code>.spark.connect.DataType.Struct struct = 21;</code>
     */
    public Builder setStruct(
        org.apache.kyuubi.engine.spark.connect.proto.DataType.Struct.Builder builderForValue) {
      if (structBuilder_ == null) {
        kind_ = builderForValue.build();
        onChanged();
      } else {
        structBuilder_.setMessage(builderForValue.build());
      }
      kindCase_ = 21;
      return this;
    }
    /**
     * <code>.spark.connect.DataType.Struct struct = 21;</code>
     */
    public Builder mergeStruct(org.apache.kyuubi.engine.spark.connect.proto.DataType.Struct value) {
      if (structBuilder_ == null) {
        if (kindCase_ == 21 &&
            kind_ != org.apache.kyuubi.engine.spark.connect.proto.DataType.Struct.getDefaultInstance()) {
          kind_ = org.apache.kyuubi.engine.spark.connect.proto.DataType.Struct.newBuilder((org.apache.kyuubi.engine.spark.connect.proto.DataType.Struct) kind_)
              .mergeFrom(value).buildPartial();
        } else {
          kind_ = value;
        }
        onChanged();
      } else {
        if (kindCase_ == 21) {
          structBuilder_.mergeFrom(value);
        } else {
          structBuilder_.setMessage(value);
        }
      }
      kindCase_ = 21;
      return this;
    }
    /**
     * <code>.spark.connect.DataType.Struct struct = 21;</code>
     */
    public Builder clearStruct() {
      if (structBuilder_ == null) {
        if (kindCase_ == 21) {
          kindCase_ = 0;
          kind_ = null;
          onChanged();
        }
      } else {
        if (kindCase_ == 21) {
          kindCase_ = 0;
          kind_ = null;
        }
        structBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.spark.connect.DataType.Struct struct = 21;</code>
     */
    public org.apache.kyuubi.engine.spark.connect.proto.DataType.Struct.Builder getStructBuilder() {
      return getStructFieldBuilder().getBuilder();
    }
    /**
     * <code>.spark.connect.DataType.Struct struct = 21;</code>
     */
    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.DataType.StructOrBuilder getStructOrBuilder() {
      if ((kindCase_ == 21) && (structBuilder_ != null)) {
        return structBuilder_.getMessageOrBuilder();
      } else {
        if (kindCase_ == 21) {
          return (org.apache.kyuubi.engine.spark.connect.proto.DataType.Struct) kind_;
        }
        return org.apache.kyuubi.engine.spark.connect.proto.DataType.Struct.getDefaultInstance();
      }
    }
    /**
     * <code>.spark.connect.DataType.Struct struct = 21;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.apache.kyuubi.engine.spark.connect.proto.DataType.Struct, org.apache.kyuubi.engine.spark.connect.proto.DataType.Struct.Builder, org.apache.kyuubi.engine.spark.connect.proto.DataType.StructOrBuilder> 
        getStructFieldBuilder() {
      if (structBuilder_ == null) {
        if (!(kindCase_ == 21)) {
          kind_ = org.apache.kyuubi.engine.spark.connect.proto.DataType.Struct.getDefaultInstance();
        }
        structBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.apache.kyuubi.engine.spark.connect.proto.DataType.Struct, org.apache.kyuubi.engine.spark.connect.proto.DataType.Struct.Builder, org.apache.kyuubi.engine.spark.connect.proto.DataType.StructOrBuilder>(
                (org.apache.kyuubi.engine.spark.connect.proto.DataType.Struct) kind_,
                getParentForChildren(),
                isClean());
        kind_ = null;
      }
      kindCase_ = 21;
      onChanged();;
      return structBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        org.apache.kyuubi.engine.spark.connect.proto.DataType.Map, org.apache.kyuubi.engine.spark.connect.proto.DataType.Map.Builder, org.apache.kyuubi.engine.spark.connect.proto.DataType.MapOrBuilder> mapBuilder_;
    /**
     * <code>.spark.connect.DataType.Map map = 22;</code>
     * @return Whether the map field is set.
     */
    @java.lang.Override
    public boolean hasMap() {
      return kindCase_ == 22;
    }
    /**
     * <code>.spark.connect.DataType.Map map = 22;</code>
     * @return The map.
     */
    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.DataType.Map getMap() {
      if (mapBuilder_ == null) {
        if (kindCase_ == 22) {
          return (org.apache.kyuubi.engine.spark.connect.proto.DataType.Map) kind_;
        }
        return org.apache.kyuubi.engine.spark.connect.proto.DataType.Map.getDefaultInstance();
      } else {
        if (kindCase_ == 22) {
          return mapBuilder_.getMessage();
        }
        return org.apache.kyuubi.engine.spark.connect.proto.DataType.Map.getDefaultInstance();
      }
    }
    /**
     * <code>.spark.connect.DataType.Map map = 22;</code>
     */
    public Builder setMap(org.apache.kyuubi.engine.spark.connect.proto.DataType.Map value) {
      if (mapBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        kind_ = value;
        onChanged();
      } else {
        mapBuilder_.setMessage(value);
      }
      kindCase_ = 22;
      return this;
    }
    /**
     * <code>.spark.connect.DataType.Map map = 22;</code>
     */
    public Builder setMap(
        org.apache.kyuubi.engine.spark.connect.proto.DataType.Map.Builder builderForValue) {
      if (mapBuilder_ == null) {
        kind_ = builderForValue.build();
        onChanged();
      } else {
        mapBuilder_.setMessage(builderForValue.build());
      }
      kindCase_ = 22;
      return this;
    }
    /**
     * <code>.spark.connect.DataType.Map map = 22;</code>
     */
    public Builder mergeMap(org.apache.kyuubi.engine.spark.connect.proto.DataType.Map value) {
      if (mapBuilder_ == null) {
        if (kindCase_ == 22 &&
            kind_ != org.apache.kyuubi.engine.spark.connect.proto.DataType.Map.getDefaultInstance()) {
          kind_ = org.apache.kyuubi.engine.spark.connect.proto.DataType.Map.newBuilder((org.apache.kyuubi.engine.spark.connect.proto.DataType.Map) kind_)
              .mergeFrom(value).buildPartial();
        } else {
          kind_ = value;
        }
        onChanged();
      } else {
        if (kindCase_ == 22) {
          mapBuilder_.mergeFrom(value);
        } else {
          mapBuilder_.setMessage(value);
        }
      }
      kindCase_ = 22;
      return this;
    }
    /**
     * <code>.spark.connect.DataType.Map map = 22;</code>
     */
    public Builder clearMap() {
      if (mapBuilder_ == null) {
        if (kindCase_ == 22) {
          kindCase_ = 0;
          kind_ = null;
          onChanged();
        }
      } else {
        if (kindCase_ == 22) {
          kindCase_ = 0;
          kind_ = null;
        }
        mapBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.spark.connect.DataType.Map map = 22;</code>
     */
    public org.apache.kyuubi.engine.spark.connect.proto.DataType.Map.Builder getMapBuilder() {
      return getMapFieldBuilder().getBuilder();
    }
    /**
     * <code>.spark.connect.DataType.Map map = 22;</code>
     */
    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.DataType.MapOrBuilder getMapOrBuilder() {
      if ((kindCase_ == 22) && (mapBuilder_ != null)) {
        return mapBuilder_.getMessageOrBuilder();
      } else {
        if (kindCase_ == 22) {
          return (org.apache.kyuubi.engine.spark.connect.proto.DataType.Map) kind_;
        }
        return org.apache.kyuubi.engine.spark.connect.proto.DataType.Map.getDefaultInstance();
      }
    }
    /**
     * <code>.spark.connect.DataType.Map map = 22;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.apache.kyuubi.engine.spark.connect.proto.DataType.Map, org.apache.kyuubi.engine.spark.connect.proto.DataType.Map.Builder, org.apache.kyuubi.engine.spark.connect.proto.DataType.MapOrBuilder> 
        getMapFieldBuilder() {
      if (mapBuilder_ == null) {
        if (!(kindCase_ == 22)) {
          kind_ = org.apache.kyuubi.engine.spark.connect.proto.DataType.Map.getDefaultInstance();
        }
        mapBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.apache.kyuubi.engine.spark.connect.proto.DataType.Map, org.apache.kyuubi.engine.spark.connect.proto.DataType.Map.Builder, org.apache.kyuubi.engine.spark.connect.proto.DataType.MapOrBuilder>(
                (org.apache.kyuubi.engine.spark.connect.proto.DataType.Map) kind_,
                getParentForChildren(),
                isClean());
        kind_ = null;
      }
      kindCase_ = 22;
      onChanged();;
      return mapBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        org.apache.kyuubi.engine.spark.connect.proto.DataType.UDT, org.apache.kyuubi.engine.spark.connect.proto.DataType.UDT.Builder, org.apache.kyuubi.engine.spark.connect.proto.DataType.UDTOrBuilder> udtBuilder_;
    /**
     * <pre>
     * UserDefinedType
     * </pre>
     *
     * <code>.spark.connect.DataType.UDT udt = 23;</code>
     * @return Whether the udt field is set.
     */
    @java.lang.Override
    public boolean hasUdt() {
      return kindCase_ == 23;
    }
    /**
     * <pre>
     * UserDefinedType
     * </pre>
     *
     * <code>.spark.connect.DataType.UDT udt = 23;</code>
     * @return The udt.
     */
    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.DataType.UDT getUdt() {
      if (udtBuilder_ == null) {
        if (kindCase_ == 23) {
          return (org.apache.kyuubi.engine.spark.connect.proto.DataType.UDT) kind_;
        }
        return org.apache.kyuubi.engine.spark.connect.proto.DataType.UDT.getDefaultInstance();
      } else {
        if (kindCase_ == 23) {
          return udtBuilder_.getMessage();
        }
        return org.apache.kyuubi.engine.spark.connect.proto.DataType.UDT.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * UserDefinedType
     * </pre>
     *
     * <code>.spark.connect.DataType.UDT udt = 23;</code>
     */
    public Builder setUdt(org.apache.kyuubi.engine.spark.connect.proto.DataType.UDT value) {
      if (udtBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        kind_ = value;
        onChanged();
      } else {
        udtBuilder_.setMessage(value);
      }
      kindCase_ = 23;
      return this;
    }
    /**
     * <pre>
     * UserDefinedType
     * </pre>
     *
     * <code>.spark.connect.DataType.UDT udt = 23;</code>
     */
    public Builder setUdt(
        org.apache.kyuubi.engine.spark.connect.proto.DataType.UDT.Builder builderForValue) {
      if (udtBuilder_ == null) {
        kind_ = builderForValue.build();
        onChanged();
      } else {
        udtBuilder_.setMessage(builderForValue.build());
      }
      kindCase_ = 23;
      return this;
    }
    /**
     * <pre>
     * UserDefinedType
     * </pre>
     *
     * <code>.spark.connect.DataType.UDT udt = 23;</code>
     */
    public Builder mergeUdt(org.apache.kyuubi.engine.spark.connect.proto.DataType.UDT value) {
      if (udtBuilder_ == null) {
        if (kindCase_ == 23 &&
            kind_ != org.apache.kyuubi.engine.spark.connect.proto.DataType.UDT.getDefaultInstance()) {
          kind_ = org.apache.kyuubi.engine.spark.connect.proto.DataType.UDT.newBuilder((org.apache.kyuubi.engine.spark.connect.proto.DataType.UDT) kind_)
              .mergeFrom(value).buildPartial();
        } else {
          kind_ = value;
        }
        onChanged();
      } else {
        if (kindCase_ == 23) {
          udtBuilder_.mergeFrom(value);
        } else {
          udtBuilder_.setMessage(value);
        }
      }
      kindCase_ = 23;
      return this;
    }
    /**
     * <pre>
     * UserDefinedType
     * </pre>
     *
     * <code>.spark.connect.DataType.UDT udt = 23;</code>
     */
    public Builder clearUdt() {
      if (udtBuilder_ == null) {
        if (kindCase_ == 23) {
          kindCase_ = 0;
          kind_ = null;
          onChanged();
        }
      } else {
        if (kindCase_ == 23) {
          kindCase_ = 0;
          kind_ = null;
        }
        udtBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * UserDefinedType
     * </pre>
     *
     * <code>.spark.connect.DataType.UDT udt = 23;</code>
     */
    public org.apache.kyuubi.engine.spark.connect.proto.DataType.UDT.Builder getUdtBuilder() {
      return getUdtFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * UserDefinedType
     * </pre>
     *
     * <code>.spark.connect.DataType.UDT udt = 23;</code>
     */
    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.DataType.UDTOrBuilder getUdtOrBuilder() {
      if ((kindCase_ == 23) && (udtBuilder_ != null)) {
        return udtBuilder_.getMessageOrBuilder();
      } else {
        if (kindCase_ == 23) {
          return (org.apache.kyuubi.engine.spark.connect.proto.DataType.UDT) kind_;
        }
        return org.apache.kyuubi.engine.spark.connect.proto.DataType.UDT.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * UserDefinedType
     * </pre>
     *
     * <code>.spark.connect.DataType.UDT udt = 23;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.apache.kyuubi.engine.spark.connect.proto.DataType.UDT, org.apache.kyuubi.engine.spark.connect.proto.DataType.UDT.Builder, org.apache.kyuubi.engine.spark.connect.proto.DataType.UDTOrBuilder> 
        getUdtFieldBuilder() {
      if (udtBuilder_ == null) {
        if (!(kindCase_ == 23)) {
          kind_ = org.apache.kyuubi.engine.spark.connect.proto.DataType.UDT.getDefaultInstance();
        }
        udtBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.apache.kyuubi.engine.spark.connect.proto.DataType.UDT, org.apache.kyuubi.engine.spark.connect.proto.DataType.UDT.Builder, org.apache.kyuubi.engine.spark.connect.proto.DataType.UDTOrBuilder>(
                (org.apache.kyuubi.engine.spark.connect.proto.DataType.UDT) kind_,
                getParentForChildren(),
                isClean());
        kind_ = null;
      }
      kindCase_ = 23;
      onChanged();;
      return udtBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        org.apache.kyuubi.engine.spark.connect.proto.DataType.Unparsed, org.apache.kyuubi.engine.spark.connect.proto.DataType.Unparsed.Builder, org.apache.kyuubi.engine.spark.connect.proto.DataType.UnparsedOrBuilder> unparsedBuilder_;
    /**
     * <pre>
     * UnparsedDataType
     * </pre>
     *
     * <code>.spark.connect.DataType.Unparsed unparsed = 24;</code>
     * @return Whether the unparsed field is set.
     */
    @java.lang.Override
    public boolean hasUnparsed() {
      return kindCase_ == 24;
    }
    /**
     * <pre>
     * UnparsedDataType
     * </pre>
     *
     * <code>.spark.connect.DataType.Unparsed unparsed = 24;</code>
     * @return The unparsed.
     */
    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.DataType.Unparsed getUnparsed() {
      if (unparsedBuilder_ == null) {
        if (kindCase_ == 24) {
          return (org.apache.kyuubi.engine.spark.connect.proto.DataType.Unparsed) kind_;
        }
        return org.apache.kyuubi.engine.spark.connect.proto.DataType.Unparsed.getDefaultInstance();
      } else {
        if (kindCase_ == 24) {
          return unparsedBuilder_.getMessage();
        }
        return org.apache.kyuubi.engine.spark.connect.proto.DataType.Unparsed.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * UnparsedDataType
     * </pre>
     *
     * <code>.spark.connect.DataType.Unparsed unparsed = 24;</code>
     */
    public Builder setUnparsed(org.apache.kyuubi.engine.spark.connect.proto.DataType.Unparsed value) {
      if (unparsedBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        kind_ = value;
        onChanged();
      } else {
        unparsedBuilder_.setMessage(value);
      }
      kindCase_ = 24;
      return this;
    }
    /**
     * <pre>
     * UnparsedDataType
     * </pre>
     *
     * <code>.spark.connect.DataType.Unparsed unparsed = 24;</code>
     */
    public Builder setUnparsed(
        org.apache.kyuubi.engine.spark.connect.proto.DataType.Unparsed.Builder builderForValue) {
      if (unparsedBuilder_ == null) {
        kind_ = builderForValue.build();
        onChanged();
      } else {
        unparsedBuilder_.setMessage(builderForValue.build());
      }
      kindCase_ = 24;
      return this;
    }
    /**
     * <pre>
     * UnparsedDataType
     * </pre>
     *
     * <code>.spark.connect.DataType.Unparsed unparsed = 24;</code>
     */
    public Builder mergeUnparsed(org.apache.kyuubi.engine.spark.connect.proto.DataType.Unparsed value) {
      if (unparsedBuilder_ == null) {
        if (kindCase_ == 24 &&
            kind_ != org.apache.kyuubi.engine.spark.connect.proto.DataType.Unparsed.getDefaultInstance()) {
          kind_ = org.apache.kyuubi.engine.spark.connect.proto.DataType.Unparsed.newBuilder((org.apache.kyuubi.engine.spark.connect.proto.DataType.Unparsed) kind_)
              .mergeFrom(value).buildPartial();
        } else {
          kind_ = value;
        }
        onChanged();
      } else {
        if (kindCase_ == 24) {
          unparsedBuilder_.mergeFrom(value);
        } else {
          unparsedBuilder_.setMessage(value);
        }
      }
      kindCase_ = 24;
      return this;
    }
    /**
     * <pre>
     * UnparsedDataType
     * </pre>
     *
     * <code>.spark.connect.DataType.Unparsed unparsed = 24;</code>
     */
    public Builder clearUnparsed() {
      if (unparsedBuilder_ == null) {
        if (kindCase_ == 24) {
          kindCase_ = 0;
          kind_ = null;
          onChanged();
        }
      } else {
        if (kindCase_ == 24) {
          kindCase_ = 0;
          kind_ = null;
        }
        unparsedBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * UnparsedDataType
     * </pre>
     *
     * <code>.spark.connect.DataType.Unparsed unparsed = 24;</code>
     */
    public org.apache.kyuubi.engine.spark.connect.proto.DataType.Unparsed.Builder getUnparsedBuilder() {
      return getUnparsedFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * UnparsedDataType
     * </pre>
     *
     * <code>.spark.connect.DataType.Unparsed unparsed = 24;</code>
     */
    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.DataType.UnparsedOrBuilder getUnparsedOrBuilder() {
      if ((kindCase_ == 24) && (unparsedBuilder_ != null)) {
        return unparsedBuilder_.getMessageOrBuilder();
      } else {
        if (kindCase_ == 24) {
          return (org.apache.kyuubi.engine.spark.connect.proto.DataType.Unparsed) kind_;
        }
        return org.apache.kyuubi.engine.spark.connect.proto.DataType.Unparsed.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * UnparsedDataType
     * </pre>
     *
     * <code>.spark.connect.DataType.Unparsed unparsed = 24;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.apache.kyuubi.engine.spark.connect.proto.DataType.Unparsed, org.apache.kyuubi.engine.spark.connect.proto.DataType.Unparsed.Builder, org.apache.kyuubi.engine.spark.connect.proto.DataType.UnparsedOrBuilder> 
        getUnparsedFieldBuilder() {
      if (unparsedBuilder_ == null) {
        if (!(kindCase_ == 24)) {
          kind_ = org.apache.kyuubi.engine.spark.connect.proto.DataType.Unparsed.getDefaultInstance();
        }
        unparsedBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.apache.kyuubi.engine.spark.connect.proto.DataType.Unparsed, org.apache.kyuubi.engine.spark.connect.proto.DataType.Unparsed.Builder, org.apache.kyuubi.engine.spark.connect.proto.DataType.UnparsedOrBuilder>(
                (org.apache.kyuubi.engine.spark.connect.proto.DataType.Unparsed) kind_,
                getParentForChildren(),
                isClean());
        kind_ = null;
      }
      kindCase_ = 24;
      onChanged();;
      return unparsedBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:spark.connect.DataType)
  }

  // @@protoc_insertion_point(class_scope:spark.connect.DataType)
  private static final org.apache.kyuubi.engine.spark.connect.proto.DataType DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new org.apache.kyuubi.engine.spark.connect.proto.DataType();
  }

  public static org.apache.kyuubi.engine.spark.connect.proto.DataType getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<DataType>
      PARSER = new com.google.protobuf.AbstractParser<DataType>() {
    @java.lang.Override
    public DataType parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<DataType> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<DataType> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public org.apache.kyuubi.engine.spark.connect.proto.DataType getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

