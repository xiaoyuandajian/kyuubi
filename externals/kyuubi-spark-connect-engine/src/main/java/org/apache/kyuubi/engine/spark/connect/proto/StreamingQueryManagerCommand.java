// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: spark/connect/commands.proto

package org.apache.kyuubi.engine.spark.connect.proto;

/**
 * <pre>
 * Commands for the streaming query manager.
 * </pre>
 *
 * Protobuf type {@code spark.connect.StreamingQueryManagerCommand}
 */
public final class StreamingQueryManagerCommand extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:spark.connect.StreamingQueryManagerCommand)
    StreamingQueryManagerCommandOrBuilder {
private static final long serialVersionUID = 0L;
  // Use StreamingQueryManagerCommand.newBuilder() to construct.
  private StreamingQueryManagerCommand(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private StreamingQueryManagerCommand() {
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new StreamingQueryManagerCommand();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return org.apache.kyuubi.engine.spark.connect.proto.Commands.internal_static_spark_connect_StreamingQueryManagerCommand_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return org.apache.kyuubi.engine.spark.connect.proto.Commands.internal_static_spark_connect_StreamingQueryManagerCommand_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.class, org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.Builder.class);
  }

  public interface AwaitAnyTerminationCommandOrBuilder extends
      // @@protoc_insertion_point(interface_extends:spark.connect.StreamingQueryManagerCommand.AwaitAnyTerminationCommand)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * (Optional) The waiting time in milliseconds to wait for any query to terminate.
     * </pre>
     *
     * <code>optional int64 timeout_ms = 1;</code>
     * @return Whether the timeoutMs field is set.
     */
    boolean hasTimeoutMs();
    /**
     * <pre>
     * (Optional) The waiting time in milliseconds to wait for any query to terminate.
     * </pre>
     *
     * <code>optional int64 timeout_ms = 1;</code>
     * @return The timeoutMs.
     */
    long getTimeoutMs();
  }
  /**
   * Protobuf type {@code spark.connect.StreamingQueryManagerCommand.AwaitAnyTerminationCommand}
   */
  public static final class AwaitAnyTerminationCommand extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:spark.connect.StreamingQueryManagerCommand.AwaitAnyTerminationCommand)
      AwaitAnyTerminationCommandOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use AwaitAnyTerminationCommand.newBuilder() to construct.
    private AwaitAnyTerminationCommand(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private AwaitAnyTerminationCommand() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new AwaitAnyTerminationCommand();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.kyuubi.engine.spark.connect.proto.Commands.internal_static_spark_connect_StreamingQueryManagerCommand_AwaitAnyTerminationCommand_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.kyuubi.engine.spark.connect.proto.Commands.internal_static_spark_connect_StreamingQueryManagerCommand_AwaitAnyTerminationCommand_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.AwaitAnyTerminationCommand.class, org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.AwaitAnyTerminationCommand.Builder.class);
    }

    private int bitField0_;
    public static final int TIMEOUT_MS_FIELD_NUMBER = 1;
    private long timeoutMs_;
    /**
     * <pre>
     * (Optional) The waiting time in milliseconds to wait for any query to terminate.
     * </pre>
     *
     * <code>optional int64 timeout_ms = 1;</code>
     * @return Whether the timeoutMs field is set.
     */
    @java.lang.Override
    public boolean hasTimeoutMs() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * (Optional) The waiting time in milliseconds to wait for any query to terminate.
     * </pre>
     *
     * <code>optional int64 timeout_ms = 1;</code>
     * @return The timeoutMs.
     */
    @java.lang.Override
    public long getTimeoutMs() {
      return timeoutMs_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeInt64(1, timeoutMs_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, timeoutMs_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.AwaitAnyTerminationCommand)) {
        return super.equals(obj);
      }
      org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.AwaitAnyTerminationCommand other = (org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.AwaitAnyTerminationCommand) obj;

      if (hasTimeoutMs() != other.hasTimeoutMs()) return false;
      if (hasTimeoutMs()) {
        if (getTimeoutMs()
            != other.getTimeoutMs()) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasTimeoutMs()) {
        hash = (37 * hash) + TIMEOUT_MS_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getTimeoutMs());
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.AwaitAnyTerminationCommand parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.AwaitAnyTerminationCommand parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.AwaitAnyTerminationCommand parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.AwaitAnyTerminationCommand parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.AwaitAnyTerminationCommand parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.AwaitAnyTerminationCommand parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.AwaitAnyTerminationCommand parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.AwaitAnyTerminationCommand parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.AwaitAnyTerminationCommand parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.AwaitAnyTerminationCommand parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.AwaitAnyTerminationCommand parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.AwaitAnyTerminationCommand parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.AwaitAnyTerminationCommand prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code spark.connect.StreamingQueryManagerCommand.AwaitAnyTerminationCommand}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:spark.connect.StreamingQueryManagerCommand.AwaitAnyTerminationCommand)
        org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.AwaitAnyTerminationCommandOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.kyuubi.engine.spark.connect.proto.Commands.internal_static_spark_connect_StreamingQueryManagerCommand_AwaitAnyTerminationCommand_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.kyuubi.engine.spark.connect.proto.Commands.internal_static_spark_connect_StreamingQueryManagerCommand_AwaitAnyTerminationCommand_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.AwaitAnyTerminationCommand.class, org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.AwaitAnyTerminationCommand.Builder.class);
      }

      // Construct using org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.AwaitAnyTerminationCommand.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        timeoutMs_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.kyuubi.engine.spark.connect.proto.Commands.internal_static_spark_connect_StreamingQueryManagerCommand_AwaitAnyTerminationCommand_descriptor;
      }

      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.AwaitAnyTerminationCommand getDefaultInstanceForType() {
        return org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.AwaitAnyTerminationCommand.getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.AwaitAnyTerminationCommand build() {
        org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.AwaitAnyTerminationCommand result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.AwaitAnyTerminationCommand buildPartial() {
        org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.AwaitAnyTerminationCommand result = new org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.AwaitAnyTerminationCommand(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.timeoutMs_ = timeoutMs_;
          to_bitField0_ |= 0x00000001;
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.AwaitAnyTerminationCommand) {
          return mergeFrom((org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.AwaitAnyTerminationCommand)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.AwaitAnyTerminationCommand other) {
        if (other == org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.AwaitAnyTerminationCommand.getDefaultInstance()) return this;
        if (other.hasTimeoutMs()) {
          setTimeoutMs(other.getTimeoutMs());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                timeoutMs_ = input.readInt64();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private long timeoutMs_ ;
      /**
       * <pre>
       * (Optional) The waiting time in milliseconds to wait for any query to terminate.
       * </pre>
       *
       * <code>optional int64 timeout_ms = 1;</code>
       * @return Whether the timeoutMs field is set.
       */
      @java.lang.Override
      public boolean hasTimeoutMs() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * (Optional) The waiting time in milliseconds to wait for any query to terminate.
       * </pre>
       *
       * <code>optional int64 timeout_ms = 1;</code>
       * @return The timeoutMs.
       */
      @java.lang.Override
      public long getTimeoutMs() {
        return timeoutMs_;
      }
      /**
       * <pre>
       * (Optional) The waiting time in milliseconds to wait for any query to terminate.
       * </pre>
       *
       * <code>optional int64 timeout_ms = 1;</code>
       * @param value The timeoutMs to set.
       * @return This builder for chaining.
       */
      public Builder setTimeoutMs(long value) {
        bitField0_ |= 0x00000001;
        timeoutMs_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * (Optional) The waiting time in milliseconds to wait for any query to terminate.
       * </pre>
       *
       * <code>optional int64 timeout_ms = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearTimeoutMs() {
        bitField0_ = (bitField0_ & ~0x00000001);
        timeoutMs_ = 0L;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:spark.connect.StreamingQueryManagerCommand.AwaitAnyTerminationCommand)
    }

    // @@protoc_insertion_point(class_scope:spark.connect.StreamingQueryManagerCommand.AwaitAnyTerminationCommand)
    private static final org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.AwaitAnyTerminationCommand DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.AwaitAnyTerminationCommand();
    }

    public static org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.AwaitAnyTerminationCommand getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<AwaitAnyTerminationCommand>
        PARSER = new com.google.protobuf.AbstractParser<AwaitAnyTerminationCommand>() {
      @java.lang.Override
      public AwaitAnyTerminationCommand parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<AwaitAnyTerminationCommand> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<AwaitAnyTerminationCommand> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.AwaitAnyTerminationCommand getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface StreamingQueryListenerCommandOrBuilder extends
      // @@protoc_insertion_point(interface_extends:spark.connect.StreamingQueryManagerCommand.StreamingQueryListenerCommand)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>bytes listener_payload = 1;</code>
     * @return The listenerPayload.
     */
    com.google.protobuf.ByteString getListenerPayload();

    /**
     * <code>optional .spark.connect.PythonUDF python_listener_payload = 2;</code>
     * @return Whether the pythonListenerPayload field is set.
     */
    boolean hasPythonListenerPayload();
    /**
     * <code>optional .spark.connect.PythonUDF python_listener_payload = 2;</code>
     * @return The pythonListenerPayload.
     */
    org.apache.kyuubi.engine.spark.connect.proto.PythonUDF getPythonListenerPayload();
    /**
     * <code>optional .spark.connect.PythonUDF python_listener_payload = 2;</code>
     */
    org.apache.kyuubi.engine.spark.connect.proto.PythonUDFOrBuilder getPythonListenerPayloadOrBuilder();

    /**
     * <code>string id = 3;</code>
     * @return The id.
     */
    java.lang.String getId();
    /**
     * <code>string id = 3;</code>
     * @return The bytes for id.
     */
    com.google.protobuf.ByteString
        getIdBytes();
  }
  /**
   * Protobuf type {@code spark.connect.StreamingQueryManagerCommand.StreamingQueryListenerCommand}
   */
  public static final class StreamingQueryListenerCommand extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:spark.connect.StreamingQueryManagerCommand.StreamingQueryListenerCommand)
      StreamingQueryListenerCommandOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use StreamingQueryListenerCommand.newBuilder() to construct.
    private StreamingQueryListenerCommand(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private StreamingQueryListenerCommand() {
      listenerPayload_ = com.google.protobuf.ByteString.EMPTY;
      id_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new StreamingQueryListenerCommand();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.kyuubi.engine.spark.connect.proto.Commands.internal_static_spark_connect_StreamingQueryManagerCommand_StreamingQueryListenerCommand_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.kyuubi.engine.spark.connect.proto.Commands.internal_static_spark_connect_StreamingQueryManagerCommand_StreamingQueryListenerCommand_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.StreamingQueryListenerCommand.class, org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.StreamingQueryListenerCommand.Builder.class);
    }

    private int bitField0_;
    public static final int LISTENER_PAYLOAD_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString listenerPayload_;
    /**
     * <code>bytes listener_payload = 1;</code>
     * @return The listenerPayload.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getListenerPayload() {
      return listenerPayload_;
    }

    public static final int PYTHON_LISTENER_PAYLOAD_FIELD_NUMBER = 2;
    private org.apache.kyuubi.engine.spark.connect.proto.PythonUDF pythonListenerPayload_;
    /**
     * <code>optional .spark.connect.PythonUDF python_listener_payload = 2;</code>
     * @return Whether the pythonListenerPayload field is set.
     */
    @java.lang.Override
    public boolean hasPythonListenerPayload() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional .spark.connect.PythonUDF python_listener_payload = 2;</code>
     * @return The pythonListenerPayload.
     */
    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.PythonUDF getPythonListenerPayload() {
      return pythonListenerPayload_ == null ? org.apache.kyuubi.engine.spark.connect.proto.PythonUDF.getDefaultInstance() : pythonListenerPayload_;
    }
    /**
     * <code>optional .spark.connect.PythonUDF python_listener_payload = 2;</code>
     */
    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.PythonUDFOrBuilder getPythonListenerPayloadOrBuilder() {
      return pythonListenerPayload_ == null ? org.apache.kyuubi.engine.spark.connect.proto.PythonUDF.getDefaultInstance() : pythonListenerPayload_;
    }

    public static final int ID_FIELD_NUMBER = 3;
    private volatile java.lang.Object id_;
    /**
     * <code>string id = 3;</code>
     * @return The id.
     */
    @java.lang.Override
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        id_ = s;
        return s;
      }
    }
    /**
     * <code>string id = 3;</code>
     * @return The bytes for id.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!listenerPayload_.isEmpty()) {
        output.writeBytes(1, listenerPayload_);
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeMessage(2, getPythonListenerPayload());
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(id_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, id_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!listenerPayload_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, listenerPayload_);
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getPythonListenerPayload());
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(id_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, id_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.StreamingQueryListenerCommand)) {
        return super.equals(obj);
      }
      org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.StreamingQueryListenerCommand other = (org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.StreamingQueryListenerCommand) obj;

      if (!getListenerPayload()
          .equals(other.getListenerPayload())) return false;
      if (hasPythonListenerPayload() != other.hasPythonListenerPayload()) return false;
      if (hasPythonListenerPayload()) {
        if (!getPythonListenerPayload()
            .equals(other.getPythonListenerPayload())) return false;
      }
      if (!getId()
          .equals(other.getId())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + LISTENER_PAYLOAD_FIELD_NUMBER;
      hash = (53 * hash) + getListenerPayload().hashCode();
      if (hasPythonListenerPayload()) {
        hash = (37 * hash) + PYTHON_LISTENER_PAYLOAD_FIELD_NUMBER;
        hash = (53 * hash) + getPythonListenerPayload().hashCode();
      }
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId().hashCode();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.StreamingQueryListenerCommand parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.StreamingQueryListenerCommand parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.StreamingQueryListenerCommand parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.StreamingQueryListenerCommand parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.StreamingQueryListenerCommand parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.StreamingQueryListenerCommand parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.StreamingQueryListenerCommand parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.StreamingQueryListenerCommand parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.StreamingQueryListenerCommand parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.StreamingQueryListenerCommand parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.StreamingQueryListenerCommand parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.StreamingQueryListenerCommand parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.StreamingQueryListenerCommand prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code spark.connect.StreamingQueryManagerCommand.StreamingQueryListenerCommand}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:spark.connect.StreamingQueryManagerCommand.StreamingQueryListenerCommand)
        org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.StreamingQueryListenerCommandOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.kyuubi.engine.spark.connect.proto.Commands.internal_static_spark_connect_StreamingQueryManagerCommand_StreamingQueryListenerCommand_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.kyuubi.engine.spark.connect.proto.Commands.internal_static_spark_connect_StreamingQueryManagerCommand_StreamingQueryListenerCommand_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.StreamingQueryListenerCommand.class, org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.StreamingQueryListenerCommand.Builder.class);
      }

      // Construct using org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.StreamingQueryListenerCommand.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getPythonListenerPayloadFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        listenerPayload_ = com.google.protobuf.ByteString.EMPTY;

        if (pythonListenerPayloadBuilder_ == null) {
          pythonListenerPayload_ = null;
        } else {
          pythonListenerPayloadBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.kyuubi.engine.spark.connect.proto.Commands.internal_static_spark_connect_StreamingQueryManagerCommand_StreamingQueryListenerCommand_descriptor;
      }

      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.StreamingQueryListenerCommand getDefaultInstanceForType() {
        return org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.StreamingQueryListenerCommand.getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.StreamingQueryListenerCommand build() {
        org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.StreamingQueryListenerCommand result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.StreamingQueryListenerCommand buildPartial() {
        org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.StreamingQueryListenerCommand result = new org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.StreamingQueryListenerCommand(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.listenerPayload_ = listenerPayload_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          if (pythonListenerPayloadBuilder_ == null) {
            result.pythonListenerPayload_ = pythonListenerPayload_;
          } else {
            result.pythonListenerPayload_ = pythonListenerPayloadBuilder_.build();
          }
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.StreamingQueryListenerCommand) {
          return mergeFrom((org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.StreamingQueryListenerCommand)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.StreamingQueryListenerCommand other) {
        if (other == org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.StreamingQueryListenerCommand.getDefaultInstance()) return this;
        if (other.getListenerPayload() != com.google.protobuf.ByteString.EMPTY) {
          setListenerPayload(other.getListenerPayload());
        }
        if (other.hasPythonListenerPayload()) {
          mergePythonListenerPayload(other.getPythonListenerPayload());
        }
        if (!other.getId().isEmpty()) {
          id_ = other.id_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                listenerPayload_ = input.readBytes();

                break;
              } // case 10
              case 18: {
                input.readMessage(
                    getPythonListenerPayloadFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000001;
                break;
              } // case 18
              case 26: {
                id_ = input.readStringRequireUtf8();

                break;
              } // case 26
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.ByteString listenerPayload_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>bytes listener_payload = 1;</code>
       * @return The listenerPayload.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getListenerPayload() {
        return listenerPayload_;
      }
      /**
       * <code>bytes listener_payload = 1;</code>
       * @param value The listenerPayload to set.
       * @return This builder for chaining.
       */
      public Builder setListenerPayload(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        listenerPayload_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bytes listener_payload = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearListenerPayload() {
        
        listenerPayload_ = getDefaultInstance().getListenerPayload();
        onChanged();
        return this;
      }

      private org.apache.kyuubi.engine.spark.connect.proto.PythonUDF pythonListenerPayload_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.kyuubi.engine.spark.connect.proto.PythonUDF, org.apache.kyuubi.engine.spark.connect.proto.PythonUDF.Builder, org.apache.kyuubi.engine.spark.connect.proto.PythonUDFOrBuilder> pythonListenerPayloadBuilder_;
      /**
       * <code>optional .spark.connect.PythonUDF python_listener_payload = 2;</code>
       * @return Whether the pythonListenerPayload field is set.
       */
      public boolean hasPythonListenerPayload() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional .spark.connect.PythonUDF python_listener_payload = 2;</code>
       * @return The pythonListenerPayload.
       */
      public org.apache.kyuubi.engine.spark.connect.proto.PythonUDF getPythonListenerPayload() {
        if (pythonListenerPayloadBuilder_ == null) {
          return pythonListenerPayload_ == null ? org.apache.kyuubi.engine.spark.connect.proto.PythonUDF.getDefaultInstance() : pythonListenerPayload_;
        } else {
          return pythonListenerPayloadBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .spark.connect.PythonUDF python_listener_payload = 2;</code>
       */
      public Builder setPythonListenerPayload(org.apache.kyuubi.engine.spark.connect.proto.PythonUDF value) {
        if (pythonListenerPayloadBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          pythonListenerPayload_ = value;
          onChanged();
        } else {
          pythonListenerPayloadBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .spark.connect.PythonUDF python_listener_payload = 2;</code>
       */
      public Builder setPythonListenerPayload(
          org.apache.kyuubi.engine.spark.connect.proto.PythonUDF.Builder builderForValue) {
        if (pythonListenerPayloadBuilder_ == null) {
          pythonListenerPayload_ = builderForValue.build();
          onChanged();
        } else {
          pythonListenerPayloadBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .spark.connect.PythonUDF python_listener_payload = 2;</code>
       */
      public Builder mergePythonListenerPayload(org.apache.kyuubi.engine.spark.connect.proto.PythonUDF value) {
        if (pythonListenerPayloadBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0) &&
              pythonListenerPayload_ != null &&
              pythonListenerPayload_ != org.apache.kyuubi.engine.spark.connect.proto.PythonUDF.getDefaultInstance()) {
            pythonListenerPayload_ =
              org.apache.kyuubi.engine.spark.connect.proto.PythonUDF.newBuilder(pythonListenerPayload_).mergeFrom(value).buildPartial();
          } else {
            pythonListenerPayload_ = value;
          }
          onChanged();
        } else {
          pythonListenerPayloadBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .spark.connect.PythonUDF python_listener_payload = 2;</code>
       */
      public Builder clearPythonListenerPayload() {
        if (pythonListenerPayloadBuilder_ == null) {
          pythonListenerPayload_ = null;
          onChanged();
        } else {
          pythonListenerPayloadBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>optional .spark.connect.PythonUDF python_listener_payload = 2;</code>
       */
      public org.apache.kyuubi.engine.spark.connect.proto.PythonUDF.Builder getPythonListenerPayloadBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getPythonListenerPayloadFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .spark.connect.PythonUDF python_listener_payload = 2;</code>
       */
      public org.apache.kyuubi.engine.spark.connect.proto.PythonUDFOrBuilder getPythonListenerPayloadOrBuilder() {
        if (pythonListenerPayloadBuilder_ != null) {
          return pythonListenerPayloadBuilder_.getMessageOrBuilder();
        } else {
          return pythonListenerPayload_ == null ?
              org.apache.kyuubi.engine.spark.connect.proto.PythonUDF.getDefaultInstance() : pythonListenerPayload_;
        }
      }
      /**
       * <code>optional .spark.connect.PythonUDF python_listener_payload = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.kyuubi.engine.spark.connect.proto.PythonUDF, org.apache.kyuubi.engine.spark.connect.proto.PythonUDF.Builder, org.apache.kyuubi.engine.spark.connect.proto.PythonUDFOrBuilder> 
          getPythonListenerPayloadFieldBuilder() {
        if (pythonListenerPayloadBuilder_ == null) {
          pythonListenerPayloadBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.apache.kyuubi.engine.spark.connect.proto.PythonUDF, org.apache.kyuubi.engine.spark.connect.proto.PythonUDF.Builder, org.apache.kyuubi.engine.spark.connect.proto.PythonUDFOrBuilder>(
                  getPythonListenerPayload(),
                  getParentForChildren(),
                  isClean());
          pythonListenerPayload_ = null;
        }
        return pythonListenerPayloadBuilder_;
      }

      private java.lang.Object id_ = "";
      /**
       * <code>string id = 3;</code>
       * @return The id.
       */
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          id_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string id = 3;</code>
       * @return The bytes for id.
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string id = 3;</code>
       * @param value The id to set.
       * @return This builder for chaining.
       */
      public Builder setId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string id = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearId() {
        
        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }
      /**
       * <code>string id = 3;</code>
       * @param value The bytes for id to set.
       * @return This builder for chaining.
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        id_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:spark.connect.StreamingQueryManagerCommand.StreamingQueryListenerCommand)
    }

    // @@protoc_insertion_point(class_scope:spark.connect.StreamingQueryManagerCommand.StreamingQueryListenerCommand)
    private static final org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.StreamingQueryListenerCommand DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.StreamingQueryListenerCommand();
    }

    public static org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.StreamingQueryListenerCommand getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<StreamingQueryListenerCommand>
        PARSER = new com.google.protobuf.AbstractParser<StreamingQueryListenerCommand>() {
      @java.lang.Override
      public StreamingQueryListenerCommand parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<StreamingQueryListenerCommand> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<StreamingQueryListenerCommand> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.StreamingQueryListenerCommand getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private int commandCase_ = 0;
  private java.lang.Object command_;
  public enum CommandCase
      implements com.google.protobuf.Internal.EnumLite,
          com.google.protobuf.AbstractMessage.InternalOneOfEnum {
    ACTIVE(1),
    GET_QUERY(2),
    AWAIT_ANY_TERMINATION(3),
    RESET_TERMINATED(4),
    ADD_LISTENER(5),
    REMOVE_LISTENER(6),
    LIST_LISTENERS(7),
    COMMAND_NOT_SET(0);
    private final int value;
    private CommandCase(int value) {
      this.value = value;
    }
    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static CommandCase valueOf(int value) {
      return forNumber(value);
    }

    public static CommandCase forNumber(int value) {
      switch (value) {
        case 1: return ACTIVE;
        case 2: return GET_QUERY;
        case 3: return AWAIT_ANY_TERMINATION;
        case 4: return RESET_TERMINATED;
        case 5: return ADD_LISTENER;
        case 6: return REMOVE_LISTENER;
        case 7: return LIST_LISTENERS;
        case 0: return COMMAND_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public CommandCase
  getCommandCase() {
    return CommandCase.forNumber(
        commandCase_);
  }

  public static final int ACTIVE_FIELD_NUMBER = 1;
  /**
   * <pre>
   * active() API, returns a list of active queries.
   * </pre>
   *
   * <code>bool active = 1;</code>
   * @return Whether the active field is set.
   */
  @java.lang.Override
  public boolean hasActive() {
    return commandCase_ == 1;
  }
  /**
   * <pre>
   * active() API, returns a list of active queries.
   * </pre>
   *
   * <code>bool active = 1;</code>
   * @return The active.
   */
  @java.lang.Override
  public boolean getActive() {
    if (commandCase_ == 1) {
      return (java.lang.Boolean) command_;
    }
    return false;
  }

  public static final int GET_QUERY_FIELD_NUMBER = 2;
  /**
   * <pre>
   * get() API, returns the StreamingQuery identified by id.
   * </pre>
   *
   * <code>string get_query = 2;</code>
   * @return Whether the getQuery field is set.
   */
  public boolean hasGetQuery() {
    return commandCase_ == 2;
  }
  /**
   * <pre>
   * get() API, returns the StreamingQuery identified by id.
   * </pre>
   *
   * <code>string get_query = 2;</code>
   * @return The getQuery.
   */
  public java.lang.String getGetQuery() {
    java.lang.Object ref = "";
    if (commandCase_ == 2) {
      ref = command_;
    }
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      if (commandCase_ == 2) {
        command_ = s;
      }
      return s;
    }
  }
  /**
   * <pre>
   * get() API, returns the StreamingQuery identified by id.
   * </pre>
   *
   * <code>string get_query = 2;</code>
   * @return The bytes for getQuery.
   */
  public com.google.protobuf.ByteString
      getGetQueryBytes() {
    java.lang.Object ref = "";
    if (commandCase_ == 2) {
      ref = command_;
    }
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      if (commandCase_ == 2) {
        command_ = b;
      }
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int AWAIT_ANY_TERMINATION_FIELD_NUMBER = 3;
  /**
   * <pre>
   * awaitAnyTermination() API, wait until any query terminates or timeout.
   * </pre>
   *
   * <code>.spark.connect.StreamingQueryManagerCommand.AwaitAnyTerminationCommand await_any_termination = 3;</code>
   * @return Whether the awaitAnyTermination field is set.
   */
  @java.lang.Override
  public boolean hasAwaitAnyTermination() {
    return commandCase_ == 3;
  }
  /**
   * <pre>
   * awaitAnyTermination() API, wait until any query terminates or timeout.
   * </pre>
   *
   * <code>.spark.connect.StreamingQueryManagerCommand.AwaitAnyTerminationCommand await_any_termination = 3;</code>
   * @return The awaitAnyTermination.
   */
  @java.lang.Override
  public org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.AwaitAnyTerminationCommand getAwaitAnyTermination() {
    if (commandCase_ == 3) {
       return (org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.AwaitAnyTerminationCommand) command_;
    }
    return org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.AwaitAnyTerminationCommand.getDefaultInstance();
  }
  /**
   * <pre>
   * awaitAnyTermination() API, wait until any query terminates or timeout.
   * </pre>
   *
   * <code>.spark.connect.StreamingQueryManagerCommand.AwaitAnyTerminationCommand await_any_termination = 3;</code>
   */
  @java.lang.Override
  public org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.AwaitAnyTerminationCommandOrBuilder getAwaitAnyTerminationOrBuilder() {
    if (commandCase_ == 3) {
       return (org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.AwaitAnyTerminationCommand) command_;
    }
    return org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.AwaitAnyTerminationCommand.getDefaultInstance();
  }

  public static final int RESET_TERMINATED_FIELD_NUMBER = 4;
  /**
   * <pre>
   * resetTerminated() API.
   * </pre>
   *
   * <code>bool reset_terminated = 4;</code>
   * @return Whether the resetTerminated field is set.
   */
  @java.lang.Override
  public boolean hasResetTerminated() {
    return commandCase_ == 4;
  }
  /**
   * <pre>
   * resetTerminated() API.
   * </pre>
   *
   * <code>bool reset_terminated = 4;</code>
   * @return The resetTerminated.
   */
  @java.lang.Override
  public boolean getResetTerminated() {
    if (commandCase_ == 4) {
      return (java.lang.Boolean) command_;
    }
    return false;
  }

  public static final int ADD_LISTENER_FIELD_NUMBER = 5;
  /**
   * <pre>
   * addListener API.
   * </pre>
   *
   * <code>.spark.connect.StreamingQueryManagerCommand.StreamingQueryListenerCommand add_listener = 5;</code>
   * @return Whether the addListener field is set.
   */
  @java.lang.Override
  public boolean hasAddListener() {
    return commandCase_ == 5;
  }
  /**
   * <pre>
   * addListener API.
   * </pre>
   *
   * <code>.spark.connect.StreamingQueryManagerCommand.StreamingQueryListenerCommand add_listener = 5;</code>
   * @return The addListener.
   */
  @java.lang.Override
  public org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.StreamingQueryListenerCommand getAddListener() {
    if (commandCase_ == 5) {
       return (org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.StreamingQueryListenerCommand) command_;
    }
    return org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.StreamingQueryListenerCommand.getDefaultInstance();
  }
  /**
   * <pre>
   * addListener API.
   * </pre>
   *
   * <code>.spark.connect.StreamingQueryManagerCommand.StreamingQueryListenerCommand add_listener = 5;</code>
   */
  @java.lang.Override
  public org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.StreamingQueryListenerCommandOrBuilder getAddListenerOrBuilder() {
    if (commandCase_ == 5) {
       return (org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.StreamingQueryListenerCommand) command_;
    }
    return org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.StreamingQueryListenerCommand.getDefaultInstance();
  }

  public static final int REMOVE_LISTENER_FIELD_NUMBER = 6;
  /**
   * <pre>
   * removeListener API.
   * </pre>
   *
   * <code>.spark.connect.StreamingQueryManagerCommand.StreamingQueryListenerCommand remove_listener = 6;</code>
   * @return Whether the removeListener field is set.
   */
  @java.lang.Override
  public boolean hasRemoveListener() {
    return commandCase_ == 6;
  }
  /**
   * <pre>
   * removeListener API.
   * </pre>
   *
   * <code>.spark.connect.StreamingQueryManagerCommand.StreamingQueryListenerCommand remove_listener = 6;</code>
   * @return The removeListener.
   */
  @java.lang.Override
  public org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.StreamingQueryListenerCommand getRemoveListener() {
    if (commandCase_ == 6) {
       return (org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.StreamingQueryListenerCommand) command_;
    }
    return org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.StreamingQueryListenerCommand.getDefaultInstance();
  }
  /**
   * <pre>
   * removeListener API.
   * </pre>
   *
   * <code>.spark.connect.StreamingQueryManagerCommand.StreamingQueryListenerCommand remove_listener = 6;</code>
   */
  @java.lang.Override
  public org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.StreamingQueryListenerCommandOrBuilder getRemoveListenerOrBuilder() {
    if (commandCase_ == 6) {
       return (org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.StreamingQueryListenerCommand) command_;
    }
    return org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.StreamingQueryListenerCommand.getDefaultInstance();
  }

  public static final int LIST_LISTENERS_FIELD_NUMBER = 7;
  /**
   * <pre>
   * listListeners() API, returns a list of streaming query listeners.
   * </pre>
   *
   * <code>bool list_listeners = 7;</code>
   * @return Whether the listListeners field is set.
   */
  @java.lang.Override
  public boolean hasListListeners() {
    return commandCase_ == 7;
  }
  /**
   * <pre>
   * listListeners() API, returns a list of streaming query listeners.
   * </pre>
   *
   * <code>bool list_listeners = 7;</code>
   * @return The listListeners.
   */
  @java.lang.Override
  public boolean getListListeners() {
    if (commandCase_ == 7) {
      return (java.lang.Boolean) command_;
    }
    return false;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (commandCase_ == 1) {
      output.writeBool(
          1, (boolean)((java.lang.Boolean) command_));
    }
    if (commandCase_ == 2) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, command_);
    }
    if (commandCase_ == 3) {
      output.writeMessage(3, (org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.AwaitAnyTerminationCommand) command_);
    }
    if (commandCase_ == 4) {
      output.writeBool(
          4, (boolean)((java.lang.Boolean) command_));
    }
    if (commandCase_ == 5) {
      output.writeMessage(5, (org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.StreamingQueryListenerCommand) command_);
    }
    if (commandCase_ == 6) {
      output.writeMessage(6, (org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.StreamingQueryListenerCommand) command_);
    }
    if (commandCase_ == 7) {
      output.writeBool(
          7, (boolean)((java.lang.Boolean) command_));
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (commandCase_ == 1) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(
            1, (boolean)((java.lang.Boolean) command_));
    }
    if (commandCase_ == 2) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, command_);
    }
    if (commandCase_ == 3) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, (org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.AwaitAnyTerminationCommand) command_);
    }
    if (commandCase_ == 4) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(
            4, (boolean)((java.lang.Boolean) command_));
    }
    if (commandCase_ == 5) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, (org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.StreamingQueryListenerCommand) command_);
    }
    if (commandCase_ == 6) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(6, (org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.StreamingQueryListenerCommand) command_);
    }
    if (commandCase_ == 7) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(
            7, (boolean)((java.lang.Boolean) command_));
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand)) {
      return super.equals(obj);
    }
    org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand other = (org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand) obj;

    if (!getCommandCase().equals(other.getCommandCase())) return false;
    switch (commandCase_) {
      case 1:
        if (getActive()
            != other.getActive()) return false;
        break;
      case 2:
        if (!getGetQuery()
            .equals(other.getGetQuery())) return false;
        break;
      case 3:
        if (!getAwaitAnyTermination()
            .equals(other.getAwaitAnyTermination())) return false;
        break;
      case 4:
        if (getResetTerminated()
            != other.getResetTerminated()) return false;
        break;
      case 5:
        if (!getAddListener()
            .equals(other.getAddListener())) return false;
        break;
      case 6:
        if (!getRemoveListener()
            .equals(other.getRemoveListener())) return false;
        break;
      case 7:
        if (getListListeners()
            != other.getListListeners()) return false;
        break;
      case 0:
      default:
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    switch (commandCase_) {
      case 1:
        hash = (37 * hash) + ACTIVE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getActive());
        break;
      case 2:
        hash = (37 * hash) + GET_QUERY_FIELD_NUMBER;
        hash = (53 * hash) + getGetQuery().hashCode();
        break;
      case 3:
        hash = (37 * hash) + AWAIT_ANY_TERMINATION_FIELD_NUMBER;
        hash = (53 * hash) + getAwaitAnyTermination().hashCode();
        break;
      case 4:
        hash = (37 * hash) + RESET_TERMINATED_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getResetTerminated());
        break;
      case 5:
        hash = (37 * hash) + ADD_LISTENER_FIELD_NUMBER;
        hash = (53 * hash) + getAddListener().hashCode();
        break;
      case 6:
        hash = (37 * hash) + REMOVE_LISTENER_FIELD_NUMBER;
        hash = (53 * hash) + getRemoveListener().hashCode();
        break;
      case 7:
        hash = (37 * hash) + LIST_LISTENERS_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getListListeners());
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Commands for the streaming query manager.
   * </pre>
   *
   * Protobuf type {@code spark.connect.StreamingQueryManagerCommand}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:spark.connect.StreamingQueryManagerCommand)
      org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommandOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.kyuubi.engine.spark.connect.proto.Commands.internal_static_spark_connect_StreamingQueryManagerCommand_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.kyuubi.engine.spark.connect.proto.Commands.internal_static_spark_connect_StreamingQueryManagerCommand_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.class, org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.Builder.class);
    }

    // Construct using org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      if (awaitAnyTerminationBuilder_ != null) {
        awaitAnyTerminationBuilder_.clear();
      }
      if (addListenerBuilder_ != null) {
        addListenerBuilder_.clear();
      }
      if (removeListenerBuilder_ != null) {
        removeListenerBuilder_.clear();
      }
      commandCase_ = 0;
      command_ = null;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return org.apache.kyuubi.engine.spark.connect.proto.Commands.internal_static_spark_connect_StreamingQueryManagerCommand_descriptor;
    }

    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand getDefaultInstanceForType() {
      return org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.getDefaultInstance();
    }

    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand build() {
      org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand buildPartial() {
      org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand result = new org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand(this);
      if (commandCase_ == 1) {
        result.command_ = command_;
      }
      if (commandCase_ == 2) {
        result.command_ = command_;
      }
      if (commandCase_ == 3) {
        if (awaitAnyTerminationBuilder_ == null) {
          result.command_ = command_;
        } else {
          result.command_ = awaitAnyTerminationBuilder_.build();
        }
      }
      if (commandCase_ == 4) {
        result.command_ = command_;
      }
      if (commandCase_ == 5) {
        if (addListenerBuilder_ == null) {
          result.command_ = command_;
        } else {
          result.command_ = addListenerBuilder_.build();
        }
      }
      if (commandCase_ == 6) {
        if (removeListenerBuilder_ == null) {
          result.command_ = command_;
        } else {
          result.command_ = removeListenerBuilder_.build();
        }
      }
      if (commandCase_ == 7) {
        result.command_ = command_;
      }
      result.commandCase_ = commandCase_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand) {
        return mergeFrom((org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand other) {
      if (other == org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.getDefaultInstance()) return this;
      switch (other.getCommandCase()) {
        case ACTIVE: {
          setActive(other.getActive());
          break;
        }
        case GET_QUERY: {
          commandCase_ = 2;
          command_ = other.command_;
          onChanged();
          break;
        }
        case AWAIT_ANY_TERMINATION: {
          mergeAwaitAnyTermination(other.getAwaitAnyTermination());
          break;
        }
        case RESET_TERMINATED: {
          setResetTerminated(other.getResetTerminated());
          break;
        }
        case ADD_LISTENER: {
          mergeAddListener(other.getAddListener());
          break;
        }
        case REMOVE_LISTENER: {
          mergeRemoveListener(other.getRemoveListener());
          break;
        }
        case LIST_LISTENERS: {
          setListListeners(other.getListListeners());
          break;
        }
        case COMMAND_NOT_SET: {
          break;
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              command_ = input.readBool();
              commandCase_ = 1;
              break;
            } // case 8
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();
              commandCase_ = 2;
              command_ = s;
              break;
            } // case 18
            case 26: {
              input.readMessage(
                  getAwaitAnyTerminationFieldBuilder().getBuilder(),
                  extensionRegistry);
              commandCase_ = 3;
              break;
            } // case 26
            case 32: {
              command_ = input.readBool();
              commandCase_ = 4;
              break;
            } // case 32
            case 42: {
              input.readMessage(
                  getAddListenerFieldBuilder().getBuilder(),
                  extensionRegistry);
              commandCase_ = 5;
              break;
            } // case 42
            case 50: {
              input.readMessage(
                  getRemoveListenerFieldBuilder().getBuilder(),
                  extensionRegistry);
              commandCase_ = 6;
              break;
            } // case 50
            case 56: {
              command_ = input.readBool();
              commandCase_ = 7;
              break;
            } // case 56
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int commandCase_ = 0;
    private java.lang.Object command_;
    public CommandCase
        getCommandCase() {
      return CommandCase.forNumber(
          commandCase_);
    }

    public Builder clearCommand() {
      commandCase_ = 0;
      command_ = null;
      onChanged();
      return this;
    }


    /**
     * <pre>
     * active() API, returns a list of active queries.
     * </pre>
     *
     * <code>bool active = 1;</code>
     * @return Whether the active field is set.
     */
    public boolean hasActive() {
      return commandCase_ == 1;
    }
    /**
     * <pre>
     * active() API, returns a list of active queries.
     * </pre>
     *
     * <code>bool active = 1;</code>
     * @return The active.
     */
    public boolean getActive() {
      if (commandCase_ == 1) {
        return (java.lang.Boolean) command_;
      }
      return false;
    }
    /**
     * <pre>
     * active() API, returns a list of active queries.
     * </pre>
     *
     * <code>bool active = 1;</code>
     * @param value The active to set.
     * @return This builder for chaining.
     */
    public Builder setActive(boolean value) {
      commandCase_ = 1;
      command_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * active() API, returns a list of active queries.
     * </pre>
     *
     * <code>bool active = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearActive() {
      if (commandCase_ == 1) {
        commandCase_ = 0;
        command_ = null;
        onChanged();
      }
      return this;
    }

    /**
     * <pre>
     * get() API, returns the StreamingQuery identified by id.
     * </pre>
     *
     * <code>string get_query = 2;</code>
     * @return Whether the getQuery field is set.
     */
    @java.lang.Override
    public boolean hasGetQuery() {
      return commandCase_ == 2;
    }
    /**
     * <pre>
     * get() API, returns the StreamingQuery identified by id.
     * </pre>
     *
     * <code>string get_query = 2;</code>
     * @return The getQuery.
     */
    @java.lang.Override
    public java.lang.String getGetQuery() {
      java.lang.Object ref = "";
      if (commandCase_ == 2) {
        ref = command_;
      }
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (commandCase_ == 2) {
          command_ = s;
        }
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * get() API, returns the StreamingQuery identified by id.
     * </pre>
     *
     * <code>string get_query = 2;</code>
     * @return The bytes for getQuery.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getGetQueryBytes() {
      java.lang.Object ref = "";
      if (commandCase_ == 2) {
        ref = command_;
      }
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        if (commandCase_ == 2) {
          command_ = b;
        }
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * get() API, returns the StreamingQuery identified by id.
     * </pre>
     *
     * <code>string get_query = 2;</code>
     * @param value The getQuery to set.
     * @return This builder for chaining.
     */
    public Builder setGetQuery(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  commandCase_ = 2;
      command_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * get() API, returns the StreamingQuery identified by id.
     * </pre>
     *
     * <code>string get_query = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearGetQuery() {
      if (commandCase_ == 2) {
        commandCase_ = 0;
        command_ = null;
        onChanged();
      }
      return this;
    }
    /**
     * <pre>
     * get() API, returns the StreamingQuery identified by id.
     * </pre>
     *
     * <code>string get_query = 2;</code>
     * @param value The bytes for getQuery to set.
     * @return This builder for chaining.
     */
    public Builder setGetQueryBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      commandCase_ = 2;
      command_ = value;
      onChanged();
      return this;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.AwaitAnyTerminationCommand, org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.AwaitAnyTerminationCommand.Builder, org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.AwaitAnyTerminationCommandOrBuilder> awaitAnyTerminationBuilder_;
    /**
     * <pre>
     * awaitAnyTermination() API, wait until any query terminates or timeout.
     * </pre>
     *
     * <code>.spark.connect.StreamingQueryManagerCommand.AwaitAnyTerminationCommand await_any_termination = 3;</code>
     * @return Whether the awaitAnyTermination field is set.
     */
    @java.lang.Override
    public boolean hasAwaitAnyTermination() {
      return commandCase_ == 3;
    }
    /**
     * <pre>
     * awaitAnyTermination() API, wait until any query terminates or timeout.
     * </pre>
     *
     * <code>.spark.connect.StreamingQueryManagerCommand.AwaitAnyTerminationCommand await_any_termination = 3;</code>
     * @return The awaitAnyTermination.
     */
    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.AwaitAnyTerminationCommand getAwaitAnyTermination() {
      if (awaitAnyTerminationBuilder_ == null) {
        if (commandCase_ == 3) {
          return (org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.AwaitAnyTerminationCommand) command_;
        }
        return org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.AwaitAnyTerminationCommand.getDefaultInstance();
      } else {
        if (commandCase_ == 3) {
          return awaitAnyTerminationBuilder_.getMessage();
        }
        return org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.AwaitAnyTerminationCommand.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * awaitAnyTermination() API, wait until any query terminates or timeout.
     * </pre>
     *
     * <code>.spark.connect.StreamingQueryManagerCommand.AwaitAnyTerminationCommand await_any_termination = 3;</code>
     */
    public Builder setAwaitAnyTermination(org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.AwaitAnyTerminationCommand value) {
      if (awaitAnyTerminationBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        command_ = value;
        onChanged();
      } else {
        awaitAnyTerminationBuilder_.setMessage(value);
      }
      commandCase_ = 3;
      return this;
    }
    /**
     * <pre>
     * awaitAnyTermination() API, wait until any query terminates or timeout.
     * </pre>
     *
     * <code>.spark.connect.StreamingQueryManagerCommand.AwaitAnyTerminationCommand await_any_termination = 3;</code>
     */
    public Builder setAwaitAnyTermination(
        org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.AwaitAnyTerminationCommand.Builder builderForValue) {
      if (awaitAnyTerminationBuilder_ == null) {
        command_ = builderForValue.build();
        onChanged();
      } else {
        awaitAnyTerminationBuilder_.setMessage(builderForValue.build());
      }
      commandCase_ = 3;
      return this;
    }
    /**
     * <pre>
     * awaitAnyTermination() API, wait until any query terminates or timeout.
     * </pre>
     *
     * <code>.spark.connect.StreamingQueryManagerCommand.AwaitAnyTerminationCommand await_any_termination = 3;</code>
     */
    public Builder mergeAwaitAnyTermination(org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.AwaitAnyTerminationCommand value) {
      if (awaitAnyTerminationBuilder_ == null) {
        if (commandCase_ == 3 &&
            command_ != org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.AwaitAnyTerminationCommand.getDefaultInstance()) {
          command_ = org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.AwaitAnyTerminationCommand.newBuilder((org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.AwaitAnyTerminationCommand) command_)
              .mergeFrom(value).buildPartial();
        } else {
          command_ = value;
        }
        onChanged();
      } else {
        if (commandCase_ == 3) {
          awaitAnyTerminationBuilder_.mergeFrom(value);
        } else {
          awaitAnyTerminationBuilder_.setMessage(value);
        }
      }
      commandCase_ = 3;
      return this;
    }
    /**
     * <pre>
     * awaitAnyTermination() API, wait until any query terminates or timeout.
     * </pre>
     *
     * <code>.spark.connect.StreamingQueryManagerCommand.AwaitAnyTerminationCommand await_any_termination = 3;</code>
     */
    public Builder clearAwaitAnyTermination() {
      if (awaitAnyTerminationBuilder_ == null) {
        if (commandCase_ == 3) {
          commandCase_ = 0;
          command_ = null;
          onChanged();
        }
      } else {
        if (commandCase_ == 3) {
          commandCase_ = 0;
          command_ = null;
        }
        awaitAnyTerminationBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * awaitAnyTermination() API, wait until any query terminates or timeout.
     * </pre>
     *
     * <code>.spark.connect.StreamingQueryManagerCommand.AwaitAnyTerminationCommand await_any_termination = 3;</code>
     */
    public org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.AwaitAnyTerminationCommand.Builder getAwaitAnyTerminationBuilder() {
      return getAwaitAnyTerminationFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * awaitAnyTermination() API, wait until any query terminates or timeout.
     * </pre>
     *
     * <code>.spark.connect.StreamingQueryManagerCommand.AwaitAnyTerminationCommand await_any_termination = 3;</code>
     */
    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.AwaitAnyTerminationCommandOrBuilder getAwaitAnyTerminationOrBuilder() {
      if ((commandCase_ == 3) && (awaitAnyTerminationBuilder_ != null)) {
        return awaitAnyTerminationBuilder_.getMessageOrBuilder();
      } else {
        if (commandCase_ == 3) {
          return (org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.AwaitAnyTerminationCommand) command_;
        }
        return org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.AwaitAnyTerminationCommand.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * awaitAnyTermination() API, wait until any query terminates or timeout.
     * </pre>
     *
     * <code>.spark.connect.StreamingQueryManagerCommand.AwaitAnyTerminationCommand await_any_termination = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.AwaitAnyTerminationCommand, org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.AwaitAnyTerminationCommand.Builder, org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.AwaitAnyTerminationCommandOrBuilder> 
        getAwaitAnyTerminationFieldBuilder() {
      if (awaitAnyTerminationBuilder_ == null) {
        if (!(commandCase_ == 3)) {
          command_ = org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.AwaitAnyTerminationCommand.getDefaultInstance();
        }
        awaitAnyTerminationBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.AwaitAnyTerminationCommand, org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.AwaitAnyTerminationCommand.Builder, org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.AwaitAnyTerminationCommandOrBuilder>(
                (org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.AwaitAnyTerminationCommand) command_,
                getParentForChildren(),
                isClean());
        command_ = null;
      }
      commandCase_ = 3;
      onChanged();;
      return awaitAnyTerminationBuilder_;
    }

    /**
     * <pre>
     * resetTerminated() API.
     * </pre>
     *
     * <code>bool reset_terminated = 4;</code>
     * @return Whether the resetTerminated field is set.
     */
    public boolean hasResetTerminated() {
      return commandCase_ == 4;
    }
    /**
     * <pre>
     * resetTerminated() API.
     * </pre>
     *
     * <code>bool reset_terminated = 4;</code>
     * @return The resetTerminated.
     */
    public boolean getResetTerminated() {
      if (commandCase_ == 4) {
        return (java.lang.Boolean) command_;
      }
      return false;
    }
    /**
     * <pre>
     * resetTerminated() API.
     * </pre>
     *
     * <code>bool reset_terminated = 4;</code>
     * @param value The resetTerminated to set.
     * @return This builder for chaining.
     */
    public Builder setResetTerminated(boolean value) {
      commandCase_ = 4;
      command_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * resetTerminated() API.
     * </pre>
     *
     * <code>bool reset_terminated = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearResetTerminated() {
      if (commandCase_ == 4) {
        commandCase_ = 0;
        command_ = null;
        onChanged();
      }
      return this;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.StreamingQueryListenerCommand, org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.StreamingQueryListenerCommand.Builder, org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.StreamingQueryListenerCommandOrBuilder> addListenerBuilder_;
    /**
     * <pre>
     * addListener API.
     * </pre>
     *
     * <code>.spark.connect.StreamingQueryManagerCommand.StreamingQueryListenerCommand add_listener = 5;</code>
     * @return Whether the addListener field is set.
     */
    @java.lang.Override
    public boolean hasAddListener() {
      return commandCase_ == 5;
    }
    /**
     * <pre>
     * addListener API.
     * </pre>
     *
     * <code>.spark.connect.StreamingQueryManagerCommand.StreamingQueryListenerCommand add_listener = 5;</code>
     * @return The addListener.
     */
    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.StreamingQueryListenerCommand getAddListener() {
      if (addListenerBuilder_ == null) {
        if (commandCase_ == 5) {
          return (org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.StreamingQueryListenerCommand) command_;
        }
        return org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.StreamingQueryListenerCommand.getDefaultInstance();
      } else {
        if (commandCase_ == 5) {
          return addListenerBuilder_.getMessage();
        }
        return org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.StreamingQueryListenerCommand.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * addListener API.
     * </pre>
     *
     * <code>.spark.connect.StreamingQueryManagerCommand.StreamingQueryListenerCommand add_listener = 5;</code>
     */
    public Builder setAddListener(org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.StreamingQueryListenerCommand value) {
      if (addListenerBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        command_ = value;
        onChanged();
      } else {
        addListenerBuilder_.setMessage(value);
      }
      commandCase_ = 5;
      return this;
    }
    /**
     * <pre>
     * addListener API.
     * </pre>
     *
     * <code>.spark.connect.StreamingQueryManagerCommand.StreamingQueryListenerCommand add_listener = 5;</code>
     */
    public Builder setAddListener(
        org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.StreamingQueryListenerCommand.Builder builderForValue) {
      if (addListenerBuilder_ == null) {
        command_ = builderForValue.build();
        onChanged();
      } else {
        addListenerBuilder_.setMessage(builderForValue.build());
      }
      commandCase_ = 5;
      return this;
    }
    /**
     * <pre>
     * addListener API.
     * </pre>
     *
     * <code>.spark.connect.StreamingQueryManagerCommand.StreamingQueryListenerCommand add_listener = 5;</code>
     */
    public Builder mergeAddListener(org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.StreamingQueryListenerCommand value) {
      if (addListenerBuilder_ == null) {
        if (commandCase_ == 5 &&
            command_ != org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.StreamingQueryListenerCommand.getDefaultInstance()) {
          command_ = org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.StreamingQueryListenerCommand.newBuilder((org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.StreamingQueryListenerCommand) command_)
              .mergeFrom(value).buildPartial();
        } else {
          command_ = value;
        }
        onChanged();
      } else {
        if (commandCase_ == 5) {
          addListenerBuilder_.mergeFrom(value);
        } else {
          addListenerBuilder_.setMessage(value);
        }
      }
      commandCase_ = 5;
      return this;
    }
    /**
     * <pre>
     * addListener API.
     * </pre>
     *
     * <code>.spark.connect.StreamingQueryManagerCommand.StreamingQueryListenerCommand add_listener = 5;</code>
     */
    public Builder clearAddListener() {
      if (addListenerBuilder_ == null) {
        if (commandCase_ == 5) {
          commandCase_ = 0;
          command_ = null;
          onChanged();
        }
      } else {
        if (commandCase_ == 5) {
          commandCase_ = 0;
          command_ = null;
        }
        addListenerBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * addListener API.
     * </pre>
     *
     * <code>.spark.connect.StreamingQueryManagerCommand.StreamingQueryListenerCommand add_listener = 5;</code>
     */
    public org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.StreamingQueryListenerCommand.Builder getAddListenerBuilder() {
      return getAddListenerFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * addListener API.
     * </pre>
     *
     * <code>.spark.connect.StreamingQueryManagerCommand.StreamingQueryListenerCommand add_listener = 5;</code>
     */
    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.StreamingQueryListenerCommandOrBuilder getAddListenerOrBuilder() {
      if ((commandCase_ == 5) && (addListenerBuilder_ != null)) {
        return addListenerBuilder_.getMessageOrBuilder();
      } else {
        if (commandCase_ == 5) {
          return (org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.StreamingQueryListenerCommand) command_;
        }
        return org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.StreamingQueryListenerCommand.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * addListener API.
     * </pre>
     *
     * <code>.spark.connect.StreamingQueryManagerCommand.StreamingQueryListenerCommand add_listener = 5;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.StreamingQueryListenerCommand, org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.StreamingQueryListenerCommand.Builder, org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.StreamingQueryListenerCommandOrBuilder> 
        getAddListenerFieldBuilder() {
      if (addListenerBuilder_ == null) {
        if (!(commandCase_ == 5)) {
          command_ = org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.StreamingQueryListenerCommand.getDefaultInstance();
        }
        addListenerBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.StreamingQueryListenerCommand, org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.StreamingQueryListenerCommand.Builder, org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.StreamingQueryListenerCommandOrBuilder>(
                (org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.StreamingQueryListenerCommand) command_,
                getParentForChildren(),
                isClean());
        command_ = null;
      }
      commandCase_ = 5;
      onChanged();;
      return addListenerBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.StreamingQueryListenerCommand, org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.StreamingQueryListenerCommand.Builder, org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.StreamingQueryListenerCommandOrBuilder> removeListenerBuilder_;
    /**
     * <pre>
     * removeListener API.
     * </pre>
     *
     * <code>.spark.connect.StreamingQueryManagerCommand.StreamingQueryListenerCommand remove_listener = 6;</code>
     * @return Whether the removeListener field is set.
     */
    @java.lang.Override
    public boolean hasRemoveListener() {
      return commandCase_ == 6;
    }
    /**
     * <pre>
     * removeListener API.
     * </pre>
     *
     * <code>.spark.connect.StreamingQueryManagerCommand.StreamingQueryListenerCommand remove_listener = 6;</code>
     * @return The removeListener.
     */
    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.StreamingQueryListenerCommand getRemoveListener() {
      if (removeListenerBuilder_ == null) {
        if (commandCase_ == 6) {
          return (org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.StreamingQueryListenerCommand) command_;
        }
        return org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.StreamingQueryListenerCommand.getDefaultInstance();
      } else {
        if (commandCase_ == 6) {
          return removeListenerBuilder_.getMessage();
        }
        return org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.StreamingQueryListenerCommand.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * removeListener API.
     * </pre>
     *
     * <code>.spark.connect.StreamingQueryManagerCommand.StreamingQueryListenerCommand remove_listener = 6;</code>
     */
    public Builder setRemoveListener(org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.StreamingQueryListenerCommand value) {
      if (removeListenerBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        command_ = value;
        onChanged();
      } else {
        removeListenerBuilder_.setMessage(value);
      }
      commandCase_ = 6;
      return this;
    }
    /**
     * <pre>
     * removeListener API.
     * </pre>
     *
     * <code>.spark.connect.StreamingQueryManagerCommand.StreamingQueryListenerCommand remove_listener = 6;</code>
     */
    public Builder setRemoveListener(
        org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.StreamingQueryListenerCommand.Builder builderForValue) {
      if (removeListenerBuilder_ == null) {
        command_ = builderForValue.build();
        onChanged();
      } else {
        removeListenerBuilder_.setMessage(builderForValue.build());
      }
      commandCase_ = 6;
      return this;
    }
    /**
     * <pre>
     * removeListener API.
     * </pre>
     *
     * <code>.spark.connect.StreamingQueryManagerCommand.StreamingQueryListenerCommand remove_listener = 6;</code>
     */
    public Builder mergeRemoveListener(org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.StreamingQueryListenerCommand value) {
      if (removeListenerBuilder_ == null) {
        if (commandCase_ == 6 &&
            command_ != org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.StreamingQueryListenerCommand.getDefaultInstance()) {
          command_ = org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.StreamingQueryListenerCommand.newBuilder((org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.StreamingQueryListenerCommand) command_)
              .mergeFrom(value).buildPartial();
        } else {
          command_ = value;
        }
        onChanged();
      } else {
        if (commandCase_ == 6) {
          removeListenerBuilder_.mergeFrom(value);
        } else {
          removeListenerBuilder_.setMessage(value);
        }
      }
      commandCase_ = 6;
      return this;
    }
    /**
     * <pre>
     * removeListener API.
     * </pre>
     *
     * <code>.spark.connect.StreamingQueryManagerCommand.StreamingQueryListenerCommand remove_listener = 6;</code>
     */
    public Builder clearRemoveListener() {
      if (removeListenerBuilder_ == null) {
        if (commandCase_ == 6) {
          commandCase_ = 0;
          command_ = null;
          onChanged();
        }
      } else {
        if (commandCase_ == 6) {
          commandCase_ = 0;
          command_ = null;
        }
        removeListenerBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * removeListener API.
     * </pre>
     *
     * <code>.spark.connect.StreamingQueryManagerCommand.StreamingQueryListenerCommand remove_listener = 6;</code>
     */
    public org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.StreamingQueryListenerCommand.Builder getRemoveListenerBuilder() {
      return getRemoveListenerFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * removeListener API.
     * </pre>
     *
     * <code>.spark.connect.StreamingQueryManagerCommand.StreamingQueryListenerCommand remove_listener = 6;</code>
     */
    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.StreamingQueryListenerCommandOrBuilder getRemoveListenerOrBuilder() {
      if ((commandCase_ == 6) && (removeListenerBuilder_ != null)) {
        return removeListenerBuilder_.getMessageOrBuilder();
      } else {
        if (commandCase_ == 6) {
          return (org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.StreamingQueryListenerCommand) command_;
        }
        return org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.StreamingQueryListenerCommand.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * removeListener API.
     * </pre>
     *
     * <code>.spark.connect.StreamingQueryManagerCommand.StreamingQueryListenerCommand remove_listener = 6;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.StreamingQueryListenerCommand, org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.StreamingQueryListenerCommand.Builder, org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.StreamingQueryListenerCommandOrBuilder> 
        getRemoveListenerFieldBuilder() {
      if (removeListenerBuilder_ == null) {
        if (!(commandCase_ == 6)) {
          command_ = org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.StreamingQueryListenerCommand.getDefaultInstance();
        }
        removeListenerBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.StreamingQueryListenerCommand, org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.StreamingQueryListenerCommand.Builder, org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.StreamingQueryListenerCommandOrBuilder>(
                (org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand.StreamingQueryListenerCommand) command_,
                getParentForChildren(),
                isClean());
        command_ = null;
      }
      commandCase_ = 6;
      onChanged();;
      return removeListenerBuilder_;
    }

    /**
     * <pre>
     * listListeners() API, returns a list of streaming query listeners.
     * </pre>
     *
     * <code>bool list_listeners = 7;</code>
     * @return Whether the listListeners field is set.
     */
    public boolean hasListListeners() {
      return commandCase_ == 7;
    }
    /**
     * <pre>
     * listListeners() API, returns a list of streaming query listeners.
     * </pre>
     *
     * <code>bool list_listeners = 7;</code>
     * @return The listListeners.
     */
    public boolean getListListeners() {
      if (commandCase_ == 7) {
        return (java.lang.Boolean) command_;
      }
      return false;
    }
    /**
     * <pre>
     * listListeners() API, returns a list of streaming query listeners.
     * </pre>
     *
     * <code>bool list_listeners = 7;</code>
     * @param value The listListeners to set.
     * @return This builder for chaining.
     */
    public Builder setListListeners(boolean value) {
      commandCase_ = 7;
      command_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * listListeners() API, returns a list of streaming query listeners.
     * </pre>
     *
     * <code>bool list_listeners = 7;</code>
     * @return This builder for chaining.
     */
    public Builder clearListListeners() {
      if (commandCase_ == 7) {
        commandCase_ = 0;
        command_ = null;
        onChanged();
      }
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:spark.connect.StreamingQueryManagerCommand)
  }

  // @@protoc_insertion_point(class_scope:spark.connect.StreamingQueryManagerCommand)
  private static final org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand();
  }

  public static org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<StreamingQueryManagerCommand>
      PARSER = new com.google.protobuf.AbstractParser<StreamingQueryManagerCommand>() {
    @java.lang.Override
    public StreamingQueryManagerCommand parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<StreamingQueryManagerCommand> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<StreamingQueryManagerCommand> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public org.apache.kyuubi.engine.spark.connect.proto.StreamingQueryManagerCommand getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

