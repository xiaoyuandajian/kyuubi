// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: kyuubi/spark/connect/base.proto

package org.apache.kyuubi.engine.spark.connect.grpc.proto;

/** Protobuf type {@code spark.connect.FetchErrorDetailsRequest} */
public final class FetchErrorDetailsRequest extends com.google.protobuf.GeneratedMessageV3
    implements
    // @@protoc_insertion_point(message_implements:spark.connect.FetchErrorDetailsRequest)
    FetchErrorDetailsRequestOrBuilder {
  private static final long serialVersionUID = 0L;
  // Use FetchErrorDetailsRequest.newBuilder() to construct.
  private FetchErrorDetailsRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }

  private FetchErrorDetailsRequest() {
    sessionId_ = "";
    clientObservedServerSideSessionId_ = "";
    errorId_ = "";
    clientType_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
    return new FetchErrorDetailsRequest();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet getUnknownFields() {
    return this.unknownFields;
  }

  public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
    return org.apache.kyuubi.engine.spark.connect.grpc.proto.Base
        .internal_static_spark_connect_FetchErrorDetailsRequest_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return org.apache.kyuubi.engine.spark.connect.grpc.proto.Base
        .internal_static_spark_connect_FetchErrorDetailsRequest_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsRequest.class,
            org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsRequest.Builder
                .class);
  }

  private int bitField0_;
  public static final int SESSION_ID_FIELD_NUMBER = 1;
  private volatile java.lang.Object sessionId_;
  /**
   *
   *
   * <pre>
   * (Required)
   * The session_id specifies a Spark session for a user identified by user_context.user_id.
   * The id should be a UUID string of the format `00112233-4455-6677-8899-aabbccddeeff`.
   * </pre>
   *
   * <code>string session_id = 1;</code>
   *
   * @return The sessionId.
   */
  @java.lang.Override
  public java.lang.String getSessionId() {
    java.lang.Object ref = sessionId_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      sessionId_ = s;
      return s;
    }
  }
  /**
   *
   *
   * <pre>
   * (Required)
   * The session_id specifies a Spark session for a user identified by user_context.user_id.
   * The id should be a UUID string of the format `00112233-4455-6677-8899-aabbccddeeff`.
   * </pre>
   *
   * <code>string session_id = 1;</code>
   *
   * @return The bytes for sessionId.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getSessionIdBytes() {
    java.lang.Object ref = sessionId_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      sessionId_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int CLIENT_OBSERVED_SERVER_SIDE_SESSION_ID_FIELD_NUMBER = 5;
  private volatile java.lang.Object clientObservedServerSideSessionId_;
  /**
   *
   *
   * <pre>
   * (Optional)
   * Server-side generated idempotency key from the previous responses (if any). Server
   * can use this to validate that the server side session has not changed.
   * </pre>
   *
   * <code>optional string client_observed_server_side_session_id = 5;</code>
   *
   * @return Whether the clientObservedServerSideSessionId field is set.
   */
  @java.lang.Override
  public boolean hasClientObservedServerSideSessionId() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   *
   *
   * <pre>
   * (Optional)
   * Server-side generated idempotency key from the previous responses (if any). Server
   * can use this to validate that the server side session has not changed.
   * </pre>
   *
   * <code>optional string client_observed_server_side_session_id = 5;</code>
   *
   * @return The clientObservedServerSideSessionId.
   */
  @java.lang.Override
  public java.lang.String getClientObservedServerSideSessionId() {
    java.lang.Object ref = clientObservedServerSideSessionId_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      clientObservedServerSideSessionId_ = s;
      return s;
    }
  }
  /**
   *
   *
   * <pre>
   * (Optional)
   * Server-side generated idempotency key from the previous responses (if any). Server
   * can use this to validate that the server side session has not changed.
   * </pre>
   *
   * <code>optional string client_observed_server_side_session_id = 5;</code>
   *
   * @return The bytes for clientObservedServerSideSessionId.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getClientObservedServerSideSessionIdBytes() {
    java.lang.Object ref = clientObservedServerSideSessionId_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      clientObservedServerSideSessionId_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int USER_CONTEXT_FIELD_NUMBER = 2;
  private org.apache.kyuubi.engine.spark.connect.grpc.proto.UserContext userContext_;
  /**
   *
   *
   * <pre>
   * User context
   * </pre>
   *
   * <code>.spark.connect.UserContext user_context = 2;</code>
   *
   * @return Whether the userContext field is set.
   */
  @java.lang.Override
  public boolean hasUserContext() {
    return userContext_ != null;
  }
  /**
   *
   *
   * <pre>
   * User context
   * </pre>
   *
   * <code>.spark.connect.UserContext user_context = 2;</code>
   *
   * @return The userContext.
   */
  @java.lang.Override
  public org.apache.kyuubi.engine.spark.connect.grpc.proto.UserContext getUserContext() {
    return userContext_ == null
        ? org.apache.kyuubi.engine.spark.connect.grpc.proto.UserContext.getDefaultInstance()
        : userContext_;
  }
  /**
   *
   *
   * <pre>
   * User context
   * </pre>
   *
   * <code>.spark.connect.UserContext user_context = 2;</code>
   */
  @java.lang.Override
  public org.apache.kyuubi.engine.spark.connect.grpc.proto.UserContextOrBuilder
      getUserContextOrBuilder() {
    return getUserContext();
  }

  public static final int ERROR_ID_FIELD_NUMBER = 3;
  private volatile java.lang.Object errorId_;
  /**
   *
   *
   * <pre>
   * (Required)
   * The id of the error.
   * </pre>
   *
   * <code>string error_id = 3;</code>
   *
   * @return The errorId.
   */
  @java.lang.Override
  public java.lang.String getErrorId() {
    java.lang.Object ref = errorId_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      errorId_ = s;
      return s;
    }
  }
  /**
   *
   *
   * <pre>
   * (Required)
   * The id of the error.
   * </pre>
   *
   * <code>string error_id = 3;</code>
   *
   * @return The bytes for errorId.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getErrorIdBytes() {
    java.lang.Object ref = errorId_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      errorId_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int CLIENT_TYPE_FIELD_NUMBER = 4;
  private volatile java.lang.Object clientType_;
  /**
   *
   *
   * <pre>
   * Provides optional information about the client sending the request. This field
   * can be used for language or version specific information and is only intended for
   * logging purposes and will not be interpreted by the server.
   * </pre>
   *
   * <code>optional string client_type = 4;</code>
   *
   * @return Whether the clientType field is set.
   */
  @java.lang.Override
  public boolean hasClientType() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   *
   *
   * <pre>
   * Provides optional information about the client sending the request. This field
   * can be used for language or version specific information and is only intended for
   * logging purposes and will not be interpreted by the server.
   * </pre>
   *
   * <code>optional string client_type = 4;</code>
   *
   * @return The clientType.
   */
  @java.lang.Override
  public java.lang.String getClientType() {
    java.lang.Object ref = clientType_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      clientType_ = s;
      return s;
    }
  }
  /**
   *
   *
   * <pre>
   * Provides optional information about the client sending the request. This field
   * can be used for language or version specific information and is only intended for
   * logging purposes and will not be interpreted by the server.
   * </pre>
   *
   * <code>optional string client_type = 4;</code>
   *
   * @return The bytes for clientType.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getClientTypeBytes() {
    java.lang.Object ref = clientType_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      clientType_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  private byte memoizedIsInitialized = -1;

  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(sessionId_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, sessionId_);
    }
    if (userContext_ != null) {
      output.writeMessage(2, getUserContext());
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(errorId_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, errorId_);
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 4, clientType_);
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      com.google.protobuf.GeneratedMessageV3.writeString(
          output, 5, clientObservedServerSideSessionId_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(sessionId_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, sessionId_);
    }
    if (userContext_ != null) {
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(2, getUserContext());
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(errorId_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, errorId_);
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, clientType_);
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      size +=
          com.google.protobuf.GeneratedMessageV3.computeStringSize(
              5, clientObservedServerSideSessionId_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
      return true;
    }
    if (!(obj
        instanceof org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsRequest)) {
      return super.equals(obj);
    }
    org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsRequest other =
        (org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsRequest) obj;

    if (!getSessionId().equals(other.getSessionId())) return false;
    if (hasClientObservedServerSideSessionId() != other.hasClientObservedServerSideSessionId())
      return false;
    if (hasClientObservedServerSideSessionId()) {
      if (!getClientObservedServerSideSessionId()
          .equals(other.getClientObservedServerSideSessionId())) return false;
    }
    if (hasUserContext() != other.hasUserContext()) return false;
    if (hasUserContext()) {
      if (!getUserContext().equals(other.getUserContext())) return false;
    }
    if (!getErrorId().equals(other.getErrorId())) return false;
    if (hasClientType() != other.hasClientType()) return false;
    if (hasClientType()) {
      if (!getClientType().equals(other.getClientType())) return false;
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + SESSION_ID_FIELD_NUMBER;
    hash = (53 * hash) + getSessionId().hashCode();
    if (hasClientObservedServerSideSessionId()) {
      hash = (37 * hash) + CLIENT_OBSERVED_SERVER_SIDE_SESSION_ID_FIELD_NUMBER;
      hash = (53 * hash) + getClientObservedServerSideSessionId().hashCode();
    }
    if (hasUserContext()) {
      hash = (37 * hash) + USER_CONTEXT_FIELD_NUMBER;
      hash = (53 * hash) + getUserContext().hashCode();
    }
    hash = (37 * hash) + ERROR_ID_FIELD_NUMBER;
    hash = (53 * hash) + getErrorId().hashCode();
    if (hasClientType()) {
      hash = (37 * hash) + CLIENT_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getClientType().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsRequest
      parseFrom(java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsRequest
      parseFrom(
          java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsRequest
      parseFrom(com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsRequest
      parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsRequest
      parseFrom(byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsRequest
      parseFrom(byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsRequest
      parseFrom(java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsRequest
      parseFrom(
          java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsRequest
      parseDelimitedFrom(java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
  }

  public static org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsRequest
      parseDelimitedFrom(
          java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsRequest
      parseFrom(com.google.protobuf.CodedInputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsRequest
      parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() {
    return newBuilder();
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }

  public static Builder newBuilder(
      org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsRequest prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /** Protobuf type {@code spark.connect.FetchErrorDetailsRequest} */
  public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
      implements
      // @@protoc_insertion_point(builder_implements:spark.connect.FetchErrorDetailsRequest)
      org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsRequestOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return org.apache.kyuubi.engine.spark.connect.grpc.proto.Base
          .internal_static_spark_connect_FetchErrorDetailsRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.kyuubi.engine.spark.connect.grpc.proto.Base
          .internal_static_spark_connect_FetchErrorDetailsRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsRequest.class,
              org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsRequest.Builder
                  .class);
    }

    // Construct using
    // org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsRequest.newBuilder()
    private Builder() {}

    private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
    }

    @java.lang.Override
    public Builder clear() {
      super.clear();
      sessionId_ = "";

      clientObservedServerSideSessionId_ = "";
      bitField0_ = (bitField0_ & ~0x00000001);
      if (userContextBuilder_ == null) {
        userContext_ = null;
      } else {
        userContext_ = null;
        userContextBuilder_ = null;
      }
      errorId_ = "";

      clientType_ = "";
      bitField0_ = (bitField0_ & ~0x00000002);
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
      return org.apache.kyuubi.engine.spark.connect.grpc.proto.Base
          .internal_static_spark_connect_FetchErrorDetailsRequest_descriptor;
    }

    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsRequest
        getDefaultInstanceForType() {
      return org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsRequest
          .getDefaultInstance();
    }

    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsRequest build() {
      org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsRequest result =
          buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsRequest
        buildPartial() {
      org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsRequest result =
          new org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsRequest(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      result.sessionId_ = sessionId_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        to_bitField0_ |= 0x00000001;
      }
      result.clientObservedServerSideSessionId_ = clientObservedServerSideSessionId_;
      if (userContextBuilder_ == null) {
        result.userContext_ = userContext_;
      } else {
        result.userContext_ = userContextBuilder_.build();
      }
      result.errorId_ = errorId_;
      if (((from_bitField0_ & 0x00000002) != 0)) {
        to_bitField0_ |= 0x00000002;
      }
      result.clientType_ = clientType_;
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }

    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.setField(field, value);
    }

    @java.lang.Override
    public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }

    @java.lang.Override
    public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }

    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }

    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other
          instanceof org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsRequest) {
        return mergeFrom(
            (org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsRequest) other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(
        org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsRequest other) {
      if (other
          == org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsRequest
              .getDefaultInstance()) return this;
      if (!other.getSessionId().isEmpty()) {
        sessionId_ = other.sessionId_;
        onChanged();
      }
      if (other.hasClientObservedServerSideSessionId()) {
        bitField0_ |= 0x00000001;
        clientObservedServerSideSessionId_ = other.clientObservedServerSideSessionId_;
        onChanged();
      }
      if (other.hasUserContext()) {
        mergeUserContext(other.getUserContext());
      }
      if (!other.getErrorId().isEmpty()) {
        errorId_ = other.errorId_;
        onChanged();
      }
      if (other.hasClientType()) {
        bitField0_ |= 0x00000002;
        clientType_ = other.clientType_;
        onChanged();
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10:
              {
                sessionId_ = input.readStringRequireUtf8();

                break;
              } // case 10
            case 18:
              {
                input.readMessage(getUserContextFieldBuilder().getBuilder(), extensionRegistry);

                break;
              } // case 18
            case 26:
              {
                errorId_ = input.readStringRequireUtf8();

                break;
              } // case 26
            case 34:
              {
                clientType_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000002;
                break;
              } // case 34
            case 42:
              {
                clientObservedServerSideSessionId_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 42
            default:
              {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }

    private int bitField0_;

    private java.lang.Object sessionId_ = "";
    /**
     *
     *
     * <pre>
     * (Required)
     * The session_id specifies a Spark session for a user identified by user_context.user_id.
     * The id should be a UUID string of the format `00112233-4455-6677-8899-aabbccddeeff`.
     * </pre>
     *
     * <code>string session_id = 1;</code>
     *
     * @return The sessionId.
     */
    public java.lang.String getSessionId() {
      java.lang.Object ref = sessionId_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        sessionId_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * (Required)
     * The session_id specifies a Spark session for a user identified by user_context.user_id.
     * The id should be a UUID string of the format `00112233-4455-6677-8899-aabbccddeeff`.
     * </pre>
     *
     * <code>string session_id = 1;</code>
     *
     * @return The bytes for sessionId.
     */
    public com.google.protobuf.ByteString getSessionIdBytes() {
      java.lang.Object ref = sessionId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        sessionId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * (Required)
     * The session_id specifies a Spark session for a user identified by user_context.user_id.
     * The id should be a UUID string of the format `00112233-4455-6677-8899-aabbccddeeff`.
     * </pre>
     *
     * <code>string session_id = 1;</code>
     *
     * @param value The sessionId to set.
     * @return This builder for chaining.
     */
    public Builder setSessionId(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }

      sessionId_ = value;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * (Required)
     * The session_id specifies a Spark session for a user identified by user_context.user_id.
     * The id should be a UUID string of the format `00112233-4455-6677-8899-aabbccddeeff`.
     * </pre>
     *
     * <code>string session_id = 1;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearSessionId() {

      sessionId_ = getDefaultInstance().getSessionId();
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * (Required)
     * The session_id specifies a Spark session for a user identified by user_context.user_id.
     * The id should be a UUID string of the format `00112233-4455-6677-8899-aabbccddeeff`.
     * </pre>
     *
     * <code>string session_id = 1;</code>
     *
     * @param value The bytes for sessionId to set.
     * @return This builder for chaining.
     */
    public Builder setSessionIdBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);

      sessionId_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object clientObservedServerSideSessionId_ = "";
    /**
     *
     *
     * <pre>
     * (Optional)
     * Server-side generated idempotency key from the previous responses (if any). Server
     * can use this to validate that the server side session has not changed.
     * </pre>
     *
     * <code>optional string client_observed_server_side_session_id = 5;</code>
     *
     * @return Whether the clientObservedServerSideSessionId field is set.
     */
    public boolean hasClientObservedServerSideSessionId() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     *
     *
     * <pre>
     * (Optional)
     * Server-side generated idempotency key from the previous responses (if any). Server
     * can use this to validate that the server side session has not changed.
     * </pre>
     *
     * <code>optional string client_observed_server_side_session_id = 5;</code>
     *
     * @return The clientObservedServerSideSessionId.
     */
    public java.lang.String getClientObservedServerSideSessionId() {
      java.lang.Object ref = clientObservedServerSideSessionId_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        clientObservedServerSideSessionId_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * (Optional)
     * Server-side generated idempotency key from the previous responses (if any). Server
     * can use this to validate that the server side session has not changed.
     * </pre>
     *
     * <code>optional string client_observed_server_side_session_id = 5;</code>
     *
     * @return The bytes for clientObservedServerSideSessionId.
     */
    public com.google.protobuf.ByteString getClientObservedServerSideSessionIdBytes() {
      java.lang.Object ref = clientObservedServerSideSessionId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        clientObservedServerSideSessionId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * (Optional)
     * Server-side generated idempotency key from the previous responses (if any). Server
     * can use this to validate that the server side session has not changed.
     * </pre>
     *
     * <code>optional string client_observed_server_side_session_id = 5;</code>
     *
     * @param value The clientObservedServerSideSessionId to set.
     * @return This builder for chaining.
     */
    public Builder setClientObservedServerSideSessionId(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000001;
      clientObservedServerSideSessionId_ = value;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * (Optional)
     * Server-side generated idempotency key from the previous responses (if any). Server
     * can use this to validate that the server side session has not changed.
     * </pre>
     *
     * <code>optional string client_observed_server_side_session_id = 5;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearClientObservedServerSideSessionId() {
      bitField0_ = (bitField0_ & ~0x00000001);
      clientObservedServerSideSessionId_ =
          getDefaultInstance().getClientObservedServerSideSessionId();
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * (Optional)
     * Server-side generated idempotency key from the previous responses (if any). Server
     * can use this to validate that the server side session has not changed.
     * </pre>
     *
     * <code>optional string client_observed_server_side_session_id = 5;</code>
     *
     * @param value The bytes for clientObservedServerSideSessionId to set.
     * @return This builder for chaining.
     */
    public Builder setClientObservedServerSideSessionIdBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);
      bitField0_ |= 0x00000001;
      clientObservedServerSideSessionId_ = value;
      onChanged();
      return this;
    }

    private org.apache.kyuubi.engine.spark.connect.grpc.proto.UserContext userContext_;
    private com.google.protobuf.SingleFieldBuilderV3<
            org.apache.kyuubi.engine.spark.connect.grpc.proto.UserContext,
            org.apache.kyuubi.engine.spark.connect.grpc.proto.UserContext.Builder,
            org.apache.kyuubi.engine.spark.connect.grpc.proto.UserContextOrBuilder>
        userContextBuilder_;
    /**
     *
     *
     * <pre>
     * User context
     * </pre>
     *
     * <code>.spark.connect.UserContext user_context = 2;</code>
     *
     * @return Whether the userContext field is set.
     */
    public boolean hasUserContext() {
      return userContextBuilder_ != null || userContext_ != null;
    }
    /**
     *
     *
     * <pre>
     * User context
     * </pre>
     *
     * <code>.spark.connect.UserContext user_context = 2;</code>
     *
     * @return The userContext.
     */
    public org.apache.kyuubi.engine.spark.connect.grpc.proto.UserContext getUserContext() {
      if (userContextBuilder_ == null) {
        return userContext_ == null
            ? org.apache.kyuubi.engine.spark.connect.grpc.proto.UserContext.getDefaultInstance()
            : userContext_;
      } else {
        return userContextBuilder_.getMessage();
      }
    }
    /**
     *
     *
     * <pre>
     * User context
     * </pre>
     *
     * <code>.spark.connect.UserContext user_context = 2;</code>
     */
    public Builder setUserContext(
        org.apache.kyuubi.engine.spark.connect.grpc.proto.UserContext value) {
      if (userContextBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        userContext_ = value;
        onChanged();
      } else {
        userContextBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     *
     *
     * <pre>
     * User context
     * </pre>
     *
     * <code>.spark.connect.UserContext user_context = 2;</code>
     */
    public Builder setUserContext(
        org.apache.kyuubi.engine.spark.connect.grpc.proto.UserContext.Builder builderForValue) {
      if (userContextBuilder_ == null) {
        userContext_ = builderForValue.build();
        onChanged();
      } else {
        userContextBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     *
     *
     * <pre>
     * User context
     * </pre>
     *
     * <code>.spark.connect.UserContext user_context = 2;</code>
     */
    public Builder mergeUserContext(
        org.apache.kyuubi.engine.spark.connect.grpc.proto.UserContext value) {
      if (userContextBuilder_ == null) {
        if (userContext_ != null) {
          userContext_ =
              org.apache.kyuubi.engine.spark.connect.grpc.proto.UserContext.newBuilder(userContext_)
                  .mergeFrom(value)
                  .buildPartial();
        } else {
          userContext_ = value;
        }
        onChanged();
      } else {
        userContextBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     *
     *
     * <pre>
     * User context
     * </pre>
     *
     * <code>.spark.connect.UserContext user_context = 2;</code>
     */
    public Builder clearUserContext() {
      if (userContextBuilder_ == null) {
        userContext_ = null;
        onChanged();
      } else {
        userContext_ = null;
        userContextBuilder_ = null;
      }

      return this;
    }
    /**
     *
     *
     * <pre>
     * User context
     * </pre>
     *
     * <code>.spark.connect.UserContext user_context = 2;</code>
     */
    public org.apache.kyuubi.engine.spark.connect.grpc.proto.UserContext.Builder
        getUserContextBuilder() {

      onChanged();
      return getUserContextFieldBuilder().getBuilder();
    }
    /**
     *
     *
     * <pre>
     * User context
     * </pre>
     *
     * <code>.spark.connect.UserContext user_context = 2;</code>
     */
    public org.apache.kyuubi.engine.spark.connect.grpc.proto.UserContextOrBuilder
        getUserContextOrBuilder() {
      if (userContextBuilder_ != null) {
        return userContextBuilder_.getMessageOrBuilder();
      } else {
        return userContext_ == null
            ? org.apache.kyuubi.engine.spark.connect.grpc.proto.UserContext.getDefaultInstance()
            : userContext_;
      }
    }
    /**
     *
     *
     * <pre>
     * User context
     * </pre>
     *
     * <code>.spark.connect.UserContext user_context = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            org.apache.kyuubi.engine.spark.connect.grpc.proto.UserContext,
            org.apache.kyuubi.engine.spark.connect.grpc.proto.UserContext.Builder,
            org.apache.kyuubi.engine.spark.connect.grpc.proto.UserContextOrBuilder>
        getUserContextFieldBuilder() {
      if (userContextBuilder_ == null) {
        userContextBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                org.apache.kyuubi.engine.spark.connect.grpc.proto.UserContext,
                org.apache.kyuubi.engine.spark.connect.grpc.proto.UserContext.Builder,
                org.apache.kyuubi.engine.spark.connect.grpc.proto.UserContextOrBuilder>(
                getUserContext(), getParentForChildren(), isClean());
        userContext_ = null;
      }
      return userContextBuilder_;
    }

    private java.lang.Object errorId_ = "";
    /**
     *
     *
     * <pre>
     * (Required)
     * The id of the error.
     * </pre>
     *
     * <code>string error_id = 3;</code>
     *
     * @return The errorId.
     */
    public java.lang.String getErrorId() {
      java.lang.Object ref = errorId_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        errorId_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * (Required)
     * The id of the error.
     * </pre>
     *
     * <code>string error_id = 3;</code>
     *
     * @return The bytes for errorId.
     */
    public com.google.protobuf.ByteString getErrorIdBytes() {
      java.lang.Object ref = errorId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        errorId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * (Required)
     * The id of the error.
     * </pre>
     *
     * <code>string error_id = 3;</code>
     *
     * @param value The errorId to set.
     * @return This builder for chaining.
     */
    public Builder setErrorId(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }

      errorId_ = value;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * (Required)
     * The id of the error.
     * </pre>
     *
     * <code>string error_id = 3;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearErrorId() {

      errorId_ = getDefaultInstance().getErrorId();
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * (Required)
     * The id of the error.
     * </pre>
     *
     * <code>string error_id = 3;</code>
     *
     * @param value The bytes for errorId to set.
     * @return This builder for chaining.
     */
    public Builder setErrorIdBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);

      errorId_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object clientType_ = "";
    /**
     *
     *
     * <pre>
     * Provides optional information about the client sending the request. This field
     * can be used for language or version specific information and is only intended for
     * logging purposes and will not be interpreted by the server.
     * </pre>
     *
     * <code>optional string client_type = 4;</code>
     *
     * @return Whether the clientType field is set.
     */
    public boolean hasClientType() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     *
     *
     * <pre>
     * Provides optional information about the client sending the request. This field
     * can be used for language or version specific information and is only intended for
     * logging purposes and will not be interpreted by the server.
     * </pre>
     *
     * <code>optional string client_type = 4;</code>
     *
     * @return The clientType.
     */
    public java.lang.String getClientType() {
      java.lang.Object ref = clientType_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        clientType_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Provides optional information about the client sending the request. This field
     * can be used for language or version specific information and is only intended for
     * logging purposes and will not be interpreted by the server.
     * </pre>
     *
     * <code>optional string client_type = 4;</code>
     *
     * @return The bytes for clientType.
     */
    public com.google.protobuf.ByteString getClientTypeBytes() {
      java.lang.Object ref = clientType_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        clientType_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Provides optional information about the client sending the request. This field
     * can be used for language or version specific information and is only intended for
     * logging purposes and will not be interpreted by the server.
     * </pre>
     *
     * <code>optional string client_type = 4;</code>
     *
     * @param value The clientType to set.
     * @return This builder for chaining.
     */
    public Builder setClientType(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000002;
      clientType_ = value;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Provides optional information about the client sending the request. This field
     * can be used for language or version specific information and is only intended for
     * logging purposes and will not be interpreted by the server.
     * </pre>
     *
     * <code>optional string client_type = 4;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearClientType() {
      bitField0_ = (bitField0_ & ~0x00000002);
      clientType_ = getDefaultInstance().getClientType();
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Provides optional information about the client sending the request. This field
     * can be used for language or version specific information and is only intended for
     * logging purposes and will not be interpreted by the server.
     * </pre>
     *
     * <code>optional string client_type = 4;</code>
     *
     * @param value The bytes for clientType to set.
     * @return This builder for chaining.
     */
    public Builder setClientTypeBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);
      bitField0_ |= 0x00000002;
      clientType_ = value;
      onChanged();
      return this;
    }

    @java.lang.Override
    public final Builder setUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }

    // @@protoc_insertion_point(builder_scope:spark.connect.FetchErrorDetailsRequest)
  }

  // @@protoc_insertion_point(class_scope:spark.connect.FetchErrorDetailsRequest)
  private static final org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsRequest
      DEFAULT_INSTANCE;

  static {
    DEFAULT_INSTANCE =
        new org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsRequest();
  }

  public static org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsRequest
      getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<FetchErrorDetailsRequest> PARSER =
      new com.google.protobuf.AbstractParser<FetchErrorDetailsRequest>() {
        @java.lang.Override
        public FetchErrorDetailsRequest parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

  public static com.google.protobuf.Parser<FetchErrorDetailsRequest> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<FetchErrorDetailsRequest> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsRequest
      getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }
}
