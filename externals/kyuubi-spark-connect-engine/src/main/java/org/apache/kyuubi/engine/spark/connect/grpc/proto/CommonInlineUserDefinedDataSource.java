// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: kyuubi/spark/connect/relations.proto

package org.apache.kyuubi.engine.spark.connect.grpc.proto;

/** Protobuf type {@code spark.connect.CommonInlineUserDefinedDataSource} */
public final class CommonInlineUserDefinedDataSource extends com.google.protobuf.GeneratedMessageV3
    implements
    // @@protoc_insertion_point(message_implements:spark.connect.CommonInlineUserDefinedDataSource)
    CommonInlineUserDefinedDataSourceOrBuilder {
  private static final long serialVersionUID = 0L;
  // Use CommonInlineUserDefinedDataSource.newBuilder() to construct.
  private CommonInlineUserDefinedDataSource(
      com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }

  private CommonInlineUserDefinedDataSource() {
    name_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
    return new CommonInlineUserDefinedDataSource();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet getUnknownFields() {
    return this.unknownFields;
  }

  public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
    return org.apache.kyuubi.engine.spark.connect.grpc.proto.Relations
        .internal_static_spark_connect_CommonInlineUserDefinedDataSource_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return org.apache.kyuubi.engine.spark.connect.grpc.proto.Relations
        .internal_static_spark_connect_CommonInlineUserDefinedDataSource_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            org.apache.kyuubi.engine.spark.connect.grpc.proto.CommonInlineUserDefinedDataSource
                .class,
            org.apache.kyuubi.engine.spark.connect.grpc.proto.CommonInlineUserDefinedDataSource
                .Builder.class);
  }

  private int dataSourceCase_ = 0;
  private java.lang.Object dataSource_;

  public enum DataSourceCase
      implements
          com.google.protobuf.Internal.EnumLite,
          com.google.protobuf.AbstractMessage.InternalOneOfEnum {
    PYTHON_DATA_SOURCE(2),
    DATASOURCE_NOT_SET(0);
    private final int value;

    private DataSourceCase(int value) {
      this.value = value;
    }
    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static DataSourceCase valueOf(int value) {
      return forNumber(value);
    }

    public static DataSourceCase forNumber(int value) {
      switch (value) {
        case 2:
          return PYTHON_DATA_SOURCE;
        case 0:
          return DATASOURCE_NOT_SET;
        default:
          return null;
      }
    }

    public int getNumber() {
      return this.value;
    }
  };

  public DataSourceCase getDataSourceCase() {
    return DataSourceCase.forNumber(dataSourceCase_);
  }

  public static final int NAME_FIELD_NUMBER = 1;
  private volatile java.lang.Object name_;
  /**
   *
   *
   * <pre>
   * (Required) Name of the data source.
   * </pre>
   *
   * <code>string name = 1;</code>
   *
   * @return The name.
   */
  @java.lang.Override
  public java.lang.String getName() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      name_ = s;
      return s;
    }
  }
  /**
   *
   *
   * <pre>
   * (Required) Name of the data source.
   * </pre>
   *
   * <code>string name = 1;</code>
   *
   * @return The bytes for name.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getNameBytes() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      name_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int PYTHON_DATA_SOURCE_FIELD_NUMBER = 2;
  /**
   * <code>.spark.connect.PythonDataSource python_data_source = 2;</code>
   *
   * @return Whether the pythonDataSource field is set.
   */
  @java.lang.Override
  public boolean hasPythonDataSource() {
    return dataSourceCase_ == 2;
  }
  /**
   * <code>.spark.connect.PythonDataSource python_data_source = 2;</code>
   *
   * @return The pythonDataSource.
   */
  @java.lang.Override
  public org.apache.kyuubi.engine.spark.connect.grpc.proto.PythonDataSource getPythonDataSource() {
    if (dataSourceCase_ == 2) {
      return (org.apache.kyuubi.engine.spark.connect.grpc.proto.PythonDataSource) dataSource_;
    }
    return org.apache.kyuubi.engine.spark.connect.grpc.proto.PythonDataSource.getDefaultInstance();
  }
  /** <code>.spark.connect.PythonDataSource python_data_source = 2;</code> */
  @java.lang.Override
  public org.apache.kyuubi.engine.spark.connect.grpc.proto.PythonDataSourceOrBuilder
      getPythonDataSourceOrBuilder() {
    if (dataSourceCase_ == 2) {
      return (org.apache.kyuubi.engine.spark.connect.grpc.proto.PythonDataSource) dataSource_;
    }
    return org.apache.kyuubi.engine.spark.connect.grpc.proto.PythonDataSource.getDefaultInstance();
  }

  private byte memoizedIsInitialized = -1;

  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
    }
    if (dataSourceCase_ == 2) {
      output.writeMessage(
          2, (org.apache.kyuubi.engine.spark.connect.grpc.proto.PythonDataSource) dataSource_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
    }
    if (dataSourceCase_ == 2) {
      size +=
          com.google.protobuf.CodedOutputStream.computeMessageSize(
              2, (org.apache.kyuubi.engine.spark.connect.grpc.proto.PythonDataSource) dataSource_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
      return true;
    }
    if (!(obj
        instanceof
        org.apache.kyuubi.engine.spark.connect.grpc.proto.CommonInlineUserDefinedDataSource)) {
      return super.equals(obj);
    }
    org.apache.kyuubi.engine.spark.connect.grpc.proto.CommonInlineUserDefinedDataSource other =
        (org.apache.kyuubi.engine.spark.connect.grpc.proto.CommonInlineUserDefinedDataSource) obj;

    if (!getName().equals(other.getName())) return false;
    if (!getDataSourceCase().equals(other.getDataSourceCase())) return false;
    switch (dataSourceCase_) {
      case 2:
        if (!getPythonDataSource().equals(other.getPythonDataSource())) return false;
        break;
      case 0:
      default:
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + NAME_FIELD_NUMBER;
    hash = (53 * hash) + getName().hashCode();
    switch (dataSourceCase_) {
      case 2:
        hash = (37 * hash) + PYTHON_DATA_SOURCE_FIELD_NUMBER;
        hash = (53 * hash) + getPythonDataSource().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static org.apache.kyuubi.engine.spark.connect.grpc.proto.CommonInlineUserDefinedDataSource
      parseFrom(java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static org.apache.kyuubi.engine.spark.connect.grpc.proto.CommonInlineUserDefinedDataSource
      parseFrom(
          java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static org.apache.kyuubi.engine.spark.connect.grpc.proto.CommonInlineUserDefinedDataSource
      parseFrom(com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static org.apache.kyuubi.engine.spark.connect.grpc.proto.CommonInlineUserDefinedDataSource
      parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static org.apache.kyuubi.engine.spark.connect.grpc.proto.CommonInlineUserDefinedDataSource
      parseFrom(byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static org.apache.kyuubi.engine.spark.connect.grpc.proto.CommonInlineUserDefinedDataSource
      parseFrom(byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static org.apache.kyuubi.engine.spark.connect.grpc.proto.CommonInlineUserDefinedDataSource
      parseFrom(java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static org.apache.kyuubi.engine.spark.connect.grpc.proto.CommonInlineUserDefinedDataSource
      parseFrom(
          java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static org.apache.kyuubi.engine.spark.connect.grpc.proto.CommonInlineUserDefinedDataSource
      parseDelimitedFrom(java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
  }

  public static org.apache.kyuubi.engine.spark.connect.grpc.proto.CommonInlineUserDefinedDataSource
      parseDelimitedFrom(
          java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static org.apache.kyuubi.engine.spark.connect.grpc.proto.CommonInlineUserDefinedDataSource
      parseFrom(com.google.protobuf.CodedInputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static org.apache.kyuubi.engine.spark.connect.grpc.proto.CommonInlineUserDefinedDataSource
      parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() {
    return newBuilder();
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }

  public static Builder newBuilder(
      org.apache.kyuubi.engine.spark.connect.grpc.proto.CommonInlineUserDefinedDataSource
          prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /** Protobuf type {@code spark.connect.CommonInlineUserDefinedDataSource} */
  public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
      implements
      // @@protoc_insertion_point(builder_implements:spark.connect.CommonInlineUserDefinedDataSource)
      org.apache.kyuubi.engine.spark.connect.grpc.proto.CommonInlineUserDefinedDataSourceOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return org.apache.kyuubi.engine.spark.connect.grpc.proto.Relations
          .internal_static_spark_connect_CommonInlineUserDefinedDataSource_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.kyuubi.engine.spark.connect.grpc.proto.Relations
          .internal_static_spark_connect_CommonInlineUserDefinedDataSource_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.kyuubi.engine.spark.connect.grpc.proto.CommonInlineUserDefinedDataSource
                  .class,
              org.apache.kyuubi.engine.spark.connect.grpc.proto.CommonInlineUserDefinedDataSource
                  .Builder.class);
    }

    // Construct using
    // org.apache.kyuubi.engine.spark.connect.grpc.proto.CommonInlineUserDefinedDataSource.newBuilder()
    private Builder() {}

    private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
    }

    @java.lang.Override
    public Builder clear() {
      super.clear();
      name_ = "";

      if (pythonDataSourceBuilder_ != null) {
        pythonDataSourceBuilder_.clear();
      }
      dataSourceCase_ = 0;
      dataSource_ = null;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
      return org.apache.kyuubi.engine.spark.connect.grpc.proto.Relations
          .internal_static_spark_connect_CommonInlineUserDefinedDataSource_descriptor;
    }

    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.grpc.proto.CommonInlineUserDefinedDataSource
        getDefaultInstanceForType() {
      return org.apache.kyuubi.engine.spark.connect.grpc.proto.CommonInlineUserDefinedDataSource
          .getDefaultInstance();
    }

    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.grpc.proto.CommonInlineUserDefinedDataSource
        build() {
      org.apache.kyuubi.engine.spark.connect.grpc.proto.CommonInlineUserDefinedDataSource result =
          buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.grpc.proto.CommonInlineUserDefinedDataSource
        buildPartial() {
      org.apache.kyuubi.engine.spark.connect.grpc.proto.CommonInlineUserDefinedDataSource result =
          new org.apache.kyuubi.engine.spark.connect.grpc.proto.CommonInlineUserDefinedDataSource(
              this);
      result.name_ = name_;
      if (dataSourceCase_ == 2) {
        if (pythonDataSourceBuilder_ == null) {
          result.dataSource_ = dataSource_;
        } else {
          result.dataSource_ = pythonDataSourceBuilder_.build();
        }
      }
      result.dataSourceCase_ = dataSourceCase_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }

    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.setField(field, value);
    }

    @java.lang.Override
    public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }

    @java.lang.Override
    public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }

    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }

    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other
          instanceof
          org.apache.kyuubi.engine.spark.connect.grpc.proto.CommonInlineUserDefinedDataSource) {
        return mergeFrom(
            (org.apache.kyuubi.engine.spark.connect.grpc.proto.CommonInlineUserDefinedDataSource)
                other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(
        org.apache.kyuubi.engine.spark.connect.grpc.proto.CommonInlineUserDefinedDataSource other) {
      if (other
          == org.apache.kyuubi.engine.spark.connect.grpc.proto.CommonInlineUserDefinedDataSource
              .getDefaultInstance()) return this;
      if (!other.getName().isEmpty()) {
        name_ = other.name_;
        onChanged();
      }
      switch (other.getDataSourceCase()) {
        case PYTHON_DATA_SOURCE:
          {
            mergePythonDataSource(other.getPythonDataSource());
            break;
          }
        case DATASOURCE_NOT_SET:
          {
            break;
          }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10:
              {
                name_ = input.readStringRequireUtf8();

                break;
              } // case 10
            case 18:
              {
                input.readMessage(
                    getPythonDataSourceFieldBuilder().getBuilder(), extensionRegistry);
                dataSourceCase_ = 2;
                break;
              } // case 18
            default:
              {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }

    private int dataSourceCase_ = 0;
    private java.lang.Object dataSource_;

    public DataSourceCase getDataSourceCase() {
      return DataSourceCase.forNumber(dataSourceCase_);
    }

    public Builder clearDataSource() {
      dataSourceCase_ = 0;
      dataSource_ = null;
      onChanged();
      return this;
    }

    private java.lang.Object name_ = "";
    /**
     *
     *
     * <pre>
     * (Required) Name of the data source.
     * </pre>
     *
     * <code>string name = 1;</code>
     *
     * @return The name.
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * (Required) Name of the data source.
     * </pre>
     *
     * <code>string name = 1;</code>
     *
     * @return The bytes for name.
     */
    public com.google.protobuf.ByteString getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * (Required) Name of the data source.
     * </pre>
     *
     * <code>string name = 1;</code>
     *
     * @param value The name to set.
     * @return This builder for chaining.
     */
    public Builder setName(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }

      name_ = value;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * (Required) Name of the data source.
     * </pre>
     *
     * <code>string name = 1;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearName() {

      name_ = getDefaultInstance().getName();
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * (Required) Name of the data source.
     * </pre>
     *
     * <code>string name = 1;</code>
     *
     * @param value The bytes for name to set.
     * @return This builder for chaining.
     */
    public Builder setNameBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);

      name_ = value;
      onChanged();
      return this;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
            org.apache.kyuubi.engine.spark.connect.grpc.proto.PythonDataSource,
            org.apache.kyuubi.engine.spark.connect.grpc.proto.PythonDataSource.Builder,
            org.apache.kyuubi.engine.spark.connect.grpc.proto.PythonDataSourceOrBuilder>
        pythonDataSourceBuilder_;
    /**
     * <code>.spark.connect.PythonDataSource python_data_source = 2;</code>
     *
     * @return Whether the pythonDataSource field is set.
     */
    @java.lang.Override
    public boolean hasPythonDataSource() {
      return dataSourceCase_ == 2;
    }
    /**
     * <code>.spark.connect.PythonDataSource python_data_source = 2;</code>
     *
     * @return The pythonDataSource.
     */
    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.grpc.proto.PythonDataSource
        getPythonDataSource() {
      if (pythonDataSourceBuilder_ == null) {
        if (dataSourceCase_ == 2) {
          return (org.apache.kyuubi.engine.spark.connect.grpc.proto.PythonDataSource) dataSource_;
        }
        return org.apache.kyuubi.engine.spark.connect.grpc.proto.PythonDataSource
            .getDefaultInstance();
      } else {
        if (dataSourceCase_ == 2) {
          return pythonDataSourceBuilder_.getMessage();
        }
        return org.apache.kyuubi.engine.spark.connect.grpc.proto.PythonDataSource
            .getDefaultInstance();
      }
    }
    /** <code>.spark.connect.PythonDataSource python_data_source = 2;</code> */
    public Builder setPythonDataSource(
        org.apache.kyuubi.engine.spark.connect.grpc.proto.PythonDataSource value) {
      if (pythonDataSourceBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        dataSource_ = value;
        onChanged();
      } else {
        pythonDataSourceBuilder_.setMessage(value);
      }
      dataSourceCase_ = 2;
      return this;
    }
    /** <code>.spark.connect.PythonDataSource python_data_source = 2;</code> */
    public Builder setPythonDataSource(
        org.apache.kyuubi.engine.spark.connect.grpc.proto.PythonDataSource.Builder
            builderForValue) {
      if (pythonDataSourceBuilder_ == null) {
        dataSource_ = builderForValue.build();
        onChanged();
      } else {
        pythonDataSourceBuilder_.setMessage(builderForValue.build());
      }
      dataSourceCase_ = 2;
      return this;
    }
    /** <code>.spark.connect.PythonDataSource python_data_source = 2;</code> */
    public Builder mergePythonDataSource(
        org.apache.kyuubi.engine.spark.connect.grpc.proto.PythonDataSource value) {
      if (pythonDataSourceBuilder_ == null) {
        if (dataSourceCase_ == 2
            && dataSource_
                != org.apache.kyuubi.engine.spark.connect.grpc.proto.PythonDataSource
                    .getDefaultInstance()) {
          dataSource_ =
              org.apache.kyuubi.engine.spark.connect.grpc.proto.PythonDataSource.newBuilder(
                      (org.apache.kyuubi.engine.spark.connect.grpc.proto.PythonDataSource)
                          dataSource_)
                  .mergeFrom(value)
                  .buildPartial();
        } else {
          dataSource_ = value;
        }
        onChanged();
      } else {
        if (dataSourceCase_ == 2) {
          pythonDataSourceBuilder_.mergeFrom(value);
        } else {
          pythonDataSourceBuilder_.setMessage(value);
        }
      }
      dataSourceCase_ = 2;
      return this;
    }
    /** <code>.spark.connect.PythonDataSource python_data_source = 2;</code> */
    public Builder clearPythonDataSource() {
      if (pythonDataSourceBuilder_ == null) {
        if (dataSourceCase_ == 2) {
          dataSourceCase_ = 0;
          dataSource_ = null;
          onChanged();
        }
      } else {
        if (dataSourceCase_ == 2) {
          dataSourceCase_ = 0;
          dataSource_ = null;
        }
        pythonDataSourceBuilder_.clear();
      }
      return this;
    }
    /** <code>.spark.connect.PythonDataSource python_data_source = 2;</code> */
    public org.apache.kyuubi.engine.spark.connect.grpc.proto.PythonDataSource.Builder
        getPythonDataSourceBuilder() {
      return getPythonDataSourceFieldBuilder().getBuilder();
    }
    /** <code>.spark.connect.PythonDataSource python_data_source = 2;</code> */
    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.grpc.proto.PythonDataSourceOrBuilder
        getPythonDataSourceOrBuilder() {
      if ((dataSourceCase_ == 2) && (pythonDataSourceBuilder_ != null)) {
        return pythonDataSourceBuilder_.getMessageOrBuilder();
      } else {
        if (dataSourceCase_ == 2) {
          return (org.apache.kyuubi.engine.spark.connect.grpc.proto.PythonDataSource) dataSource_;
        }
        return org.apache.kyuubi.engine.spark.connect.grpc.proto.PythonDataSource
            .getDefaultInstance();
      }
    }
    /** <code>.spark.connect.PythonDataSource python_data_source = 2;</code> */
    private com.google.protobuf.SingleFieldBuilderV3<
            org.apache.kyuubi.engine.spark.connect.grpc.proto.PythonDataSource,
            org.apache.kyuubi.engine.spark.connect.grpc.proto.PythonDataSource.Builder,
            org.apache.kyuubi.engine.spark.connect.grpc.proto.PythonDataSourceOrBuilder>
        getPythonDataSourceFieldBuilder() {
      if (pythonDataSourceBuilder_ == null) {
        if (!(dataSourceCase_ == 2)) {
          dataSource_ =
              org.apache.kyuubi.engine.spark.connect.grpc.proto.PythonDataSource
                  .getDefaultInstance();
        }
        pythonDataSourceBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                org.apache.kyuubi.engine.spark.connect.grpc.proto.PythonDataSource,
                org.apache.kyuubi.engine.spark.connect.grpc.proto.PythonDataSource.Builder,
                org.apache.kyuubi.engine.spark.connect.grpc.proto.PythonDataSourceOrBuilder>(
                (org.apache.kyuubi.engine.spark.connect.grpc.proto.PythonDataSource) dataSource_,
                getParentForChildren(),
                isClean());
        dataSource_ = null;
      }
      dataSourceCase_ = 2;
      onChanged();
      ;
      return pythonDataSourceBuilder_;
    }

    @java.lang.Override
    public final Builder setUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }

    // @@protoc_insertion_point(builder_scope:spark.connect.CommonInlineUserDefinedDataSource)
  }

  // @@protoc_insertion_point(class_scope:spark.connect.CommonInlineUserDefinedDataSource)
  private static final org.apache.kyuubi.engine.spark.connect.grpc.proto
          .CommonInlineUserDefinedDataSource
      DEFAULT_INSTANCE;

  static {
    DEFAULT_INSTANCE =
        new org.apache.kyuubi.engine.spark.connect.grpc.proto.CommonInlineUserDefinedDataSource();
  }

  public static org.apache.kyuubi.engine.spark.connect.grpc.proto.CommonInlineUserDefinedDataSource
      getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<CommonInlineUserDefinedDataSource> PARSER =
      new com.google.protobuf.AbstractParser<CommonInlineUserDefinedDataSource>() {
        @java.lang.Override
        public CommonInlineUserDefinedDataSource parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

  public static com.google.protobuf.Parser<CommonInlineUserDefinedDataSource> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<CommonInlineUserDefinedDataSource> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public org.apache.kyuubi.engine.spark.connect.grpc.proto.CommonInlineUserDefinedDataSource
      getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }
}
