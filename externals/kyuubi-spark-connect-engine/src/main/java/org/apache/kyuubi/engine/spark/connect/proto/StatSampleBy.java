// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: spark/connect/relations.proto

package org.apache.kyuubi.engine.spark.connect.proto;

/**
 * <pre>
 * Returns a stratified sample without replacement based on the fraction
 * given on each stratum.
 * It will invoke 'Dataset.stat.freqItems' (same as 'StatFunctions.freqItems')
 * to compute the results.
 * </pre>
 *
 * Protobuf type {@code spark.connect.StatSampleBy}
 */
public final class StatSampleBy extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:spark.connect.StatSampleBy)
    StatSampleByOrBuilder {
private static final long serialVersionUID = 0L;
  // Use StatSampleBy.newBuilder() to construct.
  private StatSampleBy(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private StatSampleBy() {
    fractions_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new StatSampleBy();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return org.apache.kyuubi.engine.spark.connect.proto.Relations.internal_static_spark_connect_StatSampleBy_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return org.apache.kyuubi.engine.spark.connect.proto.Relations.internal_static_spark_connect_StatSampleBy_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            org.apache.kyuubi.engine.spark.connect.proto.StatSampleBy.class, org.apache.kyuubi.engine.spark.connect.proto.StatSampleBy.Builder.class);
  }

  public interface FractionOrBuilder extends
      // @@protoc_insertion_point(interface_extends:spark.connect.StatSampleBy.Fraction)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * (Required) The stratum.
     * </pre>
     *
     * <code>.spark.connect.Expression.Literal stratum = 1;</code>
     * @return Whether the stratum field is set.
     */
    boolean hasStratum();
    /**
     * <pre>
     * (Required) The stratum.
     * </pre>
     *
     * <code>.spark.connect.Expression.Literal stratum = 1;</code>
     * @return The stratum.
     */
    org.apache.kyuubi.engine.spark.connect.proto.Expression.Literal getStratum();
    /**
     * <pre>
     * (Required) The stratum.
     * </pre>
     *
     * <code>.spark.connect.Expression.Literal stratum = 1;</code>
     */
    org.apache.kyuubi.engine.spark.connect.proto.Expression.LiteralOrBuilder getStratumOrBuilder();

    /**
     * <pre>
     * (Required) The fraction value. Must be in [0, 1].
     * </pre>
     *
     * <code>double fraction = 2;</code>
     * @return The fraction.
     */
    double getFraction();
  }
  /**
   * Protobuf type {@code spark.connect.StatSampleBy.Fraction}
   */
  public static final class Fraction extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:spark.connect.StatSampleBy.Fraction)
      FractionOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Fraction.newBuilder() to construct.
    private Fraction(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Fraction() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Fraction();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.kyuubi.engine.spark.connect.proto.Relations.internal_static_spark_connect_StatSampleBy_Fraction_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.kyuubi.engine.spark.connect.proto.Relations.internal_static_spark_connect_StatSampleBy_Fraction_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.kyuubi.engine.spark.connect.proto.StatSampleBy.Fraction.class, org.apache.kyuubi.engine.spark.connect.proto.StatSampleBy.Fraction.Builder.class);
    }

    public static final int STRATUM_FIELD_NUMBER = 1;
    private org.apache.kyuubi.engine.spark.connect.proto.Expression.Literal stratum_;
    /**
     * <pre>
     * (Required) The stratum.
     * </pre>
     *
     * <code>.spark.connect.Expression.Literal stratum = 1;</code>
     * @return Whether the stratum field is set.
     */
    @java.lang.Override
    public boolean hasStratum() {
      return stratum_ != null;
    }
    /**
     * <pre>
     * (Required) The stratum.
     * </pre>
     *
     * <code>.spark.connect.Expression.Literal stratum = 1;</code>
     * @return The stratum.
     */
    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.Expression.Literal getStratum() {
      return stratum_ == null ? org.apache.kyuubi.engine.spark.connect.proto.Expression.Literal.getDefaultInstance() : stratum_;
    }
    /**
     * <pre>
     * (Required) The stratum.
     * </pre>
     *
     * <code>.spark.connect.Expression.Literal stratum = 1;</code>
     */
    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.Expression.LiteralOrBuilder getStratumOrBuilder() {
      return getStratum();
    }

    public static final int FRACTION_FIELD_NUMBER = 2;
    private double fraction_;
    /**
     * <pre>
     * (Required) The fraction value. Must be in [0, 1].
     * </pre>
     *
     * <code>double fraction = 2;</code>
     * @return The fraction.
     */
    @java.lang.Override
    public double getFraction() {
      return fraction_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (stratum_ != null) {
        output.writeMessage(1, getStratum());
      }
      if (java.lang.Double.doubleToRawLongBits(fraction_) != 0) {
        output.writeDouble(2, fraction_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (stratum_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getStratum());
      }
      if (java.lang.Double.doubleToRawLongBits(fraction_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(2, fraction_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.kyuubi.engine.spark.connect.proto.StatSampleBy.Fraction)) {
        return super.equals(obj);
      }
      org.apache.kyuubi.engine.spark.connect.proto.StatSampleBy.Fraction other = (org.apache.kyuubi.engine.spark.connect.proto.StatSampleBy.Fraction) obj;

      if (hasStratum() != other.hasStratum()) return false;
      if (hasStratum()) {
        if (!getStratum()
            .equals(other.getStratum())) return false;
      }
      if (java.lang.Double.doubleToLongBits(getFraction())
          != java.lang.Double.doubleToLongBits(
              other.getFraction())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasStratum()) {
        hash = (37 * hash) + STRATUM_FIELD_NUMBER;
        hash = (53 * hash) + getStratum().hashCode();
      }
      hash = (37 * hash) + FRACTION_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getFraction()));
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.kyuubi.engine.spark.connect.proto.StatSampleBy.Fraction parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.StatSampleBy.Fraction parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.StatSampleBy.Fraction parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.StatSampleBy.Fraction parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.StatSampleBy.Fraction parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.StatSampleBy.Fraction parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.StatSampleBy.Fraction parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.StatSampleBy.Fraction parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.StatSampleBy.Fraction parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.StatSampleBy.Fraction parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.StatSampleBy.Fraction parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.StatSampleBy.Fraction parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.kyuubi.engine.spark.connect.proto.StatSampleBy.Fraction prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code spark.connect.StatSampleBy.Fraction}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:spark.connect.StatSampleBy.Fraction)
        org.apache.kyuubi.engine.spark.connect.proto.StatSampleBy.FractionOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.kyuubi.engine.spark.connect.proto.Relations.internal_static_spark_connect_StatSampleBy_Fraction_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.kyuubi.engine.spark.connect.proto.Relations.internal_static_spark_connect_StatSampleBy_Fraction_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.kyuubi.engine.spark.connect.proto.StatSampleBy.Fraction.class, org.apache.kyuubi.engine.spark.connect.proto.StatSampleBy.Fraction.Builder.class);
      }

      // Construct using org.apache.kyuubi.engine.spark.connect.proto.StatSampleBy.Fraction.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (stratumBuilder_ == null) {
          stratum_ = null;
        } else {
          stratum_ = null;
          stratumBuilder_ = null;
        }
        fraction_ = 0D;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.kyuubi.engine.spark.connect.proto.Relations.internal_static_spark_connect_StatSampleBy_Fraction_descriptor;
      }

      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.proto.StatSampleBy.Fraction getDefaultInstanceForType() {
        return org.apache.kyuubi.engine.spark.connect.proto.StatSampleBy.Fraction.getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.proto.StatSampleBy.Fraction build() {
        org.apache.kyuubi.engine.spark.connect.proto.StatSampleBy.Fraction result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.proto.StatSampleBy.Fraction buildPartial() {
        org.apache.kyuubi.engine.spark.connect.proto.StatSampleBy.Fraction result = new org.apache.kyuubi.engine.spark.connect.proto.StatSampleBy.Fraction(this);
        if (stratumBuilder_ == null) {
          result.stratum_ = stratum_;
        } else {
          result.stratum_ = stratumBuilder_.build();
        }
        result.fraction_ = fraction_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.kyuubi.engine.spark.connect.proto.StatSampleBy.Fraction) {
          return mergeFrom((org.apache.kyuubi.engine.spark.connect.proto.StatSampleBy.Fraction)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.kyuubi.engine.spark.connect.proto.StatSampleBy.Fraction other) {
        if (other == org.apache.kyuubi.engine.spark.connect.proto.StatSampleBy.Fraction.getDefaultInstance()) return this;
        if (other.hasStratum()) {
          mergeStratum(other.getStratum());
        }
        if (other.getFraction() != 0D) {
          setFraction(other.getFraction());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                input.readMessage(
                    getStratumFieldBuilder().getBuilder(),
                    extensionRegistry);

                break;
              } // case 10
              case 17: {
                fraction_ = input.readDouble();

                break;
              } // case 17
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }

      private org.apache.kyuubi.engine.spark.connect.proto.Expression.Literal stratum_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.kyuubi.engine.spark.connect.proto.Expression.Literal, org.apache.kyuubi.engine.spark.connect.proto.Expression.Literal.Builder, org.apache.kyuubi.engine.spark.connect.proto.Expression.LiteralOrBuilder> stratumBuilder_;
      /**
       * <pre>
       * (Required) The stratum.
       * </pre>
       *
       * <code>.spark.connect.Expression.Literal stratum = 1;</code>
       * @return Whether the stratum field is set.
       */
      public boolean hasStratum() {
        return stratumBuilder_ != null || stratum_ != null;
      }
      /**
       * <pre>
       * (Required) The stratum.
       * </pre>
       *
       * <code>.spark.connect.Expression.Literal stratum = 1;</code>
       * @return The stratum.
       */
      public org.apache.kyuubi.engine.spark.connect.proto.Expression.Literal getStratum() {
        if (stratumBuilder_ == null) {
          return stratum_ == null ? org.apache.kyuubi.engine.spark.connect.proto.Expression.Literal.getDefaultInstance() : stratum_;
        } else {
          return stratumBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * (Required) The stratum.
       * </pre>
       *
       * <code>.spark.connect.Expression.Literal stratum = 1;</code>
       */
      public Builder setStratum(org.apache.kyuubi.engine.spark.connect.proto.Expression.Literal value) {
        if (stratumBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          stratum_ = value;
          onChanged();
        } else {
          stratumBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * (Required) The stratum.
       * </pre>
       *
       * <code>.spark.connect.Expression.Literal stratum = 1;</code>
       */
      public Builder setStratum(
          org.apache.kyuubi.engine.spark.connect.proto.Expression.Literal.Builder builderForValue) {
        if (stratumBuilder_ == null) {
          stratum_ = builderForValue.build();
          onChanged();
        } else {
          stratumBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * (Required) The stratum.
       * </pre>
       *
       * <code>.spark.connect.Expression.Literal stratum = 1;</code>
       */
      public Builder mergeStratum(org.apache.kyuubi.engine.spark.connect.proto.Expression.Literal value) {
        if (stratumBuilder_ == null) {
          if (stratum_ != null) {
            stratum_ =
              org.apache.kyuubi.engine.spark.connect.proto.Expression.Literal.newBuilder(stratum_).mergeFrom(value).buildPartial();
          } else {
            stratum_ = value;
          }
          onChanged();
        } else {
          stratumBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * (Required) The stratum.
       * </pre>
       *
       * <code>.spark.connect.Expression.Literal stratum = 1;</code>
       */
      public Builder clearStratum() {
        if (stratumBuilder_ == null) {
          stratum_ = null;
          onChanged();
        } else {
          stratum_ = null;
          stratumBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * (Required) The stratum.
       * </pre>
       *
       * <code>.spark.connect.Expression.Literal stratum = 1;</code>
       */
      public org.apache.kyuubi.engine.spark.connect.proto.Expression.Literal.Builder getStratumBuilder() {
        
        onChanged();
        return getStratumFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * (Required) The stratum.
       * </pre>
       *
       * <code>.spark.connect.Expression.Literal stratum = 1;</code>
       */
      public org.apache.kyuubi.engine.spark.connect.proto.Expression.LiteralOrBuilder getStratumOrBuilder() {
        if (stratumBuilder_ != null) {
          return stratumBuilder_.getMessageOrBuilder();
        } else {
          return stratum_ == null ?
              org.apache.kyuubi.engine.spark.connect.proto.Expression.Literal.getDefaultInstance() : stratum_;
        }
      }
      /**
       * <pre>
       * (Required) The stratum.
       * </pre>
       *
       * <code>.spark.connect.Expression.Literal stratum = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.kyuubi.engine.spark.connect.proto.Expression.Literal, org.apache.kyuubi.engine.spark.connect.proto.Expression.Literal.Builder, org.apache.kyuubi.engine.spark.connect.proto.Expression.LiteralOrBuilder> 
          getStratumFieldBuilder() {
        if (stratumBuilder_ == null) {
          stratumBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.apache.kyuubi.engine.spark.connect.proto.Expression.Literal, org.apache.kyuubi.engine.spark.connect.proto.Expression.Literal.Builder, org.apache.kyuubi.engine.spark.connect.proto.Expression.LiteralOrBuilder>(
                  getStratum(),
                  getParentForChildren(),
                  isClean());
          stratum_ = null;
        }
        return stratumBuilder_;
      }

      private double fraction_ ;
      /**
       * <pre>
       * (Required) The fraction value. Must be in [0, 1].
       * </pre>
       *
       * <code>double fraction = 2;</code>
       * @return The fraction.
       */
      @java.lang.Override
      public double getFraction() {
        return fraction_;
      }
      /**
       * <pre>
       * (Required) The fraction value. Must be in [0, 1].
       * </pre>
       *
       * <code>double fraction = 2;</code>
       * @param value The fraction to set.
       * @return This builder for chaining.
       */
      public Builder setFraction(double value) {
        
        fraction_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * (Required) The fraction value. Must be in [0, 1].
       * </pre>
       *
       * <code>double fraction = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearFraction() {
        
        fraction_ = 0D;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:spark.connect.StatSampleBy.Fraction)
    }

    // @@protoc_insertion_point(class_scope:spark.connect.StatSampleBy.Fraction)
    private static final org.apache.kyuubi.engine.spark.connect.proto.StatSampleBy.Fraction DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.kyuubi.engine.spark.connect.proto.StatSampleBy.Fraction();
    }

    public static org.apache.kyuubi.engine.spark.connect.proto.StatSampleBy.Fraction getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Fraction>
        PARSER = new com.google.protobuf.AbstractParser<Fraction>() {
      @java.lang.Override
      public Fraction parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<Fraction> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Fraction> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.StatSampleBy.Fraction getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private int bitField0_;
  public static final int INPUT_FIELD_NUMBER = 1;
  private org.apache.kyuubi.engine.spark.connect.proto.Relation input_;
  /**
   * <pre>
   * (Required) The input relation.
   * </pre>
   *
   * <code>.spark.connect.Relation input = 1;</code>
   * @return Whether the input field is set.
   */
  @java.lang.Override
  public boolean hasInput() {
    return input_ != null;
  }
  /**
   * <pre>
   * (Required) The input relation.
   * </pre>
   *
   * <code>.spark.connect.Relation input = 1;</code>
   * @return The input.
   */
  @java.lang.Override
  public org.apache.kyuubi.engine.spark.connect.proto.Relation getInput() {
    return input_ == null ? org.apache.kyuubi.engine.spark.connect.proto.Relation.getDefaultInstance() : input_;
  }
  /**
   * <pre>
   * (Required) The input relation.
   * </pre>
   *
   * <code>.spark.connect.Relation input = 1;</code>
   */
  @java.lang.Override
  public org.apache.kyuubi.engine.spark.connect.proto.RelationOrBuilder getInputOrBuilder() {
    return getInput();
  }

  public static final int COL_FIELD_NUMBER = 2;
  private org.apache.kyuubi.engine.spark.connect.proto.Expression col_;
  /**
   * <pre>
   * (Required) The column that defines strata.
   * </pre>
   *
   * <code>.spark.connect.Expression col = 2;</code>
   * @return Whether the col field is set.
   */
  @java.lang.Override
  public boolean hasCol() {
    return col_ != null;
  }
  /**
   * <pre>
   * (Required) The column that defines strata.
   * </pre>
   *
   * <code>.spark.connect.Expression col = 2;</code>
   * @return The col.
   */
  @java.lang.Override
  public org.apache.kyuubi.engine.spark.connect.proto.Expression getCol() {
    return col_ == null ? org.apache.kyuubi.engine.spark.connect.proto.Expression.getDefaultInstance() : col_;
  }
  /**
   * <pre>
   * (Required) The column that defines strata.
   * </pre>
   *
   * <code>.spark.connect.Expression col = 2;</code>
   */
  @java.lang.Override
  public org.apache.kyuubi.engine.spark.connect.proto.ExpressionOrBuilder getColOrBuilder() {
    return getCol();
  }

  public static final int FRACTIONS_FIELD_NUMBER = 3;
  private java.util.List<org.apache.kyuubi.engine.spark.connect.proto.StatSampleBy.Fraction> fractions_;
  /**
   * <pre>
   * (Required) Sampling fraction for each stratum.
   * If a stratum is not specified, we treat its fraction as zero.
   * </pre>
   *
   * <code>repeated .spark.connect.StatSampleBy.Fraction fractions = 3;</code>
   */
  @java.lang.Override
  public java.util.List<org.apache.kyuubi.engine.spark.connect.proto.StatSampleBy.Fraction> getFractionsList() {
    return fractions_;
  }
  /**
   * <pre>
   * (Required) Sampling fraction for each stratum.
   * If a stratum is not specified, we treat its fraction as zero.
   * </pre>
   *
   * <code>repeated .spark.connect.StatSampleBy.Fraction fractions = 3;</code>
   */
  @java.lang.Override
  public java.util.List<? extends org.apache.kyuubi.engine.spark.connect.proto.StatSampleBy.FractionOrBuilder> 
      getFractionsOrBuilderList() {
    return fractions_;
  }
  /**
   * <pre>
   * (Required) Sampling fraction for each stratum.
   * If a stratum is not specified, we treat its fraction as zero.
   * </pre>
   *
   * <code>repeated .spark.connect.StatSampleBy.Fraction fractions = 3;</code>
   */
  @java.lang.Override
  public int getFractionsCount() {
    return fractions_.size();
  }
  /**
   * <pre>
   * (Required) Sampling fraction for each stratum.
   * If a stratum is not specified, we treat its fraction as zero.
   * </pre>
   *
   * <code>repeated .spark.connect.StatSampleBy.Fraction fractions = 3;</code>
   */
  @java.lang.Override
  public org.apache.kyuubi.engine.spark.connect.proto.StatSampleBy.Fraction getFractions(int index) {
    return fractions_.get(index);
  }
  /**
   * <pre>
   * (Required) Sampling fraction for each stratum.
   * If a stratum is not specified, we treat its fraction as zero.
   * </pre>
   *
   * <code>repeated .spark.connect.StatSampleBy.Fraction fractions = 3;</code>
   */
  @java.lang.Override
  public org.apache.kyuubi.engine.spark.connect.proto.StatSampleBy.FractionOrBuilder getFractionsOrBuilder(
      int index) {
    return fractions_.get(index);
  }

  public static final int SEED_FIELD_NUMBER = 5;
  private long seed_;
  /**
   * <pre>
   * (Optional) The random seed.
   * </pre>
   *
   * <code>optional int64 seed = 5;</code>
   * @return Whether the seed field is set.
   */
  @java.lang.Override
  public boolean hasSeed() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <pre>
   * (Optional) The random seed.
   * </pre>
   *
   * <code>optional int64 seed = 5;</code>
   * @return The seed.
   */
  @java.lang.Override
  public long getSeed() {
    return seed_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (input_ != null) {
      output.writeMessage(1, getInput());
    }
    if (col_ != null) {
      output.writeMessage(2, getCol());
    }
    for (int i = 0; i < fractions_.size(); i++) {
      output.writeMessage(3, fractions_.get(i));
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeInt64(5, seed_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (input_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getInput());
    }
    if (col_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getCol());
    }
    for (int i = 0; i < fractions_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, fractions_.get(i));
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(5, seed_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof org.apache.kyuubi.engine.spark.connect.proto.StatSampleBy)) {
      return super.equals(obj);
    }
    org.apache.kyuubi.engine.spark.connect.proto.StatSampleBy other = (org.apache.kyuubi.engine.spark.connect.proto.StatSampleBy) obj;

    if (hasInput() != other.hasInput()) return false;
    if (hasInput()) {
      if (!getInput()
          .equals(other.getInput())) return false;
    }
    if (hasCol() != other.hasCol()) return false;
    if (hasCol()) {
      if (!getCol()
          .equals(other.getCol())) return false;
    }
    if (!getFractionsList()
        .equals(other.getFractionsList())) return false;
    if (hasSeed() != other.hasSeed()) return false;
    if (hasSeed()) {
      if (getSeed()
          != other.getSeed()) return false;
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasInput()) {
      hash = (37 * hash) + INPUT_FIELD_NUMBER;
      hash = (53 * hash) + getInput().hashCode();
    }
    if (hasCol()) {
      hash = (37 * hash) + COL_FIELD_NUMBER;
      hash = (53 * hash) + getCol().hashCode();
    }
    if (getFractionsCount() > 0) {
      hash = (37 * hash) + FRACTIONS_FIELD_NUMBER;
      hash = (53 * hash) + getFractionsList().hashCode();
    }
    if (hasSeed()) {
      hash = (37 * hash) + SEED_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getSeed());
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static org.apache.kyuubi.engine.spark.connect.proto.StatSampleBy parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.apache.kyuubi.engine.spark.connect.proto.StatSampleBy parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.apache.kyuubi.engine.spark.connect.proto.StatSampleBy parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.apache.kyuubi.engine.spark.connect.proto.StatSampleBy parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.apache.kyuubi.engine.spark.connect.proto.StatSampleBy parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.apache.kyuubi.engine.spark.connect.proto.StatSampleBy parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.apache.kyuubi.engine.spark.connect.proto.StatSampleBy parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.apache.kyuubi.engine.spark.connect.proto.StatSampleBy parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.apache.kyuubi.engine.spark.connect.proto.StatSampleBy parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static org.apache.kyuubi.engine.spark.connect.proto.StatSampleBy parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.apache.kyuubi.engine.spark.connect.proto.StatSampleBy parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.apache.kyuubi.engine.spark.connect.proto.StatSampleBy parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(org.apache.kyuubi.engine.spark.connect.proto.StatSampleBy prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Returns a stratified sample without replacement based on the fraction
   * given on each stratum.
   * It will invoke 'Dataset.stat.freqItems' (same as 'StatFunctions.freqItems')
   * to compute the results.
   * </pre>
   *
   * Protobuf type {@code spark.connect.StatSampleBy}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:spark.connect.StatSampleBy)
      org.apache.kyuubi.engine.spark.connect.proto.StatSampleByOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.kyuubi.engine.spark.connect.proto.Relations.internal_static_spark_connect_StatSampleBy_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.kyuubi.engine.spark.connect.proto.Relations.internal_static_spark_connect_StatSampleBy_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.kyuubi.engine.spark.connect.proto.StatSampleBy.class, org.apache.kyuubi.engine.spark.connect.proto.StatSampleBy.Builder.class);
    }

    // Construct using org.apache.kyuubi.engine.spark.connect.proto.StatSampleBy.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      if (inputBuilder_ == null) {
        input_ = null;
      } else {
        input_ = null;
        inputBuilder_ = null;
      }
      if (colBuilder_ == null) {
        col_ = null;
      } else {
        col_ = null;
        colBuilder_ = null;
      }
      if (fractionsBuilder_ == null) {
        fractions_ = java.util.Collections.emptyList();
      } else {
        fractions_ = null;
        fractionsBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000001);
      seed_ = 0L;
      bitField0_ = (bitField0_ & ~0x00000002);
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return org.apache.kyuubi.engine.spark.connect.proto.Relations.internal_static_spark_connect_StatSampleBy_descriptor;
    }

    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.StatSampleBy getDefaultInstanceForType() {
      return org.apache.kyuubi.engine.spark.connect.proto.StatSampleBy.getDefaultInstance();
    }

    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.StatSampleBy build() {
      org.apache.kyuubi.engine.spark.connect.proto.StatSampleBy result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.StatSampleBy buildPartial() {
      org.apache.kyuubi.engine.spark.connect.proto.StatSampleBy result = new org.apache.kyuubi.engine.spark.connect.proto.StatSampleBy(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (inputBuilder_ == null) {
        result.input_ = input_;
      } else {
        result.input_ = inputBuilder_.build();
      }
      if (colBuilder_ == null) {
        result.col_ = col_;
      } else {
        result.col_ = colBuilder_.build();
      }
      if (fractionsBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0)) {
          fractions_ = java.util.Collections.unmodifiableList(fractions_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.fractions_ = fractions_;
      } else {
        result.fractions_ = fractionsBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.seed_ = seed_;
        to_bitField0_ |= 0x00000001;
      }
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof org.apache.kyuubi.engine.spark.connect.proto.StatSampleBy) {
        return mergeFrom((org.apache.kyuubi.engine.spark.connect.proto.StatSampleBy)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(org.apache.kyuubi.engine.spark.connect.proto.StatSampleBy other) {
      if (other == org.apache.kyuubi.engine.spark.connect.proto.StatSampleBy.getDefaultInstance()) return this;
      if (other.hasInput()) {
        mergeInput(other.getInput());
      }
      if (other.hasCol()) {
        mergeCol(other.getCol());
      }
      if (fractionsBuilder_ == null) {
        if (!other.fractions_.isEmpty()) {
          if (fractions_.isEmpty()) {
            fractions_ = other.fractions_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureFractionsIsMutable();
            fractions_.addAll(other.fractions_);
          }
          onChanged();
        }
      } else {
        if (!other.fractions_.isEmpty()) {
          if (fractionsBuilder_.isEmpty()) {
            fractionsBuilder_.dispose();
            fractionsBuilder_ = null;
            fractions_ = other.fractions_;
            bitField0_ = (bitField0_ & ~0x00000001);
            fractionsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getFractionsFieldBuilder() : null;
          } else {
            fractionsBuilder_.addAllMessages(other.fractions_);
          }
        }
      }
      if (other.hasSeed()) {
        setSeed(other.getSeed());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              input.readMessage(
                  getInputFieldBuilder().getBuilder(),
                  extensionRegistry);

              break;
            } // case 10
            case 18: {
              input.readMessage(
                  getColFieldBuilder().getBuilder(),
                  extensionRegistry);

              break;
            } // case 18
            case 26: {
              org.apache.kyuubi.engine.spark.connect.proto.StatSampleBy.Fraction m =
                  input.readMessage(
                      org.apache.kyuubi.engine.spark.connect.proto.StatSampleBy.Fraction.parser(),
                      extensionRegistry);
              if (fractionsBuilder_ == null) {
                ensureFractionsIsMutable();
                fractions_.add(m);
              } else {
                fractionsBuilder_.addMessage(m);
              }
              break;
            } // case 26
            case 40: {
              seed_ = input.readInt64();
              bitField0_ |= 0x00000002;
              break;
            } // case 40
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private org.apache.kyuubi.engine.spark.connect.proto.Relation input_;
    private com.google.protobuf.SingleFieldBuilderV3<
        org.apache.kyuubi.engine.spark.connect.proto.Relation, org.apache.kyuubi.engine.spark.connect.proto.Relation.Builder, org.apache.kyuubi.engine.spark.connect.proto.RelationOrBuilder> inputBuilder_;
    /**
     * <pre>
     * (Required) The input relation.
     * </pre>
     *
     * <code>.spark.connect.Relation input = 1;</code>
     * @return Whether the input field is set.
     */
    public boolean hasInput() {
      return inputBuilder_ != null || input_ != null;
    }
    /**
     * <pre>
     * (Required) The input relation.
     * </pre>
     *
     * <code>.spark.connect.Relation input = 1;</code>
     * @return The input.
     */
    public org.apache.kyuubi.engine.spark.connect.proto.Relation getInput() {
      if (inputBuilder_ == null) {
        return input_ == null ? org.apache.kyuubi.engine.spark.connect.proto.Relation.getDefaultInstance() : input_;
      } else {
        return inputBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * (Required) The input relation.
     * </pre>
     *
     * <code>.spark.connect.Relation input = 1;</code>
     */
    public Builder setInput(org.apache.kyuubi.engine.spark.connect.proto.Relation value) {
      if (inputBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        input_ = value;
        onChanged();
      } else {
        inputBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * (Required) The input relation.
     * </pre>
     *
     * <code>.spark.connect.Relation input = 1;</code>
     */
    public Builder setInput(
        org.apache.kyuubi.engine.spark.connect.proto.Relation.Builder builderForValue) {
      if (inputBuilder_ == null) {
        input_ = builderForValue.build();
        onChanged();
      } else {
        inputBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * (Required) The input relation.
     * </pre>
     *
     * <code>.spark.connect.Relation input = 1;</code>
     */
    public Builder mergeInput(org.apache.kyuubi.engine.spark.connect.proto.Relation value) {
      if (inputBuilder_ == null) {
        if (input_ != null) {
          input_ =
            org.apache.kyuubi.engine.spark.connect.proto.Relation.newBuilder(input_).mergeFrom(value).buildPartial();
        } else {
          input_ = value;
        }
        onChanged();
      } else {
        inputBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * (Required) The input relation.
     * </pre>
     *
     * <code>.spark.connect.Relation input = 1;</code>
     */
    public Builder clearInput() {
      if (inputBuilder_ == null) {
        input_ = null;
        onChanged();
      } else {
        input_ = null;
        inputBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * (Required) The input relation.
     * </pre>
     *
     * <code>.spark.connect.Relation input = 1;</code>
     */
    public org.apache.kyuubi.engine.spark.connect.proto.Relation.Builder getInputBuilder() {
      
      onChanged();
      return getInputFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * (Required) The input relation.
     * </pre>
     *
     * <code>.spark.connect.Relation input = 1;</code>
     */
    public org.apache.kyuubi.engine.spark.connect.proto.RelationOrBuilder getInputOrBuilder() {
      if (inputBuilder_ != null) {
        return inputBuilder_.getMessageOrBuilder();
      } else {
        return input_ == null ?
            org.apache.kyuubi.engine.spark.connect.proto.Relation.getDefaultInstance() : input_;
      }
    }
    /**
     * <pre>
     * (Required) The input relation.
     * </pre>
     *
     * <code>.spark.connect.Relation input = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.apache.kyuubi.engine.spark.connect.proto.Relation, org.apache.kyuubi.engine.spark.connect.proto.Relation.Builder, org.apache.kyuubi.engine.spark.connect.proto.RelationOrBuilder> 
        getInputFieldBuilder() {
      if (inputBuilder_ == null) {
        inputBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.apache.kyuubi.engine.spark.connect.proto.Relation, org.apache.kyuubi.engine.spark.connect.proto.Relation.Builder, org.apache.kyuubi.engine.spark.connect.proto.RelationOrBuilder>(
                getInput(),
                getParentForChildren(),
                isClean());
        input_ = null;
      }
      return inputBuilder_;
    }

    private org.apache.kyuubi.engine.spark.connect.proto.Expression col_;
    private com.google.protobuf.SingleFieldBuilderV3<
        org.apache.kyuubi.engine.spark.connect.proto.Expression, org.apache.kyuubi.engine.spark.connect.proto.Expression.Builder, org.apache.kyuubi.engine.spark.connect.proto.ExpressionOrBuilder> colBuilder_;
    /**
     * <pre>
     * (Required) The column that defines strata.
     * </pre>
     *
     * <code>.spark.connect.Expression col = 2;</code>
     * @return Whether the col field is set.
     */
    public boolean hasCol() {
      return colBuilder_ != null || col_ != null;
    }
    /**
     * <pre>
     * (Required) The column that defines strata.
     * </pre>
     *
     * <code>.spark.connect.Expression col = 2;</code>
     * @return The col.
     */
    public org.apache.kyuubi.engine.spark.connect.proto.Expression getCol() {
      if (colBuilder_ == null) {
        return col_ == null ? org.apache.kyuubi.engine.spark.connect.proto.Expression.getDefaultInstance() : col_;
      } else {
        return colBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * (Required) The column that defines strata.
     * </pre>
     *
     * <code>.spark.connect.Expression col = 2;</code>
     */
    public Builder setCol(org.apache.kyuubi.engine.spark.connect.proto.Expression value) {
      if (colBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        col_ = value;
        onChanged();
      } else {
        colBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * (Required) The column that defines strata.
     * </pre>
     *
     * <code>.spark.connect.Expression col = 2;</code>
     */
    public Builder setCol(
        org.apache.kyuubi.engine.spark.connect.proto.Expression.Builder builderForValue) {
      if (colBuilder_ == null) {
        col_ = builderForValue.build();
        onChanged();
      } else {
        colBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * (Required) The column that defines strata.
     * </pre>
     *
     * <code>.spark.connect.Expression col = 2;</code>
     */
    public Builder mergeCol(org.apache.kyuubi.engine.spark.connect.proto.Expression value) {
      if (colBuilder_ == null) {
        if (col_ != null) {
          col_ =
            org.apache.kyuubi.engine.spark.connect.proto.Expression.newBuilder(col_).mergeFrom(value).buildPartial();
        } else {
          col_ = value;
        }
        onChanged();
      } else {
        colBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * (Required) The column that defines strata.
     * </pre>
     *
     * <code>.spark.connect.Expression col = 2;</code>
     */
    public Builder clearCol() {
      if (colBuilder_ == null) {
        col_ = null;
        onChanged();
      } else {
        col_ = null;
        colBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * (Required) The column that defines strata.
     * </pre>
     *
     * <code>.spark.connect.Expression col = 2;</code>
     */
    public org.apache.kyuubi.engine.spark.connect.proto.Expression.Builder getColBuilder() {
      
      onChanged();
      return getColFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * (Required) The column that defines strata.
     * </pre>
     *
     * <code>.spark.connect.Expression col = 2;</code>
     */
    public org.apache.kyuubi.engine.spark.connect.proto.ExpressionOrBuilder getColOrBuilder() {
      if (colBuilder_ != null) {
        return colBuilder_.getMessageOrBuilder();
      } else {
        return col_ == null ?
            org.apache.kyuubi.engine.spark.connect.proto.Expression.getDefaultInstance() : col_;
      }
    }
    /**
     * <pre>
     * (Required) The column that defines strata.
     * </pre>
     *
     * <code>.spark.connect.Expression col = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.apache.kyuubi.engine.spark.connect.proto.Expression, org.apache.kyuubi.engine.spark.connect.proto.Expression.Builder, org.apache.kyuubi.engine.spark.connect.proto.ExpressionOrBuilder> 
        getColFieldBuilder() {
      if (colBuilder_ == null) {
        colBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.apache.kyuubi.engine.spark.connect.proto.Expression, org.apache.kyuubi.engine.spark.connect.proto.Expression.Builder, org.apache.kyuubi.engine.spark.connect.proto.ExpressionOrBuilder>(
                getCol(),
                getParentForChildren(),
                isClean());
        col_ = null;
      }
      return colBuilder_;
    }

    private java.util.List<org.apache.kyuubi.engine.spark.connect.proto.StatSampleBy.Fraction> fractions_ =
      java.util.Collections.emptyList();
    private void ensureFractionsIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        fractions_ = new java.util.ArrayList<org.apache.kyuubi.engine.spark.connect.proto.StatSampleBy.Fraction>(fractions_);
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        org.apache.kyuubi.engine.spark.connect.proto.StatSampleBy.Fraction, org.apache.kyuubi.engine.spark.connect.proto.StatSampleBy.Fraction.Builder, org.apache.kyuubi.engine.spark.connect.proto.StatSampleBy.FractionOrBuilder> fractionsBuilder_;

    /**
     * <pre>
     * (Required) Sampling fraction for each stratum.
     * If a stratum is not specified, we treat its fraction as zero.
     * </pre>
     *
     * <code>repeated .spark.connect.StatSampleBy.Fraction fractions = 3;</code>
     */
    public java.util.List<org.apache.kyuubi.engine.spark.connect.proto.StatSampleBy.Fraction> getFractionsList() {
      if (fractionsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(fractions_);
      } else {
        return fractionsBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * (Required) Sampling fraction for each stratum.
     * If a stratum is not specified, we treat its fraction as zero.
     * </pre>
     *
     * <code>repeated .spark.connect.StatSampleBy.Fraction fractions = 3;</code>
     */
    public int getFractionsCount() {
      if (fractionsBuilder_ == null) {
        return fractions_.size();
      } else {
        return fractionsBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * (Required) Sampling fraction for each stratum.
     * If a stratum is not specified, we treat its fraction as zero.
     * </pre>
     *
     * <code>repeated .spark.connect.StatSampleBy.Fraction fractions = 3;</code>
     */
    public org.apache.kyuubi.engine.spark.connect.proto.StatSampleBy.Fraction getFractions(int index) {
      if (fractionsBuilder_ == null) {
        return fractions_.get(index);
      } else {
        return fractionsBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * (Required) Sampling fraction for each stratum.
     * If a stratum is not specified, we treat its fraction as zero.
     * </pre>
     *
     * <code>repeated .spark.connect.StatSampleBy.Fraction fractions = 3;</code>
     */
    public Builder setFractions(
        int index, org.apache.kyuubi.engine.spark.connect.proto.StatSampleBy.Fraction value) {
      if (fractionsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFractionsIsMutable();
        fractions_.set(index, value);
        onChanged();
      } else {
        fractionsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * (Required) Sampling fraction for each stratum.
     * If a stratum is not specified, we treat its fraction as zero.
     * </pre>
     *
     * <code>repeated .spark.connect.StatSampleBy.Fraction fractions = 3;</code>
     */
    public Builder setFractions(
        int index, org.apache.kyuubi.engine.spark.connect.proto.StatSampleBy.Fraction.Builder builderForValue) {
      if (fractionsBuilder_ == null) {
        ensureFractionsIsMutable();
        fractions_.set(index, builderForValue.build());
        onChanged();
      } else {
        fractionsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * (Required) Sampling fraction for each stratum.
     * If a stratum is not specified, we treat its fraction as zero.
     * </pre>
     *
     * <code>repeated .spark.connect.StatSampleBy.Fraction fractions = 3;</code>
     */
    public Builder addFractions(org.apache.kyuubi.engine.spark.connect.proto.StatSampleBy.Fraction value) {
      if (fractionsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFractionsIsMutable();
        fractions_.add(value);
        onChanged();
      } else {
        fractionsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * (Required) Sampling fraction for each stratum.
     * If a stratum is not specified, we treat its fraction as zero.
     * </pre>
     *
     * <code>repeated .spark.connect.StatSampleBy.Fraction fractions = 3;</code>
     */
    public Builder addFractions(
        int index, org.apache.kyuubi.engine.spark.connect.proto.StatSampleBy.Fraction value) {
      if (fractionsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFractionsIsMutable();
        fractions_.add(index, value);
        onChanged();
      } else {
        fractionsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * (Required) Sampling fraction for each stratum.
     * If a stratum is not specified, we treat its fraction as zero.
     * </pre>
     *
     * <code>repeated .spark.connect.StatSampleBy.Fraction fractions = 3;</code>
     */
    public Builder addFractions(
        org.apache.kyuubi.engine.spark.connect.proto.StatSampleBy.Fraction.Builder builderForValue) {
      if (fractionsBuilder_ == null) {
        ensureFractionsIsMutable();
        fractions_.add(builderForValue.build());
        onChanged();
      } else {
        fractionsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * (Required) Sampling fraction for each stratum.
     * If a stratum is not specified, we treat its fraction as zero.
     * </pre>
     *
     * <code>repeated .spark.connect.StatSampleBy.Fraction fractions = 3;</code>
     */
    public Builder addFractions(
        int index, org.apache.kyuubi.engine.spark.connect.proto.StatSampleBy.Fraction.Builder builderForValue) {
      if (fractionsBuilder_ == null) {
        ensureFractionsIsMutable();
        fractions_.add(index, builderForValue.build());
        onChanged();
      } else {
        fractionsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * (Required) Sampling fraction for each stratum.
     * If a stratum is not specified, we treat its fraction as zero.
     * </pre>
     *
     * <code>repeated .spark.connect.StatSampleBy.Fraction fractions = 3;</code>
     */
    public Builder addAllFractions(
        java.lang.Iterable<? extends org.apache.kyuubi.engine.spark.connect.proto.StatSampleBy.Fraction> values) {
      if (fractionsBuilder_ == null) {
        ensureFractionsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, fractions_);
        onChanged();
      } else {
        fractionsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * (Required) Sampling fraction for each stratum.
     * If a stratum is not specified, we treat its fraction as zero.
     * </pre>
     *
     * <code>repeated .spark.connect.StatSampleBy.Fraction fractions = 3;</code>
     */
    public Builder clearFractions() {
      if (fractionsBuilder_ == null) {
        fractions_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        fractionsBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * (Required) Sampling fraction for each stratum.
     * If a stratum is not specified, we treat its fraction as zero.
     * </pre>
     *
     * <code>repeated .spark.connect.StatSampleBy.Fraction fractions = 3;</code>
     */
    public Builder removeFractions(int index) {
      if (fractionsBuilder_ == null) {
        ensureFractionsIsMutable();
        fractions_.remove(index);
        onChanged();
      } else {
        fractionsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * (Required) Sampling fraction for each stratum.
     * If a stratum is not specified, we treat its fraction as zero.
     * </pre>
     *
     * <code>repeated .spark.connect.StatSampleBy.Fraction fractions = 3;</code>
     */
    public org.apache.kyuubi.engine.spark.connect.proto.StatSampleBy.Fraction.Builder getFractionsBuilder(
        int index) {
      return getFractionsFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * (Required) Sampling fraction for each stratum.
     * If a stratum is not specified, we treat its fraction as zero.
     * </pre>
     *
     * <code>repeated .spark.connect.StatSampleBy.Fraction fractions = 3;</code>
     */
    public org.apache.kyuubi.engine.spark.connect.proto.StatSampleBy.FractionOrBuilder getFractionsOrBuilder(
        int index) {
      if (fractionsBuilder_ == null) {
        return fractions_.get(index);  } else {
        return fractionsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * (Required) Sampling fraction for each stratum.
     * If a stratum is not specified, we treat its fraction as zero.
     * </pre>
     *
     * <code>repeated .spark.connect.StatSampleBy.Fraction fractions = 3;</code>
     */
    public java.util.List<? extends org.apache.kyuubi.engine.spark.connect.proto.StatSampleBy.FractionOrBuilder> 
         getFractionsOrBuilderList() {
      if (fractionsBuilder_ != null) {
        return fractionsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(fractions_);
      }
    }
    /**
     * <pre>
     * (Required) Sampling fraction for each stratum.
     * If a stratum is not specified, we treat its fraction as zero.
     * </pre>
     *
     * <code>repeated .spark.connect.StatSampleBy.Fraction fractions = 3;</code>
     */
    public org.apache.kyuubi.engine.spark.connect.proto.StatSampleBy.Fraction.Builder addFractionsBuilder() {
      return getFractionsFieldBuilder().addBuilder(
          org.apache.kyuubi.engine.spark.connect.proto.StatSampleBy.Fraction.getDefaultInstance());
    }
    /**
     * <pre>
     * (Required) Sampling fraction for each stratum.
     * If a stratum is not specified, we treat its fraction as zero.
     * </pre>
     *
     * <code>repeated .spark.connect.StatSampleBy.Fraction fractions = 3;</code>
     */
    public org.apache.kyuubi.engine.spark.connect.proto.StatSampleBy.Fraction.Builder addFractionsBuilder(
        int index) {
      return getFractionsFieldBuilder().addBuilder(
          index, org.apache.kyuubi.engine.spark.connect.proto.StatSampleBy.Fraction.getDefaultInstance());
    }
    /**
     * <pre>
     * (Required) Sampling fraction for each stratum.
     * If a stratum is not specified, we treat its fraction as zero.
     * </pre>
     *
     * <code>repeated .spark.connect.StatSampleBy.Fraction fractions = 3;</code>
     */
    public java.util.List<org.apache.kyuubi.engine.spark.connect.proto.StatSampleBy.Fraction.Builder> 
         getFractionsBuilderList() {
      return getFractionsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        org.apache.kyuubi.engine.spark.connect.proto.StatSampleBy.Fraction, org.apache.kyuubi.engine.spark.connect.proto.StatSampleBy.Fraction.Builder, org.apache.kyuubi.engine.spark.connect.proto.StatSampleBy.FractionOrBuilder> 
        getFractionsFieldBuilder() {
      if (fractionsBuilder_ == null) {
        fractionsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            org.apache.kyuubi.engine.spark.connect.proto.StatSampleBy.Fraction, org.apache.kyuubi.engine.spark.connect.proto.StatSampleBy.Fraction.Builder, org.apache.kyuubi.engine.spark.connect.proto.StatSampleBy.FractionOrBuilder>(
                fractions_,
                ((bitField0_ & 0x00000001) != 0),
                getParentForChildren(),
                isClean());
        fractions_ = null;
      }
      return fractionsBuilder_;
    }

    private long seed_ ;
    /**
     * <pre>
     * (Optional) The random seed.
     * </pre>
     *
     * <code>optional int64 seed = 5;</code>
     * @return Whether the seed field is set.
     */
    @java.lang.Override
    public boolean hasSeed() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * (Optional) The random seed.
     * </pre>
     *
     * <code>optional int64 seed = 5;</code>
     * @return The seed.
     */
    @java.lang.Override
    public long getSeed() {
      return seed_;
    }
    /**
     * <pre>
     * (Optional) The random seed.
     * </pre>
     *
     * <code>optional int64 seed = 5;</code>
     * @param value The seed to set.
     * @return This builder for chaining.
     */
    public Builder setSeed(long value) {
      bitField0_ |= 0x00000002;
      seed_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * (Optional) The random seed.
     * </pre>
     *
     * <code>optional int64 seed = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearSeed() {
      bitField0_ = (bitField0_ & ~0x00000002);
      seed_ = 0L;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:spark.connect.StatSampleBy)
  }

  // @@protoc_insertion_point(class_scope:spark.connect.StatSampleBy)
  private static final org.apache.kyuubi.engine.spark.connect.proto.StatSampleBy DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new org.apache.kyuubi.engine.spark.connect.proto.StatSampleBy();
  }

  public static org.apache.kyuubi.engine.spark.connect.proto.StatSampleBy getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<StatSampleBy>
      PARSER = new com.google.protobuf.AbstractParser<StatSampleBy>() {
    @java.lang.Override
    public StatSampleBy parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<StatSampleBy> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<StatSampleBy> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public org.apache.kyuubi.engine.spark.connect.proto.StatSampleBy getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

