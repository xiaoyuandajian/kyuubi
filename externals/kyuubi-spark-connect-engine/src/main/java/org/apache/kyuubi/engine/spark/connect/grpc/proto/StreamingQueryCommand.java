// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: kyuubi/spark/connect/commands.proto

package org.apache.kyuubi.engine.spark.connect.grpc.proto;

/**
 *
 *
 * <pre>
 * Commands for a streaming query.
 * </pre>
 *
 * Protobuf type {@code spark.connect.StreamingQueryCommand}
 */
public final class StreamingQueryCommand extends com.google.protobuf.GeneratedMessageV3
    implements
    // @@protoc_insertion_point(message_implements:spark.connect.StreamingQueryCommand)
    StreamingQueryCommandOrBuilder {
  private static final long serialVersionUID = 0L;
  // Use StreamingQueryCommand.newBuilder() to construct.
  private StreamingQueryCommand(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }

  private StreamingQueryCommand() {}

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
    return new StreamingQueryCommand();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet getUnknownFields() {
    return this.unknownFields;
  }

  public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
    return org.apache.kyuubi.engine.spark.connect.grpc.proto.Commands
        .internal_static_spark_connect_StreamingQueryCommand_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return org.apache.kyuubi.engine.spark.connect.grpc.proto.Commands
        .internal_static_spark_connect_StreamingQueryCommand_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand.class,
            org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand.Builder.class);
  }

  public interface ExplainCommandOrBuilder
      extends
      // @@protoc_insertion_point(interface_extends:spark.connect.StreamingQueryCommand.ExplainCommand)
      com.google.protobuf.MessageOrBuilder {

    /**
     *
     *
     * <pre>
     * TODO: Consider reusing Explain from AnalyzePlanRequest message.
     *       We can not do this right now since it base.proto imports this file.
     * </pre>
     *
     * <code>bool extended = 1;</code>
     *
     * @return The extended.
     */
    boolean getExtended();
  }
  /** Protobuf type {@code spark.connect.StreamingQueryCommand.ExplainCommand} */
  public static final class ExplainCommand extends com.google.protobuf.GeneratedMessageV3
      implements
      // @@protoc_insertion_point(message_implements:spark.connect.StreamingQueryCommand.ExplainCommand)
      ExplainCommandOrBuilder {
    private static final long serialVersionUID = 0L;
    // Use ExplainCommand.newBuilder() to construct.
    private ExplainCommand(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }

    private ExplainCommand() {}

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
      return new ExplainCommand();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet getUnknownFields() {
      return this.unknownFields;
    }

    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return org.apache.kyuubi.engine.spark.connect.grpc.proto.Commands
          .internal_static_spark_connect_StreamingQueryCommand_ExplainCommand_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.kyuubi.engine.spark.connect.grpc.proto.Commands
          .internal_static_spark_connect_StreamingQueryCommand_ExplainCommand_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand.ExplainCommand
                  .class,
              org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand.ExplainCommand
                  .Builder.class);
    }

    public static final int EXTENDED_FIELD_NUMBER = 1;
    private boolean extended_;
    /**
     *
     *
     * <pre>
     * TODO: Consider reusing Explain from AnalyzePlanRequest message.
     *       We can not do this right now since it base.proto imports this file.
     * </pre>
     *
     * <code>bool extended = 1;</code>
     *
     * @return The extended.
     */
    @java.lang.Override
    public boolean getExtended() {
      return extended_;
    }

    private byte memoizedIsInitialized = -1;

    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
      if (extended_ != false) {
        output.writeBool(1, extended_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (extended_ != false) {
        size += com.google.protobuf.CodedOutputStream.computeBoolSize(1, extended_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
        return true;
      }
      if (!(obj
          instanceof
          org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand.ExplainCommand)) {
        return super.equals(obj);
      }
      org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand.ExplainCommand other =
          (org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand.ExplainCommand)
              obj;

      if (getExtended() != other.getExtended()) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + EXTENDED_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(getExtended());
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand
            .ExplainCommand
        parseFrom(java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand
            .ExplainCommand
        parseFrom(
            java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand
            .ExplainCommand
        parseFrom(com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand
            .ExplainCommand
        parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand
            .ExplainCommand
        parseFrom(byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand
            .ExplainCommand
        parseFrom(byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand
            .ExplainCommand
        parseFrom(java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand
            .ExplainCommand
        parseFrom(
            java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
          PARSER, input, extensionRegistry);
    }

    public static org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand
            .ExplainCommand
        parseDelimitedFrom(java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
    }

    public static org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand
            .ExplainCommand
        parseDelimitedFrom(
            java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
          PARSER, input, extensionRegistry);
    }

    public static org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand
            .ExplainCommand
        parseFrom(com.google.protobuf.CodedInputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand
            .ExplainCommand
        parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
          PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() {
      return newBuilder();
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }

    public static Builder newBuilder(
        org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand.ExplainCommand
            prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /** Protobuf type {@code spark.connect.StreamingQueryCommand.ExplainCommand} */
    public static final class Builder
        extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
        implements
        // @@protoc_insertion_point(builder_implements:spark.connect.StreamingQueryCommand.ExplainCommand)
        org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand
            .ExplainCommandOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
        return org.apache.kyuubi.engine.spark.connect.grpc.proto.Commands
            .internal_static_spark_connect_StreamingQueryCommand_ExplainCommand_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.kyuubi.engine.spark.connect.grpc.proto.Commands
            .internal_static_spark_connect_StreamingQueryCommand_ExplainCommand_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand
                    .ExplainCommand.class,
                org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand
                    .ExplainCommand.Builder.class);
      }

      // Construct using
      // org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand.ExplainCommand.newBuilder()
      private Builder() {}

      private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
      }

      @java.lang.Override
      public Builder clear() {
        super.clear();
        extended_ = false;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
        return org.apache.kyuubi.engine.spark.connect.grpc.proto.Commands
            .internal_static_spark_connect_StreamingQueryCommand_ExplainCommand_descriptor;
      }

      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand.ExplainCommand
          getDefaultInstanceForType() {
        return org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand
            .ExplainCommand.getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand.ExplainCommand
          build() {
        org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand.ExplainCommand
            result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand.ExplainCommand
          buildPartial() {
        org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand.ExplainCommand
            result =
                new org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand
                    .ExplainCommand(this);
        result.extended_ = extended_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }

      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
        return super.setField(field, value);
      }

      @java.lang.Override
      public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }

      @java.lang.Override
      public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }

      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index,
          java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }

      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other
            instanceof
            org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand
                .ExplainCommand) {
          return mergeFrom(
              (org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand
                      .ExplainCommand)
                  other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(
          org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand.ExplainCommand
              other) {
        if (other
            == org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand
                .ExplainCommand.getDefaultInstance()) return this;
        if (other.getExtended() != false) {
          setExtended(other.getExtended());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8:
                {
                  extended_ = input.readBool();

                  break;
                } // case 8
              default:
                {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }

      private boolean extended_;
      /**
       *
       *
       * <pre>
       * TODO: Consider reusing Explain from AnalyzePlanRequest message.
       *       We can not do this right now since it base.proto imports this file.
       * </pre>
       *
       * <code>bool extended = 1;</code>
       *
       * @return The extended.
       */
      @java.lang.Override
      public boolean getExtended() {
        return extended_;
      }
      /**
       *
       *
       * <pre>
       * TODO: Consider reusing Explain from AnalyzePlanRequest message.
       *       We can not do this right now since it base.proto imports this file.
       * </pre>
       *
       * <code>bool extended = 1;</code>
       *
       * @param value The extended to set.
       * @return This builder for chaining.
       */
      public Builder setExtended(boolean value) {

        extended_ = value;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * TODO: Consider reusing Explain from AnalyzePlanRequest message.
       *       We can not do this right now since it base.proto imports this file.
       * </pre>
       *
       * <code>bool extended = 1;</code>
       *
       * @return This builder for chaining.
       */
      public Builder clearExtended() {

        extended_ = false;
        onChanged();
        return this;
      }

      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }

      // @@protoc_insertion_point(builder_scope:spark.connect.StreamingQueryCommand.ExplainCommand)
    }

    // @@protoc_insertion_point(class_scope:spark.connect.StreamingQueryCommand.ExplainCommand)
    private static final org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand
            .ExplainCommand
        DEFAULT_INSTANCE;

    static {
      DEFAULT_INSTANCE =
          new org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand
              .ExplainCommand();
    }

    public static org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand
            .ExplainCommand
        getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ExplainCommand> PARSER =
        new com.google.protobuf.AbstractParser<ExplainCommand>() {
          @java.lang.Override
          public ExplainCommand parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            Builder builder = newBuilder();
            try {
              builder.mergeFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw e.setUnfinishedMessage(builder.buildPartial());
            } catch (com.google.protobuf.UninitializedMessageException e) {
              throw e.asInvalidProtocolBufferException()
                  .setUnfinishedMessage(builder.buildPartial());
            } catch (java.io.IOException e) {
              throw new com.google.protobuf.InvalidProtocolBufferException(e)
                  .setUnfinishedMessage(builder.buildPartial());
            }
            return builder.buildPartial();
          }
        };

    public static com.google.protobuf.Parser<ExplainCommand> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ExplainCommand> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand.ExplainCommand
        getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }
  }

  public interface AwaitTerminationCommandOrBuilder
      extends
      // @@protoc_insertion_point(interface_extends:spark.connect.StreamingQueryCommand.AwaitTerminationCommand)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int64 timeout_ms = 2;</code>
     *
     * @return Whether the timeoutMs field is set.
     */
    boolean hasTimeoutMs();
    /**
     * <code>optional int64 timeout_ms = 2;</code>
     *
     * @return The timeoutMs.
     */
    long getTimeoutMs();
  }
  /** Protobuf type {@code spark.connect.StreamingQueryCommand.AwaitTerminationCommand} */
  public static final class AwaitTerminationCommand extends com.google.protobuf.GeneratedMessageV3
      implements
      // @@protoc_insertion_point(message_implements:spark.connect.StreamingQueryCommand.AwaitTerminationCommand)
      AwaitTerminationCommandOrBuilder {
    private static final long serialVersionUID = 0L;
    // Use AwaitTerminationCommand.newBuilder() to construct.
    private AwaitTerminationCommand(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }

    private AwaitTerminationCommand() {}

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
      return new AwaitTerminationCommand();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet getUnknownFields() {
      return this.unknownFields;
    }

    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return org.apache.kyuubi.engine.spark.connect.grpc.proto.Commands
          .internal_static_spark_connect_StreamingQueryCommand_AwaitTerminationCommand_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.kyuubi.engine.spark.connect.grpc.proto.Commands
          .internal_static_spark_connect_StreamingQueryCommand_AwaitTerminationCommand_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand
                  .AwaitTerminationCommand.class,
              org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand
                  .AwaitTerminationCommand.Builder.class);
    }

    private int bitField0_;
    public static final int TIMEOUT_MS_FIELD_NUMBER = 2;
    private long timeoutMs_;
    /**
     * <code>optional int64 timeout_ms = 2;</code>
     *
     * @return Whether the timeoutMs field is set.
     */
    @java.lang.Override
    public boolean hasTimeoutMs() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional int64 timeout_ms = 2;</code>
     *
     * @return The timeoutMs.
     */
    @java.lang.Override
    public long getTimeoutMs() {
      return timeoutMs_;
    }

    private byte memoizedIsInitialized = -1;

    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeInt64(2, timeoutMs_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream.computeInt64Size(2, timeoutMs_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
        return true;
      }
      if (!(obj
          instanceof
          org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand
              .AwaitTerminationCommand)) {
        return super.equals(obj);
      }
      org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand
              .AwaitTerminationCommand
          other =
              (org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand
                      .AwaitTerminationCommand)
                  obj;

      if (hasTimeoutMs() != other.hasTimeoutMs()) return false;
      if (hasTimeoutMs()) {
        if (getTimeoutMs() != other.getTimeoutMs()) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasTimeoutMs()) {
        hash = (37 * hash) + TIMEOUT_MS_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(getTimeoutMs());
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand
            .AwaitTerminationCommand
        parseFrom(java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand
            .AwaitTerminationCommand
        parseFrom(
            java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand
            .AwaitTerminationCommand
        parseFrom(com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand
            .AwaitTerminationCommand
        parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand
            .AwaitTerminationCommand
        parseFrom(byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand
            .AwaitTerminationCommand
        parseFrom(byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand
            .AwaitTerminationCommand
        parseFrom(java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand
            .AwaitTerminationCommand
        parseFrom(
            java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
          PARSER, input, extensionRegistry);
    }

    public static org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand
            .AwaitTerminationCommand
        parseDelimitedFrom(java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
    }

    public static org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand
            .AwaitTerminationCommand
        parseDelimitedFrom(
            java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
          PARSER, input, extensionRegistry);
    }

    public static org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand
            .AwaitTerminationCommand
        parseFrom(com.google.protobuf.CodedInputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand
            .AwaitTerminationCommand
        parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
          PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() {
      return newBuilder();
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }

    public static Builder newBuilder(
        org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand
                .AwaitTerminationCommand
            prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /** Protobuf type {@code spark.connect.StreamingQueryCommand.AwaitTerminationCommand} */
    public static final class Builder
        extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
        implements
        // @@protoc_insertion_point(builder_implements:spark.connect.StreamingQueryCommand.AwaitTerminationCommand)
        org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand
            .AwaitTerminationCommandOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
        return org.apache.kyuubi.engine.spark.connect.grpc.proto.Commands
            .internal_static_spark_connect_StreamingQueryCommand_AwaitTerminationCommand_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.kyuubi.engine.spark.connect.grpc.proto.Commands
            .internal_static_spark_connect_StreamingQueryCommand_AwaitTerminationCommand_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand
                    .AwaitTerminationCommand.class,
                org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand
                    .AwaitTerminationCommand.Builder.class);
      }

      // Construct using
      // org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand.AwaitTerminationCommand.newBuilder()
      private Builder() {}

      private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
      }

      @java.lang.Override
      public Builder clear() {
        super.clear();
        timeoutMs_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
        return org.apache.kyuubi.engine.spark.connect.grpc.proto.Commands
            .internal_static_spark_connect_StreamingQueryCommand_AwaitTerminationCommand_descriptor;
      }

      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand
              .AwaitTerminationCommand
          getDefaultInstanceForType() {
        return org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand
            .AwaitTerminationCommand.getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand
              .AwaitTerminationCommand
          build() {
        org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand
                .AwaitTerminationCommand
            result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand
              .AwaitTerminationCommand
          buildPartial() {
        org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand
                .AwaitTerminationCommand
            result =
                new org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand
                    .AwaitTerminationCommand(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.timeoutMs_ = timeoutMs_;
          to_bitField0_ |= 0x00000001;
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }

      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
        return super.setField(field, value);
      }

      @java.lang.Override
      public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }

      @java.lang.Override
      public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }

      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index,
          java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }

      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other
            instanceof
            org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand
                .AwaitTerminationCommand) {
          return mergeFrom(
              (org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand
                      .AwaitTerminationCommand)
                  other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(
          org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand
                  .AwaitTerminationCommand
              other) {
        if (other
            == org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand
                .AwaitTerminationCommand.getDefaultInstance()) return this;
        if (other.hasTimeoutMs()) {
          setTimeoutMs(other.getTimeoutMs());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 16:
                {
                  timeoutMs_ = input.readInt64();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 16
              default:
                {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }

      private int bitField0_;

      private long timeoutMs_;
      /**
       * <code>optional int64 timeout_ms = 2;</code>
       *
       * @return Whether the timeoutMs field is set.
       */
      @java.lang.Override
      public boolean hasTimeoutMs() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional int64 timeout_ms = 2;</code>
       *
       * @return The timeoutMs.
       */
      @java.lang.Override
      public long getTimeoutMs() {
        return timeoutMs_;
      }
      /**
       * <code>optional int64 timeout_ms = 2;</code>
       *
       * @param value The timeoutMs to set.
       * @return This builder for chaining.
       */
      public Builder setTimeoutMs(long value) {
        bitField0_ |= 0x00000001;
        timeoutMs_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 timeout_ms = 2;</code>
       *
       * @return This builder for chaining.
       */
      public Builder clearTimeoutMs() {
        bitField0_ = (bitField0_ & ~0x00000001);
        timeoutMs_ = 0L;
        onChanged();
        return this;
      }

      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }

      // @@protoc_insertion_point(builder_scope:spark.connect.StreamingQueryCommand.AwaitTerminationCommand)
    }

    // @@protoc_insertion_point(class_scope:spark.connect.StreamingQueryCommand.AwaitTerminationCommand)
    private static final org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand
            .AwaitTerminationCommand
        DEFAULT_INSTANCE;

    static {
      DEFAULT_INSTANCE =
          new org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand
              .AwaitTerminationCommand();
    }

    public static org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand
            .AwaitTerminationCommand
        getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<AwaitTerminationCommand> PARSER =
        new com.google.protobuf.AbstractParser<AwaitTerminationCommand>() {
          @java.lang.Override
          public AwaitTerminationCommand parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            Builder builder = newBuilder();
            try {
              builder.mergeFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw e.setUnfinishedMessage(builder.buildPartial());
            } catch (com.google.protobuf.UninitializedMessageException e) {
              throw e.asInvalidProtocolBufferException()
                  .setUnfinishedMessage(builder.buildPartial());
            } catch (java.io.IOException e) {
              throw new com.google.protobuf.InvalidProtocolBufferException(e)
                  .setUnfinishedMessage(builder.buildPartial());
            }
            return builder.buildPartial();
          }
        };

    public static com.google.protobuf.Parser<AwaitTerminationCommand> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<AwaitTerminationCommand> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand
            .AwaitTerminationCommand
        getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }
  }

  private int commandCase_ = 0;
  private java.lang.Object command_;

  public enum CommandCase
      implements
          com.google.protobuf.Internal.EnumLite,
          com.google.protobuf.AbstractMessage.InternalOneOfEnum {
    STATUS(2),
    LAST_PROGRESS(3),
    RECENT_PROGRESS(4),
    STOP(5),
    PROCESS_ALL_AVAILABLE(6),
    EXPLAIN(7),
    EXCEPTION(8),
    AWAIT_TERMINATION(9),
    COMMAND_NOT_SET(0);
    private final int value;

    private CommandCase(int value) {
      this.value = value;
    }
    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static CommandCase valueOf(int value) {
      return forNumber(value);
    }

    public static CommandCase forNumber(int value) {
      switch (value) {
        case 2:
          return STATUS;
        case 3:
          return LAST_PROGRESS;
        case 4:
          return RECENT_PROGRESS;
        case 5:
          return STOP;
        case 6:
          return PROCESS_ALL_AVAILABLE;
        case 7:
          return EXPLAIN;
        case 8:
          return EXCEPTION;
        case 9:
          return AWAIT_TERMINATION;
        case 0:
          return COMMAND_NOT_SET;
        default:
          return null;
      }
    }

    public int getNumber() {
      return this.value;
    }
  };

  public CommandCase getCommandCase() {
    return CommandCase.forNumber(commandCase_);
  }

  public static final int QUERY_ID_FIELD_NUMBER = 1;
  private org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryInstanceId queryId_;
  /**
   *
   *
   * <pre>
   * (Required) Query instance. See `StreamingQueryInstanceId`.
   * </pre>
   *
   * <code>.spark.connect.StreamingQueryInstanceId query_id = 1;</code>
   *
   * @return Whether the queryId field is set.
   */
  @java.lang.Override
  public boolean hasQueryId() {
    return queryId_ != null;
  }
  /**
   *
   *
   * <pre>
   * (Required) Query instance. See `StreamingQueryInstanceId`.
   * </pre>
   *
   * <code>.spark.connect.StreamingQueryInstanceId query_id = 1;</code>
   *
   * @return The queryId.
   */
  @java.lang.Override
  public org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryInstanceId getQueryId() {
    return queryId_ == null
        ? org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryInstanceId
            .getDefaultInstance()
        : queryId_;
  }
  /**
   *
   *
   * <pre>
   * (Required) Query instance. See `StreamingQueryInstanceId`.
   * </pre>
   *
   * <code>.spark.connect.StreamingQueryInstanceId query_id = 1;</code>
   */
  @java.lang.Override
  public org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryInstanceIdOrBuilder
      getQueryIdOrBuilder() {
    return getQueryId();
  }

  public static final int STATUS_FIELD_NUMBER = 2;
  /**
   *
   *
   * <pre>
   * status() API.
   * </pre>
   *
   * <code>bool status = 2;</code>
   *
   * @return Whether the status field is set.
   */
  @java.lang.Override
  public boolean hasStatus() {
    return commandCase_ == 2;
  }
  /**
   *
   *
   * <pre>
   * status() API.
   * </pre>
   *
   * <code>bool status = 2;</code>
   *
   * @return The status.
   */
  @java.lang.Override
  public boolean getStatus() {
    if (commandCase_ == 2) {
      return (java.lang.Boolean) command_;
    }
    return false;
  }

  public static final int LAST_PROGRESS_FIELD_NUMBER = 3;
  /**
   *
   *
   * <pre>
   * lastProgress() API.
   * </pre>
   *
   * <code>bool last_progress = 3;</code>
   *
   * @return Whether the lastProgress field is set.
   */
  @java.lang.Override
  public boolean hasLastProgress() {
    return commandCase_ == 3;
  }
  /**
   *
   *
   * <pre>
   * lastProgress() API.
   * </pre>
   *
   * <code>bool last_progress = 3;</code>
   *
   * @return The lastProgress.
   */
  @java.lang.Override
  public boolean getLastProgress() {
    if (commandCase_ == 3) {
      return (java.lang.Boolean) command_;
    }
    return false;
  }

  public static final int RECENT_PROGRESS_FIELD_NUMBER = 4;
  /**
   *
   *
   * <pre>
   * recentProgress() API.
   * </pre>
   *
   * <code>bool recent_progress = 4;</code>
   *
   * @return Whether the recentProgress field is set.
   */
  @java.lang.Override
  public boolean hasRecentProgress() {
    return commandCase_ == 4;
  }
  /**
   *
   *
   * <pre>
   * recentProgress() API.
   * </pre>
   *
   * <code>bool recent_progress = 4;</code>
   *
   * @return The recentProgress.
   */
  @java.lang.Override
  public boolean getRecentProgress() {
    if (commandCase_ == 4) {
      return (java.lang.Boolean) command_;
    }
    return false;
  }

  public static final int STOP_FIELD_NUMBER = 5;
  /**
   *
   *
   * <pre>
   * stop() API. Stops the query.
   * </pre>
   *
   * <code>bool stop = 5;</code>
   *
   * @return Whether the stop field is set.
   */
  @java.lang.Override
  public boolean hasStop() {
    return commandCase_ == 5;
  }
  /**
   *
   *
   * <pre>
   * stop() API. Stops the query.
   * </pre>
   *
   * <code>bool stop = 5;</code>
   *
   * @return The stop.
   */
  @java.lang.Override
  public boolean getStop() {
    if (commandCase_ == 5) {
      return (java.lang.Boolean) command_;
    }
    return false;
  }

  public static final int PROCESS_ALL_AVAILABLE_FIELD_NUMBER = 6;
  /**
   *
   *
   * <pre>
   * processAllAvailable() API. Waits till all the available data is processed
   * </pre>
   *
   * <code>bool process_all_available = 6;</code>
   *
   * @return Whether the processAllAvailable field is set.
   */
  @java.lang.Override
  public boolean hasProcessAllAvailable() {
    return commandCase_ == 6;
  }
  /**
   *
   *
   * <pre>
   * processAllAvailable() API. Waits till all the available data is processed
   * </pre>
   *
   * <code>bool process_all_available = 6;</code>
   *
   * @return The processAllAvailable.
   */
  @java.lang.Override
  public boolean getProcessAllAvailable() {
    if (commandCase_ == 6) {
      return (java.lang.Boolean) command_;
    }
    return false;
  }

  public static final int EXPLAIN_FIELD_NUMBER = 7;
  /**
   *
   *
   * <pre>
   * explain() API. Returns logical and physical plans.
   * </pre>
   *
   * <code>.spark.connect.StreamingQueryCommand.ExplainCommand explain = 7;</code>
   *
   * @return Whether the explain field is set.
   */
  @java.lang.Override
  public boolean hasExplain() {
    return commandCase_ == 7;
  }
  /**
   *
   *
   * <pre>
   * explain() API. Returns logical and physical plans.
   * </pre>
   *
   * <code>.spark.connect.StreamingQueryCommand.ExplainCommand explain = 7;</code>
   *
   * @return The explain.
   */
  @java.lang.Override
  public org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand.ExplainCommand
      getExplain() {
    if (commandCase_ == 7) {
      return (org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand
              .ExplainCommand)
          command_;
    }
    return org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand.ExplainCommand
        .getDefaultInstance();
  }
  /**
   *
   *
   * <pre>
   * explain() API. Returns logical and physical plans.
   * </pre>
   *
   * <code>.spark.connect.StreamingQueryCommand.ExplainCommand explain = 7;</code>
   */
  @java.lang.Override
  public org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand
          .ExplainCommandOrBuilder
      getExplainOrBuilder() {
    if (commandCase_ == 7) {
      return (org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand
              .ExplainCommand)
          command_;
    }
    return org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand.ExplainCommand
        .getDefaultInstance();
  }

  public static final int EXCEPTION_FIELD_NUMBER = 8;
  /**
   *
   *
   * <pre>
   * exception() API. Returns the exception in the query if any.
   * </pre>
   *
   * <code>bool exception = 8;</code>
   *
   * @return Whether the exception field is set.
   */
  @java.lang.Override
  public boolean hasException() {
    return commandCase_ == 8;
  }
  /**
   *
   *
   * <pre>
   * exception() API. Returns the exception in the query if any.
   * </pre>
   *
   * <code>bool exception = 8;</code>
   *
   * @return The exception.
   */
  @java.lang.Override
  public boolean getException() {
    if (commandCase_ == 8) {
      return (java.lang.Boolean) command_;
    }
    return false;
  }

  public static final int AWAIT_TERMINATION_FIELD_NUMBER = 9;
  /**
   *
   *
   * <pre>
   * awaitTermination() API. Waits for the termination of the query.
   * </pre>
   *
   * <code>.spark.connect.StreamingQueryCommand.AwaitTerminationCommand await_termination = 9;
   * </code>
   *
   * @return Whether the awaitTermination field is set.
   */
  @java.lang.Override
  public boolean hasAwaitTermination() {
    return commandCase_ == 9;
  }
  /**
   *
   *
   * <pre>
   * awaitTermination() API. Waits for the termination of the query.
   * </pre>
   *
   * <code>.spark.connect.StreamingQueryCommand.AwaitTerminationCommand await_termination = 9;
   * </code>
   *
   * @return The awaitTermination.
   */
  @java.lang.Override
  public org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand
          .AwaitTerminationCommand
      getAwaitTermination() {
    if (commandCase_ == 9) {
      return (org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand
              .AwaitTerminationCommand)
          command_;
    }
    return org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand
        .AwaitTerminationCommand.getDefaultInstance();
  }
  /**
   *
   *
   * <pre>
   * awaitTermination() API. Waits for the termination of the query.
   * </pre>
   *
   * <code>.spark.connect.StreamingQueryCommand.AwaitTerminationCommand await_termination = 9;
   * </code>
   */
  @java.lang.Override
  public org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand
          .AwaitTerminationCommandOrBuilder
      getAwaitTerminationOrBuilder() {
    if (commandCase_ == 9) {
      return (org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand
              .AwaitTerminationCommand)
          command_;
    }
    return org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand
        .AwaitTerminationCommand.getDefaultInstance();
  }

  private byte memoizedIsInitialized = -1;

  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
    if (queryId_ != null) {
      output.writeMessage(1, getQueryId());
    }
    if (commandCase_ == 2) {
      output.writeBool(2, (boolean) ((java.lang.Boolean) command_));
    }
    if (commandCase_ == 3) {
      output.writeBool(3, (boolean) ((java.lang.Boolean) command_));
    }
    if (commandCase_ == 4) {
      output.writeBool(4, (boolean) ((java.lang.Boolean) command_));
    }
    if (commandCase_ == 5) {
      output.writeBool(5, (boolean) ((java.lang.Boolean) command_));
    }
    if (commandCase_ == 6) {
      output.writeBool(6, (boolean) ((java.lang.Boolean) command_));
    }
    if (commandCase_ == 7) {
      output.writeMessage(
          7,
          (org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand.ExplainCommand)
              command_);
    }
    if (commandCase_ == 8) {
      output.writeBool(8, (boolean) ((java.lang.Boolean) command_));
    }
    if (commandCase_ == 9) {
      output.writeMessage(
          9,
          (org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand
                  .AwaitTerminationCommand)
              command_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (queryId_ != null) {
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(1, getQueryId());
    }
    if (commandCase_ == 2) {
      size +=
          com.google.protobuf.CodedOutputStream.computeBoolSize(
              2, (boolean) ((java.lang.Boolean) command_));
    }
    if (commandCase_ == 3) {
      size +=
          com.google.protobuf.CodedOutputStream.computeBoolSize(
              3, (boolean) ((java.lang.Boolean) command_));
    }
    if (commandCase_ == 4) {
      size +=
          com.google.protobuf.CodedOutputStream.computeBoolSize(
              4, (boolean) ((java.lang.Boolean) command_));
    }
    if (commandCase_ == 5) {
      size +=
          com.google.protobuf.CodedOutputStream.computeBoolSize(
              5, (boolean) ((java.lang.Boolean) command_));
    }
    if (commandCase_ == 6) {
      size +=
          com.google.protobuf.CodedOutputStream.computeBoolSize(
              6, (boolean) ((java.lang.Boolean) command_));
    }
    if (commandCase_ == 7) {
      size +=
          com.google.protobuf.CodedOutputStream.computeMessageSize(
              7,
              (org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand
                      .ExplainCommand)
                  command_);
    }
    if (commandCase_ == 8) {
      size +=
          com.google.protobuf.CodedOutputStream.computeBoolSize(
              8, (boolean) ((java.lang.Boolean) command_));
    }
    if (commandCase_ == 9) {
      size +=
          com.google.protobuf.CodedOutputStream.computeMessageSize(
              9,
              (org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand
                      .AwaitTerminationCommand)
                  command_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
      return true;
    }
    if (!(obj instanceof org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand)) {
      return super.equals(obj);
    }
    org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand other =
        (org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand) obj;

    if (hasQueryId() != other.hasQueryId()) return false;
    if (hasQueryId()) {
      if (!getQueryId().equals(other.getQueryId())) return false;
    }
    if (!getCommandCase().equals(other.getCommandCase())) return false;
    switch (commandCase_) {
      case 2:
        if (getStatus() != other.getStatus()) return false;
        break;
      case 3:
        if (getLastProgress() != other.getLastProgress()) return false;
        break;
      case 4:
        if (getRecentProgress() != other.getRecentProgress()) return false;
        break;
      case 5:
        if (getStop() != other.getStop()) return false;
        break;
      case 6:
        if (getProcessAllAvailable() != other.getProcessAllAvailable()) return false;
        break;
      case 7:
        if (!getExplain().equals(other.getExplain())) return false;
        break;
      case 8:
        if (getException() != other.getException()) return false;
        break;
      case 9:
        if (!getAwaitTermination().equals(other.getAwaitTermination())) return false;
        break;
      case 0:
      default:
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasQueryId()) {
      hash = (37 * hash) + QUERY_ID_FIELD_NUMBER;
      hash = (53 * hash) + getQueryId().hashCode();
    }
    switch (commandCase_) {
      case 2:
        hash = (37 * hash) + STATUS_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(getStatus());
        break;
      case 3:
        hash = (37 * hash) + LAST_PROGRESS_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(getLastProgress());
        break;
      case 4:
        hash = (37 * hash) + RECENT_PROGRESS_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(getRecentProgress());
        break;
      case 5:
        hash = (37 * hash) + STOP_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(getStop());
        break;
      case 6:
        hash = (37 * hash) + PROCESS_ALL_AVAILABLE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(getProcessAllAvailable());
        break;
      case 7:
        hash = (37 * hash) + EXPLAIN_FIELD_NUMBER;
        hash = (53 * hash) + getExplain().hashCode();
        break;
      case 8:
        hash = (37 * hash) + EXCEPTION_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(getException());
        break;
      case 9:
        hash = (37 * hash) + AWAIT_TERMINATION_FIELD_NUMBER;
        hash = (53 * hash) + getAwaitTermination().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand parseFrom(
      java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand parseFrom(
      java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand parseFrom(
      byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand parseFrom(
      byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand parseFrom(
      java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand parseFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand
      parseDelimitedFrom(java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
  }

  public static org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand
      parseDelimitedFrom(
          java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand parseFrom(
      com.google.protobuf.CodedInputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() {
    return newBuilder();
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }

  public static Builder newBuilder(
      org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   *
   *
   * <pre>
   * Commands for a streaming query.
   * </pre>
   *
   * Protobuf type {@code spark.connect.StreamingQueryCommand}
   */
  public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
      implements
      // @@protoc_insertion_point(builder_implements:spark.connect.StreamingQueryCommand)
      org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommandOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return org.apache.kyuubi.engine.spark.connect.grpc.proto.Commands
          .internal_static_spark_connect_StreamingQueryCommand_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.kyuubi.engine.spark.connect.grpc.proto.Commands
          .internal_static_spark_connect_StreamingQueryCommand_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand.class,
              org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand.Builder
                  .class);
    }

    // Construct using
    // org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand.newBuilder()
    private Builder() {}

    private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
    }

    @java.lang.Override
    public Builder clear() {
      super.clear();
      if (queryIdBuilder_ == null) {
        queryId_ = null;
      } else {
        queryId_ = null;
        queryIdBuilder_ = null;
      }
      if (explainBuilder_ != null) {
        explainBuilder_.clear();
      }
      if (awaitTerminationBuilder_ != null) {
        awaitTerminationBuilder_.clear();
      }
      commandCase_ = 0;
      command_ = null;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
      return org.apache.kyuubi.engine.spark.connect.grpc.proto.Commands
          .internal_static_spark_connect_StreamingQueryCommand_descriptor;
    }

    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand
        getDefaultInstanceForType() {
      return org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand
          .getDefaultInstance();
    }

    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand build() {
      org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand result =
          buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand buildPartial() {
      org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand result =
          new org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand(this);
      if (queryIdBuilder_ == null) {
        result.queryId_ = queryId_;
      } else {
        result.queryId_ = queryIdBuilder_.build();
      }
      if (commandCase_ == 2) {
        result.command_ = command_;
      }
      if (commandCase_ == 3) {
        result.command_ = command_;
      }
      if (commandCase_ == 4) {
        result.command_ = command_;
      }
      if (commandCase_ == 5) {
        result.command_ = command_;
      }
      if (commandCase_ == 6) {
        result.command_ = command_;
      }
      if (commandCase_ == 7) {
        if (explainBuilder_ == null) {
          result.command_ = command_;
        } else {
          result.command_ = explainBuilder_.build();
        }
      }
      if (commandCase_ == 8) {
        result.command_ = command_;
      }
      if (commandCase_ == 9) {
        if (awaitTerminationBuilder_ == null) {
          result.command_ = command_;
        } else {
          result.command_ = awaitTerminationBuilder_.build();
        }
      }
      result.commandCase_ = commandCase_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }

    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.setField(field, value);
    }

    @java.lang.Override
    public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }

    @java.lang.Override
    public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }

    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }

    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other
          instanceof org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand) {
        return mergeFrom(
            (org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand) other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(
        org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand other) {
      if (other
          == org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand
              .getDefaultInstance()) return this;
      if (other.hasQueryId()) {
        mergeQueryId(other.getQueryId());
      }
      switch (other.getCommandCase()) {
        case STATUS:
          {
            setStatus(other.getStatus());
            break;
          }
        case LAST_PROGRESS:
          {
            setLastProgress(other.getLastProgress());
            break;
          }
        case RECENT_PROGRESS:
          {
            setRecentProgress(other.getRecentProgress());
            break;
          }
        case STOP:
          {
            setStop(other.getStop());
            break;
          }
        case PROCESS_ALL_AVAILABLE:
          {
            setProcessAllAvailable(other.getProcessAllAvailable());
            break;
          }
        case EXPLAIN:
          {
            mergeExplain(other.getExplain());
            break;
          }
        case EXCEPTION:
          {
            setException(other.getException());
            break;
          }
        case AWAIT_TERMINATION:
          {
            mergeAwaitTermination(other.getAwaitTermination());
            break;
          }
        case COMMAND_NOT_SET:
          {
            break;
          }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10:
              {
                input.readMessage(getQueryIdFieldBuilder().getBuilder(), extensionRegistry);

                break;
              } // case 10
            case 16:
              {
                command_ = input.readBool();
                commandCase_ = 2;
                break;
              } // case 16
            case 24:
              {
                command_ = input.readBool();
                commandCase_ = 3;
                break;
              } // case 24
            case 32:
              {
                command_ = input.readBool();
                commandCase_ = 4;
                break;
              } // case 32
            case 40:
              {
                command_ = input.readBool();
                commandCase_ = 5;
                break;
              } // case 40
            case 48:
              {
                command_ = input.readBool();
                commandCase_ = 6;
                break;
              } // case 48
            case 58:
              {
                input.readMessage(getExplainFieldBuilder().getBuilder(), extensionRegistry);
                commandCase_ = 7;
                break;
              } // case 58
            case 64:
              {
                command_ = input.readBool();
                commandCase_ = 8;
                break;
              } // case 64
            case 74:
              {
                input.readMessage(
                    getAwaitTerminationFieldBuilder().getBuilder(), extensionRegistry);
                commandCase_ = 9;
                break;
              } // case 74
            default:
              {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }

    private int commandCase_ = 0;
    private java.lang.Object command_;

    public CommandCase getCommandCase() {
      return CommandCase.forNumber(commandCase_);
    }

    public Builder clearCommand() {
      commandCase_ = 0;
      command_ = null;
      onChanged();
      return this;
    }

    private org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryInstanceId queryId_;
    private com.google.protobuf.SingleFieldBuilderV3<
            org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryInstanceId,
            org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryInstanceId.Builder,
            org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryInstanceIdOrBuilder>
        queryIdBuilder_;
    /**
     *
     *
     * <pre>
     * (Required) Query instance. See `StreamingQueryInstanceId`.
     * </pre>
     *
     * <code>.spark.connect.StreamingQueryInstanceId query_id = 1;</code>
     *
     * @return Whether the queryId field is set.
     */
    public boolean hasQueryId() {
      return queryIdBuilder_ != null || queryId_ != null;
    }
    /**
     *
     *
     * <pre>
     * (Required) Query instance. See `StreamingQueryInstanceId`.
     * </pre>
     *
     * <code>.spark.connect.StreamingQueryInstanceId query_id = 1;</code>
     *
     * @return The queryId.
     */
    public org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryInstanceId getQueryId() {
      if (queryIdBuilder_ == null) {
        return queryId_ == null
            ? org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryInstanceId
                .getDefaultInstance()
            : queryId_;
      } else {
        return queryIdBuilder_.getMessage();
      }
    }
    /**
     *
     *
     * <pre>
     * (Required) Query instance. See `StreamingQueryInstanceId`.
     * </pre>
     *
     * <code>.spark.connect.StreamingQueryInstanceId query_id = 1;</code>
     */
    public Builder setQueryId(
        org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryInstanceId value) {
      if (queryIdBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        queryId_ = value;
        onChanged();
      } else {
        queryIdBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     *
     *
     * <pre>
     * (Required) Query instance. See `StreamingQueryInstanceId`.
     * </pre>
     *
     * <code>.spark.connect.StreamingQueryInstanceId query_id = 1;</code>
     */
    public Builder setQueryId(
        org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryInstanceId.Builder
            builderForValue) {
      if (queryIdBuilder_ == null) {
        queryId_ = builderForValue.build();
        onChanged();
      } else {
        queryIdBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     *
     *
     * <pre>
     * (Required) Query instance. See `StreamingQueryInstanceId`.
     * </pre>
     *
     * <code>.spark.connect.StreamingQueryInstanceId query_id = 1;</code>
     */
    public Builder mergeQueryId(
        org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryInstanceId value) {
      if (queryIdBuilder_ == null) {
        if (queryId_ != null) {
          queryId_ =
              org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryInstanceId.newBuilder(
                      queryId_)
                  .mergeFrom(value)
                  .buildPartial();
        } else {
          queryId_ = value;
        }
        onChanged();
      } else {
        queryIdBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     *
     *
     * <pre>
     * (Required) Query instance. See `StreamingQueryInstanceId`.
     * </pre>
     *
     * <code>.spark.connect.StreamingQueryInstanceId query_id = 1;</code>
     */
    public Builder clearQueryId() {
      if (queryIdBuilder_ == null) {
        queryId_ = null;
        onChanged();
      } else {
        queryId_ = null;
        queryIdBuilder_ = null;
      }

      return this;
    }
    /**
     *
     *
     * <pre>
     * (Required) Query instance. See `StreamingQueryInstanceId`.
     * </pre>
     *
     * <code>.spark.connect.StreamingQueryInstanceId query_id = 1;</code>
     */
    public org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryInstanceId.Builder
        getQueryIdBuilder() {

      onChanged();
      return getQueryIdFieldBuilder().getBuilder();
    }
    /**
     *
     *
     * <pre>
     * (Required) Query instance. See `StreamingQueryInstanceId`.
     * </pre>
     *
     * <code>.spark.connect.StreamingQueryInstanceId query_id = 1;</code>
     */
    public org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryInstanceIdOrBuilder
        getQueryIdOrBuilder() {
      if (queryIdBuilder_ != null) {
        return queryIdBuilder_.getMessageOrBuilder();
      } else {
        return queryId_ == null
            ? org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryInstanceId
                .getDefaultInstance()
            : queryId_;
      }
    }
    /**
     *
     *
     * <pre>
     * (Required) Query instance. See `StreamingQueryInstanceId`.
     * </pre>
     *
     * <code>.spark.connect.StreamingQueryInstanceId query_id = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryInstanceId,
            org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryInstanceId.Builder,
            org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryInstanceIdOrBuilder>
        getQueryIdFieldBuilder() {
      if (queryIdBuilder_ == null) {
        queryIdBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryInstanceId,
                org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryInstanceId.Builder,
                org.apache.kyuubi.engine.spark.connect.grpc.proto
                    .StreamingQueryInstanceIdOrBuilder>(
                getQueryId(), getParentForChildren(), isClean());
        queryId_ = null;
      }
      return queryIdBuilder_;
    }

    /**
     *
     *
     * <pre>
     * status() API.
     * </pre>
     *
     * <code>bool status = 2;</code>
     *
     * @return Whether the status field is set.
     */
    public boolean hasStatus() {
      return commandCase_ == 2;
    }
    /**
     *
     *
     * <pre>
     * status() API.
     * </pre>
     *
     * <code>bool status = 2;</code>
     *
     * @return The status.
     */
    public boolean getStatus() {
      if (commandCase_ == 2) {
        return (java.lang.Boolean) command_;
      }
      return false;
    }
    /**
     *
     *
     * <pre>
     * status() API.
     * </pre>
     *
     * <code>bool status = 2;</code>
     *
     * @param value The status to set.
     * @return This builder for chaining.
     */
    public Builder setStatus(boolean value) {
      commandCase_ = 2;
      command_ = value;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * status() API.
     * </pre>
     *
     * <code>bool status = 2;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearStatus() {
      if (commandCase_ == 2) {
        commandCase_ = 0;
        command_ = null;
        onChanged();
      }
      return this;
    }

    /**
     *
     *
     * <pre>
     * lastProgress() API.
     * </pre>
     *
     * <code>bool last_progress = 3;</code>
     *
     * @return Whether the lastProgress field is set.
     */
    public boolean hasLastProgress() {
      return commandCase_ == 3;
    }
    /**
     *
     *
     * <pre>
     * lastProgress() API.
     * </pre>
     *
     * <code>bool last_progress = 3;</code>
     *
     * @return The lastProgress.
     */
    public boolean getLastProgress() {
      if (commandCase_ == 3) {
        return (java.lang.Boolean) command_;
      }
      return false;
    }
    /**
     *
     *
     * <pre>
     * lastProgress() API.
     * </pre>
     *
     * <code>bool last_progress = 3;</code>
     *
     * @param value The lastProgress to set.
     * @return This builder for chaining.
     */
    public Builder setLastProgress(boolean value) {
      commandCase_ = 3;
      command_ = value;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * lastProgress() API.
     * </pre>
     *
     * <code>bool last_progress = 3;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearLastProgress() {
      if (commandCase_ == 3) {
        commandCase_ = 0;
        command_ = null;
        onChanged();
      }
      return this;
    }

    /**
     *
     *
     * <pre>
     * recentProgress() API.
     * </pre>
     *
     * <code>bool recent_progress = 4;</code>
     *
     * @return Whether the recentProgress field is set.
     */
    public boolean hasRecentProgress() {
      return commandCase_ == 4;
    }
    /**
     *
     *
     * <pre>
     * recentProgress() API.
     * </pre>
     *
     * <code>bool recent_progress = 4;</code>
     *
     * @return The recentProgress.
     */
    public boolean getRecentProgress() {
      if (commandCase_ == 4) {
        return (java.lang.Boolean) command_;
      }
      return false;
    }
    /**
     *
     *
     * <pre>
     * recentProgress() API.
     * </pre>
     *
     * <code>bool recent_progress = 4;</code>
     *
     * @param value The recentProgress to set.
     * @return This builder for chaining.
     */
    public Builder setRecentProgress(boolean value) {
      commandCase_ = 4;
      command_ = value;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * recentProgress() API.
     * </pre>
     *
     * <code>bool recent_progress = 4;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearRecentProgress() {
      if (commandCase_ == 4) {
        commandCase_ = 0;
        command_ = null;
        onChanged();
      }
      return this;
    }

    /**
     *
     *
     * <pre>
     * stop() API. Stops the query.
     * </pre>
     *
     * <code>bool stop = 5;</code>
     *
     * @return Whether the stop field is set.
     */
    public boolean hasStop() {
      return commandCase_ == 5;
    }
    /**
     *
     *
     * <pre>
     * stop() API. Stops the query.
     * </pre>
     *
     * <code>bool stop = 5;</code>
     *
     * @return The stop.
     */
    public boolean getStop() {
      if (commandCase_ == 5) {
        return (java.lang.Boolean) command_;
      }
      return false;
    }
    /**
     *
     *
     * <pre>
     * stop() API. Stops the query.
     * </pre>
     *
     * <code>bool stop = 5;</code>
     *
     * @param value The stop to set.
     * @return This builder for chaining.
     */
    public Builder setStop(boolean value) {
      commandCase_ = 5;
      command_ = value;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * stop() API. Stops the query.
     * </pre>
     *
     * <code>bool stop = 5;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearStop() {
      if (commandCase_ == 5) {
        commandCase_ = 0;
        command_ = null;
        onChanged();
      }
      return this;
    }

    /**
     *
     *
     * <pre>
     * processAllAvailable() API. Waits till all the available data is processed
     * </pre>
     *
     * <code>bool process_all_available = 6;</code>
     *
     * @return Whether the processAllAvailable field is set.
     */
    public boolean hasProcessAllAvailable() {
      return commandCase_ == 6;
    }
    /**
     *
     *
     * <pre>
     * processAllAvailable() API. Waits till all the available data is processed
     * </pre>
     *
     * <code>bool process_all_available = 6;</code>
     *
     * @return The processAllAvailable.
     */
    public boolean getProcessAllAvailable() {
      if (commandCase_ == 6) {
        return (java.lang.Boolean) command_;
      }
      return false;
    }
    /**
     *
     *
     * <pre>
     * processAllAvailable() API. Waits till all the available data is processed
     * </pre>
     *
     * <code>bool process_all_available = 6;</code>
     *
     * @param value The processAllAvailable to set.
     * @return This builder for chaining.
     */
    public Builder setProcessAllAvailable(boolean value) {
      commandCase_ = 6;
      command_ = value;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * processAllAvailable() API. Waits till all the available data is processed
     * </pre>
     *
     * <code>bool process_all_available = 6;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearProcessAllAvailable() {
      if (commandCase_ == 6) {
        commandCase_ = 0;
        command_ = null;
        onChanged();
      }
      return this;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
            org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand.ExplainCommand,
            org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand.ExplainCommand
                .Builder,
            org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand
                .ExplainCommandOrBuilder>
        explainBuilder_;
    /**
     *
     *
     * <pre>
     * explain() API. Returns logical and physical plans.
     * </pre>
     *
     * <code>.spark.connect.StreamingQueryCommand.ExplainCommand explain = 7;</code>
     *
     * @return Whether the explain field is set.
     */
    @java.lang.Override
    public boolean hasExplain() {
      return commandCase_ == 7;
    }
    /**
     *
     *
     * <pre>
     * explain() API. Returns logical and physical plans.
     * </pre>
     *
     * <code>.spark.connect.StreamingQueryCommand.ExplainCommand explain = 7;</code>
     *
     * @return The explain.
     */
    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand.ExplainCommand
        getExplain() {
      if (explainBuilder_ == null) {
        if (commandCase_ == 7) {
          return (org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand
                  .ExplainCommand)
              command_;
        }
        return org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand
            .ExplainCommand.getDefaultInstance();
      } else {
        if (commandCase_ == 7) {
          return explainBuilder_.getMessage();
        }
        return org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand
            .ExplainCommand.getDefaultInstance();
      }
    }
    /**
     *
     *
     * <pre>
     * explain() API. Returns logical and physical plans.
     * </pre>
     *
     * <code>.spark.connect.StreamingQueryCommand.ExplainCommand explain = 7;</code>
     */
    public Builder setExplain(
        org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand.ExplainCommand
            value) {
      if (explainBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        command_ = value;
        onChanged();
      } else {
        explainBuilder_.setMessage(value);
      }
      commandCase_ = 7;
      return this;
    }
    /**
     *
     *
     * <pre>
     * explain() API. Returns logical and physical plans.
     * </pre>
     *
     * <code>.spark.connect.StreamingQueryCommand.ExplainCommand explain = 7;</code>
     */
    public Builder setExplain(
        org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand.ExplainCommand
                .Builder
            builderForValue) {
      if (explainBuilder_ == null) {
        command_ = builderForValue.build();
        onChanged();
      } else {
        explainBuilder_.setMessage(builderForValue.build());
      }
      commandCase_ = 7;
      return this;
    }
    /**
     *
     *
     * <pre>
     * explain() API. Returns logical and physical plans.
     * </pre>
     *
     * <code>.spark.connect.StreamingQueryCommand.ExplainCommand explain = 7;</code>
     */
    public Builder mergeExplain(
        org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand.ExplainCommand
            value) {
      if (explainBuilder_ == null) {
        if (commandCase_ == 7
            && command_
                != org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand
                    .ExplainCommand.getDefaultInstance()) {
          command_ =
              org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand.ExplainCommand
                  .newBuilder(
                      (org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand
                              .ExplainCommand)
                          command_)
                  .mergeFrom(value)
                  .buildPartial();
        } else {
          command_ = value;
        }
        onChanged();
      } else {
        if (commandCase_ == 7) {
          explainBuilder_.mergeFrom(value);
        } else {
          explainBuilder_.setMessage(value);
        }
      }
      commandCase_ = 7;
      return this;
    }
    /**
     *
     *
     * <pre>
     * explain() API. Returns logical and physical plans.
     * </pre>
     *
     * <code>.spark.connect.StreamingQueryCommand.ExplainCommand explain = 7;</code>
     */
    public Builder clearExplain() {
      if (explainBuilder_ == null) {
        if (commandCase_ == 7) {
          commandCase_ = 0;
          command_ = null;
          onChanged();
        }
      } else {
        if (commandCase_ == 7) {
          commandCase_ = 0;
          command_ = null;
        }
        explainBuilder_.clear();
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * explain() API. Returns logical and physical plans.
     * </pre>
     *
     * <code>.spark.connect.StreamingQueryCommand.ExplainCommand explain = 7;</code>
     */
    public org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand.ExplainCommand
            .Builder
        getExplainBuilder() {
      return getExplainFieldBuilder().getBuilder();
    }
    /**
     *
     *
     * <pre>
     * explain() API. Returns logical and physical plans.
     * </pre>
     *
     * <code>.spark.connect.StreamingQueryCommand.ExplainCommand explain = 7;</code>
     */
    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand
            .ExplainCommandOrBuilder
        getExplainOrBuilder() {
      if ((commandCase_ == 7) && (explainBuilder_ != null)) {
        return explainBuilder_.getMessageOrBuilder();
      } else {
        if (commandCase_ == 7) {
          return (org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand
                  .ExplainCommand)
              command_;
        }
        return org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand
            .ExplainCommand.getDefaultInstance();
      }
    }
    /**
     *
     *
     * <pre>
     * explain() API. Returns logical and physical plans.
     * </pre>
     *
     * <code>.spark.connect.StreamingQueryCommand.ExplainCommand explain = 7;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand.ExplainCommand,
            org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand.ExplainCommand
                .Builder,
            org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand
                .ExplainCommandOrBuilder>
        getExplainFieldBuilder() {
      if (explainBuilder_ == null) {
        if (!(commandCase_ == 7)) {
          command_ =
              org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand.ExplainCommand
                  .getDefaultInstance();
        }
        explainBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand
                    .ExplainCommand,
                org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand
                    .ExplainCommand.Builder,
                org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand
                    .ExplainCommandOrBuilder>(
                (org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand
                        .ExplainCommand)
                    command_,
                getParentForChildren(),
                isClean());
        command_ = null;
      }
      commandCase_ = 7;
      onChanged();
      ;
      return explainBuilder_;
    }

    /**
     *
     *
     * <pre>
     * exception() API. Returns the exception in the query if any.
     * </pre>
     *
     * <code>bool exception = 8;</code>
     *
     * @return Whether the exception field is set.
     */
    public boolean hasException() {
      return commandCase_ == 8;
    }
    /**
     *
     *
     * <pre>
     * exception() API. Returns the exception in the query if any.
     * </pre>
     *
     * <code>bool exception = 8;</code>
     *
     * @return The exception.
     */
    public boolean getException() {
      if (commandCase_ == 8) {
        return (java.lang.Boolean) command_;
      }
      return false;
    }
    /**
     *
     *
     * <pre>
     * exception() API. Returns the exception in the query if any.
     * </pre>
     *
     * <code>bool exception = 8;</code>
     *
     * @param value The exception to set.
     * @return This builder for chaining.
     */
    public Builder setException(boolean value) {
      commandCase_ = 8;
      command_ = value;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * exception() API. Returns the exception in the query if any.
     * </pre>
     *
     * <code>bool exception = 8;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearException() {
      if (commandCase_ == 8) {
        commandCase_ = 0;
        command_ = null;
        onChanged();
      }
      return this;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
            org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand
                .AwaitTerminationCommand,
            org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand
                .AwaitTerminationCommand.Builder,
            org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand
                .AwaitTerminationCommandOrBuilder>
        awaitTerminationBuilder_;
    /**
     *
     *
     * <pre>
     * awaitTermination() API. Waits for the termination of the query.
     * </pre>
     *
     * <code>.spark.connect.StreamingQueryCommand.AwaitTerminationCommand await_termination = 9;
     * </code>
     *
     * @return Whether the awaitTermination field is set.
     */
    @java.lang.Override
    public boolean hasAwaitTermination() {
      return commandCase_ == 9;
    }
    /**
     *
     *
     * <pre>
     * awaitTermination() API. Waits for the termination of the query.
     * </pre>
     *
     * <code>.spark.connect.StreamingQueryCommand.AwaitTerminationCommand await_termination = 9;
     * </code>
     *
     * @return The awaitTermination.
     */
    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand
            .AwaitTerminationCommand
        getAwaitTermination() {
      if (awaitTerminationBuilder_ == null) {
        if (commandCase_ == 9) {
          return (org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand
                  .AwaitTerminationCommand)
              command_;
        }
        return org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand
            .AwaitTerminationCommand.getDefaultInstance();
      } else {
        if (commandCase_ == 9) {
          return awaitTerminationBuilder_.getMessage();
        }
        return org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand
            .AwaitTerminationCommand.getDefaultInstance();
      }
    }
    /**
     *
     *
     * <pre>
     * awaitTermination() API. Waits for the termination of the query.
     * </pre>
     *
     * <code>.spark.connect.StreamingQueryCommand.AwaitTerminationCommand await_termination = 9;
     * </code>
     */
    public Builder setAwaitTermination(
        org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand
                .AwaitTerminationCommand
            value) {
      if (awaitTerminationBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        command_ = value;
        onChanged();
      } else {
        awaitTerminationBuilder_.setMessage(value);
      }
      commandCase_ = 9;
      return this;
    }
    /**
     *
     *
     * <pre>
     * awaitTermination() API. Waits for the termination of the query.
     * </pre>
     *
     * <code>.spark.connect.StreamingQueryCommand.AwaitTerminationCommand await_termination = 9;
     * </code>
     */
    public Builder setAwaitTermination(
        org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand
                .AwaitTerminationCommand.Builder
            builderForValue) {
      if (awaitTerminationBuilder_ == null) {
        command_ = builderForValue.build();
        onChanged();
      } else {
        awaitTerminationBuilder_.setMessage(builderForValue.build());
      }
      commandCase_ = 9;
      return this;
    }
    /**
     *
     *
     * <pre>
     * awaitTermination() API. Waits for the termination of the query.
     * </pre>
     *
     * <code>.spark.connect.StreamingQueryCommand.AwaitTerminationCommand await_termination = 9;
     * </code>
     */
    public Builder mergeAwaitTermination(
        org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand
                .AwaitTerminationCommand
            value) {
      if (awaitTerminationBuilder_ == null) {
        if (commandCase_ == 9
            && command_
                != org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand
                    .AwaitTerminationCommand.getDefaultInstance()) {
          command_ =
              org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand
                  .AwaitTerminationCommand.newBuilder(
                      (org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand
                              .AwaitTerminationCommand)
                          command_)
                  .mergeFrom(value)
                  .buildPartial();
        } else {
          command_ = value;
        }
        onChanged();
      } else {
        if (commandCase_ == 9) {
          awaitTerminationBuilder_.mergeFrom(value);
        } else {
          awaitTerminationBuilder_.setMessage(value);
        }
      }
      commandCase_ = 9;
      return this;
    }
    /**
     *
     *
     * <pre>
     * awaitTermination() API. Waits for the termination of the query.
     * </pre>
     *
     * <code>.spark.connect.StreamingQueryCommand.AwaitTerminationCommand await_termination = 9;
     * </code>
     */
    public Builder clearAwaitTermination() {
      if (awaitTerminationBuilder_ == null) {
        if (commandCase_ == 9) {
          commandCase_ = 0;
          command_ = null;
          onChanged();
        }
      } else {
        if (commandCase_ == 9) {
          commandCase_ = 0;
          command_ = null;
        }
        awaitTerminationBuilder_.clear();
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * awaitTermination() API. Waits for the termination of the query.
     * </pre>
     *
     * <code>.spark.connect.StreamingQueryCommand.AwaitTerminationCommand await_termination = 9;
     * </code>
     */
    public org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand
            .AwaitTerminationCommand.Builder
        getAwaitTerminationBuilder() {
      return getAwaitTerminationFieldBuilder().getBuilder();
    }
    /**
     *
     *
     * <pre>
     * awaitTermination() API. Waits for the termination of the query.
     * </pre>
     *
     * <code>.spark.connect.StreamingQueryCommand.AwaitTerminationCommand await_termination = 9;
     * </code>
     */
    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand
            .AwaitTerminationCommandOrBuilder
        getAwaitTerminationOrBuilder() {
      if ((commandCase_ == 9) && (awaitTerminationBuilder_ != null)) {
        return awaitTerminationBuilder_.getMessageOrBuilder();
      } else {
        if (commandCase_ == 9) {
          return (org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand
                  .AwaitTerminationCommand)
              command_;
        }
        return org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand
            .AwaitTerminationCommand.getDefaultInstance();
      }
    }
    /**
     *
     *
     * <pre>
     * awaitTermination() API. Waits for the termination of the query.
     * </pre>
     *
     * <code>.spark.connect.StreamingQueryCommand.AwaitTerminationCommand await_termination = 9;
     * </code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand
                .AwaitTerminationCommand,
            org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand
                .AwaitTerminationCommand.Builder,
            org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand
                .AwaitTerminationCommandOrBuilder>
        getAwaitTerminationFieldBuilder() {
      if (awaitTerminationBuilder_ == null) {
        if (!(commandCase_ == 9)) {
          command_ =
              org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand
                  .AwaitTerminationCommand.getDefaultInstance();
        }
        awaitTerminationBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand
                    .AwaitTerminationCommand,
                org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand
                    .AwaitTerminationCommand.Builder,
                org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand
                    .AwaitTerminationCommandOrBuilder>(
                (org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand
                        .AwaitTerminationCommand)
                    command_,
                getParentForChildren(),
                isClean());
        command_ = null;
      }
      commandCase_ = 9;
      onChanged();
      ;
      return awaitTerminationBuilder_;
    }

    @java.lang.Override
    public final Builder setUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }

    // @@protoc_insertion_point(builder_scope:spark.connect.StreamingQueryCommand)
  }

  // @@protoc_insertion_point(class_scope:spark.connect.StreamingQueryCommand)
  private static final org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand
      DEFAULT_INSTANCE;

  static {
    DEFAULT_INSTANCE =
        new org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand();
  }

  public static org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand
      getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<StreamingQueryCommand> PARSER =
      new com.google.protobuf.AbstractParser<StreamingQueryCommand>() {
        @java.lang.Override
        public StreamingQueryCommand parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

  public static com.google.protobuf.Parser<StreamingQueryCommand> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<StreamingQueryCommand> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommand
      getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }
}
