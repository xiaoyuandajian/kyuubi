// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: spark/connect/relations.proto

package org.apache.kyuubi.engine.spark.connect.proto;

/**
 * <pre>
 * Unpivot a DataFrame from wide format to long format, optionally leaving identifier columns set.
 * </pre>
 *
 * Protobuf type {@code spark.connect.Unpivot}
 */
public final class Unpivot extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:spark.connect.Unpivot)
    UnpivotOrBuilder {
private static final long serialVersionUID = 0L;
  // Use Unpivot.newBuilder() to construct.
  private Unpivot(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private Unpivot() {
    ids_ = java.util.Collections.emptyList();
    variableColumnName_ = "";
    valueColumnName_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new Unpivot();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return org.apache.kyuubi.engine.spark.connect.proto.Relations.internal_static_spark_connect_Unpivot_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return org.apache.kyuubi.engine.spark.connect.proto.Relations.internal_static_spark_connect_Unpivot_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            org.apache.kyuubi.engine.spark.connect.proto.Unpivot.class, org.apache.kyuubi.engine.spark.connect.proto.Unpivot.Builder.class);
  }

  public interface ValuesOrBuilder extends
      // @@protoc_insertion_point(interface_extends:spark.connect.Unpivot.Values)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .spark.connect.Expression values = 1;</code>
     */
    java.util.List<org.apache.kyuubi.engine.spark.connect.proto.Expression> 
        getValuesList();
    /**
     * <code>repeated .spark.connect.Expression values = 1;</code>
     */
    org.apache.kyuubi.engine.spark.connect.proto.Expression getValues(int index);
    /**
     * <code>repeated .spark.connect.Expression values = 1;</code>
     */
    int getValuesCount();
    /**
     * <code>repeated .spark.connect.Expression values = 1;</code>
     */
    java.util.List<? extends org.apache.kyuubi.engine.spark.connect.proto.ExpressionOrBuilder> 
        getValuesOrBuilderList();
    /**
     * <code>repeated .spark.connect.Expression values = 1;</code>
     */
    org.apache.kyuubi.engine.spark.connect.proto.ExpressionOrBuilder getValuesOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code spark.connect.Unpivot.Values}
   */
  public static final class Values extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:spark.connect.Unpivot.Values)
      ValuesOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Values.newBuilder() to construct.
    private Values(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Values() {
      values_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Values();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.kyuubi.engine.spark.connect.proto.Relations.internal_static_spark_connect_Unpivot_Values_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.kyuubi.engine.spark.connect.proto.Relations.internal_static_spark_connect_Unpivot_Values_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.kyuubi.engine.spark.connect.proto.Unpivot.Values.class, org.apache.kyuubi.engine.spark.connect.proto.Unpivot.Values.Builder.class);
    }

    public static final int VALUES_FIELD_NUMBER = 1;
    private java.util.List<org.apache.kyuubi.engine.spark.connect.proto.Expression> values_;
    /**
     * <code>repeated .spark.connect.Expression values = 1;</code>
     */
    @java.lang.Override
    public java.util.List<org.apache.kyuubi.engine.spark.connect.proto.Expression> getValuesList() {
      return values_;
    }
    /**
     * <code>repeated .spark.connect.Expression values = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends org.apache.kyuubi.engine.spark.connect.proto.ExpressionOrBuilder> 
        getValuesOrBuilderList() {
      return values_;
    }
    /**
     * <code>repeated .spark.connect.Expression values = 1;</code>
     */
    @java.lang.Override
    public int getValuesCount() {
      return values_.size();
    }
    /**
     * <code>repeated .spark.connect.Expression values = 1;</code>
     */
    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.Expression getValues(int index) {
      return values_.get(index);
    }
    /**
     * <code>repeated .spark.connect.Expression values = 1;</code>
     */
    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.ExpressionOrBuilder getValuesOrBuilder(
        int index) {
      return values_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < values_.size(); i++) {
        output.writeMessage(1, values_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < values_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, values_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.kyuubi.engine.spark.connect.proto.Unpivot.Values)) {
        return super.equals(obj);
      }
      org.apache.kyuubi.engine.spark.connect.proto.Unpivot.Values other = (org.apache.kyuubi.engine.spark.connect.proto.Unpivot.Values) obj;

      if (!getValuesList()
          .equals(other.getValuesList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getValuesCount() > 0) {
        hash = (37 * hash) + VALUES_FIELD_NUMBER;
        hash = (53 * hash) + getValuesList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.kyuubi.engine.spark.connect.proto.Unpivot.Values parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.Unpivot.Values parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.Unpivot.Values parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.Unpivot.Values parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.Unpivot.Values parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.Unpivot.Values parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.Unpivot.Values parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.Unpivot.Values parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.Unpivot.Values parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.Unpivot.Values parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.Unpivot.Values parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.Unpivot.Values parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.kyuubi.engine.spark.connect.proto.Unpivot.Values prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code spark.connect.Unpivot.Values}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:spark.connect.Unpivot.Values)
        org.apache.kyuubi.engine.spark.connect.proto.Unpivot.ValuesOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.kyuubi.engine.spark.connect.proto.Relations.internal_static_spark_connect_Unpivot_Values_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.kyuubi.engine.spark.connect.proto.Relations.internal_static_spark_connect_Unpivot_Values_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.kyuubi.engine.spark.connect.proto.Unpivot.Values.class, org.apache.kyuubi.engine.spark.connect.proto.Unpivot.Values.Builder.class);
      }

      // Construct using org.apache.kyuubi.engine.spark.connect.proto.Unpivot.Values.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (valuesBuilder_ == null) {
          values_ = java.util.Collections.emptyList();
        } else {
          values_ = null;
          valuesBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.kyuubi.engine.spark.connect.proto.Relations.internal_static_spark_connect_Unpivot_Values_descriptor;
      }

      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.proto.Unpivot.Values getDefaultInstanceForType() {
        return org.apache.kyuubi.engine.spark.connect.proto.Unpivot.Values.getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.proto.Unpivot.Values build() {
        org.apache.kyuubi.engine.spark.connect.proto.Unpivot.Values result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.proto.Unpivot.Values buildPartial() {
        org.apache.kyuubi.engine.spark.connect.proto.Unpivot.Values result = new org.apache.kyuubi.engine.spark.connect.proto.Unpivot.Values(this);
        int from_bitField0_ = bitField0_;
        if (valuesBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            values_ = java.util.Collections.unmodifiableList(values_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.values_ = values_;
        } else {
          result.values_ = valuesBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.kyuubi.engine.spark.connect.proto.Unpivot.Values) {
          return mergeFrom((org.apache.kyuubi.engine.spark.connect.proto.Unpivot.Values)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.kyuubi.engine.spark.connect.proto.Unpivot.Values other) {
        if (other == org.apache.kyuubi.engine.spark.connect.proto.Unpivot.Values.getDefaultInstance()) return this;
        if (valuesBuilder_ == null) {
          if (!other.values_.isEmpty()) {
            if (values_.isEmpty()) {
              values_ = other.values_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureValuesIsMutable();
              values_.addAll(other.values_);
            }
            onChanged();
          }
        } else {
          if (!other.values_.isEmpty()) {
            if (valuesBuilder_.isEmpty()) {
              valuesBuilder_.dispose();
              valuesBuilder_ = null;
              values_ = other.values_;
              bitField0_ = (bitField0_ & ~0x00000001);
              valuesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getValuesFieldBuilder() : null;
            } else {
              valuesBuilder_.addAllMessages(other.values_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                org.apache.kyuubi.engine.spark.connect.proto.Expression m =
                    input.readMessage(
                        org.apache.kyuubi.engine.spark.connect.proto.Expression.parser(),
                        extensionRegistry);
                if (valuesBuilder_ == null) {
                  ensureValuesIsMutable();
                  values_.add(m);
                } else {
                  valuesBuilder_.addMessage(m);
                }
                break;
              } // case 10
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.util.List<org.apache.kyuubi.engine.spark.connect.proto.Expression> values_ =
        java.util.Collections.emptyList();
      private void ensureValuesIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          values_ = new java.util.ArrayList<org.apache.kyuubi.engine.spark.connect.proto.Expression>(values_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.apache.kyuubi.engine.spark.connect.proto.Expression, org.apache.kyuubi.engine.spark.connect.proto.Expression.Builder, org.apache.kyuubi.engine.spark.connect.proto.ExpressionOrBuilder> valuesBuilder_;

      /**
       * <code>repeated .spark.connect.Expression values = 1;</code>
       */
      public java.util.List<org.apache.kyuubi.engine.spark.connect.proto.Expression> getValuesList() {
        if (valuesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(values_);
        } else {
          return valuesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .spark.connect.Expression values = 1;</code>
       */
      public int getValuesCount() {
        if (valuesBuilder_ == null) {
          return values_.size();
        } else {
          return valuesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .spark.connect.Expression values = 1;</code>
       */
      public org.apache.kyuubi.engine.spark.connect.proto.Expression getValues(int index) {
        if (valuesBuilder_ == null) {
          return values_.get(index);
        } else {
          return valuesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .spark.connect.Expression values = 1;</code>
       */
      public Builder setValues(
          int index, org.apache.kyuubi.engine.spark.connect.proto.Expression value) {
        if (valuesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureValuesIsMutable();
          values_.set(index, value);
          onChanged();
        } else {
          valuesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .spark.connect.Expression values = 1;</code>
       */
      public Builder setValues(
          int index, org.apache.kyuubi.engine.spark.connect.proto.Expression.Builder builderForValue) {
        if (valuesBuilder_ == null) {
          ensureValuesIsMutable();
          values_.set(index, builderForValue.build());
          onChanged();
        } else {
          valuesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .spark.connect.Expression values = 1;</code>
       */
      public Builder addValues(org.apache.kyuubi.engine.spark.connect.proto.Expression value) {
        if (valuesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureValuesIsMutable();
          values_.add(value);
          onChanged();
        } else {
          valuesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .spark.connect.Expression values = 1;</code>
       */
      public Builder addValues(
          int index, org.apache.kyuubi.engine.spark.connect.proto.Expression value) {
        if (valuesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureValuesIsMutable();
          values_.add(index, value);
          onChanged();
        } else {
          valuesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .spark.connect.Expression values = 1;</code>
       */
      public Builder addValues(
          org.apache.kyuubi.engine.spark.connect.proto.Expression.Builder builderForValue) {
        if (valuesBuilder_ == null) {
          ensureValuesIsMutable();
          values_.add(builderForValue.build());
          onChanged();
        } else {
          valuesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .spark.connect.Expression values = 1;</code>
       */
      public Builder addValues(
          int index, org.apache.kyuubi.engine.spark.connect.proto.Expression.Builder builderForValue) {
        if (valuesBuilder_ == null) {
          ensureValuesIsMutable();
          values_.add(index, builderForValue.build());
          onChanged();
        } else {
          valuesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .spark.connect.Expression values = 1;</code>
       */
      public Builder addAllValues(
          java.lang.Iterable<? extends org.apache.kyuubi.engine.spark.connect.proto.Expression> values) {
        if (valuesBuilder_ == null) {
          ensureValuesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, values_);
          onChanged();
        } else {
          valuesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .spark.connect.Expression values = 1;</code>
       */
      public Builder clearValues() {
        if (valuesBuilder_ == null) {
          values_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          valuesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .spark.connect.Expression values = 1;</code>
       */
      public Builder removeValues(int index) {
        if (valuesBuilder_ == null) {
          ensureValuesIsMutable();
          values_.remove(index);
          onChanged();
        } else {
          valuesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .spark.connect.Expression values = 1;</code>
       */
      public org.apache.kyuubi.engine.spark.connect.proto.Expression.Builder getValuesBuilder(
          int index) {
        return getValuesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .spark.connect.Expression values = 1;</code>
       */
      public org.apache.kyuubi.engine.spark.connect.proto.ExpressionOrBuilder getValuesOrBuilder(
          int index) {
        if (valuesBuilder_ == null) {
          return values_.get(index);  } else {
          return valuesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .spark.connect.Expression values = 1;</code>
       */
      public java.util.List<? extends org.apache.kyuubi.engine.spark.connect.proto.ExpressionOrBuilder> 
           getValuesOrBuilderList() {
        if (valuesBuilder_ != null) {
          return valuesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(values_);
        }
      }
      /**
       * <code>repeated .spark.connect.Expression values = 1;</code>
       */
      public org.apache.kyuubi.engine.spark.connect.proto.Expression.Builder addValuesBuilder() {
        return getValuesFieldBuilder().addBuilder(
            org.apache.kyuubi.engine.spark.connect.proto.Expression.getDefaultInstance());
      }
      /**
       * <code>repeated .spark.connect.Expression values = 1;</code>
       */
      public org.apache.kyuubi.engine.spark.connect.proto.Expression.Builder addValuesBuilder(
          int index) {
        return getValuesFieldBuilder().addBuilder(
            index, org.apache.kyuubi.engine.spark.connect.proto.Expression.getDefaultInstance());
      }
      /**
       * <code>repeated .spark.connect.Expression values = 1;</code>
       */
      public java.util.List<org.apache.kyuubi.engine.spark.connect.proto.Expression.Builder> 
           getValuesBuilderList() {
        return getValuesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.apache.kyuubi.engine.spark.connect.proto.Expression, org.apache.kyuubi.engine.spark.connect.proto.Expression.Builder, org.apache.kyuubi.engine.spark.connect.proto.ExpressionOrBuilder> 
          getValuesFieldBuilder() {
        if (valuesBuilder_ == null) {
          valuesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              org.apache.kyuubi.engine.spark.connect.proto.Expression, org.apache.kyuubi.engine.spark.connect.proto.Expression.Builder, org.apache.kyuubi.engine.spark.connect.proto.ExpressionOrBuilder>(
                  values_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          values_ = null;
        }
        return valuesBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:spark.connect.Unpivot.Values)
    }

    // @@protoc_insertion_point(class_scope:spark.connect.Unpivot.Values)
    private static final org.apache.kyuubi.engine.spark.connect.proto.Unpivot.Values DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.kyuubi.engine.spark.connect.proto.Unpivot.Values();
    }

    public static org.apache.kyuubi.engine.spark.connect.proto.Unpivot.Values getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Values>
        PARSER = new com.google.protobuf.AbstractParser<Values>() {
      @java.lang.Override
      public Values parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<Values> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Values> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.Unpivot.Values getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private int bitField0_;
  public static final int INPUT_FIELD_NUMBER = 1;
  private org.apache.kyuubi.engine.spark.connect.proto.Relation input_;
  /**
   * <pre>
   * (Required) The input relation.
   * </pre>
   *
   * <code>.spark.connect.Relation input = 1;</code>
   * @return Whether the input field is set.
   */
  @java.lang.Override
  public boolean hasInput() {
    return input_ != null;
  }
  /**
   * <pre>
   * (Required) The input relation.
   * </pre>
   *
   * <code>.spark.connect.Relation input = 1;</code>
   * @return The input.
   */
  @java.lang.Override
  public org.apache.kyuubi.engine.spark.connect.proto.Relation getInput() {
    return input_ == null ? org.apache.kyuubi.engine.spark.connect.proto.Relation.getDefaultInstance() : input_;
  }
  /**
   * <pre>
   * (Required) The input relation.
   * </pre>
   *
   * <code>.spark.connect.Relation input = 1;</code>
   */
  @java.lang.Override
  public org.apache.kyuubi.engine.spark.connect.proto.RelationOrBuilder getInputOrBuilder() {
    return getInput();
  }

  public static final int IDS_FIELD_NUMBER = 2;
  private java.util.List<org.apache.kyuubi.engine.spark.connect.proto.Expression> ids_;
  /**
   * <pre>
   * (Required) Id columns.
   * </pre>
   *
   * <code>repeated .spark.connect.Expression ids = 2;</code>
   */
  @java.lang.Override
  public java.util.List<org.apache.kyuubi.engine.spark.connect.proto.Expression> getIdsList() {
    return ids_;
  }
  /**
   * <pre>
   * (Required) Id columns.
   * </pre>
   *
   * <code>repeated .spark.connect.Expression ids = 2;</code>
   */
  @java.lang.Override
  public java.util.List<? extends org.apache.kyuubi.engine.spark.connect.proto.ExpressionOrBuilder> 
      getIdsOrBuilderList() {
    return ids_;
  }
  /**
   * <pre>
   * (Required) Id columns.
   * </pre>
   *
   * <code>repeated .spark.connect.Expression ids = 2;</code>
   */
  @java.lang.Override
  public int getIdsCount() {
    return ids_.size();
  }
  /**
   * <pre>
   * (Required) Id columns.
   * </pre>
   *
   * <code>repeated .spark.connect.Expression ids = 2;</code>
   */
  @java.lang.Override
  public org.apache.kyuubi.engine.spark.connect.proto.Expression getIds(int index) {
    return ids_.get(index);
  }
  /**
   * <pre>
   * (Required) Id columns.
   * </pre>
   *
   * <code>repeated .spark.connect.Expression ids = 2;</code>
   */
  @java.lang.Override
  public org.apache.kyuubi.engine.spark.connect.proto.ExpressionOrBuilder getIdsOrBuilder(
      int index) {
    return ids_.get(index);
  }

  public static final int VALUES_FIELD_NUMBER = 3;
  private org.apache.kyuubi.engine.spark.connect.proto.Unpivot.Values values_;
  /**
   * <pre>
   * (Optional) Value columns to unpivot.
   * </pre>
   *
   * <code>optional .spark.connect.Unpivot.Values values = 3;</code>
   * @return Whether the values field is set.
   */
  @java.lang.Override
  public boolean hasValues() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <pre>
   * (Optional) Value columns to unpivot.
   * </pre>
   *
   * <code>optional .spark.connect.Unpivot.Values values = 3;</code>
   * @return The values.
   */
  @java.lang.Override
  public org.apache.kyuubi.engine.spark.connect.proto.Unpivot.Values getValues() {
    return values_ == null ? org.apache.kyuubi.engine.spark.connect.proto.Unpivot.Values.getDefaultInstance() : values_;
  }
  /**
   * <pre>
   * (Optional) Value columns to unpivot.
   * </pre>
   *
   * <code>optional .spark.connect.Unpivot.Values values = 3;</code>
   */
  @java.lang.Override
  public org.apache.kyuubi.engine.spark.connect.proto.Unpivot.ValuesOrBuilder getValuesOrBuilder() {
    return values_ == null ? org.apache.kyuubi.engine.spark.connect.proto.Unpivot.Values.getDefaultInstance() : values_;
  }

  public static final int VARIABLE_COLUMN_NAME_FIELD_NUMBER = 4;
  private volatile java.lang.Object variableColumnName_;
  /**
   * <pre>
   * (Required) Name of the variable column.
   * </pre>
   *
   * <code>string variable_column_name = 4;</code>
   * @return The variableColumnName.
   */
  @java.lang.Override
  public java.lang.String getVariableColumnName() {
    java.lang.Object ref = variableColumnName_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      variableColumnName_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * (Required) Name of the variable column.
   * </pre>
   *
   * <code>string variable_column_name = 4;</code>
   * @return The bytes for variableColumnName.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getVariableColumnNameBytes() {
    java.lang.Object ref = variableColumnName_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      variableColumnName_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int VALUE_COLUMN_NAME_FIELD_NUMBER = 5;
  private volatile java.lang.Object valueColumnName_;
  /**
   * <pre>
   * (Required) Name of the value column.
   * </pre>
   *
   * <code>string value_column_name = 5;</code>
   * @return The valueColumnName.
   */
  @java.lang.Override
  public java.lang.String getValueColumnName() {
    java.lang.Object ref = valueColumnName_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      valueColumnName_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * (Required) Name of the value column.
   * </pre>
   *
   * <code>string value_column_name = 5;</code>
   * @return The bytes for valueColumnName.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getValueColumnNameBytes() {
    java.lang.Object ref = valueColumnName_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      valueColumnName_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (input_ != null) {
      output.writeMessage(1, getInput());
    }
    for (int i = 0; i < ids_.size(); i++) {
      output.writeMessage(2, ids_.get(i));
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeMessage(3, getValues());
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(variableColumnName_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 4, variableColumnName_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(valueColumnName_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 5, valueColumnName_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (input_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getInput());
    }
    for (int i = 0; i < ids_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, ids_.get(i));
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getValues());
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(variableColumnName_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, variableColumnName_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(valueColumnName_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, valueColumnName_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof org.apache.kyuubi.engine.spark.connect.proto.Unpivot)) {
      return super.equals(obj);
    }
    org.apache.kyuubi.engine.spark.connect.proto.Unpivot other = (org.apache.kyuubi.engine.spark.connect.proto.Unpivot) obj;

    if (hasInput() != other.hasInput()) return false;
    if (hasInput()) {
      if (!getInput()
          .equals(other.getInput())) return false;
    }
    if (!getIdsList()
        .equals(other.getIdsList())) return false;
    if (hasValues() != other.hasValues()) return false;
    if (hasValues()) {
      if (!getValues()
          .equals(other.getValues())) return false;
    }
    if (!getVariableColumnName()
        .equals(other.getVariableColumnName())) return false;
    if (!getValueColumnName()
        .equals(other.getValueColumnName())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasInput()) {
      hash = (37 * hash) + INPUT_FIELD_NUMBER;
      hash = (53 * hash) + getInput().hashCode();
    }
    if (getIdsCount() > 0) {
      hash = (37 * hash) + IDS_FIELD_NUMBER;
      hash = (53 * hash) + getIdsList().hashCode();
    }
    if (hasValues()) {
      hash = (37 * hash) + VALUES_FIELD_NUMBER;
      hash = (53 * hash) + getValues().hashCode();
    }
    hash = (37 * hash) + VARIABLE_COLUMN_NAME_FIELD_NUMBER;
    hash = (53 * hash) + getVariableColumnName().hashCode();
    hash = (37 * hash) + VALUE_COLUMN_NAME_FIELD_NUMBER;
    hash = (53 * hash) + getValueColumnName().hashCode();
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static org.apache.kyuubi.engine.spark.connect.proto.Unpivot parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.apache.kyuubi.engine.spark.connect.proto.Unpivot parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.apache.kyuubi.engine.spark.connect.proto.Unpivot parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.apache.kyuubi.engine.spark.connect.proto.Unpivot parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.apache.kyuubi.engine.spark.connect.proto.Unpivot parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.apache.kyuubi.engine.spark.connect.proto.Unpivot parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.apache.kyuubi.engine.spark.connect.proto.Unpivot parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.apache.kyuubi.engine.spark.connect.proto.Unpivot parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.apache.kyuubi.engine.spark.connect.proto.Unpivot parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static org.apache.kyuubi.engine.spark.connect.proto.Unpivot parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.apache.kyuubi.engine.spark.connect.proto.Unpivot parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.apache.kyuubi.engine.spark.connect.proto.Unpivot parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(org.apache.kyuubi.engine.spark.connect.proto.Unpivot prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Unpivot a DataFrame from wide format to long format, optionally leaving identifier columns set.
   * </pre>
   *
   * Protobuf type {@code spark.connect.Unpivot}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:spark.connect.Unpivot)
      org.apache.kyuubi.engine.spark.connect.proto.UnpivotOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.kyuubi.engine.spark.connect.proto.Relations.internal_static_spark_connect_Unpivot_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.kyuubi.engine.spark.connect.proto.Relations.internal_static_spark_connect_Unpivot_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.kyuubi.engine.spark.connect.proto.Unpivot.class, org.apache.kyuubi.engine.spark.connect.proto.Unpivot.Builder.class);
    }

    // Construct using org.apache.kyuubi.engine.spark.connect.proto.Unpivot.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getIdsFieldBuilder();
        getValuesFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      if (inputBuilder_ == null) {
        input_ = null;
      } else {
        input_ = null;
        inputBuilder_ = null;
      }
      if (idsBuilder_ == null) {
        ids_ = java.util.Collections.emptyList();
      } else {
        ids_ = null;
        idsBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000001);
      if (valuesBuilder_ == null) {
        values_ = null;
      } else {
        valuesBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000002);
      variableColumnName_ = "";

      valueColumnName_ = "";

      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return org.apache.kyuubi.engine.spark.connect.proto.Relations.internal_static_spark_connect_Unpivot_descriptor;
    }

    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.Unpivot getDefaultInstanceForType() {
      return org.apache.kyuubi.engine.spark.connect.proto.Unpivot.getDefaultInstance();
    }

    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.Unpivot build() {
      org.apache.kyuubi.engine.spark.connect.proto.Unpivot result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.Unpivot buildPartial() {
      org.apache.kyuubi.engine.spark.connect.proto.Unpivot result = new org.apache.kyuubi.engine.spark.connect.proto.Unpivot(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (inputBuilder_ == null) {
        result.input_ = input_;
      } else {
        result.input_ = inputBuilder_.build();
      }
      if (idsBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0)) {
          ids_ = java.util.Collections.unmodifiableList(ids_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.ids_ = ids_;
      } else {
        result.ids_ = idsBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        if (valuesBuilder_ == null) {
          result.values_ = values_;
        } else {
          result.values_ = valuesBuilder_.build();
        }
        to_bitField0_ |= 0x00000001;
      }
      result.variableColumnName_ = variableColumnName_;
      result.valueColumnName_ = valueColumnName_;
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof org.apache.kyuubi.engine.spark.connect.proto.Unpivot) {
        return mergeFrom((org.apache.kyuubi.engine.spark.connect.proto.Unpivot)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(org.apache.kyuubi.engine.spark.connect.proto.Unpivot other) {
      if (other == org.apache.kyuubi.engine.spark.connect.proto.Unpivot.getDefaultInstance()) return this;
      if (other.hasInput()) {
        mergeInput(other.getInput());
      }
      if (idsBuilder_ == null) {
        if (!other.ids_.isEmpty()) {
          if (ids_.isEmpty()) {
            ids_ = other.ids_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureIdsIsMutable();
            ids_.addAll(other.ids_);
          }
          onChanged();
        }
      } else {
        if (!other.ids_.isEmpty()) {
          if (idsBuilder_.isEmpty()) {
            idsBuilder_.dispose();
            idsBuilder_ = null;
            ids_ = other.ids_;
            bitField0_ = (bitField0_ & ~0x00000001);
            idsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getIdsFieldBuilder() : null;
          } else {
            idsBuilder_.addAllMessages(other.ids_);
          }
        }
      }
      if (other.hasValues()) {
        mergeValues(other.getValues());
      }
      if (!other.getVariableColumnName().isEmpty()) {
        variableColumnName_ = other.variableColumnName_;
        onChanged();
      }
      if (!other.getValueColumnName().isEmpty()) {
        valueColumnName_ = other.valueColumnName_;
        onChanged();
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              input.readMessage(
                  getInputFieldBuilder().getBuilder(),
                  extensionRegistry);

              break;
            } // case 10
            case 18: {
              org.apache.kyuubi.engine.spark.connect.proto.Expression m =
                  input.readMessage(
                      org.apache.kyuubi.engine.spark.connect.proto.Expression.parser(),
                      extensionRegistry);
              if (idsBuilder_ == null) {
                ensureIdsIsMutable();
                ids_.add(m);
              } else {
                idsBuilder_.addMessage(m);
              }
              break;
            } // case 18
            case 26: {
              input.readMessage(
                  getValuesFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000002;
              break;
            } // case 26
            case 34: {
              variableColumnName_ = input.readStringRequireUtf8();

              break;
            } // case 34
            case 42: {
              valueColumnName_ = input.readStringRequireUtf8();

              break;
            } // case 42
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private org.apache.kyuubi.engine.spark.connect.proto.Relation input_;
    private com.google.protobuf.SingleFieldBuilderV3<
        org.apache.kyuubi.engine.spark.connect.proto.Relation, org.apache.kyuubi.engine.spark.connect.proto.Relation.Builder, org.apache.kyuubi.engine.spark.connect.proto.RelationOrBuilder> inputBuilder_;
    /**
     * <pre>
     * (Required) The input relation.
     * </pre>
     *
     * <code>.spark.connect.Relation input = 1;</code>
     * @return Whether the input field is set.
     */
    public boolean hasInput() {
      return inputBuilder_ != null || input_ != null;
    }
    /**
     * <pre>
     * (Required) The input relation.
     * </pre>
     *
     * <code>.spark.connect.Relation input = 1;</code>
     * @return The input.
     */
    public org.apache.kyuubi.engine.spark.connect.proto.Relation getInput() {
      if (inputBuilder_ == null) {
        return input_ == null ? org.apache.kyuubi.engine.spark.connect.proto.Relation.getDefaultInstance() : input_;
      } else {
        return inputBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * (Required) The input relation.
     * </pre>
     *
     * <code>.spark.connect.Relation input = 1;</code>
     */
    public Builder setInput(org.apache.kyuubi.engine.spark.connect.proto.Relation value) {
      if (inputBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        input_ = value;
        onChanged();
      } else {
        inputBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * (Required) The input relation.
     * </pre>
     *
     * <code>.spark.connect.Relation input = 1;</code>
     */
    public Builder setInput(
        org.apache.kyuubi.engine.spark.connect.proto.Relation.Builder builderForValue) {
      if (inputBuilder_ == null) {
        input_ = builderForValue.build();
        onChanged();
      } else {
        inputBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * (Required) The input relation.
     * </pre>
     *
     * <code>.spark.connect.Relation input = 1;</code>
     */
    public Builder mergeInput(org.apache.kyuubi.engine.spark.connect.proto.Relation value) {
      if (inputBuilder_ == null) {
        if (input_ != null) {
          input_ =
            org.apache.kyuubi.engine.spark.connect.proto.Relation.newBuilder(input_).mergeFrom(value).buildPartial();
        } else {
          input_ = value;
        }
        onChanged();
      } else {
        inputBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * (Required) The input relation.
     * </pre>
     *
     * <code>.spark.connect.Relation input = 1;</code>
     */
    public Builder clearInput() {
      if (inputBuilder_ == null) {
        input_ = null;
        onChanged();
      } else {
        input_ = null;
        inputBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * (Required) The input relation.
     * </pre>
     *
     * <code>.spark.connect.Relation input = 1;</code>
     */
    public org.apache.kyuubi.engine.spark.connect.proto.Relation.Builder getInputBuilder() {
      
      onChanged();
      return getInputFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * (Required) The input relation.
     * </pre>
     *
     * <code>.spark.connect.Relation input = 1;</code>
     */
    public org.apache.kyuubi.engine.spark.connect.proto.RelationOrBuilder getInputOrBuilder() {
      if (inputBuilder_ != null) {
        return inputBuilder_.getMessageOrBuilder();
      } else {
        return input_ == null ?
            org.apache.kyuubi.engine.spark.connect.proto.Relation.getDefaultInstance() : input_;
      }
    }
    /**
     * <pre>
     * (Required) The input relation.
     * </pre>
     *
     * <code>.spark.connect.Relation input = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.apache.kyuubi.engine.spark.connect.proto.Relation, org.apache.kyuubi.engine.spark.connect.proto.Relation.Builder, org.apache.kyuubi.engine.spark.connect.proto.RelationOrBuilder> 
        getInputFieldBuilder() {
      if (inputBuilder_ == null) {
        inputBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.apache.kyuubi.engine.spark.connect.proto.Relation, org.apache.kyuubi.engine.spark.connect.proto.Relation.Builder, org.apache.kyuubi.engine.spark.connect.proto.RelationOrBuilder>(
                getInput(),
                getParentForChildren(),
                isClean());
        input_ = null;
      }
      return inputBuilder_;
    }

    private java.util.List<org.apache.kyuubi.engine.spark.connect.proto.Expression> ids_ =
      java.util.Collections.emptyList();
    private void ensureIdsIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        ids_ = new java.util.ArrayList<org.apache.kyuubi.engine.spark.connect.proto.Expression>(ids_);
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        org.apache.kyuubi.engine.spark.connect.proto.Expression, org.apache.kyuubi.engine.spark.connect.proto.Expression.Builder, org.apache.kyuubi.engine.spark.connect.proto.ExpressionOrBuilder> idsBuilder_;

    /**
     * <pre>
     * (Required) Id columns.
     * </pre>
     *
     * <code>repeated .spark.connect.Expression ids = 2;</code>
     */
    public java.util.List<org.apache.kyuubi.engine.spark.connect.proto.Expression> getIdsList() {
      if (idsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(ids_);
      } else {
        return idsBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * (Required) Id columns.
     * </pre>
     *
     * <code>repeated .spark.connect.Expression ids = 2;</code>
     */
    public int getIdsCount() {
      if (idsBuilder_ == null) {
        return ids_.size();
      } else {
        return idsBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * (Required) Id columns.
     * </pre>
     *
     * <code>repeated .spark.connect.Expression ids = 2;</code>
     */
    public org.apache.kyuubi.engine.spark.connect.proto.Expression getIds(int index) {
      if (idsBuilder_ == null) {
        return ids_.get(index);
      } else {
        return idsBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * (Required) Id columns.
     * </pre>
     *
     * <code>repeated .spark.connect.Expression ids = 2;</code>
     */
    public Builder setIds(
        int index, org.apache.kyuubi.engine.spark.connect.proto.Expression value) {
      if (idsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureIdsIsMutable();
        ids_.set(index, value);
        onChanged();
      } else {
        idsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * (Required) Id columns.
     * </pre>
     *
     * <code>repeated .spark.connect.Expression ids = 2;</code>
     */
    public Builder setIds(
        int index, org.apache.kyuubi.engine.spark.connect.proto.Expression.Builder builderForValue) {
      if (idsBuilder_ == null) {
        ensureIdsIsMutable();
        ids_.set(index, builderForValue.build());
        onChanged();
      } else {
        idsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * (Required) Id columns.
     * </pre>
     *
     * <code>repeated .spark.connect.Expression ids = 2;</code>
     */
    public Builder addIds(org.apache.kyuubi.engine.spark.connect.proto.Expression value) {
      if (idsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureIdsIsMutable();
        ids_.add(value);
        onChanged();
      } else {
        idsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * (Required) Id columns.
     * </pre>
     *
     * <code>repeated .spark.connect.Expression ids = 2;</code>
     */
    public Builder addIds(
        int index, org.apache.kyuubi.engine.spark.connect.proto.Expression value) {
      if (idsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureIdsIsMutable();
        ids_.add(index, value);
        onChanged();
      } else {
        idsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * (Required) Id columns.
     * </pre>
     *
     * <code>repeated .spark.connect.Expression ids = 2;</code>
     */
    public Builder addIds(
        org.apache.kyuubi.engine.spark.connect.proto.Expression.Builder builderForValue) {
      if (idsBuilder_ == null) {
        ensureIdsIsMutable();
        ids_.add(builderForValue.build());
        onChanged();
      } else {
        idsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * (Required) Id columns.
     * </pre>
     *
     * <code>repeated .spark.connect.Expression ids = 2;</code>
     */
    public Builder addIds(
        int index, org.apache.kyuubi.engine.spark.connect.proto.Expression.Builder builderForValue) {
      if (idsBuilder_ == null) {
        ensureIdsIsMutable();
        ids_.add(index, builderForValue.build());
        onChanged();
      } else {
        idsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * (Required) Id columns.
     * </pre>
     *
     * <code>repeated .spark.connect.Expression ids = 2;</code>
     */
    public Builder addAllIds(
        java.lang.Iterable<? extends org.apache.kyuubi.engine.spark.connect.proto.Expression> values) {
      if (idsBuilder_ == null) {
        ensureIdsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, ids_);
        onChanged();
      } else {
        idsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * (Required) Id columns.
     * </pre>
     *
     * <code>repeated .spark.connect.Expression ids = 2;</code>
     */
    public Builder clearIds() {
      if (idsBuilder_ == null) {
        ids_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        idsBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * (Required) Id columns.
     * </pre>
     *
     * <code>repeated .spark.connect.Expression ids = 2;</code>
     */
    public Builder removeIds(int index) {
      if (idsBuilder_ == null) {
        ensureIdsIsMutable();
        ids_.remove(index);
        onChanged();
      } else {
        idsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * (Required) Id columns.
     * </pre>
     *
     * <code>repeated .spark.connect.Expression ids = 2;</code>
     */
    public org.apache.kyuubi.engine.spark.connect.proto.Expression.Builder getIdsBuilder(
        int index) {
      return getIdsFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * (Required) Id columns.
     * </pre>
     *
     * <code>repeated .spark.connect.Expression ids = 2;</code>
     */
    public org.apache.kyuubi.engine.spark.connect.proto.ExpressionOrBuilder getIdsOrBuilder(
        int index) {
      if (idsBuilder_ == null) {
        return ids_.get(index);  } else {
        return idsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * (Required) Id columns.
     * </pre>
     *
     * <code>repeated .spark.connect.Expression ids = 2;</code>
     */
    public java.util.List<? extends org.apache.kyuubi.engine.spark.connect.proto.ExpressionOrBuilder> 
         getIdsOrBuilderList() {
      if (idsBuilder_ != null) {
        return idsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(ids_);
      }
    }
    /**
     * <pre>
     * (Required) Id columns.
     * </pre>
     *
     * <code>repeated .spark.connect.Expression ids = 2;</code>
     */
    public org.apache.kyuubi.engine.spark.connect.proto.Expression.Builder addIdsBuilder() {
      return getIdsFieldBuilder().addBuilder(
          org.apache.kyuubi.engine.spark.connect.proto.Expression.getDefaultInstance());
    }
    /**
     * <pre>
     * (Required) Id columns.
     * </pre>
     *
     * <code>repeated .spark.connect.Expression ids = 2;</code>
     */
    public org.apache.kyuubi.engine.spark.connect.proto.Expression.Builder addIdsBuilder(
        int index) {
      return getIdsFieldBuilder().addBuilder(
          index, org.apache.kyuubi.engine.spark.connect.proto.Expression.getDefaultInstance());
    }
    /**
     * <pre>
     * (Required) Id columns.
     * </pre>
     *
     * <code>repeated .spark.connect.Expression ids = 2;</code>
     */
    public java.util.List<org.apache.kyuubi.engine.spark.connect.proto.Expression.Builder> 
         getIdsBuilderList() {
      return getIdsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        org.apache.kyuubi.engine.spark.connect.proto.Expression, org.apache.kyuubi.engine.spark.connect.proto.Expression.Builder, org.apache.kyuubi.engine.spark.connect.proto.ExpressionOrBuilder> 
        getIdsFieldBuilder() {
      if (idsBuilder_ == null) {
        idsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            org.apache.kyuubi.engine.spark.connect.proto.Expression, org.apache.kyuubi.engine.spark.connect.proto.Expression.Builder, org.apache.kyuubi.engine.spark.connect.proto.ExpressionOrBuilder>(
                ids_,
                ((bitField0_ & 0x00000001) != 0),
                getParentForChildren(),
                isClean());
        ids_ = null;
      }
      return idsBuilder_;
    }

    private org.apache.kyuubi.engine.spark.connect.proto.Unpivot.Values values_;
    private com.google.protobuf.SingleFieldBuilderV3<
        org.apache.kyuubi.engine.spark.connect.proto.Unpivot.Values, org.apache.kyuubi.engine.spark.connect.proto.Unpivot.Values.Builder, org.apache.kyuubi.engine.spark.connect.proto.Unpivot.ValuesOrBuilder> valuesBuilder_;
    /**
     * <pre>
     * (Optional) Value columns to unpivot.
     * </pre>
     *
     * <code>optional .spark.connect.Unpivot.Values values = 3;</code>
     * @return Whether the values field is set.
     */
    public boolean hasValues() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * (Optional) Value columns to unpivot.
     * </pre>
     *
     * <code>optional .spark.connect.Unpivot.Values values = 3;</code>
     * @return The values.
     */
    public org.apache.kyuubi.engine.spark.connect.proto.Unpivot.Values getValues() {
      if (valuesBuilder_ == null) {
        return values_ == null ? org.apache.kyuubi.engine.spark.connect.proto.Unpivot.Values.getDefaultInstance() : values_;
      } else {
        return valuesBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * (Optional) Value columns to unpivot.
     * </pre>
     *
     * <code>optional .spark.connect.Unpivot.Values values = 3;</code>
     */
    public Builder setValues(org.apache.kyuubi.engine.spark.connect.proto.Unpivot.Values value) {
      if (valuesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        values_ = value;
        onChanged();
      } else {
        valuesBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000002;
      return this;
    }
    /**
     * <pre>
     * (Optional) Value columns to unpivot.
     * </pre>
     *
     * <code>optional .spark.connect.Unpivot.Values values = 3;</code>
     */
    public Builder setValues(
        org.apache.kyuubi.engine.spark.connect.proto.Unpivot.Values.Builder builderForValue) {
      if (valuesBuilder_ == null) {
        values_ = builderForValue.build();
        onChanged();
      } else {
        valuesBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000002;
      return this;
    }
    /**
     * <pre>
     * (Optional) Value columns to unpivot.
     * </pre>
     *
     * <code>optional .spark.connect.Unpivot.Values values = 3;</code>
     */
    public Builder mergeValues(org.apache.kyuubi.engine.spark.connect.proto.Unpivot.Values value) {
      if (valuesBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0) &&
            values_ != null &&
            values_ != org.apache.kyuubi.engine.spark.connect.proto.Unpivot.Values.getDefaultInstance()) {
          values_ =
            org.apache.kyuubi.engine.spark.connect.proto.Unpivot.Values.newBuilder(values_).mergeFrom(value).buildPartial();
        } else {
          values_ = value;
        }
        onChanged();
      } else {
        valuesBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000002;
      return this;
    }
    /**
     * <pre>
     * (Optional) Value columns to unpivot.
     * </pre>
     *
     * <code>optional .spark.connect.Unpivot.Values values = 3;</code>
     */
    public Builder clearValues() {
      if (valuesBuilder_ == null) {
        values_ = null;
        onChanged();
      } else {
        valuesBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000002);
      return this;
    }
    /**
     * <pre>
     * (Optional) Value columns to unpivot.
     * </pre>
     *
     * <code>optional .spark.connect.Unpivot.Values values = 3;</code>
     */
    public org.apache.kyuubi.engine.spark.connect.proto.Unpivot.Values.Builder getValuesBuilder() {
      bitField0_ |= 0x00000002;
      onChanged();
      return getValuesFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * (Optional) Value columns to unpivot.
     * </pre>
     *
     * <code>optional .spark.connect.Unpivot.Values values = 3;</code>
     */
    public org.apache.kyuubi.engine.spark.connect.proto.Unpivot.ValuesOrBuilder getValuesOrBuilder() {
      if (valuesBuilder_ != null) {
        return valuesBuilder_.getMessageOrBuilder();
      } else {
        return values_ == null ?
            org.apache.kyuubi.engine.spark.connect.proto.Unpivot.Values.getDefaultInstance() : values_;
      }
    }
    /**
     * <pre>
     * (Optional) Value columns to unpivot.
     * </pre>
     *
     * <code>optional .spark.connect.Unpivot.Values values = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.apache.kyuubi.engine.spark.connect.proto.Unpivot.Values, org.apache.kyuubi.engine.spark.connect.proto.Unpivot.Values.Builder, org.apache.kyuubi.engine.spark.connect.proto.Unpivot.ValuesOrBuilder> 
        getValuesFieldBuilder() {
      if (valuesBuilder_ == null) {
        valuesBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.apache.kyuubi.engine.spark.connect.proto.Unpivot.Values, org.apache.kyuubi.engine.spark.connect.proto.Unpivot.Values.Builder, org.apache.kyuubi.engine.spark.connect.proto.Unpivot.ValuesOrBuilder>(
                getValues(),
                getParentForChildren(),
                isClean());
        values_ = null;
      }
      return valuesBuilder_;
    }

    private java.lang.Object variableColumnName_ = "";
    /**
     * <pre>
     * (Required) Name of the variable column.
     * </pre>
     *
     * <code>string variable_column_name = 4;</code>
     * @return The variableColumnName.
     */
    public java.lang.String getVariableColumnName() {
      java.lang.Object ref = variableColumnName_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        variableColumnName_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * (Required) Name of the variable column.
     * </pre>
     *
     * <code>string variable_column_name = 4;</code>
     * @return The bytes for variableColumnName.
     */
    public com.google.protobuf.ByteString
        getVariableColumnNameBytes() {
      java.lang.Object ref = variableColumnName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        variableColumnName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * (Required) Name of the variable column.
     * </pre>
     *
     * <code>string variable_column_name = 4;</code>
     * @param value The variableColumnName to set.
     * @return This builder for chaining.
     */
    public Builder setVariableColumnName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      variableColumnName_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * (Required) Name of the variable column.
     * </pre>
     *
     * <code>string variable_column_name = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearVariableColumnName() {
      
      variableColumnName_ = getDefaultInstance().getVariableColumnName();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * (Required) Name of the variable column.
     * </pre>
     *
     * <code>string variable_column_name = 4;</code>
     * @param value The bytes for variableColumnName to set.
     * @return This builder for chaining.
     */
    public Builder setVariableColumnNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      variableColumnName_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object valueColumnName_ = "";
    /**
     * <pre>
     * (Required) Name of the value column.
     * </pre>
     *
     * <code>string value_column_name = 5;</code>
     * @return The valueColumnName.
     */
    public java.lang.String getValueColumnName() {
      java.lang.Object ref = valueColumnName_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        valueColumnName_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * (Required) Name of the value column.
     * </pre>
     *
     * <code>string value_column_name = 5;</code>
     * @return The bytes for valueColumnName.
     */
    public com.google.protobuf.ByteString
        getValueColumnNameBytes() {
      java.lang.Object ref = valueColumnName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        valueColumnName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * (Required) Name of the value column.
     * </pre>
     *
     * <code>string value_column_name = 5;</code>
     * @param value The valueColumnName to set.
     * @return This builder for chaining.
     */
    public Builder setValueColumnName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      valueColumnName_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * (Required) Name of the value column.
     * </pre>
     *
     * <code>string value_column_name = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearValueColumnName() {
      
      valueColumnName_ = getDefaultInstance().getValueColumnName();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * (Required) Name of the value column.
     * </pre>
     *
     * <code>string value_column_name = 5;</code>
     * @param value The bytes for valueColumnName to set.
     * @return This builder for chaining.
     */
    public Builder setValueColumnNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      valueColumnName_ = value;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:spark.connect.Unpivot)
  }

  // @@protoc_insertion_point(class_scope:spark.connect.Unpivot)
  private static final org.apache.kyuubi.engine.spark.connect.proto.Unpivot DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new org.apache.kyuubi.engine.spark.connect.proto.Unpivot();
  }

  public static org.apache.kyuubi.engine.spark.connect.proto.Unpivot getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Unpivot>
      PARSER = new com.google.protobuf.AbstractParser<Unpivot>() {
    @java.lang.Override
    public Unpivot parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<Unpivot> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Unpivot> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public org.apache.kyuubi.engine.spark.connect.proto.Unpivot getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

