// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: spark/connect/base.proto

package org.apache.kyuubi.engine.spark.connect.proto;

/**
 * <pre>
 * Response to adding an artifact. Contains relevant metadata to verify successful transfer of
 * artifact(s).
 * </pre>
 *
 * Protobuf type {@code spark.connect.AddArtifactsResponse}
 */
public final class AddArtifactsResponse extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:spark.connect.AddArtifactsResponse)
    AddArtifactsResponseOrBuilder {
private static final long serialVersionUID = 0L;
  // Use AddArtifactsResponse.newBuilder() to construct.
  private AddArtifactsResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private AddArtifactsResponse() {
    artifacts_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new AddArtifactsResponse();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return org.apache.kyuubi.engine.spark.connect.proto.Base.internal_static_spark_connect_AddArtifactsResponse_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return org.apache.kyuubi.engine.spark.connect.proto.Base.internal_static_spark_connect_AddArtifactsResponse_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            org.apache.kyuubi.engine.spark.connect.proto.AddArtifactsResponse.class, org.apache.kyuubi.engine.spark.connect.proto.AddArtifactsResponse.Builder.class);
  }

  public interface ArtifactSummaryOrBuilder extends
      // @@protoc_insertion_point(interface_extends:spark.connect.AddArtifactsResponse.ArtifactSummary)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string name = 1;</code>
     * @return The name.
     */
    java.lang.String getName();
    /**
     * <code>string name = 1;</code>
     * @return The bytes for name.
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <pre>
     * Whether the CRC (Cyclic Redundancy Check) is successful on server verification.
     * The server discards any artifact that fails the CRC.
     * If false, the client may choose to resend the artifact specified by `name`.
     * </pre>
     *
     * <code>bool is_crc_successful = 2;</code>
     * @return The isCrcSuccessful.
     */
    boolean getIsCrcSuccessful();
  }
  /**
   * <pre>
   * Metadata of an artifact.
   * </pre>
   *
   * Protobuf type {@code spark.connect.AddArtifactsResponse.ArtifactSummary}
   */
  public static final class ArtifactSummary extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:spark.connect.AddArtifactsResponse.ArtifactSummary)
      ArtifactSummaryOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ArtifactSummary.newBuilder() to construct.
    private ArtifactSummary(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ArtifactSummary() {
      name_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ArtifactSummary();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.kyuubi.engine.spark.connect.proto.Base.internal_static_spark_connect_AddArtifactsResponse_ArtifactSummary_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.kyuubi.engine.spark.connect.proto.Base.internal_static_spark_connect_AddArtifactsResponse_ArtifactSummary_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.kyuubi.engine.spark.connect.proto.AddArtifactsResponse.ArtifactSummary.class, org.apache.kyuubi.engine.spark.connect.proto.AddArtifactsResponse.ArtifactSummary.Builder.class);
    }

    public static final int NAME_FIELD_NUMBER = 1;
    private volatile java.lang.Object name_;
    /**
     * <code>string name = 1;</code>
     * @return The name.
     */
    @java.lang.Override
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <code>string name = 1;</code>
     * @return The bytes for name.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int IS_CRC_SUCCESSFUL_FIELD_NUMBER = 2;
    private boolean isCrcSuccessful_;
    /**
     * <pre>
     * Whether the CRC (Cyclic Redundancy Check) is successful on server verification.
     * The server discards any artifact that fails the CRC.
     * If false, the client may choose to resend the artifact specified by `name`.
     * </pre>
     *
     * <code>bool is_crc_successful = 2;</code>
     * @return The isCrcSuccessful.
     */
    @java.lang.Override
    public boolean getIsCrcSuccessful() {
      return isCrcSuccessful_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
      }
      if (isCrcSuccessful_ != false) {
        output.writeBool(2, isCrcSuccessful_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
      }
      if (isCrcSuccessful_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, isCrcSuccessful_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.kyuubi.engine.spark.connect.proto.AddArtifactsResponse.ArtifactSummary)) {
        return super.equals(obj);
      }
      org.apache.kyuubi.engine.spark.connect.proto.AddArtifactsResponse.ArtifactSummary other = (org.apache.kyuubi.engine.spark.connect.proto.AddArtifactsResponse.ArtifactSummary) obj;

      if (!getName()
          .equals(other.getName())) return false;
      if (getIsCrcSuccessful()
          != other.getIsCrcSuccessful()) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      hash = (37 * hash) + IS_CRC_SUCCESSFUL_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getIsCrcSuccessful());
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.kyuubi.engine.spark.connect.proto.AddArtifactsResponse.ArtifactSummary parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.AddArtifactsResponse.ArtifactSummary parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.AddArtifactsResponse.ArtifactSummary parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.AddArtifactsResponse.ArtifactSummary parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.AddArtifactsResponse.ArtifactSummary parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.AddArtifactsResponse.ArtifactSummary parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.AddArtifactsResponse.ArtifactSummary parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.AddArtifactsResponse.ArtifactSummary parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.AddArtifactsResponse.ArtifactSummary parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.AddArtifactsResponse.ArtifactSummary parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.AddArtifactsResponse.ArtifactSummary parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.AddArtifactsResponse.ArtifactSummary parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.kyuubi.engine.spark.connect.proto.AddArtifactsResponse.ArtifactSummary prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Metadata of an artifact.
     * </pre>
     *
     * Protobuf type {@code spark.connect.AddArtifactsResponse.ArtifactSummary}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:spark.connect.AddArtifactsResponse.ArtifactSummary)
        org.apache.kyuubi.engine.spark.connect.proto.AddArtifactsResponse.ArtifactSummaryOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.kyuubi.engine.spark.connect.proto.Base.internal_static_spark_connect_AddArtifactsResponse_ArtifactSummary_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.kyuubi.engine.spark.connect.proto.Base.internal_static_spark_connect_AddArtifactsResponse_ArtifactSummary_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.kyuubi.engine.spark.connect.proto.AddArtifactsResponse.ArtifactSummary.class, org.apache.kyuubi.engine.spark.connect.proto.AddArtifactsResponse.ArtifactSummary.Builder.class);
      }

      // Construct using org.apache.kyuubi.engine.spark.connect.proto.AddArtifactsResponse.ArtifactSummary.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        name_ = "";

        isCrcSuccessful_ = false;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.kyuubi.engine.spark.connect.proto.Base.internal_static_spark_connect_AddArtifactsResponse_ArtifactSummary_descriptor;
      }

      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.proto.AddArtifactsResponse.ArtifactSummary getDefaultInstanceForType() {
        return org.apache.kyuubi.engine.spark.connect.proto.AddArtifactsResponse.ArtifactSummary.getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.proto.AddArtifactsResponse.ArtifactSummary build() {
        org.apache.kyuubi.engine.spark.connect.proto.AddArtifactsResponse.ArtifactSummary result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.proto.AddArtifactsResponse.ArtifactSummary buildPartial() {
        org.apache.kyuubi.engine.spark.connect.proto.AddArtifactsResponse.ArtifactSummary result = new org.apache.kyuubi.engine.spark.connect.proto.AddArtifactsResponse.ArtifactSummary(this);
        result.name_ = name_;
        result.isCrcSuccessful_ = isCrcSuccessful_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.kyuubi.engine.spark.connect.proto.AddArtifactsResponse.ArtifactSummary) {
          return mergeFrom((org.apache.kyuubi.engine.spark.connect.proto.AddArtifactsResponse.ArtifactSummary)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.kyuubi.engine.spark.connect.proto.AddArtifactsResponse.ArtifactSummary other) {
        if (other == org.apache.kyuubi.engine.spark.connect.proto.AddArtifactsResponse.ArtifactSummary.getDefaultInstance()) return this;
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        if (other.getIsCrcSuccessful() != false) {
          setIsCrcSuccessful(other.getIsCrcSuccessful());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                name_ = input.readStringRequireUtf8();

                break;
              } // case 10
              case 16: {
                isCrcSuccessful_ = input.readBool();

                break;
              } // case 16
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }

      private java.lang.Object name_ = "";
      /**
       * <code>string name = 1;</code>
       * @return The name.
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string name = 1;</code>
       * @return The bytes for name.
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string name = 1;</code>
       * @param value The name to set.
       * @return This builder for chaining.
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string name = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>string name = 1;</code>
       * @param value The bytes for name to set.
       * @return This builder for chaining.
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }

      private boolean isCrcSuccessful_ ;
      /**
       * <pre>
       * Whether the CRC (Cyclic Redundancy Check) is successful on server verification.
       * The server discards any artifact that fails the CRC.
       * If false, the client may choose to resend the artifact specified by `name`.
       * </pre>
       *
       * <code>bool is_crc_successful = 2;</code>
       * @return The isCrcSuccessful.
       */
      @java.lang.Override
      public boolean getIsCrcSuccessful() {
        return isCrcSuccessful_;
      }
      /**
       * <pre>
       * Whether the CRC (Cyclic Redundancy Check) is successful on server verification.
       * The server discards any artifact that fails the CRC.
       * If false, the client may choose to resend the artifact specified by `name`.
       * </pre>
       *
       * <code>bool is_crc_successful = 2;</code>
       * @param value The isCrcSuccessful to set.
       * @return This builder for chaining.
       */
      public Builder setIsCrcSuccessful(boolean value) {
        
        isCrcSuccessful_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Whether the CRC (Cyclic Redundancy Check) is successful on server verification.
       * The server discards any artifact that fails the CRC.
       * If false, the client may choose to resend the artifact specified by `name`.
       * </pre>
       *
       * <code>bool is_crc_successful = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearIsCrcSuccessful() {
        
        isCrcSuccessful_ = false;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:spark.connect.AddArtifactsResponse.ArtifactSummary)
    }

    // @@protoc_insertion_point(class_scope:spark.connect.AddArtifactsResponse.ArtifactSummary)
    private static final org.apache.kyuubi.engine.spark.connect.proto.AddArtifactsResponse.ArtifactSummary DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.kyuubi.engine.spark.connect.proto.AddArtifactsResponse.ArtifactSummary();
    }

    public static org.apache.kyuubi.engine.spark.connect.proto.AddArtifactsResponse.ArtifactSummary getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ArtifactSummary>
        PARSER = new com.google.protobuf.AbstractParser<ArtifactSummary>() {
      @java.lang.Override
      public ArtifactSummary parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<ArtifactSummary> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ArtifactSummary> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.AddArtifactsResponse.ArtifactSummary getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public static final int ARTIFACTS_FIELD_NUMBER = 1;
  private java.util.List<org.apache.kyuubi.engine.spark.connect.proto.AddArtifactsResponse.ArtifactSummary> artifacts_;
  /**
   * <pre>
   * The list of artifact(s) seen by the server.
   * </pre>
   *
   * <code>repeated .spark.connect.AddArtifactsResponse.ArtifactSummary artifacts = 1;</code>
   */
  @java.lang.Override
  public java.util.List<org.apache.kyuubi.engine.spark.connect.proto.AddArtifactsResponse.ArtifactSummary> getArtifactsList() {
    return artifacts_;
  }
  /**
   * <pre>
   * The list of artifact(s) seen by the server.
   * </pre>
   *
   * <code>repeated .spark.connect.AddArtifactsResponse.ArtifactSummary artifacts = 1;</code>
   */
  @java.lang.Override
  public java.util.List<? extends org.apache.kyuubi.engine.spark.connect.proto.AddArtifactsResponse.ArtifactSummaryOrBuilder> 
      getArtifactsOrBuilderList() {
    return artifacts_;
  }
  /**
   * <pre>
   * The list of artifact(s) seen by the server.
   * </pre>
   *
   * <code>repeated .spark.connect.AddArtifactsResponse.ArtifactSummary artifacts = 1;</code>
   */
  @java.lang.Override
  public int getArtifactsCount() {
    return artifacts_.size();
  }
  /**
   * <pre>
   * The list of artifact(s) seen by the server.
   * </pre>
   *
   * <code>repeated .spark.connect.AddArtifactsResponse.ArtifactSummary artifacts = 1;</code>
   */
  @java.lang.Override
  public org.apache.kyuubi.engine.spark.connect.proto.AddArtifactsResponse.ArtifactSummary getArtifacts(int index) {
    return artifacts_.get(index);
  }
  /**
   * <pre>
   * The list of artifact(s) seen by the server.
   * </pre>
   *
   * <code>repeated .spark.connect.AddArtifactsResponse.ArtifactSummary artifacts = 1;</code>
   */
  @java.lang.Override
  public org.apache.kyuubi.engine.spark.connect.proto.AddArtifactsResponse.ArtifactSummaryOrBuilder getArtifactsOrBuilder(
      int index) {
    return artifacts_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    for (int i = 0; i < artifacts_.size(); i++) {
      output.writeMessage(1, artifacts_.get(i));
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    for (int i = 0; i < artifacts_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, artifacts_.get(i));
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof org.apache.kyuubi.engine.spark.connect.proto.AddArtifactsResponse)) {
      return super.equals(obj);
    }
    org.apache.kyuubi.engine.spark.connect.proto.AddArtifactsResponse other = (org.apache.kyuubi.engine.spark.connect.proto.AddArtifactsResponse) obj;

    if (!getArtifactsList()
        .equals(other.getArtifactsList())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (getArtifactsCount() > 0) {
      hash = (37 * hash) + ARTIFACTS_FIELD_NUMBER;
      hash = (53 * hash) + getArtifactsList().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static org.apache.kyuubi.engine.spark.connect.proto.AddArtifactsResponse parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.apache.kyuubi.engine.spark.connect.proto.AddArtifactsResponse parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.apache.kyuubi.engine.spark.connect.proto.AddArtifactsResponse parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.apache.kyuubi.engine.spark.connect.proto.AddArtifactsResponse parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.apache.kyuubi.engine.spark.connect.proto.AddArtifactsResponse parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.apache.kyuubi.engine.spark.connect.proto.AddArtifactsResponse parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.apache.kyuubi.engine.spark.connect.proto.AddArtifactsResponse parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.apache.kyuubi.engine.spark.connect.proto.AddArtifactsResponse parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.apache.kyuubi.engine.spark.connect.proto.AddArtifactsResponse parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static org.apache.kyuubi.engine.spark.connect.proto.AddArtifactsResponse parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.apache.kyuubi.engine.spark.connect.proto.AddArtifactsResponse parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.apache.kyuubi.engine.spark.connect.proto.AddArtifactsResponse parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(org.apache.kyuubi.engine.spark.connect.proto.AddArtifactsResponse prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Response to adding an artifact. Contains relevant metadata to verify successful transfer of
   * artifact(s).
   * </pre>
   *
   * Protobuf type {@code spark.connect.AddArtifactsResponse}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:spark.connect.AddArtifactsResponse)
      org.apache.kyuubi.engine.spark.connect.proto.AddArtifactsResponseOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.kyuubi.engine.spark.connect.proto.Base.internal_static_spark_connect_AddArtifactsResponse_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.kyuubi.engine.spark.connect.proto.Base.internal_static_spark_connect_AddArtifactsResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.kyuubi.engine.spark.connect.proto.AddArtifactsResponse.class, org.apache.kyuubi.engine.spark.connect.proto.AddArtifactsResponse.Builder.class);
    }

    // Construct using org.apache.kyuubi.engine.spark.connect.proto.AddArtifactsResponse.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      if (artifactsBuilder_ == null) {
        artifacts_ = java.util.Collections.emptyList();
      } else {
        artifacts_ = null;
        artifactsBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000001);
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return org.apache.kyuubi.engine.spark.connect.proto.Base.internal_static_spark_connect_AddArtifactsResponse_descriptor;
    }

    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.AddArtifactsResponse getDefaultInstanceForType() {
      return org.apache.kyuubi.engine.spark.connect.proto.AddArtifactsResponse.getDefaultInstance();
    }

    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.AddArtifactsResponse build() {
      org.apache.kyuubi.engine.spark.connect.proto.AddArtifactsResponse result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.AddArtifactsResponse buildPartial() {
      org.apache.kyuubi.engine.spark.connect.proto.AddArtifactsResponse result = new org.apache.kyuubi.engine.spark.connect.proto.AddArtifactsResponse(this);
      int from_bitField0_ = bitField0_;
      if (artifactsBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0)) {
          artifacts_ = java.util.Collections.unmodifiableList(artifacts_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.artifacts_ = artifacts_;
      } else {
        result.artifacts_ = artifactsBuilder_.build();
      }
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof org.apache.kyuubi.engine.spark.connect.proto.AddArtifactsResponse) {
        return mergeFrom((org.apache.kyuubi.engine.spark.connect.proto.AddArtifactsResponse)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(org.apache.kyuubi.engine.spark.connect.proto.AddArtifactsResponse other) {
      if (other == org.apache.kyuubi.engine.spark.connect.proto.AddArtifactsResponse.getDefaultInstance()) return this;
      if (artifactsBuilder_ == null) {
        if (!other.artifacts_.isEmpty()) {
          if (artifacts_.isEmpty()) {
            artifacts_ = other.artifacts_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureArtifactsIsMutable();
            artifacts_.addAll(other.artifacts_);
          }
          onChanged();
        }
      } else {
        if (!other.artifacts_.isEmpty()) {
          if (artifactsBuilder_.isEmpty()) {
            artifactsBuilder_.dispose();
            artifactsBuilder_ = null;
            artifacts_ = other.artifacts_;
            bitField0_ = (bitField0_ & ~0x00000001);
            artifactsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getArtifactsFieldBuilder() : null;
          } else {
            artifactsBuilder_.addAllMessages(other.artifacts_);
          }
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              org.apache.kyuubi.engine.spark.connect.proto.AddArtifactsResponse.ArtifactSummary m =
                  input.readMessage(
                      org.apache.kyuubi.engine.spark.connect.proto.AddArtifactsResponse.ArtifactSummary.parser(),
                      extensionRegistry);
              if (artifactsBuilder_ == null) {
                ensureArtifactsIsMutable();
                artifacts_.add(m);
              } else {
                artifactsBuilder_.addMessage(m);
              }
              break;
            } // case 10
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private java.util.List<org.apache.kyuubi.engine.spark.connect.proto.AddArtifactsResponse.ArtifactSummary> artifacts_ =
      java.util.Collections.emptyList();
    private void ensureArtifactsIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        artifacts_ = new java.util.ArrayList<org.apache.kyuubi.engine.spark.connect.proto.AddArtifactsResponse.ArtifactSummary>(artifacts_);
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        org.apache.kyuubi.engine.spark.connect.proto.AddArtifactsResponse.ArtifactSummary, org.apache.kyuubi.engine.spark.connect.proto.AddArtifactsResponse.ArtifactSummary.Builder, org.apache.kyuubi.engine.spark.connect.proto.AddArtifactsResponse.ArtifactSummaryOrBuilder> artifactsBuilder_;

    /**
     * <pre>
     * The list of artifact(s) seen by the server.
     * </pre>
     *
     * <code>repeated .spark.connect.AddArtifactsResponse.ArtifactSummary artifacts = 1;</code>
     */
    public java.util.List<org.apache.kyuubi.engine.spark.connect.proto.AddArtifactsResponse.ArtifactSummary> getArtifactsList() {
      if (artifactsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(artifacts_);
      } else {
        return artifactsBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * The list of artifact(s) seen by the server.
     * </pre>
     *
     * <code>repeated .spark.connect.AddArtifactsResponse.ArtifactSummary artifacts = 1;</code>
     */
    public int getArtifactsCount() {
      if (artifactsBuilder_ == null) {
        return artifacts_.size();
      } else {
        return artifactsBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * The list of artifact(s) seen by the server.
     * </pre>
     *
     * <code>repeated .spark.connect.AddArtifactsResponse.ArtifactSummary artifacts = 1;</code>
     */
    public org.apache.kyuubi.engine.spark.connect.proto.AddArtifactsResponse.ArtifactSummary getArtifacts(int index) {
      if (artifactsBuilder_ == null) {
        return artifacts_.get(index);
      } else {
        return artifactsBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * The list of artifact(s) seen by the server.
     * </pre>
     *
     * <code>repeated .spark.connect.AddArtifactsResponse.ArtifactSummary artifacts = 1;</code>
     */
    public Builder setArtifacts(
        int index, org.apache.kyuubi.engine.spark.connect.proto.AddArtifactsResponse.ArtifactSummary value) {
      if (artifactsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureArtifactsIsMutable();
        artifacts_.set(index, value);
        onChanged();
      } else {
        artifactsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * The list of artifact(s) seen by the server.
     * </pre>
     *
     * <code>repeated .spark.connect.AddArtifactsResponse.ArtifactSummary artifacts = 1;</code>
     */
    public Builder setArtifacts(
        int index, org.apache.kyuubi.engine.spark.connect.proto.AddArtifactsResponse.ArtifactSummary.Builder builderForValue) {
      if (artifactsBuilder_ == null) {
        ensureArtifactsIsMutable();
        artifacts_.set(index, builderForValue.build());
        onChanged();
      } else {
        artifactsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The list of artifact(s) seen by the server.
     * </pre>
     *
     * <code>repeated .spark.connect.AddArtifactsResponse.ArtifactSummary artifacts = 1;</code>
     */
    public Builder addArtifacts(org.apache.kyuubi.engine.spark.connect.proto.AddArtifactsResponse.ArtifactSummary value) {
      if (artifactsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureArtifactsIsMutable();
        artifacts_.add(value);
        onChanged();
      } else {
        artifactsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * The list of artifact(s) seen by the server.
     * </pre>
     *
     * <code>repeated .spark.connect.AddArtifactsResponse.ArtifactSummary artifacts = 1;</code>
     */
    public Builder addArtifacts(
        int index, org.apache.kyuubi.engine.spark.connect.proto.AddArtifactsResponse.ArtifactSummary value) {
      if (artifactsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureArtifactsIsMutable();
        artifacts_.add(index, value);
        onChanged();
      } else {
        artifactsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * The list of artifact(s) seen by the server.
     * </pre>
     *
     * <code>repeated .spark.connect.AddArtifactsResponse.ArtifactSummary artifacts = 1;</code>
     */
    public Builder addArtifacts(
        org.apache.kyuubi.engine.spark.connect.proto.AddArtifactsResponse.ArtifactSummary.Builder builderForValue) {
      if (artifactsBuilder_ == null) {
        ensureArtifactsIsMutable();
        artifacts_.add(builderForValue.build());
        onChanged();
      } else {
        artifactsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The list of artifact(s) seen by the server.
     * </pre>
     *
     * <code>repeated .spark.connect.AddArtifactsResponse.ArtifactSummary artifacts = 1;</code>
     */
    public Builder addArtifacts(
        int index, org.apache.kyuubi.engine.spark.connect.proto.AddArtifactsResponse.ArtifactSummary.Builder builderForValue) {
      if (artifactsBuilder_ == null) {
        ensureArtifactsIsMutable();
        artifacts_.add(index, builderForValue.build());
        onChanged();
      } else {
        artifactsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The list of artifact(s) seen by the server.
     * </pre>
     *
     * <code>repeated .spark.connect.AddArtifactsResponse.ArtifactSummary artifacts = 1;</code>
     */
    public Builder addAllArtifacts(
        java.lang.Iterable<? extends org.apache.kyuubi.engine.spark.connect.proto.AddArtifactsResponse.ArtifactSummary> values) {
      if (artifactsBuilder_ == null) {
        ensureArtifactsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, artifacts_);
        onChanged();
      } else {
        artifactsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * The list of artifact(s) seen by the server.
     * </pre>
     *
     * <code>repeated .spark.connect.AddArtifactsResponse.ArtifactSummary artifacts = 1;</code>
     */
    public Builder clearArtifacts() {
      if (artifactsBuilder_ == null) {
        artifacts_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        artifactsBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * The list of artifact(s) seen by the server.
     * </pre>
     *
     * <code>repeated .spark.connect.AddArtifactsResponse.ArtifactSummary artifacts = 1;</code>
     */
    public Builder removeArtifacts(int index) {
      if (artifactsBuilder_ == null) {
        ensureArtifactsIsMutable();
        artifacts_.remove(index);
        onChanged();
      } else {
        artifactsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * The list of artifact(s) seen by the server.
     * </pre>
     *
     * <code>repeated .spark.connect.AddArtifactsResponse.ArtifactSummary artifacts = 1;</code>
     */
    public org.apache.kyuubi.engine.spark.connect.proto.AddArtifactsResponse.ArtifactSummary.Builder getArtifactsBuilder(
        int index) {
      return getArtifactsFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * The list of artifact(s) seen by the server.
     * </pre>
     *
     * <code>repeated .spark.connect.AddArtifactsResponse.ArtifactSummary artifacts = 1;</code>
     */
    public org.apache.kyuubi.engine.spark.connect.proto.AddArtifactsResponse.ArtifactSummaryOrBuilder getArtifactsOrBuilder(
        int index) {
      if (artifactsBuilder_ == null) {
        return artifacts_.get(index);  } else {
        return artifactsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * The list of artifact(s) seen by the server.
     * </pre>
     *
     * <code>repeated .spark.connect.AddArtifactsResponse.ArtifactSummary artifacts = 1;</code>
     */
    public java.util.List<? extends org.apache.kyuubi.engine.spark.connect.proto.AddArtifactsResponse.ArtifactSummaryOrBuilder> 
         getArtifactsOrBuilderList() {
      if (artifactsBuilder_ != null) {
        return artifactsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(artifacts_);
      }
    }
    /**
     * <pre>
     * The list of artifact(s) seen by the server.
     * </pre>
     *
     * <code>repeated .spark.connect.AddArtifactsResponse.ArtifactSummary artifacts = 1;</code>
     */
    public org.apache.kyuubi.engine.spark.connect.proto.AddArtifactsResponse.ArtifactSummary.Builder addArtifactsBuilder() {
      return getArtifactsFieldBuilder().addBuilder(
          org.apache.kyuubi.engine.spark.connect.proto.AddArtifactsResponse.ArtifactSummary.getDefaultInstance());
    }
    /**
     * <pre>
     * The list of artifact(s) seen by the server.
     * </pre>
     *
     * <code>repeated .spark.connect.AddArtifactsResponse.ArtifactSummary artifacts = 1;</code>
     */
    public org.apache.kyuubi.engine.spark.connect.proto.AddArtifactsResponse.ArtifactSummary.Builder addArtifactsBuilder(
        int index) {
      return getArtifactsFieldBuilder().addBuilder(
          index, org.apache.kyuubi.engine.spark.connect.proto.AddArtifactsResponse.ArtifactSummary.getDefaultInstance());
    }
    /**
     * <pre>
     * The list of artifact(s) seen by the server.
     * </pre>
     *
     * <code>repeated .spark.connect.AddArtifactsResponse.ArtifactSummary artifacts = 1;</code>
     */
    public java.util.List<org.apache.kyuubi.engine.spark.connect.proto.AddArtifactsResponse.ArtifactSummary.Builder> 
         getArtifactsBuilderList() {
      return getArtifactsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        org.apache.kyuubi.engine.spark.connect.proto.AddArtifactsResponse.ArtifactSummary, org.apache.kyuubi.engine.spark.connect.proto.AddArtifactsResponse.ArtifactSummary.Builder, org.apache.kyuubi.engine.spark.connect.proto.AddArtifactsResponse.ArtifactSummaryOrBuilder> 
        getArtifactsFieldBuilder() {
      if (artifactsBuilder_ == null) {
        artifactsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            org.apache.kyuubi.engine.spark.connect.proto.AddArtifactsResponse.ArtifactSummary, org.apache.kyuubi.engine.spark.connect.proto.AddArtifactsResponse.ArtifactSummary.Builder, org.apache.kyuubi.engine.spark.connect.proto.AddArtifactsResponse.ArtifactSummaryOrBuilder>(
                artifacts_,
                ((bitField0_ & 0x00000001) != 0),
                getParentForChildren(),
                isClean());
        artifacts_ = null;
      }
      return artifactsBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:spark.connect.AddArtifactsResponse)
  }

  // @@protoc_insertion_point(class_scope:spark.connect.AddArtifactsResponse)
  private static final org.apache.kyuubi.engine.spark.connect.proto.AddArtifactsResponse DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new org.apache.kyuubi.engine.spark.connect.proto.AddArtifactsResponse();
  }

  public static org.apache.kyuubi.engine.spark.connect.proto.AddArtifactsResponse getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<AddArtifactsResponse>
      PARSER = new com.google.protobuf.AbstractParser<AddArtifactsResponse>() {
    @java.lang.Override
    public AddArtifactsResponse parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<AddArtifactsResponse> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<AddArtifactsResponse> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public org.apache.kyuubi.engine.spark.connect.proto.AddArtifactsResponse getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

