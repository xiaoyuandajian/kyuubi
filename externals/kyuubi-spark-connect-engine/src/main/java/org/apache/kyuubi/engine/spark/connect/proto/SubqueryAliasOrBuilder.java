// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: spark/connect/relations.proto

package org.apache.kyuubi.engine.spark.connect.proto;

public interface SubqueryAliasOrBuilder extends
    // @@protoc_insertion_point(interface_extends:spark.connect.SubqueryAlias)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * (Required) The input relation of SubqueryAlias.
   * </pre>
   *
   * <code>.spark.connect.Relation input = 1;</code>
   * @return Whether the input field is set.
   */
  boolean hasInput();
  /**
   * <pre>
   * (Required) The input relation of SubqueryAlias.
   * </pre>
   *
   * <code>.spark.connect.Relation input = 1;</code>
   * @return The input.
   */
  org.apache.kyuubi.engine.spark.connect.proto.Relation getInput();
  /**
   * <pre>
   * (Required) The input relation of SubqueryAlias.
   * </pre>
   *
   * <code>.spark.connect.Relation input = 1;</code>
   */
  org.apache.kyuubi.engine.spark.connect.proto.RelationOrBuilder getInputOrBuilder();

  /**
   * <pre>
   * (Required) The alias.
   * </pre>
   *
   * <code>string alias = 2;</code>
   * @return The alias.
   */
  java.lang.String getAlias();
  /**
   * <pre>
   * (Required) The alias.
   * </pre>
   *
   * <code>string alias = 2;</code>
   * @return The bytes for alias.
   */
  com.google.protobuf.ByteString
      getAliasBytes();

  /**
   * <pre>
   * (Optional) Qualifier of the alias.
   * </pre>
   *
   * <code>repeated string qualifier = 3;</code>
   * @return A list containing the qualifier.
   */
  java.util.List<java.lang.String>
      getQualifierList();
  /**
   * <pre>
   * (Optional) Qualifier of the alias.
   * </pre>
   *
   * <code>repeated string qualifier = 3;</code>
   * @return The count of qualifier.
   */
  int getQualifierCount();
  /**
   * <pre>
   * (Optional) Qualifier of the alias.
   * </pre>
   *
   * <code>repeated string qualifier = 3;</code>
   * @param index The index of the element to return.
   * @return The qualifier at the given index.
   */
  java.lang.String getQualifier(int index);
  /**
   * <pre>
   * (Optional) Qualifier of the alias.
   * </pre>
   *
   * <code>repeated string qualifier = 3;</code>
   * @param index The index of the value to return.
   * @return The bytes of the qualifier at the given index.
   */
  com.google.protobuf.ByteString
      getQualifierBytes(int index);
}
