// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: kyuubi/spark/connect/base.proto

package org.apache.kyuubi.engine.spark.connect.grpc.proto;

public interface AnalyzePlanResponseOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:spark.connect.AnalyzePlanResponse)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>string session_id = 1;</code>
   *
   * @return The sessionId.
   */
  java.lang.String getSessionId();
  /**
   * <code>string session_id = 1;</code>
   *
   * @return The bytes for sessionId.
   */
  com.google.protobuf.ByteString getSessionIdBytes();

  /**
   *
   *
   * <pre>
   * Server-side generated idempotency key that the client can use to assert that the server side
   * session has not changed.
   * </pre>
   *
   * <code>string server_side_session_id = 15;</code>
   *
   * @return The serverSideSessionId.
   */
  java.lang.String getServerSideSessionId();
  /**
   *
   *
   * <pre>
   * Server-side generated idempotency key that the client can use to assert that the server side
   * session has not changed.
   * </pre>
   *
   * <code>string server_side_session_id = 15;</code>
   *
   * @return The bytes for serverSideSessionId.
   */
  com.google.protobuf.ByteString getServerSideSessionIdBytes();

  /**
   * <code>.spark.connect.AnalyzePlanResponse.Schema schema = 2;</code>
   *
   * @return Whether the schema field is set.
   */
  boolean hasSchema();
  /**
   * <code>.spark.connect.AnalyzePlanResponse.Schema schema = 2;</code>
   *
   * @return The schema.
   */
  org.apache.kyuubi.engine.spark.connect.grpc.proto.AnalyzePlanResponse.Schema getSchema();
  /** <code>.spark.connect.AnalyzePlanResponse.Schema schema = 2;</code> */
  org.apache.kyuubi.engine.spark.connect.grpc.proto.AnalyzePlanResponse.SchemaOrBuilder
      getSchemaOrBuilder();

  /**
   * <code>.spark.connect.AnalyzePlanResponse.Explain explain = 3;</code>
   *
   * @return Whether the explain field is set.
   */
  boolean hasExplain();
  /**
   * <code>.spark.connect.AnalyzePlanResponse.Explain explain = 3;</code>
   *
   * @return The explain.
   */
  org.apache.kyuubi.engine.spark.connect.grpc.proto.AnalyzePlanResponse.Explain getExplain();
  /** <code>.spark.connect.AnalyzePlanResponse.Explain explain = 3;</code> */
  org.apache.kyuubi.engine.spark.connect.grpc.proto.AnalyzePlanResponse.ExplainOrBuilder
      getExplainOrBuilder();

  /**
   * <code>.spark.connect.AnalyzePlanResponse.TreeString tree_string = 4;</code>
   *
   * @return Whether the treeString field is set.
   */
  boolean hasTreeString();
  /**
   * <code>.spark.connect.AnalyzePlanResponse.TreeString tree_string = 4;</code>
   *
   * @return The treeString.
   */
  org.apache.kyuubi.engine.spark.connect.grpc.proto.AnalyzePlanResponse.TreeString getTreeString();
  /** <code>.spark.connect.AnalyzePlanResponse.TreeString tree_string = 4;</code> */
  org.apache.kyuubi.engine.spark.connect.grpc.proto.AnalyzePlanResponse.TreeStringOrBuilder
      getTreeStringOrBuilder();

  /**
   * <code>.spark.connect.AnalyzePlanResponse.IsLocal is_local = 5;</code>
   *
   * @return Whether the isLocal field is set.
   */
  boolean hasIsLocal();
  /**
   * <code>.spark.connect.AnalyzePlanResponse.IsLocal is_local = 5;</code>
   *
   * @return The isLocal.
   */
  org.apache.kyuubi.engine.spark.connect.grpc.proto.AnalyzePlanResponse.IsLocal getIsLocal();
  /** <code>.spark.connect.AnalyzePlanResponse.IsLocal is_local = 5;</code> */
  org.apache.kyuubi.engine.spark.connect.grpc.proto.AnalyzePlanResponse.IsLocalOrBuilder
      getIsLocalOrBuilder();

  /**
   * <code>.spark.connect.AnalyzePlanResponse.IsStreaming is_streaming = 6;</code>
   *
   * @return Whether the isStreaming field is set.
   */
  boolean hasIsStreaming();
  /**
   * <code>.spark.connect.AnalyzePlanResponse.IsStreaming is_streaming = 6;</code>
   *
   * @return The isStreaming.
   */
  org.apache.kyuubi.engine.spark.connect.grpc.proto.AnalyzePlanResponse.IsStreaming
      getIsStreaming();
  /** <code>.spark.connect.AnalyzePlanResponse.IsStreaming is_streaming = 6;</code> */
  org.apache.kyuubi.engine.spark.connect.grpc.proto.AnalyzePlanResponse.IsStreamingOrBuilder
      getIsStreamingOrBuilder();

  /**
   * <code>.spark.connect.AnalyzePlanResponse.InputFiles input_files = 7;</code>
   *
   * @return Whether the inputFiles field is set.
   */
  boolean hasInputFiles();
  /**
   * <code>.spark.connect.AnalyzePlanResponse.InputFiles input_files = 7;</code>
   *
   * @return The inputFiles.
   */
  org.apache.kyuubi.engine.spark.connect.grpc.proto.AnalyzePlanResponse.InputFiles getInputFiles();
  /** <code>.spark.connect.AnalyzePlanResponse.InputFiles input_files = 7;</code> */
  org.apache.kyuubi.engine.spark.connect.grpc.proto.AnalyzePlanResponse.InputFilesOrBuilder
      getInputFilesOrBuilder();

  /**
   * <code>.spark.connect.AnalyzePlanResponse.SparkVersion spark_version = 8;</code>
   *
   * @return Whether the sparkVersion field is set.
   */
  boolean hasSparkVersion();
  /**
   * <code>.spark.connect.AnalyzePlanResponse.SparkVersion spark_version = 8;</code>
   *
   * @return The sparkVersion.
   */
  org.apache.kyuubi.engine.spark.connect.grpc.proto.AnalyzePlanResponse.SparkVersion
      getSparkVersion();
  /** <code>.spark.connect.AnalyzePlanResponse.SparkVersion spark_version = 8;</code> */
  org.apache.kyuubi.engine.spark.connect.grpc.proto.AnalyzePlanResponse.SparkVersionOrBuilder
      getSparkVersionOrBuilder();

  /**
   * <code>.spark.connect.AnalyzePlanResponse.DDLParse ddl_parse = 9;</code>
   *
   * @return Whether the ddlParse field is set.
   */
  boolean hasDdlParse();
  /**
   * <code>.spark.connect.AnalyzePlanResponse.DDLParse ddl_parse = 9;</code>
   *
   * @return The ddlParse.
   */
  org.apache.kyuubi.engine.spark.connect.grpc.proto.AnalyzePlanResponse.DDLParse getDdlParse();
  /** <code>.spark.connect.AnalyzePlanResponse.DDLParse ddl_parse = 9;</code> */
  org.apache.kyuubi.engine.spark.connect.grpc.proto.AnalyzePlanResponse.DDLParseOrBuilder
      getDdlParseOrBuilder();

  /**
   * <code>.spark.connect.AnalyzePlanResponse.SameSemantics same_semantics = 10;</code>
   *
   * @return Whether the sameSemantics field is set.
   */
  boolean hasSameSemantics();
  /**
   * <code>.spark.connect.AnalyzePlanResponse.SameSemantics same_semantics = 10;</code>
   *
   * @return The sameSemantics.
   */
  org.apache.kyuubi.engine.spark.connect.grpc.proto.AnalyzePlanResponse.SameSemantics
      getSameSemantics();
  /** <code>.spark.connect.AnalyzePlanResponse.SameSemantics same_semantics = 10;</code> */
  org.apache.kyuubi.engine.spark.connect.grpc.proto.AnalyzePlanResponse.SameSemanticsOrBuilder
      getSameSemanticsOrBuilder();

  /**
   * <code>.spark.connect.AnalyzePlanResponse.SemanticHash semantic_hash = 11;</code>
   *
   * @return Whether the semanticHash field is set.
   */
  boolean hasSemanticHash();
  /**
   * <code>.spark.connect.AnalyzePlanResponse.SemanticHash semantic_hash = 11;</code>
   *
   * @return The semanticHash.
   */
  org.apache.kyuubi.engine.spark.connect.grpc.proto.AnalyzePlanResponse.SemanticHash
      getSemanticHash();
  /** <code>.spark.connect.AnalyzePlanResponse.SemanticHash semantic_hash = 11;</code> */
  org.apache.kyuubi.engine.spark.connect.grpc.proto.AnalyzePlanResponse.SemanticHashOrBuilder
      getSemanticHashOrBuilder();

  /**
   * <code>.spark.connect.AnalyzePlanResponse.Persist persist = 12;</code>
   *
   * @return Whether the persist field is set.
   */
  boolean hasPersist();
  /**
   * <code>.spark.connect.AnalyzePlanResponse.Persist persist = 12;</code>
   *
   * @return The persist.
   */
  org.apache.kyuubi.engine.spark.connect.grpc.proto.AnalyzePlanResponse.Persist getPersist();
  /** <code>.spark.connect.AnalyzePlanResponse.Persist persist = 12;</code> */
  org.apache.kyuubi.engine.spark.connect.grpc.proto.AnalyzePlanResponse.PersistOrBuilder
      getPersistOrBuilder();

  /**
   * <code>.spark.connect.AnalyzePlanResponse.Unpersist unpersist = 13;</code>
   *
   * @return Whether the unpersist field is set.
   */
  boolean hasUnpersist();
  /**
   * <code>.spark.connect.AnalyzePlanResponse.Unpersist unpersist = 13;</code>
   *
   * @return The unpersist.
   */
  org.apache.kyuubi.engine.spark.connect.grpc.proto.AnalyzePlanResponse.Unpersist getUnpersist();
  /** <code>.spark.connect.AnalyzePlanResponse.Unpersist unpersist = 13;</code> */
  org.apache.kyuubi.engine.spark.connect.grpc.proto.AnalyzePlanResponse.UnpersistOrBuilder
      getUnpersistOrBuilder();

  /**
   * <code>.spark.connect.AnalyzePlanResponse.GetStorageLevel get_storage_level = 14;</code>
   *
   * @return Whether the getStorageLevel field is set.
   */
  boolean hasGetStorageLevel();
  /**
   * <code>.spark.connect.AnalyzePlanResponse.GetStorageLevel get_storage_level = 14;</code>
   *
   * @return The getStorageLevel.
   */
  org.apache.kyuubi.engine.spark.connect.grpc.proto.AnalyzePlanResponse.GetStorageLevel
      getGetStorageLevel();
  /** <code>.spark.connect.AnalyzePlanResponse.GetStorageLevel get_storage_level = 14;</code> */
  org.apache.kyuubi.engine.spark.connect.grpc.proto.AnalyzePlanResponse.GetStorageLevelOrBuilder
      getGetStorageLevelOrBuilder();

  public org.apache.kyuubi.engine.spark.connect.grpc.proto.AnalyzePlanResponse.ResultCase
      getResultCase();
}
