// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: spark/connect/expressions.proto

package org.apache.kyuubi.engine.spark.connect.proto;

/**
 * Protobuf type {@code spark.connect.CommonInlineUserDefinedFunction}
 */
public final class CommonInlineUserDefinedFunction extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:spark.connect.CommonInlineUserDefinedFunction)
    CommonInlineUserDefinedFunctionOrBuilder {
private static final long serialVersionUID = 0L;
  // Use CommonInlineUserDefinedFunction.newBuilder() to construct.
  private CommonInlineUserDefinedFunction(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private CommonInlineUserDefinedFunction() {
    functionName_ = "";
    arguments_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new CommonInlineUserDefinedFunction();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return org.apache.kyuubi.engine.spark.connect.proto.Expressions.internal_static_spark_connect_CommonInlineUserDefinedFunction_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return org.apache.kyuubi.engine.spark.connect.proto.Expressions.internal_static_spark_connect_CommonInlineUserDefinedFunction_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            org.apache.kyuubi.engine.spark.connect.proto.CommonInlineUserDefinedFunction.class, org.apache.kyuubi.engine.spark.connect.proto.CommonInlineUserDefinedFunction.Builder.class);
  }

  private int functionCase_ = 0;
  private java.lang.Object function_;
  public enum FunctionCase
      implements com.google.protobuf.Internal.EnumLite,
          com.google.protobuf.AbstractMessage.InternalOneOfEnum {
    PYTHON_UDF(4),
    SCALAR_SCALA_UDF(5),
    JAVA_UDF(6),
    FUNCTION_NOT_SET(0);
    private final int value;
    private FunctionCase(int value) {
      this.value = value;
    }
    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static FunctionCase valueOf(int value) {
      return forNumber(value);
    }

    public static FunctionCase forNumber(int value) {
      switch (value) {
        case 4: return PYTHON_UDF;
        case 5: return SCALAR_SCALA_UDF;
        case 6: return JAVA_UDF;
        case 0: return FUNCTION_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public FunctionCase
  getFunctionCase() {
    return FunctionCase.forNumber(
        functionCase_);
  }

  public static final int FUNCTION_NAME_FIELD_NUMBER = 1;
  private volatile java.lang.Object functionName_;
  /**
   * <pre>
   * (Required) Name of the user-defined function.
   * </pre>
   *
   * <code>string function_name = 1;</code>
   * @return The functionName.
   */
  @java.lang.Override
  public java.lang.String getFunctionName() {
    java.lang.Object ref = functionName_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      functionName_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * (Required) Name of the user-defined function.
   * </pre>
   *
   * <code>string function_name = 1;</code>
   * @return The bytes for functionName.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getFunctionNameBytes() {
    java.lang.Object ref = functionName_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      functionName_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int DETERMINISTIC_FIELD_NUMBER = 2;
  private boolean deterministic_;
  /**
   * <pre>
   * (Optional) Indicate if the user-defined function is deterministic.
   * </pre>
   *
   * <code>bool deterministic = 2;</code>
   * @return The deterministic.
   */
  @java.lang.Override
  public boolean getDeterministic() {
    return deterministic_;
  }

  public static final int ARGUMENTS_FIELD_NUMBER = 3;
  private java.util.List<org.apache.kyuubi.engine.spark.connect.proto.Expression> arguments_;
  /**
   * <pre>
   * (Optional) Function arguments. Empty arguments are allowed.
   * </pre>
   *
   * <code>repeated .spark.connect.Expression arguments = 3;</code>
   */
  @java.lang.Override
  public java.util.List<org.apache.kyuubi.engine.spark.connect.proto.Expression> getArgumentsList() {
    return arguments_;
  }
  /**
   * <pre>
   * (Optional) Function arguments. Empty arguments are allowed.
   * </pre>
   *
   * <code>repeated .spark.connect.Expression arguments = 3;</code>
   */
  @java.lang.Override
  public java.util.List<? extends org.apache.kyuubi.engine.spark.connect.proto.ExpressionOrBuilder> 
      getArgumentsOrBuilderList() {
    return arguments_;
  }
  /**
   * <pre>
   * (Optional) Function arguments. Empty arguments are allowed.
   * </pre>
   *
   * <code>repeated .spark.connect.Expression arguments = 3;</code>
   */
  @java.lang.Override
  public int getArgumentsCount() {
    return arguments_.size();
  }
  /**
   * <pre>
   * (Optional) Function arguments. Empty arguments are allowed.
   * </pre>
   *
   * <code>repeated .spark.connect.Expression arguments = 3;</code>
   */
  @java.lang.Override
  public org.apache.kyuubi.engine.spark.connect.proto.Expression getArguments(int index) {
    return arguments_.get(index);
  }
  /**
   * <pre>
   * (Optional) Function arguments. Empty arguments are allowed.
   * </pre>
   *
   * <code>repeated .spark.connect.Expression arguments = 3;</code>
   */
  @java.lang.Override
  public org.apache.kyuubi.engine.spark.connect.proto.ExpressionOrBuilder getArgumentsOrBuilder(
      int index) {
    return arguments_.get(index);
  }

  public static final int PYTHON_UDF_FIELD_NUMBER = 4;
  /**
   * <code>.spark.connect.PythonUDF python_udf = 4;</code>
   * @return Whether the pythonUdf field is set.
   */
  @java.lang.Override
  public boolean hasPythonUdf() {
    return functionCase_ == 4;
  }
  /**
   * <code>.spark.connect.PythonUDF python_udf = 4;</code>
   * @return The pythonUdf.
   */
  @java.lang.Override
  public org.apache.kyuubi.engine.spark.connect.proto.PythonUDF getPythonUdf() {
    if (functionCase_ == 4) {
       return (org.apache.kyuubi.engine.spark.connect.proto.PythonUDF) function_;
    }
    return org.apache.kyuubi.engine.spark.connect.proto.PythonUDF.getDefaultInstance();
  }
  /**
   * <code>.spark.connect.PythonUDF python_udf = 4;</code>
   */
  @java.lang.Override
  public org.apache.kyuubi.engine.spark.connect.proto.PythonUDFOrBuilder getPythonUdfOrBuilder() {
    if (functionCase_ == 4) {
       return (org.apache.kyuubi.engine.spark.connect.proto.PythonUDF) function_;
    }
    return org.apache.kyuubi.engine.spark.connect.proto.PythonUDF.getDefaultInstance();
  }

  public static final int SCALAR_SCALA_UDF_FIELD_NUMBER = 5;
  /**
   * <code>.spark.connect.ScalarScalaUDF scalar_scala_udf = 5;</code>
   * @return Whether the scalarScalaUdf field is set.
   */
  @java.lang.Override
  public boolean hasScalarScalaUdf() {
    return functionCase_ == 5;
  }
  /**
   * <code>.spark.connect.ScalarScalaUDF scalar_scala_udf = 5;</code>
   * @return The scalarScalaUdf.
   */
  @java.lang.Override
  public org.apache.kyuubi.engine.spark.connect.proto.ScalarScalaUDF getScalarScalaUdf() {
    if (functionCase_ == 5) {
       return (org.apache.kyuubi.engine.spark.connect.proto.ScalarScalaUDF) function_;
    }
    return org.apache.kyuubi.engine.spark.connect.proto.ScalarScalaUDF.getDefaultInstance();
  }
  /**
   * <code>.spark.connect.ScalarScalaUDF scalar_scala_udf = 5;</code>
   */
  @java.lang.Override
  public org.apache.kyuubi.engine.spark.connect.proto.ScalarScalaUDFOrBuilder getScalarScalaUdfOrBuilder() {
    if (functionCase_ == 5) {
       return (org.apache.kyuubi.engine.spark.connect.proto.ScalarScalaUDF) function_;
    }
    return org.apache.kyuubi.engine.spark.connect.proto.ScalarScalaUDF.getDefaultInstance();
  }

  public static final int JAVA_UDF_FIELD_NUMBER = 6;
  /**
   * <code>.spark.connect.JavaUDF java_udf = 6;</code>
   * @return Whether the javaUdf field is set.
   */
  @java.lang.Override
  public boolean hasJavaUdf() {
    return functionCase_ == 6;
  }
  /**
   * <code>.spark.connect.JavaUDF java_udf = 6;</code>
   * @return The javaUdf.
   */
  @java.lang.Override
  public org.apache.kyuubi.engine.spark.connect.proto.JavaUDF getJavaUdf() {
    if (functionCase_ == 6) {
       return (org.apache.kyuubi.engine.spark.connect.proto.JavaUDF) function_;
    }
    return org.apache.kyuubi.engine.spark.connect.proto.JavaUDF.getDefaultInstance();
  }
  /**
   * <code>.spark.connect.JavaUDF java_udf = 6;</code>
   */
  @java.lang.Override
  public org.apache.kyuubi.engine.spark.connect.proto.JavaUDFOrBuilder getJavaUdfOrBuilder() {
    if (functionCase_ == 6) {
       return (org.apache.kyuubi.engine.spark.connect.proto.JavaUDF) function_;
    }
    return org.apache.kyuubi.engine.spark.connect.proto.JavaUDF.getDefaultInstance();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(functionName_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, functionName_);
    }
    if (deterministic_ != false) {
      output.writeBool(2, deterministic_);
    }
    for (int i = 0; i < arguments_.size(); i++) {
      output.writeMessage(3, arguments_.get(i));
    }
    if (functionCase_ == 4) {
      output.writeMessage(4, (org.apache.kyuubi.engine.spark.connect.proto.PythonUDF) function_);
    }
    if (functionCase_ == 5) {
      output.writeMessage(5, (org.apache.kyuubi.engine.spark.connect.proto.ScalarScalaUDF) function_);
    }
    if (functionCase_ == 6) {
      output.writeMessage(6, (org.apache.kyuubi.engine.spark.connect.proto.JavaUDF) function_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(functionName_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, functionName_);
    }
    if (deterministic_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(2, deterministic_);
    }
    for (int i = 0; i < arguments_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, arguments_.get(i));
    }
    if (functionCase_ == 4) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, (org.apache.kyuubi.engine.spark.connect.proto.PythonUDF) function_);
    }
    if (functionCase_ == 5) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, (org.apache.kyuubi.engine.spark.connect.proto.ScalarScalaUDF) function_);
    }
    if (functionCase_ == 6) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(6, (org.apache.kyuubi.engine.spark.connect.proto.JavaUDF) function_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof org.apache.kyuubi.engine.spark.connect.proto.CommonInlineUserDefinedFunction)) {
      return super.equals(obj);
    }
    org.apache.kyuubi.engine.spark.connect.proto.CommonInlineUserDefinedFunction other = (org.apache.kyuubi.engine.spark.connect.proto.CommonInlineUserDefinedFunction) obj;

    if (!getFunctionName()
        .equals(other.getFunctionName())) return false;
    if (getDeterministic()
        != other.getDeterministic()) return false;
    if (!getArgumentsList()
        .equals(other.getArgumentsList())) return false;
    if (!getFunctionCase().equals(other.getFunctionCase())) return false;
    switch (functionCase_) {
      case 4:
        if (!getPythonUdf()
            .equals(other.getPythonUdf())) return false;
        break;
      case 5:
        if (!getScalarScalaUdf()
            .equals(other.getScalarScalaUdf())) return false;
        break;
      case 6:
        if (!getJavaUdf()
            .equals(other.getJavaUdf())) return false;
        break;
      case 0:
      default:
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + FUNCTION_NAME_FIELD_NUMBER;
    hash = (53 * hash) + getFunctionName().hashCode();
    hash = (37 * hash) + DETERMINISTIC_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getDeterministic());
    if (getArgumentsCount() > 0) {
      hash = (37 * hash) + ARGUMENTS_FIELD_NUMBER;
      hash = (53 * hash) + getArgumentsList().hashCode();
    }
    switch (functionCase_) {
      case 4:
        hash = (37 * hash) + PYTHON_UDF_FIELD_NUMBER;
        hash = (53 * hash) + getPythonUdf().hashCode();
        break;
      case 5:
        hash = (37 * hash) + SCALAR_SCALA_UDF_FIELD_NUMBER;
        hash = (53 * hash) + getScalarScalaUdf().hashCode();
        break;
      case 6:
        hash = (37 * hash) + JAVA_UDF_FIELD_NUMBER;
        hash = (53 * hash) + getJavaUdf().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static org.apache.kyuubi.engine.spark.connect.proto.CommonInlineUserDefinedFunction parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.apache.kyuubi.engine.spark.connect.proto.CommonInlineUserDefinedFunction parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.apache.kyuubi.engine.spark.connect.proto.CommonInlineUserDefinedFunction parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.apache.kyuubi.engine.spark.connect.proto.CommonInlineUserDefinedFunction parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.apache.kyuubi.engine.spark.connect.proto.CommonInlineUserDefinedFunction parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.apache.kyuubi.engine.spark.connect.proto.CommonInlineUserDefinedFunction parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.apache.kyuubi.engine.spark.connect.proto.CommonInlineUserDefinedFunction parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.apache.kyuubi.engine.spark.connect.proto.CommonInlineUserDefinedFunction parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.apache.kyuubi.engine.spark.connect.proto.CommonInlineUserDefinedFunction parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static org.apache.kyuubi.engine.spark.connect.proto.CommonInlineUserDefinedFunction parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.apache.kyuubi.engine.spark.connect.proto.CommonInlineUserDefinedFunction parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.apache.kyuubi.engine.spark.connect.proto.CommonInlineUserDefinedFunction parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(org.apache.kyuubi.engine.spark.connect.proto.CommonInlineUserDefinedFunction prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code spark.connect.CommonInlineUserDefinedFunction}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:spark.connect.CommonInlineUserDefinedFunction)
      org.apache.kyuubi.engine.spark.connect.proto.CommonInlineUserDefinedFunctionOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.kyuubi.engine.spark.connect.proto.Expressions.internal_static_spark_connect_CommonInlineUserDefinedFunction_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.kyuubi.engine.spark.connect.proto.Expressions.internal_static_spark_connect_CommonInlineUserDefinedFunction_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.kyuubi.engine.spark.connect.proto.CommonInlineUserDefinedFunction.class, org.apache.kyuubi.engine.spark.connect.proto.CommonInlineUserDefinedFunction.Builder.class);
    }

    // Construct using org.apache.kyuubi.engine.spark.connect.proto.CommonInlineUserDefinedFunction.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      functionName_ = "";

      deterministic_ = false;

      if (argumentsBuilder_ == null) {
        arguments_ = java.util.Collections.emptyList();
      } else {
        arguments_ = null;
        argumentsBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000001);
      if (pythonUdfBuilder_ != null) {
        pythonUdfBuilder_.clear();
      }
      if (scalarScalaUdfBuilder_ != null) {
        scalarScalaUdfBuilder_.clear();
      }
      if (javaUdfBuilder_ != null) {
        javaUdfBuilder_.clear();
      }
      functionCase_ = 0;
      function_ = null;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return org.apache.kyuubi.engine.spark.connect.proto.Expressions.internal_static_spark_connect_CommonInlineUserDefinedFunction_descriptor;
    }

    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.CommonInlineUserDefinedFunction getDefaultInstanceForType() {
      return org.apache.kyuubi.engine.spark.connect.proto.CommonInlineUserDefinedFunction.getDefaultInstance();
    }

    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.CommonInlineUserDefinedFunction build() {
      org.apache.kyuubi.engine.spark.connect.proto.CommonInlineUserDefinedFunction result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.CommonInlineUserDefinedFunction buildPartial() {
      org.apache.kyuubi.engine.spark.connect.proto.CommonInlineUserDefinedFunction result = new org.apache.kyuubi.engine.spark.connect.proto.CommonInlineUserDefinedFunction(this);
      int from_bitField0_ = bitField0_;
      result.functionName_ = functionName_;
      result.deterministic_ = deterministic_;
      if (argumentsBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0)) {
          arguments_ = java.util.Collections.unmodifiableList(arguments_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.arguments_ = arguments_;
      } else {
        result.arguments_ = argumentsBuilder_.build();
      }
      if (functionCase_ == 4) {
        if (pythonUdfBuilder_ == null) {
          result.function_ = function_;
        } else {
          result.function_ = pythonUdfBuilder_.build();
        }
      }
      if (functionCase_ == 5) {
        if (scalarScalaUdfBuilder_ == null) {
          result.function_ = function_;
        } else {
          result.function_ = scalarScalaUdfBuilder_.build();
        }
      }
      if (functionCase_ == 6) {
        if (javaUdfBuilder_ == null) {
          result.function_ = function_;
        } else {
          result.function_ = javaUdfBuilder_.build();
        }
      }
      result.functionCase_ = functionCase_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof org.apache.kyuubi.engine.spark.connect.proto.CommonInlineUserDefinedFunction) {
        return mergeFrom((org.apache.kyuubi.engine.spark.connect.proto.CommonInlineUserDefinedFunction)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(org.apache.kyuubi.engine.spark.connect.proto.CommonInlineUserDefinedFunction other) {
      if (other == org.apache.kyuubi.engine.spark.connect.proto.CommonInlineUserDefinedFunction.getDefaultInstance()) return this;
      if (!other.getFunctionName().isEmpty()) {
        functionName_ = other.functionName_;
        onChanged();
      }
      if (other.getDeterministic() != false) {
        setDeterministic(other.getDeterministic());
      }
      if (argumentsBuilder_ == null) {
        if (!other.arguments_.isEmpty()) {
          if (arguments_.isEmpty()) {
            arguments_ = other.arguments_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureArgumentsIsMutable();
            arguments_.addAll(other.arguments_);
          }
          onChanged();
        }
      } else {
        if (!other.arguments_.isEmpty()) {
          if (argumentsBuilder_.isEmpty()) {
            argumentsBuilder_.dispose();
            argumentsBuilder_ = null;
            arguments_ = other.arguments_;
            bitField0_ = (bitField0_ & ~0x00000001);
            argumentsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getArgumentsFieldBuilder() : null;
          } else {
            argumentsBuilder_.addAllMessages(other.arguments_);
          }
        }
      }
      switch (other.getFunctionCase()) {
        case PYTHON_UDF: {
          mergePythonUdf(other.getPythonUdf());
          break;
        }
        case SCALAR_SCALA_UDF: {
          mergeScalarScalaUdf(other.getScalarScalaUdf());
          break;
        }
        case JAVA_UDF: {
          mergeJavaUdf(other.getJavaUdf());
          break;
        }
        case FUNCTION_NOT_SET: {
          break;
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              functionName_ = input.readStringRequireUtf8();

              break;
            } // case 10
            case 16: {
              deterministic_ = input.readBool();

              break;
            } // case 16
            case 26: {
              org.apache.kyuubi.engine.spark.connect.proto.Expression m =
                  input.readMessage(
                      org.apache.kyuubi.engine.spark.connect.proto.Expression.parser(),
                      extensionRegistry);
              if (argumentsBuilder_ == null) {
                ensureArgumentsIsMutable();
                arguments_.add(m);
              } else {
                argumentsBuilder_.addMessage(m);
              }
              break;
            } // case 26
            case 34: {
              input.readMessage(
                  getPythonUdfFieldBuilder().getBuilder(),
                  extensionRegistry);
              functionCase_ = 4;
              break;
            } // case 34
            case 42: {
              input.readMessage(
                  getScalarScalaUdfFieldBuilder().getBuilder(),
                  extensionRegistry);
              functionCase_ = 5;
              break;
            } // case 42
            case 50: {
              input.readMessage(
                  getJavaUdfFieldBuilder().getBuilder(),
                  extensionRegistry);
              functionCase_ = 6;
              break;
            } // case 50
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int functionCase_ = 0;
    private java.lang.Object function_;
    public FunctionCase
        getFunctionCase() {
      return FunctionCase.forNumber(
          functionCase_);
    }

    public Builder clearFunction() {
      functionCase_ = 0;
      function_ = null;
      onChanged();
      return this;
    }

    private int bitField0_;

    private java.lang.Object functionName_ = "";
    /**
     * <pre>
     * (Required) Name of the user-defined function.
     * </pre>
     *
     * <code>string function_name = 1;</code>
     * @return The functionName.
     */
    public java.lang.String getFunctionName() {
      java.lang.Object ref = functionName_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        functionName_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * (Required) Name of the user-defined function.
     * </pre>
     *
     * <code>string function_name = 1;</code>
     * @return The bytes for functionName.
     */
    public com.google.protobuf.ByteString
        getFunctionNameBytes() {
      java.lang.Object ref = functionName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        functionName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * (Required) Name of the user-defined function.
     * </pre>
     *
     * <code>string function_name = 1;</code>
     * @param value The functionName to set.
     * @return This builder for chaining.
     */
    public Builder setFunctionName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      functionName_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * (Required) Name of the user-defined function.
     * </pre>
     *
     * <code>string function_name = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearFunctionName() {
      
      functionName_ = getDefaultInstance().getFunctionName();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * (Required) Name of the user-defined function.
     * </pre>
     *
     * <code>string function_name = 1;</code>
     * @param value The bytes for functionName to set.
     * @return This builder for chaining.
     */
    public Builder setFunctionNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      functionName_ = value;
      onChanged();
      return this;
    }

    private boolean deterministic_ ;
    /**
     * <pre>
     * (Optional) Indicate if the user-defined function is deterministic.
     * </pre>
     *
     * <code>bool deterministic = 2;</code>
     * @return The deterministic.
     */
    @java.lang.Override
    public boolean getDeterministic() {
      return deterministic_;
    }
    /**
     * <pre>
     * (Optional) Indicate if the user-defined function is deterministic.
     * </pre>
     *
     * <code>bool deterministic = 2;</code>
     * @param value The deterministic to set.
     * @return This builder for chaining.
     */
    public Builder setDeterministic(boolean value) {
      
      deterministic_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * (Optional) Indicate if the user-defined function is deterministic.
     * </pre>
     *
     * <code>bool deterministic = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearDeterministic() {
      
      deterministic_ = false;
      onChanged();
      return this;
    }

    private java.util.List<org.apache.kyuubi.engine.spark.connect.proto.Expression> arguments_ =
      java.util.Collections.emptyList();
    private void ensureArgumentsIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        arguments_ = new java.util.ArrayList<org.apache.kyuubi.engine.spark.connect.proto.Expression>(arguments_);
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        org.apache.kyuubi.engine.spark.connect.proto.Expression, org.apache.kyuubi.engine.spark.connect.proto.Expression.Builder, org.apache.kyuubi.engine.spark.connect.proto.ExpressionOrBuilder> argumentsBuilder_;

    /**
     * <pre>
     * (Optional) Function arguments. Empty arguments are allowed.
     * </pre>
     *
     * <code>repeated .spark.connect.Expression arguments = 3;</code>
     */
    public java.util.List<org.apache.kyuubi.engine.spark.connect.proto.Expression> getArgumentsList() {
      if (argumentsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(arguments_);
      } else {
        return argumentsBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * (Optional) Function arguments. Empty arguments are allowed.
     * </pre>
     *
     * <code>repeated .spark.connect.Expression arguments = 3;</code>
     */
    public int getArgumentsCount() {
      if (argumentsBuilder_ == null) {
        return arguments_.size();
      } else {
        return argumentsBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * (Optional) Function arguments. Empty arguments are allowed.
     * </pre>
     *
     * <code>repeated .spark.connect.Expression arguments = 3;</code>
     */
    public org.apache.kyuubi.engine.spark.connect.proto.Expression getArguments(int index) {
      if (argumentsBuilder_ == null) {
        return arguments_.get(index);
      } else {
        return argumentsBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * (Optional) Function arguments. Empty arguments are allowed.
     * </pre>
     *
     * <code>repeated .spark.connect.Expression arguments = 3;</code>
     */
    public Builder setArguments(
        int index, org.apache.kyuubi.engine.spark.connect.proto.Expression value) {
      if (argumentsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureArgumentsIsMutable();
        arguments_.set(index, value);
        onChanged();
      } else {
        argumentsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * (Optional) Function arguments. Empty arguments are allowed.
     * </pre>
     *
     * <code>repeated .spark.connect.Expression arguments = 3;</code>
     */
    public Builder setArguments(
        int index, org.apache.kyuubi.engine.spark.connect.proto.Expression.Builder builderForValue) {
      if (argumentsBuilder_ == null) {
        ensureArgumentsIsMutable();
        arguments_.set(index, builderForValue.build());
        onChanged();
      } else {
        argumentsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * (Optional) Function arguments. Empty arguments are allowed.
     * </pre>
     *
     * <code>repeated .spark.connect.Expression arguments = 3;</code>
     */
    public Builder addArguments(org.apache.kyuubi.engine.spark.connect.proto.Expression value) {
      if (argumentsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureArgumentsIsMutable();
        arguments_.add(value);
        onChanged();
      } else {
        argumentsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * (Optional) Function arguments. Empty arguments are allowed.
     * </pre>
     *
     * <code>repeated .spark.connect.Expression arguments = 3;</code>
     */
    public Builder addArguments(
        int index, org.apache.kyuubi.engine.spark.connect.proto.Expression value) {
      if (argumentsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureArgumentsIsMutable();
        arguments_.add(index, value);
        onChanged();
      } else {
        argumentsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * (Optional) Function arguments. Empty arguments are allowed.
     * </pre>
     *
     * <code>repeated .spark.connect.Expression arguments = 3;</code>
     */
    public Builder addArguments(
        org.apache.kyuubi.engine.spark.connect.proto.Expression.Builder builderForValue) {
      if (argumentsBuilder_ == null) {
        ensureArgumentsIsMutable();
        arguments_.add(builderForValue.build());
        onChanged();
      } else {
        argumentsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * (Optional) Function arguments. Empty arguments are allowed.
     * </pre>
     *
     * <code>repeated .spark.connect.Expression arguments = 3;</code>
     */
    public Builder addArguments(
        int index, org.apache.kyuubi.engine.spark.connect.proto.Expression.Builder builderForValue) {
      if (argumentsBuilder_ == null) {
        ensureArgumentsIsMutable();
        arguments_.add(index, builderForValue.build());
        onChanged();
      } else {
        argumentsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * (Optional) Function arguments. Empty arguments are allowed.
     * </pre>
     *
     * <code>repeated .spark.connect.Expression arguments = 3;</code>
     */
    public Builder addAllArguments(
        java.lang.Iterable<? extends org.apache.kyuubi.engine.spark.connect.proto.Expression> values) {
      if (argumentsBuilder_ == null) {
        ensureArgumentsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, arguments_);
        onChanged();
      } else {
        argumentsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * (Optional) Function arguments. Empty arguments are allowed.
     * </pre>
     *
     * <code>repeated .spark.connect.Expression arguments = 3;</code>
     */
    public Builder clearArguments() {
      if (argumentsBuilder_ == null) {
        arguments_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        argumentsBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * (Optional) Function arguments. Empty arguments are allowed.
     * </pre>
     *
     * <code>repeated .spark.connect.Expression arguments = 3;</code>
     */
    public Builder removeArguments(int index) {
      if (argumentsBuilder_ == null) {
        ensureArgumentsIsMutable();
        arguments_.remove(index);
        onChanged();
      } else {
        argumentsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * (Optional) Function arguments. Empty arguments are allowed.
     * </pre>
     *
     * <code>repeated .spark.connect.Expression arguments = 3;</code>
     */
    public org.apache.kyuubi.engine.spark.connect.proto.Expression.Builder getArgumentsBuilder(
        int index) {
      return getArgumentsFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * (Optional) Function arguments. Empty arguments are allowed.
     * </pre>
     *
     * <code>repeated .spark.connect.Expression arguments = 3;</code>
     */
    public org.apache.kyuubi.engine.spark.connect.proto.ExpressionOrBuilder getArgumentsOrBuilder(
        int index) {
      if (argumentsBuilder_ == null) {
        return arguments_.get(index);  } else {
        return argumentsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * (Optional) Function arguments. Empty arguments are allowed.
     * </pre>
     *
     * <code>repeated .spark.connect.Expression arguments = 3;</code>
     */
    public java.util.List<? extends org.apache.kyuubi.engine.spark.connect.proto.ExpressionOrBuilder> 
         getArgumentsOrBuilderList() {
      if (argumentsBuilder_ != null) {
        return argumentsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(arguments_);
      }
    }
    /**
     * <pre>
     * (Optional) Function arguments. Empty arguments are allowed.
     * </pre>
     *
     * <code>repeated .spark.connect.Expression arguments = 3;</code>
     */
    public org.apache.kyuubi.engine.spark.connect.proto.Expression.Builder addArgumentsBuilder() {
      return getArgumentsFieldBuilder().addBuilder(
          org.apache.kyuubi.engine.spark.connect.proto.Expression.getDefaultInstance());
    }
    /**
     * <pre>
     * (Optional) Function arguments. Empty arguments are allowed.
     * </pre>
     *
     * <code>repeated .spark.connect.Expression arguments = 3;</code>
     */
    public org.apache.kyuubi.engine.spark.connect.proto.Expression.Builder addArgumentsBuilder(
        int index) {
      return getArgumentsFieldBuilder().addBuilder(
          index, org.apache.kyuubi.engine.spark.connect.proto.Expression.getDefaultInstance());
    }
    /**
     * <pre>
     * (Optional) Function arguments. Empty arguments are allowed.
     * </pre>
     *
     * <code>repeated .spark.connect.Expression arguments = 3;</code>
     */
    public java.util.List<org.apache.kyuubi.engine.spark.connect.proto.Expression.Builder> 
         getArgumentsBuilderList() {
      return getArgumentsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        org.apache.kyuubi.engine.spark.connect.proto.Expression, org.apache.kyuubi.engine.spark.connect.proto.Expression.Builder, org.apache.kyuubi.engine.spark.connect.proto.ExpressionOrBuilder> 
        getArgumentsFieldBuilder() {
      if (argumentsBuilder_ == null) {
        argumentsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            org.apache.kyuubi.engine.spark.connect.proto.Expression, org.apache.kyuubi.engine.spark.connect.proto.Expression.Builder, org.apache.kyuubi.engine.spark.connect.proto.ExpressionOrBuilder>(
                arguments_,
                ((bitField0_ & 0x00000001) != 0),
                getParentForChildren(),
                isClean());
        arguments_ = null;
      }
      return argumentsBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        org.apache.kyuubi.engine.spark.connect.proto.PythonUDF, org.apache.kyuubi.engine.spark.connect.proto.PythonUDF.Builder, org.apache.kyuubi.engine.spark.connect.proto.PythonUDFOrBuilder> pythonUdfBuilder_;
    /**
     * <code>.spark.connect.PythonUDF python_udf = 4;</code>
     * @return Whether the pythonUdf field is set.
     */
    @java.lang.Override
    public boolean hasPythonUdf() {
      return functionCase_ == 4;
    }
    /**
     * <code>.spark.connect.PythonUDF python_udf = 4;</code>
     * @return The pythonUdf.
     */
    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.PythonUDF getPythonUdf() {
      if (pythonUdfBuilder_ == null) {
        if (functionCase_ == 4) {
          return (org.apache.kyuubi.engine.spark.connect.proto.PythonUDF) function_;
        }
        return org.apache.kyuubi.engine.spark.connect.proto.PythonUDF.getDefaultInstance();
      } else {
        if (functionCase_ == 4) {
          return pythonUdfBuilder_.getMessage();
        }
        return org.apache.kyuubi.engine.spark.connect.proto.PythonUDF.getDefaultInstance();
      }
    }
    /**
     * <code>.spark.connect.PythonUDF python_udf = 4;</code>
     */
    public Builder setPythonUdf(org.apache.kyuubi.engine.spark.connect.proto.PythonUDF value) {
      if (pythonUdfBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        function_ = value;
        onChanged();
      } else {
        pythonUdfBuilder_.setMessage(value);
      }
      functionCase_ = 4;
      return this;
    }
    /**
     * <code>.spark.connect.PythonUDF python_udf = 4;</code>
     */
    public Builder setPythonUdf(
        org.apache.kyuubi.engine.spark.connect.proto.PythonUDF.Builder builderForValue) {
      if (pythonUdfBuilder_ == null) {
        function_ = builderForValue.build();
        onChanged();
      } else {
        pythonUdfBuilder_.setMessage(builderForValue.build());
      }
      functionCase_ = 4;
      return this;
    }
    /**
     * <code>.spark.connect.PythonUDF python_udf = 4;</code>
     */
    public Builder mergePythonUdf(org.apache.kyuubi.engine.spark.connect.proto.PythonUDF value) {
      if (pythonUdfBuilder_ == null) {
        if (functionCase_ == 4 &&
            function_ != org.apache.kyuubi.engine.spark.connect.proto.PythonUDF.getDefaultInstance()) {
          function_ = org.apache.kyuubi.engine.spark.connect.proto.PythonUDF.newBuilder((org.apache.kyuubi.engine.spark.connect.proto.PythonUDF) function_)
              .mergeFrom(value).buildPartial();
        } else {
          function_ = value;
        }
        onChanged();
      } else {
        if (functionCase_ == 4) {
          pythonUdfBuilder_.mergeFrom(value);
        } else {
          pythonUdfBuilder_.setMessage(value);
        }
      }
      functionCase_ = 4;
      return this;
    }
    /**
     * <code>.spark.connect.PythonUDF python_udf = 4;</code>
     */
    public Builder clearPythonUdf() {
      if (pythonUdfBuilder_ == null) {
        if (functionCase_ == 4) {
          functionCase_ = 0;
          function_ = null;
          onChanged();
        }
      } else {
        if (functionCase_ == 4) {
          functionCase_ = 0;
          function_ = null;
        }
        pythonUdfBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.spark.connect.PythonUDF python_udf = 4;</code>
     */
    public org.apache.kyuubi.engine.spark.connect.proto.PythonUDF.Builder getPythonUdfBuilder() {
      return getPythonUdfFieldBuilder().getBuilder();
    }
    /**
     * <code>.spark.connect.PythonUDF python_udf = 4;</code>
     */
    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.PythonUDFOrBuilder getPythonUdfOrBuilder() {
      if ((functionCase_ == 4) && (pythonUdfBuilder_ != null)) {
        return pythonUdfBuilder_.getMessageOrBuilder();
      } else {
        if (functionCase_ == 4) {
          return (org.apache.kyuubi.engine.spark.connect.proto.PythonUDF) function_;
        }
        return org.apache.kyuubi.engine.spark.connect.proto.PythonUDF.getDefaultInstance();
      }
    }
    /**
     * <code>.spark.connect.PythonUDF python_udf = 4;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.apache.kyuubi.engine.spark.connect.proto.PythonUDF, org.apache.kyuubi.engine.spark.connect.proto.PythonUDF.Builder, org.apache.kyuubi.engine.spark.connect.proto.PythonUDFOrBuilder> 
        getPythonUdfFieldBuilder() {
      if (pythonUdfBuilder_ == null) {
        if (!(functionCase_ == 4)) {
          function_ = org.apache.kyuubi.engine.spark.connect.proto.PythonUDF.getDefaultInstance();
        }
        pythonUdfBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.apache.kyuubi.engine.spark.connect.proto.PythonUDF, org.apache.kyuubi.engine.spark.connect.proto.PythonUDF.Builder, org.apache.kyuubi.engine.spark.connect.proto.PythonUDFOrBuilder>(
                (org.apache.kyuubi.engine.spark.connect.proto.PythonUDF) function_,
                getParentForChildren(),
                isClean());
        function_ = null;
      }
      functionCase_ = 4;
      onChanged();;
      return pythonUdfBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        org.apache.kyuubi.engine.spark.connect.proto.ScalarScalaUDF, org.apache.kyuubi.engine.spark.connect.proto.ScalarScalaUDF.Builder, org.apache.kyuubi.engine.spark.connect.proto.ScalarScalaUDFOrBuilder> scalarScalaUdfBuilder_;
    /**
     * <code>.spark.connect.ScalarScalaUDF scalar_scala_udf = 5;</code>
     * @return Whether the scalarScalaUdf field is set.
     */
    @java.lang.Override
    public boolean hasScalarScalaUdf() {
      return functionCase_ == 5;
    }
    /**
     * <code>.spark.connect.ScalarScalaUDF scalar_scala_udf = 5;</code>
     * @return The scalarScalaUdf.
     */
    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.ScalarScalaUDF getScalarScalaUdf() {
      if (scalarScalaUdfBuilder_ == null) {
        if (functionCase_ == 5) {
          return (org.apache.kyuubi.engine.spark.connect.proto.ScalarScalaUDF) function_;
        }
        return org.apache.kyuubi.engine.spark.connect.proto.ScalarScalaUDF.getDefaultInstance();
      } else {
        if (functionCase_ == 5) {
          return scalarScalaUdfBuilder_.getMessage();
        }
        return org.apache.kyuubi.engine.spark.connect.proto.ScalarScalaUDF.getDefaultInstance();
      }
    }
    /**
     * <code>.spark.connect.ScalarScalaUDF scalar_scala_udf = 5;</code>
     */
    public Builder setScalarScalaUdf(org.apache.kyuubi.engine.spark.connect.proto.ScalarScalaUDF value) {
      if (scalarScalaUdfBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        function_ = value;
        onChanged();
      } else {
        scalarScalaUdfBuilder_.setMessage(value);
      }
      functionCase_ = 5;
      return this;
    }
    /**
     * <code>.spark.connect.ScalarScalaUDF scalar_scala_udf = 5;</code>
     */
    public Builder setScalarScalaUdf(
        org.apache.kyuubi.engine.spark.connect.proto.ScalarScalaUDF.Builder builderForValue) {
      if (scalarScalaUdfBuilder_ == null) {
        function_ = builderForValue.build();
        onChanged();
      } else {
        scalarScalaUdfBuilder_.setMessage(builderForValue.build());
      }
      functionCase_ = 5;
      return this;
    }
    /**
     * <code>.spark.connect.ScalarScalaUDF scalar_scala_udf = 5;</code>
     */
    public Builder mergeScalarScalaUdf(org.apache.kyuubi.engine.spark.connect.proto.ScalarScalaUDF value) {
      if (scalarScalaUdfBuilder_ == null) {
        if (functionCase_ == 5 &&
            function_ != org.apache.kyuubi.engine.spark.connect.proto.ScalarScalaUDF.getDefaultInstance()) {
          function_ = org.apache.kyuubi.engine.spark.connect.proto.ScalarScalaUDF.newBuilder((org.apache.kyuubi.engine.spark.connect.proto.ScalarScalaUDF) function_)
              .mergeFrom(value).buildPartial();
        } else {
          function_ = value;
        }
        onChanged();
      } else {
        if (functionCase_ == 5) {
          scalarScalaUdfBuilder_.mergeFrom(value);
        } else {
          scalarScalaUdfBuilder_.setMessage(value);
        }
      }
      functionCase_ = 5;
      return this;
    }
    /**
     * <code>.spark.connect.ScalarScalaUDF scalar_scala_udf = 5;</code>
     */
    public Builder clearScalarScalaUdf() {
      if (scalarScalaUdfBuilder_ == null) {
        if (functionCase_ == 5) {
          functionCase_ = 0;
          function_ = null;
          onChanged();
        }
      } else {
        if (functionCase_ == 5) {
          functionCase_ = 0;
          function_ = null;
        }
        scalarScalaUdfBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.spark.connect.ScalarScalaUDF scalar_scala_udf = 5;</code>
     */
    public org.apache.kyuubi.engine.spark.connect.proto.ScalarScalaUDF.Builder getScalarScalaUdfBuilder() {
      return getScalarScalaUdfFieldBuilder().getBuilder();
    }
    /**
     * <code>.spark.connect.ScalarScalaUDF scalar_scala_udf = 5;</code>
     */
    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.ScalarScalaUDFOrBuilder getScalarScalaUdfOrBuilder() {
      if ((functionCase_ == 5) && (scalarScalaUdfBuilder_ != null)) {
        return scalarScalaUdfBuilder_.getMessageOrBuilder();
      } else {
        if (functionCase_ == 5) {
          return (org.apache.kyuubi.engine.spark.connect.proto.ScalarScalaUDF) function_;
        }
        return org.apache.kyuubi.engine.spark.connect.proto.ScalarScalaUDF.getDefaultInstance();
      }
    }
    /**
     * <code>.spark.connect.ScalarScalaUDF scalar_scala_udf = 5;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.apache.kyuubi.engine.spark.connect.proto.ScalarScalaUDF, org.apache.kyuubi.engine.spark.connect.proto.ScalarScalaUDF.Builder, org.apache.kyuubi.engine.spark.connect.proto.ScalarScalaUDFOrBuilder> 
        getScalarScalaUdfFieldBuilder() {
      if (scalarScalaUdfBuilder_ == null) {
        if (!(functionCase_ == 5)) {
          function_ = org.apache.kyuubi.engine.spark.connect.proto.ScalarScalaUDF.getDefaultInstance();
        }
        scalarScalaUdfBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.apache.kyuubi.engine.spark.connect.proto.ScalarScalaUDF, org.apache.kyuubi.engine.spark.connect.proto.ScalarScalaUDF.Builder, org.apache.kyuubi.engine.spark.connect.proto.ScalarScalaUDFOrBuilder>(
                (org.apache.kyuubi.engine.spark.connect.proto.ScalarScalaUDF) function_,
                getParentForChildren(),
                isClean());
        function_ = null;
      }
      functionCase_ = 5;
      onChanged();;
      return scalarScalaUdfBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        org.apache.kyuubi.engine.spark.connect.proto.JavaUDF, org.apache.kyuubi.engine.spark.connect.proto.JavaUDF.Builder, org.apache.kyuubi.engine.spark.connect.proto.JavaUDFOrBuilder> javaUdfBuilder_;
    /**
     * <code>.spark.connect.JavaUDF java_udf = 6;</code>
     * @return Whether the javaUdf field is set.
     */
    @java.lang.Override
    public boolean hasJavaUdf() {
      return functionCase_ == 6;
    }
    /**
     * <code>.spark.connect.JavaUDF java_udf = 6;</code>
     * @return The javaUdf.
     */
    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.JavaUDF getJavaUdf() {
      if (javaUdfBuilder_ == null) {
        if (functionCase_ == 6) {
          return (org.apache.kyuubi.engine.spark.connect.proto.JavaUDF) function_;
        }
        return org.apache.kyuubi.engine.spark.connect.proto.JavaUDF.getDefaultInstance();
      } else {
        if (functionCase_ == 6) {
          return javaUdfBuilder_.getMessage();
        }
        return org.apache.kyuubi.engine.spark.connect.proto.JavaUDF.getDefaultInstance();
      }
    }
    /**
     * <code>.spark.connect.JavaUDF java_udf = 6;</code>
     */
    public Builder setJavaUdf(org.apache.kyuubi.engine.spark.connect.proto.JavaUDF value) {
      if (javaUdfBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        function_ = value;
        onChanged();
      } else {
        javaUdfBuilder_.setMessage(value);
      }
      functionCase_ = 6;
      return this;
    }
    /**
     * <code>.spark.connect.JavaUDF java_udf = 6;</code>
     */
    public Builder setJavaUdf(
        org.apache.kyuubi.engine.spark.connect.proto.JavaUDF.Builder builderForValue) {
      if (javaUdfBuilder_ == null) {
        function_ = builderForValue.build();
        onChanged();
      } else {
        javaUdfBuilder_.setMessage(builderForValue.build());
      }
      functionCase_ = 6;
      return this;
    }
    /**
     * <code>.spark.connect.JavaUDF java_udf = 6;</code>
     */
    public Builder mergeJavaUdf(org.apache.kyuubi.engine.spark.connect.proto.JavaUDF value) {
      if (javaUdfBuilder_ == null) {
        if (functionCase_ == 6 &&
            function_ != org.apache.kyuubi.engine.spark.connect.proto.JavaUDF.getDefaultInstance()) {
          function_ = org.apache.kyuubi.engine.spark.connect.proto.JavaUDF.newBuilder((org.apache.kyuubi.engine.spark.connect.proto.JavaUDF) function_)
              .mergeFrom(value).buildPartial();
        } else {
          function_ = value;
        }
        onChanged();
      } else {
        if (functionCase_ == 6) {
          javaUdfBuilder_.mergeFrom(value);
        } else {
          javaUdfBuilder_.setMessage(value);
        }
      }
      functionCase_ = 6;
      return this;
    }
    /**
     * <code>.spark.connect.JavaUDF java_udf = 6;</code>
     */
    public Builder clearJavaUdf() {
      if (javaUdfBuilder_ == null) {
        if (functionCase_ == 6) {
          functionCase_ = 0;
          function_ = null;
          onChanged();
        }
      } else {
        if (functionCase_ == 6) {
          functionCase_ = 0;
          function_ = null;
        }
        javaUdfBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.spark.connect.JavaUDF java_udf = 6;</code>
     */
    public org.apache.kyuubi.engine.spark.connect.proto.JavaUDF.Builder getJavaUdfBuilder() {
      return getJavaUdfFieldBuilder().getBuilder();
    }
    /**
     * <code>.spark.connect.JavaUDF java_udf = 6;</code>
     */
    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.JavaUDFOrBuilder getJavaUdfOrBuilder() {
      if ((functionCase_ == 6) && (javaUdfBuilder_ != null)) {
        return javaUdfBuilder_.getMessageOrBuilder();
      } else {
        if (functionCase_ == 6) {
          return (org.apache.kyuubi.engine.spark.connect.proto.JavaUDF) function_;
        }
        return org.apache.kyuubi.engine.spark.connect.proto.JavaUDF.getDefaultInstance();
      }
    }
    /**
     * <code>.spark.connect.JavaUDF java_udf = 6;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.apache.kyuubi.engine.spark.connect.proto.JavaUDF, org.apache.kyuubi.engine.spark.connect.proto.JavaUDF.Builder, org.apache.kyuubi.engine.spark.connect.proto.JavaUDFOrBuilder> 
        getJavaUdfFieldBuilder() {
      if (javaUdfBuilder_ == null) {
        if (!(functionCase_ == 6)) {
          function_ = org.apache.kyuubi.engine.spark.connect.proto.JavaUDF.getDefaultInstance();
        }
        javaUdfBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.apache.kyuubi.engine.spark.connect.proto.JavaUDF, org.apache.kyuubi.engine.spark.connect.proto.JavaUDF.Builder, org.apache.kyuubi.engine.spark.connect.proto.JavaUDFOrBuilder>(
                (org.apache.kyuubi.engine.spark.connect.proto.JavaUDF) function_,
                getParentForChildren(),
                isClean());
        function_ = null;
      }
      functionCase_ = 6;
      onChanged();;
      return javaUdfBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:spark.connect.CommonInlineUserDefinedFunction)
  }

  // @@protoc_insertion_point(class_scope:spark.connect.CommonInlineUserDefinedFunction)
  private static final org.apache.kyuubi.engine.spark.connect.proto.CommonInlineUserDefinedFunction DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new org.apache.kyuubi.engine.spark.connect.proto.CommonInlineUserDefinedFunction();
  }

  public static org.apache.kyuubi.engine.spark.connect.proto.CommonInlineUserDefinedFunction getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<CommonInlineUserDefinedFunction>
      PARSER = new com.google.protobuf.AbstractParser<CommonInlineUserDefinedFunction>() {
    @java.lang.Override
    public CommonInlineUserDefinedFunction parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<CommonInlineUserDefinedFunction> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<CommonInlineUserDefinedFunction> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public org.apache.kyuubi.engine.spark.connect.proto.CommonInlineUserDefinedFunction getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

