// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: kyuubi/spark/connect/base.proto

package org.apache.kyuubi.engine.spark.connect.grpc.proto;

/**
 *
 *
 * <pre>
 * Next ID: 5
 * </pre>
 *
 * Protobuf type {@code spark.connect.FetchErrorDetailsResponse}
 */
public final class FetchErrorDetailsResponse extends com.google.protobuf.GeneratedMessageV3
    implements
    // @@protoc_insertion_point(message_implements:spark.connect.FetchErrorDetailsResponse)
    FetchErrorDetailsResponseOrBuilder {
  private static final long serialVersionUID = 0L;
  // Use FetchErrorDetailsResponse.newBuilder() to construct.
  private FetchErrorDetailsResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }

  private FetchErrorDetailsResponse() {
    serverSideSessionId_ = "";
    sessionId_ = "";
    errors_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
    return new FetchErrorDetailsResponse();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet getUnknownFields() {
    return this.unknownFields;
  }

  public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
    return org.apache.kyuubi.engine.spark.connect.grpc.proto.Base
        .internal_static_spark_connect_FetchErrorDetailsResponse_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return org.apache.kyuubi.engine.spark.connect.grpc.proto.Base
        .internal_static_spark_connect_FetchErrorDetailsResponse_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse.class,
            org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse.Builder
                .class);
  }

  public interface StackTraceElementOrBuilder
      extends
      // @@protoc_insertion_point(interface_extends:spark.connect.FetchErrorDetailsResponse.StackTraceElement)
      com.google.protobuf.MessageOrBuilder {

    /**
     *
     *
     * <pre>
     * The fully qualified name of the class containing the execution point.
     * </pre>
     *
     * <code>string declaring_class = 1;</code>
     *
     * @return The declaringClass.
     */
    java.lang.String getDeclaringClass();
    /**
     *
     *
     * <pre>
     * The fully qualified name of the class containing the execution point.
     * </pre>
     *
     * <code>string declaring_class = 1;</code>
     *
     * @return The bytes for declaringClass.
     */
    com.google.protobuf.ByteString getDeclaringClassBytes();

    /**
     *
     *
     * <pre>
     * The name of the method containing the execution point.
     * </pre>
     *
     * <code>string method_name = 2;</code>
     *
     * @return The methodName.
     */
    java.lang.String getMethodName();
    /**
     *
     *
     * <pre>
     * The name of the method containing the execution point.
     * </pre>
     *
     * <code>string method_name = 2;</code>
     *
     * @return The bytes for methodName.
     */
    com.google.protobuf.ByteString getMethodNameBytes();

    /**
     *
     *
     * <pre>
     * The name of the file containing the execution point.
     * </pre>
     *
     * <code>optional string file_name = 3;</code>
     *
     * @return Whether the fileName field is set.
     */
    boolean hasFileName();
    /**
     *
     *
     * <pre>
     * The name of the file containing the execution point.
     * </pre>
     *
     * <code>optional string file_name = 3;</code>
     *
     * @return The fileName.
     */
    java.lang.String getFileName();
    /**
     *
     *
     * <pre>
     * The name of the file containing the execution point.
     * </pre>
     *
     * <code>optional string file_name = 3;</code>
     *
     * @return The bytes for fileName.
     */
    com.google.protobuf.ByteString getFileNameBytes();

    /**
     *
     *
     * <pre>
     * The line number of the source line containing the execution point.
     * </pre>
     *
     * <code>int32 line_number = 4;</code>
     *
     * @return The lineNumber.
     */
    int getLineNumber();
  }
  /** Protobuf type {@code spark.connect.FetchErrorDetailsResponse.StackTraceElement} */
  public static final class StackTraceElement extends com.google.protobuf.GeneratedMessageV3
      implements
      // @@protoc_insertion_point(message_implements:spark.connect.FetchErrorDetailsResponse.StackTraceElement)
      StackTraceElementOrBuilder {
    private static final long serialVersionUID = 0L;
    // Use StackTraceElement.newBuilder() to construct.
    private StackTraceElement(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }

    private StackTraceElement() {
      declaringClass_ = "";
      methodName_ = "";
      fileName_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
      return new StackTraceElement();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet getUnknownFields() {
      return this.unknownFields;
    }

    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return org.apache.kyuubi.engine.spark.connect.grpc.proto.Base
          .internal_static_spark_connect_FetchErrorDetailsResponse_StackTraceElement_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.kyuubi.engine.spark.connect.grpc.proto.Base
          .internal_static_spark_connect_FetchErrorDetailsResponse_StackTraceElement_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
                  .StackTraceElement.class,
              org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
                  .StackTraceElement.Builder.class);
    }

    private int bitField0_;
    public static final int DECLARING_CLASS_FIELD_NUMBER = 1;
    private volatile java.lang.Object declaringClass_;
    /**
     *
     *
     * <pre>
     * The fully qualified name of the class containing the execution point.
     * </pre>
     *
     * <code>string declaring_class = 1;</code>
     *
     * @return The declaringClass.
     */
    @java.lang.Override
    public java.lang.String getDeclaringClass() {
      java.lang.Object ref = declaringClass_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        declaringClass_ = s;
        return s;
      }
    }
    /**
     *
     *
     * <pre>
     * The fully qualified name of the class containing the execution point.
     * </pre>
     *
     * <code>string declaring_class = 1;</code>
     *
     * @return The bytes for declaringClass.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getDeclaringClassBytes() {
      java.lang.Object ref = declaringClass_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        declaringClass_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int METHOD_NAME_FIELD_NUMBER = 2;
    private volatile java.lang.Object methodName_;
    /**
     *
     *
     * <pre>
     * The name of the method containing the execution point.
     * </pre>
     *
     * <code>string method_name = 2;</code>
     *
     * @return The methodName.
     */
    @java.lang.Override
    public java.lang.String getMethodName() {
      java.lang.Object ref = methodName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        methodName_ = s;
        return s;
      }
    }
    /**
     *
     *
     * <pre>
     * The name of the method containing the execution point.
     * </pre>
     *
     * <code>string method_name = 2;</code>
     *
     * @return The bytes for methodName.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getMethodNameBytes() {
      java.lang.Object ref = methodName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        methodName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int FILE_NAME_FIELD_NUMBER = 3;
    private volatile java.lang.Object fileName_;
    /**
     *
     *
     * <pre>
     * The name of the file containing the execution point.
     * </pre>
     *
     * <code>optional string file_name = 3;</code>
     *
     * @return Whether the fileName field is set.
     */
    @java.lang.Override
    public boolean hasFileName() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     *
     *
     * <pre>
     * The name of the file containing the execution point.
     * </pre>
     *
     * <code>optional string file_name = 3;</code>
     *
     * @return The fileName.
     */
    @java.lang.Override
    public java.lang.String getFileName() {
      java.lang.Object ref = fileName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        fileName_ = s;
        return s;
      }
    }
    /**
     *
     *
     * <pre>
     * The name of the file containing the execution point.
     * </pre>
     *
     * <code>optional string file_name = 3;</code>
     *
     * @return The bytes for fileName.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getFileNameBytes() {
      java.lang.Object ref = fileName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        fileName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int LINE_NUMBER_FIELD_NUMBER = 4;
    private int lineNumber_;
    /**
     *
     *
     * <pre>
     * The line number of the source line containing the execution point.
     * </pre>
     *
     * <code>int32 line_number = 4;</code>
     *
     * @return The lineNumber.
     */
    @java.lang.Override
    public int getLineNumber() {
      return lineNumber_;
    }

    private byte memoizedIsInitialized = -1;

    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(declaringClass_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, declaringClass_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(methodName_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, methodName_);
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, fileName_);
      }
      if (lineNumber_ != 0) {
        output.writeInt32(4, lineNumber_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(declaringClass_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, declaringClass_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(methodName_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, methodName_);
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, fileName_);
      }
      if (lineNumber_ != 0) {
        size += com.google.protobuf.CodedOutputStream.computeInt32Size(4, lineNumber_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
        return true;
      }
      if (!(obj
          instanceof
          org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
              .StackTraceElement)) {
        return super.equals(obj);
      }
      org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse.StackTraceElement
          other =
              (org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
                      .StackTraceElement)
                  obj;

      if (!getDeclaringClass().equals(other.getDeclaringClass())) return false;
      if (!getMethodName().equals(other.getMethodName())) return false;
      if (hasFileName() != other.hasFileName()) return false;
      if (hasFileName()) {
        if (!getFileName().equals(other.getFileName())) return false;
      }
      if (getLineNumber() != other.getLineNumber()) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + DECLARING_CLASS_FIELD_NUMBER;
      hash = (53 * hash) + getDeclaringClass().hashCode();
      hash = (37 * hash) + METHOD_NAME_FIELD_NUMBER;
      hash = (53 * hash) + getMethodName().hashCode();
      if (hasFileName()) {
        hash = (37 * hash) + FILE_NAME_FIELD_NUMBER;
        hash = (53 * hash) + getFileName().hashCode();
      }
      hash = (37 * hash) + LINE_NUMBER_FIELD_NUMBER;
      hash = (53 * hash) + getLineNumber();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
            .StackTraceElement
        parseFrom(java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
            .StackTraceElement
        parseFrom(
            java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
            .StackTraceElement
        parseFrom(com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
            .StackTraceElement
        parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
            .StackTraceElement
        parseFrom(byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
            .StackTraceElement
        parseFrom(byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
            .StackTraceElement
        parseFrom(java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
            .StackTraceElement
        parseFrom(
            java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
          PARSER, input, extensionRegistry);
    }

    public static org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
            .StackTraceElement
        parseDelimitedFrom(java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
    }

    public static org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
            .StackTraceElement
        parseDelimitedFrom(
            java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
          PARSER, input, extensionRegistry);
    }

    public static org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
            .StackTraceElement
        parseFrom(com.google.protobuf.CodedInputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
            .StackTraceElement
        parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
          PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() {
      return newBuilder();
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }

    public static Builder newBuilder(
        org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
                .StackTraceElement
            prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /** Protobuf type {@code spark.connect.FetchErrorDetailsResponse.StackTraceElement} */
    public static final class Builder
        extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
        implements
        // @@protoc_insertion_point(builder_implements:spark.connect.FetchErrorDetailsResponse.StackTraceElement)
        org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
            .StackTraceElementOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
        return org.apache.kyuubi.engine.spark.connect.grpc.proto.Base
            .internal_static_spark_connect_FetchErrorDetailsResponse_StackTraceElement_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.kyuubi.engine.spark.connect.grpc.proto.Base
            .internal_static_spark_connect_FetchErrorDetailsResponse_StackTraceElement_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
                    .StackTraceElement.class,
                org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
                    .StackTraceElement.Builder.class);
      }

      // Construct using
      // org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse.StackTraceElement.newBuilder()
      private Builder() {}

      private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
      }

      @java.lang.Override
      public Builder clear() {
        super.clear();
        declaringClass_ = "";

        methodName_ = "";

        fileName_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        lineNumber_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
        return org.apache.kyuubi.engine.spark.connect.grpc.proto.Base
            .internal_static_spark_connect_FetchErrorDetailsResponse_StackTraceElement_descriptor;
      }

      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
              .StackTraceElement
          getDefaultInstanceForType() {
        return org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
            .StackTraceElement.getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
              .StackTraceElement
          build() {
        org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
                .StackTraceElement
            result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
              .StackTraceElement
          buildPartial() {
        org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
                .StackTraceElement
            result =
                new org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
                    .StackTraceElement(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.declaringClass_ = declaringClass_;
        result.methodName_ = methodName_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          to_bitField0_ |= 0x00000001;
        }
        result.fileName_ = fileName_;
        result.lineNumber_ = lineNumber_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }

      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
        return super.setField(field, value);
      }

      @java.lang.Override
      public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }

      @java.lang.Override
      public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }

      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index,
          java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }

      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other
            instanceof
            org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
                .StackTraceElement) {
          return mergeFrom(
              (org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
                      .StackTraceElement)
                  other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(
          org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
                  .StackTraceElement
              other) {
        if (other
            == org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
                .StackTraceElement.getDefaultInstance()) return this;
        if (!other.getDeclaringClass().isEmpty()) {
          declaringClass_ = other.declaringClass_;
          onChanged();
        }
        if (!other.getMethodName().isEmpty()) {
          methodName_ = other.methodName_;
          onChanged();
        }
        if (other.hasFileName()) {
          bitField0_ |= 0x00000001;
          fileName_ = other.fileName_;
          onChanged();
        }
        if (other.getLineNumber() != 0) {
          setLineNumber(other.getLineNumber());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10:
                {
                  declaringClass_ = input.readStringRequireUtf8();

                  break;
                } // case 10
              case 18:
                {
                  methodName_ = input.readStringRequireUtf8();

                  break;
                } // case 18
              case 26:
                {
                  fileName_ = input.readStringRequireUtf8();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 26
              case 32:
                {
                  lineNumber_ = input.readInt32();

                  break;
                } // case 32
              default:
                {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }

      private int bitField0_;

      private java.lang.Object declaringClass_ = "";
      /**
       *
       *
       * <pre>
       * The fully qualified name of the class containing the execution point.
       * </pre>
       *
       * <code>string declaring_class = 1;</code>
       *
       * @return The declaringClass.
       */
      public java.lang.String getDeclaringClass() {
        java.lang.Object ref = declaringClass_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          declaringClass_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       *
       *
       * <pre>
       * The fully qualified name of the class containing the execution point.
       * </pre>
       *
       * <code>string declaring_class = 1;</code>
       *
       * @return The bytes for declaringClass.
       */
      public com.google.protobuf.ByteString getDeclaringClassBytes() {
        java.lang.Object ref = declaringClass_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
          declaringClass_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       *
       *
       * <pre>
       * The fully qualified name of the class containing the execution point.
       * </pre>
       *
       * <code>string declaring_class = 1;</code>
       *
       * @param value The declaringClass to set.
       * @return This builder for chaining.
       */
      public Builder setDeclaringClass(java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }

        declaringClass_ = value;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * The fully qualified name of the class containing the execution point.
       * </pre>
       *
       * <code>string declaring_class = 1;</code>
       *
       * @return This builder for chaining.
       */
      public Builder clearDeclaringClass() {

        declaringClass_ = getDefaultInstance().getDeclaringClass();
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * The fully qualified name of the class containing the execution point.
       * </pre>
       *
       * <code>string declaring_class = 1;</code>
       *
       * @param value The bytes for declaringClass to set.
       * @return This builder for chaining.
       */
      public Builder setDeclaringClassBytes(com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        checkByteStringIsUtf8(value);

        declaringClass_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object methodName_ = "";
      /**
       *
       *
       * <pre>
       * The name of the method containing the execution point.
       * </pre>
       *
       * <code>string method_name = 2;</code>
       *
       * @return The methodName.
       */
      public java.lang.String getMethodName() {
        java.lang.Object ref = methodName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          methodName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       *
       *
       * <pre>
       * The name of the method containing the execution point.
       * </pre>
       *
       * <code>string method_name = 2;</code>
       *
       * @return The bytes for methodName.
       */
      public com.google.protobuf.ByteString getMethodNameBytes() {
        java.lang.Object ref = methodName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
          methodName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       *
       *
       * <pre>
       * The name of the method containing the execution point.
       * </pre>
       *
       * <code>string method_name = 2;</code>
       *
       * @param value The methodName to set.
       * @return This builder for chaining.
       */
      public Builder setMethodName(java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }

        methodName_ = value;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * The name of the method containing the execution point.
       * </pre>
       *
       * <code>string method_name = 2;</code>
       *
       * @return This builder for chaining.
       */
      public Builder clearMethodName() {

        methodName_ = getDefaultInstance().getMethodName();
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * The name of the method containing the execution point.
       * </pre>
       *
       * <code>string method_name = 2;</code>
       *
       * @param value The bytes for methodName to set.
       * @return This builder for chaining.
       */
      public Builder setMethodNameBytes(com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        checkByteStringIsUtf8(value);

        methodName_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object fileName_ = "";
      /**
       *
       *
       * <pre>
       * The name of the file containing the execution point.
       * </pre>
       *
       * <code>optional string file_name = 3;</code>
       *
       * @return Whether the fileName field is set.
       */
      public boolean hasFileName() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       *
       *
       * <pre>
       * The name of the file containing the execution point.
       * </pre>
       *
       * <code>optional string file_name = 3;</code>
       *
       * @return The fileName.
       */
      public java.lang.String getFileName() {
        java.lang.Object ref = fileName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          fileName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       *
       *
       * <pre>
       * The name of the file containing the execution point.
       * </pre>
       *
       * <code>optional string file_name = 3;</code>
       *
       * @return The bytes for fileName.
       */
      public com.google.protobuf.ByteString getFileNameBytes() {
        java.lang.Object ref = fileName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
          fileName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       *
       *
       * <pre>
       * The name of the file containing the execution point.
       * </pre>
       *
       * <code>optional string file_name = 3;</code>
       *
       * @param value The fileName to set.
       * @return This builder for chaining.
       */
      public Builder setFileName(java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        fileName_ = value;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * The name of the file containing the execution point.
       * </pre>
       *
       * <code>optional string file_name = 3;</code>
       *
       * @return This builder for chaining.
       */
      public Builder clearFileName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        fileName_ = getDefaultInstance().getFileName();
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * The name of the file containing the execution point.
       * </pre>
       *
       * <code>optional string file_name = 3;</code>
       *
       * @param value The bytes for fileName to set.
       * @return This builder for chaining.
       */
      public Builder setFileNameBytes(com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        checkByteStringIsUtf8(value);
        bitField0_ |= 0x00000001;
        fileName_ = value;
        onChanged();
        return this;
      }

      private int lineNumber_;
      /**
       *
       *
       * <pre>
       * The line number of the source line containing the execution point.
       * </pre>
       *
       * <code>int32 line_number = 4;</code>
       *
       * @return The lineNumber.
       */
      @java.lang.Override
      public int getLineNumber() {
        return lineNumber_;
      }
      /**
       *
       *
       * <pre>
       * The line number of the source line containing the execution point.
       * </pre>
       *
       * <code>int32 line_number = 4;</code>
       *
       * @param value The lineNumber to set.
       * @return This builder for chaining.
       */
      public Builder setLineNumber(int value) {

        lineNumber_ = value;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * The line number of the source line containing the execution point.
       * </pre>
       *
       * <code>int32 line_number = 4;</code>
       *
       * @return This builder for chaining.
       */
      public Builder clearLineNumber() {

        lineNumber_ = 0;
        onChanged();
        return this;
      }

      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }

      // @@protoc_insertion_point(builder_scope:spark.connect.FetchErrorDetailsResponse.StackTraceElement)
    }

    // @@protoc_insertion_point(class_scope:spark.connect.FetchErrorDetailsResponse.StackTraceElement)
    private static final org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
            .StackTraceElement
        DEFAULT_INSTANCE;

    static {
      DEFAULT_INSTANCE =
          new org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
              .StackTraceElement();
    }

    public static org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
            .StackTraceElement
        getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<StackTraceElement> PARSER =
        new com.google.protobuf.AbstractParser<StackTraceElement>() {
          @java.lang.Override
          public StackTraceElement parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            Builder builder = newBuilder();
            try {
              builder.mergeFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw e.setUnfinishedMessage(builder.buildPartial());
            } catch (com.google.protobuf.UninitializedMessageException e) {
              throw e.asInvalidProtocolBufferException()
                  .setUnfinishedMessage(builder.buildPartial());
            } catch (java.io.IOException e) {
              throw new com.google.protobuf.InvalidProtocolBufferException(e)
                  .setUnfinishedMessage(builder.buildPartial());
            }
            return builder.buildPartial();
          }
        };

    public static com.google.protobuf.Parser<StackTraceElement> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<StackTraceElement> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
            .StackTraceElement
        getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }
  }

  public interface QueryContextOrBuilder
      extends
      // @@protoc_insertion_point(interface_extends:spark.connect.FetchErrorDetailsResponse.QueryContext)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.spark.connect.FetchErrorDetailsResponse.QueryContext.ContextType context_type = 10;
     * </code>
     *
     * @return The enum numeric value on the wire for contextType.
     */
    int getContextTypeValue();
    /**
     * <code>.spark.connect.FetchErrorDetailsResponse.QueryContext.ContextType context_type = 10;
     * </code>
     *
     * @return The contextType.
     */
    org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse.QueryContext
            .ContextType
        getContextType();

    /**
     *
     *
     * <pre>
     * The object type of the query which throws the exception.
     * If the exception is directly from the main query, it should be an empty string.
     * Otherwise, it should be the exact object type in upper case. For example, a "VIEW".
     * </pre>
     *
     * <code>string object_type = 1;</code>
     *
     * @return The objectType.
     */
    java.lang.String getObjectType();
    /**
     *
     *
     * <pre>
     * The object type of the query which throws the exception.
     * If the exception is directly from the main query, it should be an empty string.
     * Otherwise, it should be the exact object type in upper case. For example, a "VIEW".
     * </pre>
     *
     * <code>string object_type = 1;</code>
     *
     * @return The bytes for objectType.
     */
    com.google.protobuf.ByteString getObjectTypeBytes();

    /**
     *
     *
     * <pre>
     * The object name of the query which throws the exception.
     * If the exception is directly from the main query, it should be an empty string.
     * Otherwise, it should be the object name. For example, a view name "V1".
     * </pre>
     *
     * <code>string object_name = 2;</code>
     *
     * @return The objectName.
     */
    java.lang.String getObjectName();
    /**
     *
     *
     * <pre>
     * The object name of the query which throws the exception.
     * If the exception is directly from the main query, it should be an empty string.
     * Otherwise, it should be the object name. For example, a view name "V1".
     * </pre>
     *
     * <code>string object_name = 2;</code>
     *
     * @return The bytes for objectName.
     */
    com.google.protobuf.ByteString getObjectNameBytes();

    /**
     *
     *
     * <pre>
     * The starting index in the query text which throws the exception. The index starts from 0.
     * </pre>
     *
     * <code>int32 start_index = 3;</code>
     *
     * @return The startIndex.
     */
    int getStartIndex();

    /**
     *
     *
     * <pre>
     * The stopping index in the query which throws the exception. The index starts from 0.
     * </pre>
     *
     * <code>int32 stop_index = 4;</code>
     *
     * @return The stopIndex.
     */
    int getStopIndex();

    /**
     *
     *
     * <pre>
     * The corresponding fragment of the query which throws the exception.
     * </pre>
     *
     * <code>string fragment = 5;</code>
     *
     * @return The fragment.
     */
    java.lang.String getFragment();
    /**
     *
     *
     * <pre>
     * The corresponding fragment of the query which throws the exception.
     * </pre>
     *
     * <code>string fragment = 5;</code>
     *
     * @return The bytes for fragment.
     */
    com.google.protobuf.ByteString getFragmentBytes();

    /**
     *
     *
     * <pre>
     * The user code (call site of the API) that caused throwing the exception.
     * </pre>
     *
     * <code>string call_site = 6;</code>
     *
     * @return The callSite.
     */
    java.lang.String getCallSite();
    /**
     *
     *
     * <pre>
     * The user code (call site of the API) that caused throwing the exception.
     * </pre>
     *
     * <code>string call_site = 6;</code>
     *
     * @return The bytes for callSite.
     */
    com.google.protobuf.ByteString getCallSiteBytes();

    /**
     *
     *
     * <pre>
     * Summary of the exception cause.
     * </pre>
     *
     * <code>string summary = 7;</code>
     *
     * @return The summary.
     */
    java.lang.String getSummary();
    /**
     *
     *
     * <pre>
     * Summary of the exception cause.
     * </pre>
     *
     * <code>string summary = 7;</code>
     *
     * @return The bytes for summary.
     */
    com.google.protobuf.ByteString getSummaryBytes();
  }
  /**
   *
   *
   * <pre>
   * QueryContext defines the schema for the query context of a SparkThrowable.
   * It helps users understand where the error occurs while executing queries.
   * </pre>
   *
   * Protobuf type {@code spark.connect.FetchErrorDetailsResponse.QueryContext}
   */
  public static final class QueryContext extends com.google.protobuf.GeneratedMessageV3
      implements
      // @@protoc_insertion_point(message_implements:spark.connect.FetchErrorDetailsResponse.QueryContext)
      QueryContextOrBuilder {
    private static final long serialVersionUID = 0L;
    // Use QueryContext.newBuilder() to construct.
    private QueryContext(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }

    private QueryContext() {
      contextType_ = 0;
      objectType_ = "";
      objectName_ = "";
      fragment_ = "";
      callSite_ = "";
      summary_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
      return new QueryContext();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet getUnknownFields() {
      return this.unknownFields;
    }

    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return org.apache.kyuubi.engine.spark.connect.grpc.proto.Base
          .internal_static_spark_connect_FetchErrorDetailsResponse_QueryContext_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.kyuubi.engine.spark.connect.grpc.proto.Base
          .internal_static_spark_connect_FetchErrorDetailsResponse_QueryContext_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
                  .QueryContext.class,
              org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
                  .QueryContext.Builder.class);
    }

    /**
     *
     *
     * <pre>
     * The type of this query context.
     * </pre>
     *
     * Protobuf enum {@code spark.connect.FetchErrorDetailsResponse.QueryContext.ContextType}
     */
    public enum ContextType implements com.google.protobuf.ProtocolMessageEnum {
      /** <code>SQL = 0;</code> */
      SQL(0),
      /** <code>DATAFRAME = 1;</code> */
      DATAFRAME(1),
      UNRECOGNIZED(-1),
      ;

      /** <code>SQL = 0;</code> */
      public static final int SQL_VALUE = 0;
      /** <code>DATAFRAME = 1;</code> */
      public static final int DATAFRAME_VALUE = 1;

      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static ContextType valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static ContextType forNumber(int value) {
        switch (value) {
          case 0:
            return SQL;
          case 1:
            return DATAFRAME;
          default:
            return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<ContextType> internalGetValueMap() {
        return internalValueMap;
      }

      private static final com.google.protobuf.Internal.EnumLiteMap<ContextType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ContextType>() {
            public ContextType findValueByNumber(int number) {
              return ContextType.forNumber(number);
            }
          };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }

      public final com.google.protobuf.Descriptors.EnumDescriptor getDescriptorForType() {
        return getDescriptor();
      }

      public static final com.google.protobuf.Descriptors.EnumDescriptor getDescriptor() {
        return org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
            .QueryContext.getDescriptor()
            .getEnumTypes()
            .get(0);
      }

      private static final ContextType[] VALUES = values();

      public static ContextType valueOf(com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException("EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private ContextType(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:spark.connect.FetchErrorDetailsResponse.QueryContext.ContextType)
    }

    public static final int CONTEXT_TYPE_FIELD_NUMBER = 10;
    private int contextType_;
    /**
     * <code>.spark.connect.FetchErrorDetailsResponse.QueryContext.ContextType context_type = 10;
     * </code>
     *
     * @return The enum numeric value on the wire for contextType.
     */
    @java.lang.Override
    public int getContextTypeValue() {
      return contextType_;
    }
    /**
     * <code>.spark.connect.FetchErrorDetailsResponse.QueryContext.ContextType context_type = 10;
     * </code>
     *
     * @return The contextType.
     */
    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse.QueryContext
            .ContextType
        getContextType() {
      @SuppressWarnings("deprecation")
      org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse.QueryContext
              .ContextType
          result =
              org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
                  .QueryContext.ContextType.valueOf(contextType_);
      return result == null
          ? org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse.QueryContext
              .ContextType.UNRECOGNIZED
          : result;
    }

    public static final int OBJECT_TYPE_FIELD_NUMBER = 1;
    private volatile java.lang.Object objectType_;
    /**
     *
     *
     * <pre>
     * The object type of the query which throws the exception.
     * If the exception is directly from the main query, it should be an empty string.
     * Otherwise, it should be the exact object type in upper case. For example, a "VIEW".
     * </pre>
     *
     * <code>string object_type = 1;</code>
     *
     * @return The objectType.
     */
    @java.lang.Override
    public java.lang.String getObjectType() {
      java.lang.Object ref = objectType_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        objectType_ = s;
        return s;
      }
    }
    /**
     *
     *
     * <pre>
     * The object type of the query which throws the exception.
     * If the exception is directly from the main query, it should be an empty string.
     * Otherwise, it should be the exact object type in upper case. For example, a "VIEW".
     * </pre>
     *
     * <code>string object_type = 1;</code>
     *
     * @return The bytes for objectType.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getObjectTypeBytes() {
      java.lang.Object ref = objectType_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        objectType_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int OBJECT_NAME_FIELD_NUMBER = 2;
    private volatile java.lang.Object objectName_;
    /**
     *
     *
     * <pre>
     * The object name of the query which throws the exception.
     * If the exception is directly from the main query, it should be an empty string.
     * Otherwise, it should be the object name. For example, a view name "V1".
     * </pre>
     *
     * <code>string object_name = 2;</code>
     *
     * @return The objectName.
     */
    @java.lang.Override
    public java.lang.String getObjectName() {
      java.lang.Object ref = objectName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        objectName_ = s;
        return s;
      }
    }
    /**
     *
     *
     * <pre>
     * The object name of the query which throws the exception.
     * If the exception is directly from the main query, it should be an empty string.
     * Otherwise, it should be the object name. For example, a view name "V1".
     * </pre>
     *
     * <code>string object_name = 2;</code>
     *
     * @return The bytes for objectName.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getObjectNameBytes() {
      java.lang.Object ref = objectName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        objectName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int START_INDEX_FIELD_NUMBER = 3;
    private int startIndex_;
    /**
     *
     *
     * <pre>
     * The starting index in the query text which throws the exception. The index starts from 0.
     * </pre>
     *
     * <code>int32 start_index = 3;</code>
     *
     * @return The startIndex.
     */
    @java.lang.Override
    public int getStartIndex() {
      return startIndex_;
    }

    public static final int STOP_INDEX_FIELD_NUMBER = 4;
    private int stopIndex_;
    /**
     *
     *
     * <pre>
     * The stopping index in the query which throws the exception. The index starts from 0.
     * </pre>
     *
     * <code>int32 stop_index = 4;</code>
     *
     * @return The stopIndex.
     */
    @java.lang.Override
    public int getStopIndex() {
      return stopIndex_;
    }

    public static final int FRAGMENT_FIELD_NUMBER = 5;
    private volatile java.lang.Object fragment_;
    /**
     *
     *
     * <pre>
     * The corresponding fragment of the query which throws the exception.
     * </pre>
     *
     * <code>string fragment = 5;</code>
     *
     * @return The fragment.
     */
    @java.lang.Override
    public java.lang.String getFragment() {
      java.lang.Object ref = fragment_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        fragment_ = s;
        return s;
      }
    }
    /**
     *
     *
     * <pre>
     * The corresponding fragment of the query which throws the exception.
     * </pre>
     *
     * <code>string fragment = 5;</code>
     *
     * @return The bytes for fragment.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getFragmentBytes() {
      java.lang.Object ref = fragment_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        fragment_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CALL_SITE_FIELD_NUMBER = 6;
    private volatile java.lang.Object callSite_;
    /**
     *
     *
     * <pre>
     * The user code (call site of the API) that caused throwing the exception.
     * </pre>
     *
     * <code>string call_site = 6;</code>
     *
     * @return The callSite.
     */
    @java.lang.Override
    public java.lang.String getCallSite() {
      java.lang.Object ref = callSite_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        callSite_ = s;
        return s;
      }
    }
    /**
     *
     *
     * <pre>
     * The user code (call site of the API) that caused throwing the exception.
     * </pre>
     *
     * <code>string call_site = 6;</code>
     *
     * @return The bytes for callSite.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getCallSiteBytes() {
      java.lang.Object ref = callSite_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        callSite_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SUMMARY_FIELD_NUMBER = 7;
    private volatile java.lang.Object summary_;
    /**
     *
     *
     * <pre>
     * Summary of the exception cause.
     * </pre>
     *
     * <code>string summary = 7;</code>
     *
     * @return The summary.
     */
    @java.lang.Override
    public java.lang.String getSummary() {
      java.lang.Object ref = summary_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        summary_ = s;
        return s;
      }
    }
    /**
     *
     *
     * <pre>
     * Summary of the exception cause.
     * </pre>
     *
     * <code>string summary = 7;</code>
     *
     * @return The bytes for summary.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getSummaryBytes() {
      java.lang.Object ref = summary_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        summary_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;

    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(objectType_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, objectType_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(objectName_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, objectName_);
      }
      if (startIndex_ != 0) {
        output.writeInt32(3, startIndex_);
      }
      if (stopIndex_ != 0) {
        output.writeInt32(4, stopIndex_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(fragment_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, fragment_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(callSite_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 6, callSite_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(summary_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 7, summary_);
      }
      if (contextType_
          != org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
              .QueryContext.ContextType.SQL
              .getNumber()) {
        output.writeEnum(10, contextType_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(objectType_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, objectType_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(objectName_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, objectName_);
      }
      if (startIndex_ != 0) {
        size += com.google.protobuf.CodedOutputStream.computeInt32Size(3, startIndex_);
      }
      if (stopIndex_ != 0) {
        size += com.google.protobuf.CodedOutputStream.computeInt32Size(4, stopIndex_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(fragment_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, fragment_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(callSite_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, callSite_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(summary_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(7, summary_);
      }
      if (contextType_
          != org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
              .QueryContext.ContextType.SQL
              .getNumber()) {
        size += com.google.protobuf.CodedOutputStream.computeEnumSize(10, contextType_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
        return true;
      }
      if (!(obj
          instanceof
          org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
              .QueryContext)) {
        return super.equals(obj);
      }
      org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse.QueryContext
          other =
              (org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
                      .QueryContext)
                  obj;

      if (contextType_ != other.contextType_) return false;
      if (!getObjectType().equals(other.getObjectType())) return false;
      if (!getObjectName().equals(other.getObjectName())) return false;
      if (getStartIndex() != other.getStartIndex()) return false;
      if (getStopIndex() != other.getStopIndex()) return false;
      if (!getFragment().equals(other.getFragment())) return false;
      if (!getCallSite().equals(other.getCallSite())) return false;
      if (!getSummary().equals(other.getSummary())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + CONTEXT_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + contextType_;
      hash = (37 * hash) + OBJECT_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getObjectType().hashCode();
      hash = (37 * hash) + OBJECT_NAME_FIELD_NUMBER;
      hash = (53 * hash) + getObjectName().hashCode();
      hash = (37 * hash) + START_INDEX_FIELD_NUMBER;
      hash = (53 * hash) + getStartIndex();
      hash = (37 * hash) + STOP_INDEX_FIELD_NUMBER;
      hash = (53 * hash) + getStopIndex();
      hash = (37 * hash) + FRAGMENT_FIELD_NUMBER;
      hash = (53 * hash) + getFragment().hashCode();
      hash = (37 * hash) + CALL_SITE_FIELD_NUMBER;
      hash = (53 * hash) + getCallSite().hashCode();
      hash = (37 * hash) + SUMMARY_FIELD_NUMBER;
      hash = (53 * hash) + getSummary().hashCode();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
            .QueryContext
        parseFrom(java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
            .QueryContext
        parseFrom(
            java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
            .QueryContext
        parseFrom(com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
            .QueryContext
        parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
            .QueryContext
        parseFrom(byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
            .QueryContext
        parseFrom(byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
            .QueryContext
        parseFrom(java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
            .QueryContext
        parseFrom(
            java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
          PARSER, input, extensionRegistry);
    }

    public static org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
            .QueryContext
        parseDelimitedFrom(java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
    }

    public static org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
            .QueryContext
        parseDelimitedFrom(
            java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
          PARSER, input, extensionRegistry);
    }

    public static org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
            .QueryContext
        parseFrom(com.google.protobuf.CodedInputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
            .QueryContext
        parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
          PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() {
      return newBuilder();
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }

    public static Builder newBuilder(
        org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse.QueryContext
            prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     *
     *
     * <pre>
     * QueryContext defines the schema for the query context of a SparkThrowable.
     * It helps users understand where the error occurs while executing queries.
     * </pre>
     *
     * Protobuf type {@code spark.connect.FetchErrorDetailsResponse.QueryContext}
     */
    public static final class Builder
        extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
        implements
        // @@protoc_insertion_point(builder_implements:spark.connect.FetchErrorDetailsResponse.QueryContext)
        org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
            .QueryContextOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
        return org.apache.kyuubi.engine.spark.connect.grpc.proto.Base
            .internal_static_spark_connect_FetchErrorDetailsResponse_QueryContext_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.kyuubi.engine.spark.connect.grpc.proto.Base
            .internal_static_spark_connect_FetchErrorDetailsResponse_QueryContext_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
                    .QueryContext.class,
                org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
                    .QueryContext.Builder.class);
      }

      // Construct using
      // org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse.QueryContext.newBuilder()
      private Builder() {}

      private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
      }

      @java.lang.Override
      public Builder clear() {
        super.clear();
        contextType_ = 0;

        objectType_ = "";

        objectName_ = "";

        startIndex_ = 0;

        stopIndex_ = 0;

        fragment_ = "";

        callSite_ = "";

        summary_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
        return org.apache.kyuubi.engine.spark.connect.grpc.proto.Base
            .internal_static_spark_connect_FetchErrorDetailsResponse_QueryContext_descriptor;
      }

      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
              .QueryContext
          getDefaultInstanceForType() {
        return org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
            .QueryContext.getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
              .QueryContext
          build() {
        org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse.QueryContext
            result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
              .QueryContext
          buildPartial() {
        org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse.QueryContext
            result =
                new org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
                    .QueryContext(this);
        result.contextType_ = contextType_;
        result.objectType_ = objectType_;
        result.objectName_ = objectName_;
        result.startIndex_ = startIndex_;
        result.stopIndex_ = stopIndex_;
        result.fragment_ = fragment_;
        result.callSite_ = callSite_;
        result.summary_ = summary_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }

      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
        return super.setField(field, value);
      }

      @java.lang.Override
      public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }

      @java.lang.Override
      public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }

      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index,
          java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }

      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other
            instanceof
            org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
                .QueryContext) {
          return mergeFrom(
              (org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
                      .QueryContext)
                  other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(
          org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse.QueryContext
              other) {
        if (other
            == org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
                .QueryContext.getDefaultInstance()) return this;
        if (other.contextType_ != 0) {
          setContextTypeValue(other.getContextTypeValue());
        }
        if (!other.getObjectType().isEmpty()) {
          objectType_ = other.objectType_;
          onChanged();
        }
        if (!other.getObjectName().isEmpty()) {
          objectName_ = other.objectName_;
          onChanged();
        }
        if (other.getStartIndex() != 0) {
          setStartIndex(other.getStartIndex());
        }
        if (other.getStopIndex() != 0) {
          setStopIndex(other.getStopIndex());
        }
        if (!other.getFragment().isEmpty()) {
          fragment_ = other.fragment_;
          onChanged();
        }
        if (!other.getCallSite().isEmpty()) {
          callSite_ = other.callSite_;
          onChanged();
        }
        if (!other.getSummary().isEmpty()) {
          summary_ = other.summary_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10:
                {
                  objectType_ = input.readStringRequireUtf8();

                  break;
                } // case 10
              case 18:
                {
                  objectName_ = input.readStringRequireUtf8();

                  break;
                } // case 18
              case 24:
                {
                  startIndex_ = input.readInt32();

                  break;
                } // case 24
              case 32:
                {
                  stopIndex_ = input.readInt32();

                  break;
                } // case 32
              case 42:
                {
                  fragment_ = input.readStringRequireUtf8();

                  break;
                } // case 42
              case 50:
                {
                  callSite_ = input.readStringRequireUtf8();

                  break;
                } // case 50
              case 58:
                {
                  summary_ = input.readStringRequireUtf8();

                  break;
                } // case 58
              case 80:
                {
                  contextType_ = input.readEnum();

                  break;
                } // case 80
              default:
                {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }

      private int contextType_ = 0;
      /**
       * <code>.spark.connect.FetchErrorDetailsResponse.QueryContext.ContextType context_type = 10;
       * </code>
       *
       * @return The enum numeric value on the wire for contextType.
       */
      @java.lang.Override
      public int getContextTypeValue() {
        return contextType_;
      }
      /**
       * <code>.spark.connect.FetchErrorDetailsResponse.QueryContext.ContextType context_type = 10;
       * </code>
       *
       * @param value The enum numeric value on the wire for contextType to set.
       * @return This builder for chaining.
       */
      public Builder setContextTypeValue(int value) {

        contextType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.spark.connect.FetchErrorDetailsResponse.QueryContext.ContextType context_type = 10;
       * </code>
       *
       * @return The contextType.
       */
      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
              .QueryContext.ContextType
          getContextType() {
        @SuppressWarnings("deprecation")
        org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse.QueryContext
                .ContextType
            result =
                org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
                    .QueryContext.ContextType.valueOf(contextType_);
        return result == null
            ? org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
                .QueryContext.ContextType.UNRECOGNIZED
            : result;
      }
      /**
       * <code>.spark.connect.FetchErrorDetailsResponse.QueryContext.ContextType context_type = 10;
       * </code>
       *
       * @param value The contextType to set.
       * @return This builder for chaining.
       */
      public Builder setContextType(
          org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse.QueryContext
                  .ContextType
              value) {
        if (value == null) {
          throw new NullPointerException();
        }

        contextType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.spark.connect.FetchErrorDetailsResponse.QueryContext.ContextType context_type = 10;
       * </code>
       *
       * @return This builder for chaining.
       */
      public Builder clearContextType() {

        contextType_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object objectType_ = "";
      /**
       *
       *
       * <pre>
       * The object type of the query which throws the exception.
       * If the exception is directly from the main query, it should be an empty string.
       * Otherwise, it should be the exact object type in upper case. For example, a "VIEW".
       * </pre>
       *
       * <code>string object_type = 1;</code>
       *
       * @return The objectType.
       */
      public java.lang.String getObjectType() {
        java.lang.Object ref = objectType_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          objectType_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       *
       *
       * <pre>
       * The object type of the query which throws the exception.
       * If the exception is directly from the main query, it should be an empty string.
       * Otherwise, it should be the exact object type in upper case. For example, a "VIEW".
       * </pre>
       *
       * <code>string object_type = 1;</code>
       *
       * @return The bytes for objectType.
       */
      public com.google.protobuf.ByteString getObjectTypeBytes() {
        java.lang.Object ref = objectType_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
          objectType_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       *
       *
       * <pre>
       * The object type of the query which throws the exception.
       * If the exception is directly from the main query, it should be an empty string.
       * Otherwise, it should be the exact object type in upper case. For example, a "VIEW".
       * </pre>
       *
       * <code>string object_type = 1;</code>
       *
       * @param value The objectType to set.
       * @return This builder for chaining.
       */
      public Builder setObjectType(java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }

        objectType_ = value;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * The object type of the query which throws the exception.
       * If the exception is directly from the main query, it should be an empty string.
       * Otherwise, it should be the exact object type in upper case. For example, a "VIEW".
       * </pre>
       *
       * <code>string object_type = 1;</code>
       *
       * @return This builder for chaining.
       */
      public Builder clearObjectType() {

        objectType_ = getDefaultInstance().getObjectType();
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * The object type of the query which throws the exception.
       * If the exception is directly from the main query, it should be an empty string.
       * Otherwise, it should be the exact object type in upper case. For example, a "VIEW".
       * </pre>
       *
       * <code>string object_type = 1;</code>
       *
       * @param value The bytes for objectType to set.
       * @return This builder for chaining.
       */
      public Builder setObjectTypeBytes(com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        checkByteStringIsUtf8(value);

        objectType_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object objectName_ = "";
      /**
       *
       *
       * <pre>
       * The object name of the query which throws the exception.
       * If the exception is directly from the main query, it should be an empty string.
       * Otherwise, it should be the object name. For example, a view name "V1".
       * </pre>
       *
       * <code>string object_name = 2;</code>
       *
       * @return The objectName.
       */
      public java.lang.String getObjectName() {
        java.lang.Object ref = objectName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          objectName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       *
       *
       * <pre>
       * The object name of the query which throws the exception.
       * If the exception is directly from the main query, it should be an empty string.
       * Otherwise, it should be the object name. For example, a view name "V1".
       * </pre>
       *
       * <code>string object_name = 2;</code>
       *
       * @return The bytes for objectName.
       */
      public com.google.protobuf.ByteString getObjectNameBytes() {
        java.lang.Object ref = objectName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
          objectName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       *
       *
       * <pre>
       * The object name of the query which throws the exception.
       * If the exception is directly from the main query, it should be an empty string.
       * Otherwise, it should be the object name. For example, a view name "V1".
       * </pre>
       *
       * <code>string object_name = 2;</code>
       *
       * @param value The objectName to set.
       * @return This builder for chaining.
       */
      public Builder setObjectName(java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }

        objectName_ = value;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * The object name of the query which throws the exception.
       * If the exception is directly from the main query, it should be an empty string.
       * Otherwise, it should be the object name. For example, a view name "V1".
       * </pre>
       *
       * <code>string object_name = 2;</code>
       *
       * @return This builder for chaining.
       */
      public Builder clearObjectName() {

        objectName_ = getDefaultInstance().getObjectName();
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * The object name of the query which throws the exception.
       * If the exception is directly from the main query, it should be an empty string.
       * Otherwise, it should be the object name. For example, a view name "V1".
       * </pre>
       *
       * <code>string object_name = 2;</code>
       *
       * @param value The bytes for objectName to set.
       * @return This builder for chaining.
       */
      public Builder setObjectNameBytes(com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        checkByteStringIsUtf8(value);

        objectName_ = value;
        onChanged();
        return this;
      }

      private int startIndex_;
      /**
       *
       *
       * <pre>
       * The starting index in the query text which throws the exception. The index starts from 0.
       * </pre>
       *
       * <code>int32 start_index = 3;</code>
       *
       * @return The startIndex.
       */
      @java.lang.Override
      public int getStartIndex() {
        return startIndex_;
      }
      /**
       *
       *
       * <pre>
       * The starting index in the query text which throws the exception. The index starts from 0.
       * </pre>
       *
       * <code>int32 start_index = 3;</code>
       *
       * @param value The startIndex to set.
       * @return This builder for chaining.
       */
      public Builder setStartIndex(int value) {

        startIndex_ = value;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * The starting index in the query text which throws the exception. The index starts from 0.
       * </pre>
       *
       * <code>int32 start_index = 3;</code>
       *
       * @return This builder for chaining.
       */
      public Builder clearStartIndex() {

        startIndex_ = 0;
        onChanged();
        return this;
      }

      private int stopIndex_;
      /**
       *
       *
       * <pre>
       * The stopping index in the query which throws the exception. The index starts from 0.
       * </pre>
       *
       * <code>int32 stop_index = 4;</code>
       *
       * @return The stopIndex.
       */
      @java.lang.Override
      public int getStopIndex() {
        return stopIndex_;
      }
      /**
       *
       *
       * <pre>
       * The stopping index in the query which throws the exception. The index starts from 0.
       * </pre>
       *
       * <code>int32 stop_index = 4;</code>
       *
       * @param value The stopIndex to set.
       * @return This builder for chaining.
       */
      public Builder setStopIndex(int value) {

        stopIndex_ = value;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * The stopping index in the query which throws the exception. The index starts from 0.
       * </pre>
       *
       * <code>int32 stop_index = 4;</code>
       *
       * @return This builder for chaining.
       */
      public Builder clearStopIndex() {

        stopIndex_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object fragment_ = "";
      /**
       *
       *
       * <pre>
       * The corresponding fragment of the query which throws the exception.
       * </pre>
       *
       * <code>string fragment = 5;</code>
       *
       * @return The fragment.
       */
      public java.lang.String getFragment() {
        java.lang.Object ref = fragment_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          fragment_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       *
       *
       * <pre>
       * The corresponding fragment of the query which throws the exception.
       * </pre>
       *
       * <code>string fragment = 5;</code>
       *
       * @return The bytes for fragment.
       */
      public com.google.protobuf.ByteString getFragmentBytes() {
        java.lang.Object ref = fragment_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
          fragment_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       *
       *
       * <pre>
       * The corresponding fragment of the query which throws the exception.
       * </pre>
       *
       * <code>string fragment = 5;</code>
       *
       * @param value The fragment to set.
       * @return This builder for chaining.
       */
      public Builder setFragment(java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }

        fragment_ = value;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * The corresponding fragment of the query which throws the exception.
       * </pre>
       *
       * <code>string fragment = 5;</code>
       *
       * @return This builder for chaining.
       */
      public Builder clearFragment() {

        fragment_ = getDefaultInstance().getFragment();
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * The corresponding fragment of the query which throws the exception.
       * </pre>
       *
       * <code>string fragment = 5;</code>
       *
       * @param value The bytes for fragment to set.
       * @return This builder for chaining.
       */
      public Builder setFragmentBytes(com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        checkByteStringIsUtf8(value);

        fragment_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object callSite_ = "";
      /**
       *
       *
       * <pre>
       * The user code (call site of the API) that caused throwing the exception.
       * </pre>
       *
       * <code>string call_site = 6;</code>
       *
       * @return The callSite.
       */
      public java.lang.String getCallSite() {
        java.lang.Object ref = callSite_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          callSite_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       *
       *
       * <pre>
       * The user code (call site of the API) that caused throwing the exception.
       * </pre>
       *
       * <code>string call_site = 6;</code>
       *
       * @return The bytes for callSite.
       */
      public com.google.protobuf.ByteString getCallSiteBytes() {
        java.lang.Object ref = callSite_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
          callSite_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       *
       *
       * <pre>
       * The user code (call site of the API) that caused throwing the exception.
       * </pre>
       *
       * <code>string call_site = 6;</code>
       *
       * @param value The callSite to set.
       * @return This builder for chaining.
       */
      public Builder setCallSite(java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }

        callSite_ = value;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * The user code (call site of the API) that caused throwing the exception.
       * </pre>
       *
       * <code>string call_site = 6;</code>
       *
       * @return This builder for chaining.
       */
      public Builder clearCallSite() {

        callSite_ = getDefaultInstance().getCallSite();
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * The user code (call site of the API) that caused throwing the exception.
       * </pre>
       *
       * <code>string call_site = 6;</code>
       *
       * @param value The bytes for callSite to set.
       * @return This builder for chaining.
       */
      public Builder setCallSiteBytes(com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        checkByteStringIsUtf8(value);

        callSite_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object summary_ = "";
      /**
       *
       *
       * <pre>
       * Summary of the exception cause.
       * </pre>
       *
       * <code>string summary = 7;</code>
       *
       * @return The summary.
       */
      public java.lang.String getSummary() {
        java.lang.Object ref = summary_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          summary_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       *
       *
       * <pre>
       * Summary of the exception cause.
       * </pre>
       *
       * <code>string summary = 7;</code>
       *
       * @return The bytes for summary.
       */
      public com.google.protobuf.ByteString getSummaryBytes() {
        java.lang.Object ref = summary_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
          summary_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       *
       *
       * <pre>
       * Summary of the exception cause.
       * </pre>
       *
       * <code>string summary = 7;</code>
       *
       * @param value The summary to set.
       * @return This builder for chaining.
       */
      public Builder setSummary(java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }

        summary_ = value;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * Summary of the exception cause.
       * </pre>
       *
       * <code>string summary = 7;</code>
       *
       * @return This builder for chaining.
       */
      public Builder clearSummary() {

        summary_ = getDefaultInstance().getSummary();
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * Summary of the exception cause.
       * </pre>
       *
       * <code>string summary = 7;</code>
       *
       * @param value The bytes for summary to set.
       * @return This builder for chaining.
       */
      public Builder setSummaryBytes(com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        checkByteStringIsUtf8(value);

        summary_ = value;
        onChanged();
        return this;
      }

      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }

      // @@protoc_insertion_point(builder_scope:spark.connect.FetchErrorDetailsResponse.QueryContext)
    }

    // @@protoc_insertion_point(class_scope:spark.connect.FetchErrorDetailsResponse.QueryContext)
    private static final org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
            .QueryContext
        DEFAULT_INSTANCE;

    static {
      DEFAULT_INSTANCE =
          new org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
              .QueryContext();
    }

    public static org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
            .QueryContext
        getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<QueryContext> PARSER =
        new com.google.protobuf.AbstractParser<QueryContext>() {
          @java.lang.Override
          public QueryContext parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            Builder builder = newBuilder();
            try {
              builder.mergeFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw e.setUnfinishedMessage(builder.buildPartial());
            } catch (com.google.protobuf.UninitializedMessageException e) {
              throw e.asInvalidProtocolBufferException()
                  .setUnfinishedMessage(builder.buildPartial());
            } catch (java.io.IOException e) {
              throw new com.google.protobuf.InvalidProtocolBufferException(e)
                  .setUnfinishedMessage(builder.buildPartial());
            }
            return builder.buildPartial();
          }
        };

    public static com.google.protobuf.Parser<QueryContext> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<QueryContext> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse.QueryContext
        getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }
  }

  public interface SparkThrowableOrBuilder
      extends
      // @@protoc_insertion_point(interface_extends:spark.connect.FetchErrorDetailsResponse.SparkThrowable)
      com.google.protobuf.MessageOrBuilder {

    /**
     *
     *
     * <pre>
     * Succinct, human-readable, unique, and consistent representation of the error category.
     * </pre>
     *
     * <code>optional string error_class = 1;</code>
     *
     * @return Whether the errorClass field is set.
     */
    boolean hasErrorClass();
    /**
     *
     *
     * <pre>
     * Succinct, human-readable, unique, and consistent representation of the error category.
     * </pre>
     *
     * <code>optional string error_class = 1;</code>
     *
     * @return The errorClass.
     */
    java.lang.String getErrorClass();
    /**
     *
     *
     * <pre>
     * Succinct, human-readable, unique, and consistent representation of the error category.
     * </pre>
     *
     * <code>optional string error_class = 1;</code>
     *
     * @return The bytes for errorClass.
     */
    com.google.protobuf.ByteString getErrorClassBytes();

    /**
     *
     *
     * <pre>
     * The message parameters for the error framework.
     * </pre>
     *
     * <code>map&lt;string, string&gt; message_parameters = 2;</code>
     */
    int getMessageParametersCount();
    /**
     *
     *
     * <pre>
     * The message parameters for the error framework.
     * </pre>
     *
     * <code>map&lt;string, string&gt; message_parameters = 2;</code>
     */
    boolean containsMessageParameters(java.lang.String key);
    /** Use {@link #getMessageParametersMap()} instead. */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, java.lang.String> getMessageParameters();
    /**
     *
     *
     * <pre>
     * The message parameters for the error framework.
     * </pre>
     *
     * <code>map&lt;string, string&gt; message_parameters = 2;</code>
     */
    java.util.Map<java.lang.String, java.lang.String> getMessageParametersMap();
    /**
     *
     *
     * <pre>
     * The message parameters for the error framework.
     * </pre>
     *
     * <code>map&lt;string, string&gt; message_parameters = 2;</code>
     */

    /* nullable */
    java.lang.String getMessageParametersOrDefault(
        java.lang.String key,
        /* nullable */
        java.lang.String defaultValue);
    /**
     *
     *
     * <pre>
     * The message parameters for the error framework.
     * </pre>
     *
     * <code>map&lt;string, string&gt; message_parameters = 2;</code>
     */
    java.lang.String getMessageParametersOrThrow(java.lang.String key);

    /**
     *
     *
     * <pre>
     * The query context of a SparkThrowable.
     * </pre>
     *
     * <code>repeated .spark.connect.FetchErrorDetailsResponse.QueryContext query_contexts = 3;
     * </code>
     */
    java.util.List<
            org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
                .QueryContext>
        getQueryContextsList();
    /**
     *
     *
     * <pre>
     * The query context of a SparkThrowable.
     * </pre>
     *
     * <code>repeated .spark.connect.FetchErrorDetailsResponse.QueryContext query_contexts = 3;
     * </code>
     */
    org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse.QueryContext
        getQueryContexts(int index);
    /**
     *
     *
     * <pre>
     * The query context of a SparkThrowable.
     * </pre>
     *
     * <code>repeated .spark.connect.FetchErrorDetailsResponse.QueryContext query_contexts = 3;
     * </code>
     */
    int getQueryContextsCount();
    /**
     *
     *
     * <pre>
     * The query context of a SparkThrowable.
     * </pre>
     *
     * <code>repeated .spark.connect.FetchErrorDetailsResponse.QueryContext query_contexts = 3;
     * </code>
     */
    java.util.List<
            ? extends
                org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
                    .QueryContextOrBuilder>
        getQueryContextsOrBuilderList();
    /**
     *
     *
     * <pre>
     * The query context of a SparkThrowable.
     * </pre>
     *
     * <code>repeated .spark.connect.FetchErrorDetailsResponse.QueryContext query_contexts = 3;
     * </code>
     */
    org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
            .QueryContextOrBuilder
        getQueryContextsOrBuilder(int index);

    /**
     *
     *
     * <pre>
     * Portable error identifier across SQL engines
     * If null, error class or SQLSTATE is not set.
     * </pre>
     *
     * <code>optional string sql_state = 4;</code>
     *
     * @return Whether the sqlState field is set.
     */
    boolean hasSqlState();
    /**
     *
     *
     * <pre>
     * Portable error identifier across SQL engines
     * If null, error class or SQLSTATE is not set.
     * </pre>
     *
     * <code>optional string sql_state = 4;</code>
     *
     * @return The sqlState.
     */
    java.lang.String getSqlState();
    /**
     *
     *
     * <pre>
     * Portable error identifier across SQL engines
     * If null, error class or SQLSTATE is not set.
     * </pre>
     *
     * <code>optional string sql_state = 4;</code>
     *
     * @return The bytes for sqlState.
     */
    com.google.protobuf.ByteString getSqlStateBytes();
  }
  /**
   *
   *
   * <pre>
   * SparkThrowable defines the schema for SparkThrowable exceptions.
   * </pre>
   *
   * Protobuf type {@code spark.connect.FetchErrorDetailsResponse.SparkThrowable}
   */
  public static final class SparkThrowable extends com.google.protobuf.GeneratedMessageV3
      implements
      // @@protoc_insertion_point(message_implements:spark.connect.FetchErrorDetailsResponse.SparkThrowable)
      SparkThrowableOrBuilder {
    private static final long serialVersionUID = 0L;
    // Use SparkThrowable.newBuilder() to construct.
    private SparkThrowable(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }

    private SparkThrowable() {
      errorClass_ = "";
      queryContexts_ = java.util.Collections.emptyList();
      sqlState_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
      return new SparkThrowable();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet getUnknownFields() {
      return this.unknownFields;
    }

    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return org.apache.kyuubi.engine.spark.connect.grpc.proto.Base
          .internal_static_spark_connect_FetchErrorDetailsResponse_SparkThrowable_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    @java.lang.Override
    protected com.google.protobuf.MapField internalGetMapField(int number) {
      switch (number) {
        case 2:
          return internalGetMessageParameters();
        default:
          throw new RuntimeException("Invalid map field number: " + number);
      }
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.kyuubi.engine.spark.connect.grpc.proto.Base
          .internal_static_spark_connect_FetchErrorDetailsResponse_SparkThrowable_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
                  .SparkThrowable.class,
              org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
                  .SparkThrowable.Builder.class);
    }

    private int bitField0_;
    public static final int ERROR_CLASS_FIELD_NUMBER = 1;
    private volatile java.lang.Object errorClass_;
    /**
     *
     *
     * <pre>
     * Succinct, human-readable, unique, and consistent representation of the error category.
     * </pre>
     *
     * <code>optional string error_class = 1;</code>
     *
     * @return Whether the errorClass field is set.
     */
    @java.lang.Override
    public boolean hasErrorClass() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     *
     *
     * <pre>
     * Succinct, human-readable, unique, and consistent representation of the error category.
     * </pre>
     *
     * <code>optional string error_class = 1;</code>
     *
     * @return The errorClass.
     */
    @java.lang.Override
    public java.lang.String getErrorClass() {
      java.lang.Object ref = errorClass_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        errorClass_ = s;
        return s;
      }
    }
    /**
     *
     *
     * <pre>
     * Succinct, human-readable, unique, and consistent representation of the error category.
     * </pre>
     *
     * <code>optional string error_class = 1;</code>
     *
     * @return The bytes for errorClass.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getErrorClassBytes() {
      java.lang.Object ref = errorClass_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        errorClass_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int MESSAGE_PARAMETERS_FIELD_NUMBER = 2;

    private static final class MessageParametersDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<java.lang.String, java.lang.String> defaultEntry =
          com.google.protobuf.MapEntry.<java.lang.String, java.lang.String>newDefaultInstance(
              org.apache.kyuubi.engine.spark.connect.grpc.proto.Base
                  .internal_static_spark_connect_FetchErrorDetailsResponse_SparkThrowable_MessageParametersEntry_descriptor,
              com.google.protobuf.WireFormat.FieldType.STRING,
              "",
              com.google.protobuf.WireFormat.FieldType.STRING,
              "");
    }

    private com.google.protobuf.MapField<java.lang.String, java.lang.String> messageParameters_;

    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
        internalGetMessageParameters() {
      if (messageParameters_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            MessageParametersDefaultEntryHolder.defaultEntry);
      }
      return messageParameters_;
    }

    public int getMessageParametersCount() {
      return internalGetMessageParameters().getMap().size();
    }
    /**
     *
     *
     * <pre>
     * The message parameters for the error framework.
     * </pre>
     *
     * <code>map&lt;string, string&gt; message_parameters = 2;</code>
     */
    @java.lang.Override
    public boolean containsMessageParameters(java.lang.String key) {
      if (key == null) {
        throw new NullPointerException("map key");
      }
      return internalGetMessageParameters().getMap().containsKey(key);
    }
    /** Use {@link #getMessageParametersMap()} instead. */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String> getMessageParameters() {
      return getMessageParametersMap();
    }
    /**
     *
     *
     * <pre>
     * The message parameters for the error framework.
     * </pre>
     *
     * <code>map&lt;string, string&gt; message_parameters = 2;</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.String, java.lang.String> getMessageParametersMap() {
      return internalGetMessageParameters().getMap();
    }
    /**
     *
     *
     * <pre>
     * The message parameters for the error framework.
     * </pre>
     *
     * <code>map&lt;string, string&gt; message_parameters = 2;</code>
     */
    @java.lang.Override
    public java.lang.String getMessageParametersOrDefault(
        java.lang.String key, java.lang.String defaultValue) {
      if (key == null) {
        throw new NullPointerException("map key");
      }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetMessageParameters().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     *
     *
     * <pre>
     * The message parameters for the error framework.
     * </pre>
     *
     * <code>map&lt;string, string&gt; message_parameters = 2;</code>
     */
    @java.lang.Override
    public java.lang.String getMessageParametersOrThrow(java.lang.String key) {
      if (key == null) {
        throw new NullPointerException("map key");
      }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetMessageParameters().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int QUERY_CONTEXTS_FIELD_NUMBER = 3;
    private java.util.List<
            org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
                .QueryContext>
        queryContexts_;
    /**
     *
     *
     * <pre>
     * The query context of a SparkThrowable.
     * </pre>
     *
     * <code>repeated .spark.connect.FetchErrorDetailsResponse.QueryContext query_contexts = 3;
     * </code>
     */
    @java.lang.Override
    public java.util.List<
            org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
                .QueryContext>
        getQueryContextsList() {
      return queryContexts_;
    }
    /**
     *
     *
     * <pre>
     * The query context of a SparkThrowable.
     * </pre>
     *
     * <code>repeated .spark.connect.FetchErrorDetailsResponse.QueryContext query_contexts = 3;
     * </code>
     */
    @java.lang.Override
    public java.util.List<
            ? extends
                org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
                    .QueryContextOrBuilder>
        getQueryContextsOrBuilderList() {
      return queryContexts_;
    }
    /**
     *
     *
     * <pre>
     * The query context of a SparkThrowable.
     * </pre>
     *
     * <code>repeated .spark.connect.FetchErrorDetailsResponse.QueryContext query_contexts = 3;
     * </code>
     */
    @java.lang.Override
    public int getQueryContextsCount() {
      return queryContexts_.size();
    }
    /**
     *
     *
     * <pre>
     * The query context of a SparkThrowable.
     * </pre>
     *
     * <code>repeated .spark.connect.FetchErrorDetailsResponse.QueryContext query_contexts = 3;
     * </code>
     */
    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse.QueryContext
        getQueryContexts(int index) {
      return queryContexts_.get(index);
    }
    /**
     *
     *
     * <pre>
     * The query context of a SparkThrowable.
     * </pre>
     *
     * <code>repeated .spark.connect.FetchErrorDetailsResponse.QueryContext query_contexts = 3;
     * </code>
     */
    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
            .QueryContextOrBuilder
        getQueryContextsOrBuilder(int index) {
      return queryContexts_.get(index);
    }

    public static final int SQL_STATE_FIELD_NUMBER = 4;
    private volatile java.lang.Object sqlState_;
    /**
     *
     *
     * <pre>
     * Portable error identifier across SQL engines
     * If null, error class or SQLSTATE is not set.
     * </pre>
     *
     * <code>optional string sql_state = 4;</code>
     *
     * @return Whether the sqlState field is set.
     */
    @java.lang.Override
    public boolean hasSqlState() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     *
     *
     * <pre>
     * Portable error identifier across SQL engines
     * If null, error class or SQLSTATE is not set.
     * </pre>
     *
     * <code>optional string sql_state = 4;</code>
     *
     * @return The sqlState.
     */
    @java.lang.Override
    public java.lang.String getSqlState() {
      java.lang.Object ref = sqlState_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        sqlState_ = s;
        return s;
      }
    }
    /**
     *
     *
     * <pre>
     * Portable error identifier across SQL engines
     * If null, error class or SQLSTATE is not set.
     * </pre>
     *
     * <code>optional string sql_state = 4;</code>
     *
     * @return The bytes for sqlState.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getSqlStateBytes() {
      java.lang.Object ref = sqlState_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        sqlState_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;

    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, errorClass_);
      }
      com.google.protobuf.GeneratedMessageV3.serializeStringMapTo(
          output,
          internalGetMessageParameters(),
          MessageParametersDefaultEntryHolder.defaultEntry,
          2);
      for (int i = 0; i < queryContexts_.size(); i++) {
        output.writeMessage(3, queryContexts_.get(i));
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, sqlState_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, errorClass_);
      }
      for (java.util.Map.Entry<java.lang.String, java.lang.String> entry :
          internalGetMessageParameters().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, java.lang.String> messageParameters__ =
            MessageParametersDefaultEntryHolder.defaultEntry
                .newBuilderForType()
                .setKey(entry.getKey())
                .setValue(entry.getValue())
                .build();
        size += com.google.protobuf.CodedOutputStream.computeMessageSize(2, messageParameters__);
      }
      for (int i = 0; i < queryContexts_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream.computeMessageSize(3, queryContexts_.get(i));
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, sqlState_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
        return true;
      }
      if (!(obj
          instanceof
          org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
              .SparkThrowable)) {
        return super.equals(obj);
      }
      org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse.SparkThrowable
          other =
              (org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
                      .SparkThrowable)
                  obj;

      if (hasErrorClass() != other.hasErrorClass()) return false;
      if (hasErrorClass()) {
        if (!getErrorClass().equals(other.getErrorClass())) return false;
      }
      if (!internalGetMessageParameters().equals(other.internalGetMessageParameters()))
        return false;
      if (!getQueryContextsList().equals(other.getQueryContextsList())) return false;
      if (hasSqlState() != other.hasSqlState()) return false;
      if (hasSqlState()) {
        if (!getSqlState().equals(other.getSqlState())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasErrorClass()) {
        hash = (37 * hash) + ERROR_CLASS_FIELD_NUMBER;
        hash = (53 * hash) + getErrorClass().hashCode();
      }
      if (!internalGetMessageParameters().getMap().isEmpty()) {
        hash = (37 * hash) + MESSAGE_PARAMETERS_FIELD_NUMBER;
        hash = (53 * hash) + internalGetMessageParameters().hashCode();
      }
      if (getQueryContextsCount() > 0) {
        hash = (37 * hash) + QUERY_CONTEXTS_FIELD_NUMBER;
        hash = (53 * hash) + getQueryContextsList().hashCode();
      }
      if (hasSqlState()) {
        hash = (37 * hash) + SQL_STATE_FIELD_NUMBER;
        hash = (53 * hash) + getSqlState().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
            .SparkThrowable
        parseFrom(java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
            .SparkThrowable
        parseFrom(
            java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
            .SparkThrowable
        parseFrom(com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
            .SparkThrowable
        parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
            .SparkThrowable
        parseFrom(byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
            .SparkThrowable
        parseFrom(byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
            .SparkThrowable
        parseFrom(java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
            .SparkThrowable
        parseFrom(
            java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
          PARSER, input, extensionRegistry);
    }

    public static org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
            .SparkThrowable
        parseDelimitedFrom(java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
    }

    public static org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
            .SparkThrowable
        parseDelimitedFrom(
            java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
          PARSER, input, extensionRegistry);
    }

    public static org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
            .SparkThrowable
        parseFrom(com.google.protobuf.CodedInputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
            .SparkThrowable
        parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
          PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() {
      return newBuilder();
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }

    public static Builder newBuilder(
        org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse.SparkThrowable
            prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     *
     *
     * <pre>
     * SparkThrowable defines the schema for SparkThrowable exceptions.
     * </pre>
     *
     * Protobuf type {@code spark.connect.FetchErrorDetailsResponse.SparkThrowable}
     */
    public static final class Builder
        extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
        implements
        // @@protoc_insertion_point(builder_implements:spark.connect.FetchErrorDetailsResponse.SparkThrowable)
        org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
            .SparkThrowableOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
        return org.apache.kyuubi.engine.spark.connect.grpc.proto.Base
            .internal_static_spark_connect_FetchErrorDetailsResponse_SparkThrowable_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(int number) {
        switch (number) {
          case 2:
            return internalGetMessageParameters();
          default:
            throw new RuntimeException("Invalid map field number: " + number);
        }
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(int number) {
        switch (number) {
          case 2:
            return internalGetMutableMessageParameters();
          default:
            throw new RuntimeException("Invalid map field number: " + number);
        }
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.kyuubi.engine.spark.connect.grpc.proto.Base
            .internal_static_spark_connect_FetchErrorDetailsResponse_SparkThrowable_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
                    .SparkThrowable.class,
                org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
                    .SparkThrowable.Builder.class);
      }

      // Construct using
      // org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse.SparkThrowable.newBuilder()
      private Builder() {}

      private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
      }

      @java.lang.Override
      public Builder clear() {
        super.clear();
        errorClass_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        internalGetMutableMessageParameters().clear();
        if (queryContextsBuilder_ == null) {
          queryContexts_ = java.util.Collections.emptyList();
        } else {
          queryContexts_ = null;
          queryContextsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        sqlState_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
        return org.apache.kyuubi.engine.spark.connect.grpc.proto.Base
            .internal_static_spark_connect_FetchErrorDetailsResponse_SparkThrowable_descriptor;
      }

      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
              .SparkThrowable
          getDefaultInstanceForType() {
        return org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
            .SparkThrowable.getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
              .SparkThrowable
          build() {
        org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse.SparkThrowable
            result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
              .SparkThrowable
          buildPartial() {
        org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse.SparkThrowable
            result =
                new org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
                    .SparkThrowable(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          to_bitField0_ |= 0x00000001;
        }
        result.errorClass_ = errorClass_;
        result.messageParameters_ = internalGetMessageParameters();
        result.messageParameters_.makeImmutable();
        if (queryContextsBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0)) {
            queryContexts_ = java.util.Collections.unmodifiableList(queryContexts_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.queryContexts_ = queryContexts_;
        } else {
          result.queryContexts_ = queryContextsBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          to_bitField0_ |= 0x00000002;
        }
        result.sqlState_ = sqlState_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }

      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
        return super.setField(field, value);
      }

      @java.lang.Override
      public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }

      @java.lang.Override
      public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }

      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index,
          java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }

      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other
            instanceof
            org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
                .SparkThrowable) {
          return mergeFrom(
              (org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
                      .SparkThrowable)
                  other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(
          org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse.SparkThrowable
              other) {
        if (other
            == org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
                .SparkThrowable.getDefaultInstance()) return this;
        if (other.hasErrorClass()) {
          bitField0_ |= 0x00000001;
          errorClass_ = other.errorClass_;
          onChanged();
        }
        internalGetMutableMessageParameters().mergeFrom(other.internalGetMessageParameters());
        if (queryContextsBuilder_ == null) {
          if (!other.queryContexts_.isEmpty()) {
            if (queryContexts_.isEmpty()) {
              queryContexts_ = other.queryContexts_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureQueryContextsIsMutable();
              queryContexts_.addAll(other.queryContexts_);
            }
            onChanged();
          }
        } else {
          if (!other.queryContexts_.isEmpty()) {
            if (queryContextsBuilder_.isEmpty()) {
              queryContextsBuilder_.dispose();
              queryContextsBuilder_ = null;
              queryContexts_ = other.queryContexts_;
              bitField0_ = (bitField0_ & ~0x00000004);
              queryContextsBuilder_ =
                  com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders
                      ? getQueryContextsFieldBuilder()
                      : null;
            } else {
              queryContextsBuilder_.addAllMessages(other.queryContexts_);
            }
          }
        }
        if (other.hasSqlState()) {
          bitField0_ |= 0x00000008;
          sqlState_ = other.sqlState_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10:
                {
                  errorClass_ = input.readStringRequireUtf8();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 10
              case 18:
                {
                  com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
                      messageParameters__ =
                          input.readMessage(
                              MessageParametersDefaultEntryHolder.defaultEntry.getParserForType(),
                              extensionRegistry);
                  internalGetMutableMessageParameters()
                      .getMutableMap()
                      .put(messageParameters__.getKey(), messageParameters__.getValue());
                  break;
                } // case 18
              case 26:
                {
                  org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
                          .QueryContext
                      m =
                          input.readMessage(
                              org.apache.kyuubi.engine.spark.connect.grpc.proto
                                  .FetchErrorDetailsResponse.QueryContext.parser(),
                              extensionRegistry);
                  if (queryContextsBuilder_ == null) {
                    ensureQueryContextsIsMutable();
                    queryContexts_.add(m);
                  } else {
                    queryContextsBuilder_.addMessage(m);
                  }
                  break;
                } // case 26
              case 34:
                {
                  sqlState_ = input.readStringRequireUtf8();
                  bitField0_ |= 0x00000008;
                  break;
                } // case 34
              default:
                {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }

      private int bitField0_;

      private java.lang.Object errorClass_ = "";
      /**
       *
       *
       * <pre>
       * Succinct, human-readable, unique, and consistent representation of the error category.
       * </pre>
       *
       * <code>optional string error_class = 1;</code>
       *
       * @return Whether the errorClass field is set.
       */
      public boolean hasErrorClass() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       *
       *
       * <pre>
       * Succinct, human-readable, unique, and consistent representation of the error category.
       * </pre>
       *
       * <code>optional string error_class = 1;</code>
       *
       * @return The errorClass.
       */
      public java.lang.String getErrorClass() {
        java.lang.Object ref = errorClass_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          errorClass_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       *
       *
       * <pre>
       * Succinct, human-readable, unique, and consistent representation of the error category.
       * </pre>
       *
       * <code>optional string error_class = 1;</code>
       *
       * @return The bytes for errorClass.
       */
      public com.google.protobuf.ByteString getErrorClassBytes() {
        java.lang.Object ref = errorClass_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
          errorClass_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       *
       *
       * <pre>
       * Succinct, human-readable, unique, and consistent representation of the error category.
       * </pre>
       *
       * <code>optional string error_class = 1;</code>
       *
       * @param value The errorClass to set.
       * @return This builder for chaining.
       */
      public Builder setErrorClass(java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        errorClass_ = value;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * Succinct, human-readable, unique, and consistent representation of the error category.
       * </pre>
       *
       * <code>optional string error_class = 1;</code>
       *
       * @return This builder for chaining.
       */
      public Builder clearErrorClass() {
        bitField0_ = (bitField0_ & ~0x00000001);
        errorClass_ = getDefaultInstance().getErrorClass();
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * Succinct, human-readable, unique, and consistent representation of the error category.
       * </pre>
       *
       * <code>optional string error_class = 1;</code>
       *
       * @param value The bytes for errorClass to set.
       * @return This builder for chaining.
       */
      public Builder setErrorClassBytes(com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        checkByteStringIsUtf8(value);
        bitField0_ |= 0x00000001;
        errorClass_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.MapField<java.lang.String, java.lang.String> messageParameters_;

      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
          internalGetMessageParameters() {
        if (messageParameters_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              MessageParametersDefaultEntryHolder.defaultEntry);
        }
        return messageParameters_;
      }

      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
          internalGetMutableMessageParameters() {
        onChanged();
        ;
        if (messageParameters_ == null) {
          messageParameters_ =
              com.google.protobuf.MapField.newMapField(
                  MessageParametersDefaultEntryHolder.defaultEntry);
        }
        if (!messageParameters_.isMutable()) {
          messageParameters_ = messageParameters_.copy();
        }
        return messageParameters_;
      }

      public int getMessageParametersCount() {
        return internalGetMessageParameters().getMap().size();
      }
      /**
       *
       *
       * <pre>
       * The message parameters for the error framework.
       * </pre>
       *
       * <code>map&lt;string, string&gt; message_parameters = 2;</code>
       */
      @java.lang.Override
      public boolean containsMessageParameters(java.lang.String key) {
        if (key == null) {
          throw new NullPointerException("map key");
        }
        return internalGetMessageParameters().getMap().containsKey(key);
      }
      /** Use {@link #getMessageParametersMap()} instead. */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.String> getMessageParameters() {
        return getMessageParametersMap();
      }
      /**
       *
       *
       * <pre>
       * The message parameters for the error framework.
       * </pre>
       *
       * <code>map&lt;string, string&gt; message_parameters = 2;</code>
       */
      @java.lang.Override
      public java.util.Map<java.lang.String, java.lang.String> getMessageParametersMap() {
        return internalGetMessageParameters().getMap();
      }
      /**
       *
       *
       * <pre>
       * The message parameters for the error framework.
       * </pre>
       *
       * <code>map&lt;string, string&gt; message_parameters = 2;</code>
       */
      @java.lang.Override
      public java.lang.String getMessageParametersOrDefault(
          java.lang.String key, java.lang.String defaultValue) {
        if (key == null) {
          throw new NullPointerException("map key");
        }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetMessageParameters().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       *
       *
       * <pre>
       * The message parameters for the error framework.
       * </pre>
       *
       * <code>map&lt;string, string&gt; message_parameters = 2;</code>
       */
      @java.lang.Override
      public java.lang.String getMessageParametersOrThrow(java.lang.String key) {
        if (key == null) {
          throw new NullPointerException("map key");
        }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetMessageParameters().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearMessageParameters() {
        internalGetMutableMessageParameters().getMutableMap().clear();
        return this;
      }
      /**
       *
       *
       * <pre>
       * The message parameters for the error framework.
       * </pre>
       *
       * <code>map&lt;string, string&gt; message_parameters = 2;</code>
       */
      public Builder removeMessageParameters(java.lang.String key) {
        if (key == null) {
          throw new NullPointerException("map key");
        }
        internalGetMutableMessageParameters().getMutableMap().remove(key);
        return this;
      }
      /** Use alternate mutation accessors instead. */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.String> getMutableMessageParameters() {
        return internalGetMutableMessageParameters().getMutableMap();
      }
      /**
       *
       *
       * <pre>
       * The message parameters for the error framework.
       * </pre>
       *
       * <code>map&lt;string, string&gt; message_parameters = 2;</code>
       */
      public Builder putMessageParameters(java.lang.String key, java.lang.String value) {
        if (key == null) {
          throw new NullPointerException("map key");
        }
        if (value == null) {
          throw new NullPointerException("map value");
        }

        internalGetMutableMessageParameters().getMutableMap().put(key, value);
        return this;
      }
      /**
       *
       *
       * <pre>
       * The message parameters for the error framework.
       * </pre>
       *
       * <code>map&lt;string, string&gt; message_parameters = 2;</code>
       */
      public Builder putAllMessageParameters(
          java.util.Map<java.lang.String, java.lang.String> values) {
        internalGetMutableMessageParameters().getMutableMap().putAll(values);
        return this;
      }

      private java.util.List<
              org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
                  .QueryContext>
          queryContexts_ = java.util.Collections.emptyList();

      private void ensureQueryContextsIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          queryContexts_ =
              new java.util.ArrayList<
                  org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
                      .QueryContext>(queryContexts_);
          bitField0_ |= 0x00000004;
        }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
              org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
                  .QueryContext,
              org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
                  .QueryContext.Builder,
              org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
                  .QueryContextOrBuilder>
          queryContextsBuilder_;

      /**
       *
       *
       * <pre>
       * The query context of a SparkThrowable.
       * </pre>
       *
       * <code>repeated .spark.connect.FetchErrorDetailsResponse.QueryContext query_contexts = 3;
       * </code>
       */
      public java.util.List<
              org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
                  .QueryContext>
          getQueryContextsList() {
        if (queryContextsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(queryContexts_);
        } else {
          return queryContextsBuilder_.getMessageList();
        }
      }
      /**
       *
       *
       * <pre>
       * The query context of a SparkThrowable.
       * </pre>
       *
       * <code>repeated .spark.connect.FetchErrorDetailsResponse.QueryContext query_contexts = 3;
       * </code>
       */
      public int getQueryContextsCount() {
        if (queryContextsBuilder_ == null) {
          return queryContexts_.size();
        } else {
          return queryContextsBuilder_.getCount();
        }
      }
      /**
       *
       *
       * <pre>
       * The query context of a SparkThrowable.
       * </pre>
       *
       * <code>repeated .spark.connect.FetchErrorDetailsResponse.QueryContext query_contexts = 3;
       * </code>
       */
      public org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
              .QueryContext
          getQueryContexts(int index) {
        if (queryContextsBuilder_ == null) {
          return queryContexts_.get(index);
        } else {
          return queryContextsBuilder_.getMessage(index);
        }
      }
      /**
       *
       *
       * <pre>
       * The query context of a SparkThrowable.
       * </pre>
       *
       * <code>repeated .spark.connect.FetchErrorDetailsResponse.QueryContext query_contexts = 3;
       * </code>
       */
      public Builder setQueryContexts(
          int index,
          org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse.QueryContext
              value) {
        if (queryContextsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureQueryContextsIsMutable();
          queryContexts_.set(index, value);
          onChanged();
        } else {
          queryContextsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       *
       *
       * <pre>
       * The query context of a SparkThrowable.
       * </pre>
       *
       * <code>repeated .spark.connect.FetchErrorDetailsResponse.QueryContext query_contexts = 3;
       * </code>
       */
      public Builder setQueryContexts(
          int index,
          org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse.QueryContext
                  .Builder
              builderForValue) {
        if (queryContextsBuilder_ == null) {
          ensureQueryContextsIsMutable();
          queryContexts_.set(index, builderForValue.build());
          onChanged();
        } else {
          queryContextsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       *
       *
       * <pre>
       * The query context of a SparkThrowable.
       * </pre>
       *
       * <code>repeated .spark.connect.FetchErrorDetailsResponse.QueryContext query_contexts = 3;
       * </code>
       */
      public Builder addQueryContexts(
          org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse.QueryContext
              value) {
        if (queryContextsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureQueryContextsIsMutable();
          queryContexts_.add(value);
          onChanged();
        } else {
          queryContextsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       *
       *
       * <pre>
       * The query context of a SparkThrowable.
       * </pre>
       *
       * <code>repeated .spark.connect.FetchErrorDetailsResponse.QueryContext query_contexts = 3;
       * </code>
       */
      public Builder addQueryContexts(
          int index,
          org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse.QueryContext
              value) {
        if (queryContextsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureQueryContextsIsMutable();
          queryContexts_.add(index, value);
          onChanged();
        } else {
          queryContextsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       *
       *
       * <pre>
       * The query context of a SparkThrowable.
       * </pre>
       *
       * <code>repeated .spark.connect.FetchErrorDetailsResponse.QueryContext query_contexts = 3;
       * </code>
       */
      public Builder addQueryContexts(
          org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse.QueryContext
                  .Builder
              builderForValue) {
        if (queryContextsBuilder_ == null) {
          ensureQueryContextsIsMutable();
          queryContexts_.add(builderForValue.build());
          onChanged();
        } else {
          queryContextsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       *
       *
       * <pre>
       * The query context of a SparkThrowable.
       * </pre>
       *
       * <code>repeated .spark.connect.FetchErrorDetailsResponse.QueryContext query_contexts = 3;
       * </code>
       */
      public Builder addQueryContexts(
          int index,
          org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse.QueryContext
                  .Builder
              builderForValue) {
        if (queryContextsBuilder_ == null) {
          ensureQueryContextsIsMutable();
          queryContexts_.add(index, builderForValue.build());
          onChanged();
        } else {
          queryContextsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       *
       *
       * <pre>
       * The query context of a SparkThrowable.
       * </pre>
       *
       * <code>repeated .spark.connect.FetchErrorDetailsResponse.QueryContext query_contexts = 3;
       * </code>
       */
      public Builder addAllQueryContexts(
          java.lang.Iterable<
                  ? extends
                      org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
                          .QueryContext>
              values) {
        if (queryContextsBuilder_ == null) {
          ensureQueryContextsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(values, queryContexts_);
          onChanged();
        } else {
          queryContextsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       *
       *
       * <pre>
       * The query context of a SparkThrowable.
       * </pre>
       *
       * <code>repeated .spark.connect.FetchErrorDetailsResponse.QueryContext query_contexts = 3;
       * </code>
       */
      public Builder clearQueryContexts() {
        if (queryContextsBuilder_ == null) {
          queryContexts_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          queryContextsBuilder_.clear();
        }
        return this;
      }
      /**
       *
       *
       * <pre>
       * The query context of a SparkThrowable.
       * </pre>
       *
       * <code>repeated .spark.connect.FetchErrorDetailsResponse.QueryContext query_contexts = 3;
       * </code>
       */
      public Builder removeQueryContexts(int index) {
        if (queryContextsBuilder_ == null) {
          ensureQueryContextsIsMutable();
          queryContexts_.remove(index);
          onChanged();
        } else {
          queryContextsBuilder_.remove(index);
        }
        return this;
      }
      /**
       *
       *
       * <pre>
       * The query context of a SparkThrowable.
       * </pre>
       *
       * <code>repeated .spark.connect.FetchErrorDetailsResponse.QueryContext query_contexts = 3;
       * </code>
       */
      public org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
              .QueryContext.Builder
          getQueryContextsBuilder(int index) {
        return getQueryContextsFieldBuilder().getBuilder(index);
      }
      /**
       *
       *
       * <pre>
       * The query context of a SparkThrowable.
       * </pre>
       *
       * <code>repeated .spark.connect.FetchErrorDetailsResponse.QueryContext query_contexts = 3;
       * </code>
       */
      public org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
              .QueryContextOrBuilder
          getQueryContextsOrBuilder(int index) {
        if (queryContextsBuilder_ == null) {
          return queryContexts_.get(index);
        } else {
          return queryContextsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       *
       *
       * <pre>
       * The query context of a SparkThrowable.
       * </pre>
       *
       * <code>repeated .spark.connect.FetchErrorDetailsResponse.QueryContext query_contexts = 3;
       * </code>
       */
      public java.util.List<
              ? extends
                  org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
                      .QueryContextOrBuilder>
          getQueryContextsOrBuilderList() {
        if (queryContextsBuilder_ != null) {
          return queryContextsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(queryContexts_);
        }
      }
      /**
       *
       *
       * <pre>
       * The query context of a SparkThrowable.
       * </pre>
       *
       * <code>repeated .spark.connect.FetchErrorDetailsResponse.QueryContext query_contexts = 3;
       * </code>
       */
      public org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
              .QueryContext.Builder
          addQueryContextsBuilder() {
        return getQueryContextsFieldBuilder()
            .addBuilder(
                org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
                    .QueryContext.getDefaultInstance());
      }
      /**
       *
       *
       * <pre>
       * The query context of a SparkThrowable.
       * </pre>
       *
       * <code>repeated .spark.connect.FetchErrorDetailsResponse.QueryContext query_contexts = 3;
       * </code>
       */
      public org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
              .QueryContext.Builder
          addQueryContextsBuilder(int index) {
        return getQueryContextsFieldBuilder()
            .addBuilder(
                index,
                org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
                    .QueryContext.getDefaultInstance());
      }
      /**
       *
       *
       * <pre>
       * The query context of a SparkThrowable.
       * </pre>
       *
       * <code>repeated .spark.connect.FetchErrorDetailsResponse.QueryContext query_contexts = 3;
       * </code>
       */
      public java.util.List<
              org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
                  .QueryContext.Builder>
          getQueryContextsBuilderList() {
        return getQueryContextsFieldBuilder().getBuilderList();
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
              org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
                  .QueryContext,
              org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
                  .QueryContext.Builder,
              org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
                  .QueryContextOrBuilder>
          getQueryContextsFieldBuilder() {
        if (queryContextsBuilder_ == null) {
          queryContextsBuilder_ =
              new com.google.protobuf.RepeatedFieldBuilderV3<
                  org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
                      .QueryContext,
                  org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
                      .QueryContext.Builder,
                  org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
                      .QueryContextOrBuilder>(
                  queryContexts_,
                  ((bitField0_ & 0x00000004) != 0),
                  getParentForChildren(),
                  isClean());
          queryContexts_ = null;
        }
        return queryContextsBuilder_;
      }

      private java.lang.Object sqlState_ = "";
      /**
       *
       *
       * <pre>
       * Portable error identifier across SQL engines
       * If null, error class or SQLSTATE is not set.
       * </pre>
       *
       * <code>optional string sql_state = 4;</code>
       *
       * @return Whether the sqlState field is set.
       */
      public boolean hasSqlState() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       *
       *
       * <pre>
       * Portable error identifier across SQL engines
       * If null, error class or SQLSTATE is not set.
       * </pre>
       *
       * <code>optional string sql_state = 4;</code>
       *
       * @return The sqlState.
       */
      public java.lang.String getSqlState() {
        java.lang.Object ref = sqlState_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          sqlState_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       *
       *
       * <pre>
       * Portable error identifier across SQL engines
       * If null, error class or SQLSTATE is not set.
       * </pre>
       *
       * <code>optional string sql_state = 4;</code>
       *
       * @return The bytes for sqlState.
       */
      public com.google.protobuf.ByteString getSqlStateBytes() {
        java.lang.Object ref = sqlState_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
          sqlState_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       *
       *
       * <pre>
       * Portable error identifier across SQL engines
       * If null, error class or SQLSTATE is not set.
       * </pre>
       *
       * <code>optional string sql_state = 4;</code>
       *
       * @param value The sqlState to set.
       * @return This builder for chaining.
       */
      public Builder setSqlState(java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000008;
        sqlState_ = value;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * Portable error identifier across SQL engines
       * If null, error class or SQLSTATE is not set.
       * </pre>
       *
       * <code>optional string sql_state = 4;</code>
       *
       * @return This builder for chaining.
       */
      public Builder clearSqlState() {
        bitField0_ = (bitField0_ & ~0x00000008);
        sqlState_ = getDefaultInstance().getSqlState();
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * Portable error identifier across SQL engines
       * If null, error class or SQLSTATE is not set.
       * </pre>
       *
       * <code>optional string sql_state = 4;</code>
       *
       * @param value The bytes for sqlState to set.
       * @return This builder for chaining.
       */
      public Builder setSqlStateBytes(com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        checkByteStringIsUtf8(value);
        bitField0_ |= 0x00000008;
        sqlState_ = value;
        onChanged();
        return this;
      }

      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }

      // @@protoc_insertion_point(builder_scope:spark.connect.FetchErrorDetailsResponse.SparkThrowable)
    }

    // @@protoc_insertion_point(class_scope:spark.connect.FetchErrorDetailsResponse.SparkThrowable)
    private static final org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
            .SparkThrowable
        DEFAULT_INSTANCE;

    static {
      DEFAULT_INSTANCE =
          new org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
              .SparkThrowable();
    }

    public static org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
            .SparkThrowable
        getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SparkThrowable> PARSER =
        new com.google.protobuf.AbstractParser<SparkThrowable>() {
          @java.lang.Override
          public SparkThrowable parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            Builder builder = newBuilder();
            try {
              builder.mergeFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw e.setUnfinishedMessage(builder.buildPartial());
            } catch (com.google.protobuf.UninitializedMessageException e) {
              throw e.asInvalidProtocolBufferException()
                  .setUnfinishedMessage(builder.buildPartial());
            } catch (java.io.IOException e) {
              throw new com.google.protobuf.InvalidProtocolBufferException(e)
                  .setUnfinishedMessage(builder.buildPartial());
            }
            return builder.buildPartial();
          }
        };

    public static com.google.protobuf.Parser<SparkThrowable> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SparkThrowable> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
            .SparkThrowable
        getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }
  }

  public interface ErrorOrBuilder
      extends
      // @@protoc_insertion_point(interface_extends:spark.connect.FetchErrorDetailsResponse.Error)
      com.google.protobuf.MessageOrBuilder {

    /**
     *
     *
     * <pre>
     * The fully qualified names of the exception class and its parent classes.
     * </pre>
     *
     * <code>repeated string error_type_hierarchy = 1;</code>
     *
     * @return A list containing the errorTypeHierarchy.
     */
    java.util.List<java.lang.String> getErrorTypeHierarchyList();
    /**
     *
     *
     * <pre>
     * The fully qualified names of the exception class and its parent classes.
     * </pre>
     *
     * <code>repeated string error_type_hierarchy = 1;</code>
     *
     * @return The count of errorTypeHierarchy.
     */
    int getErrorTypeHierarchyCount();
    /**
     *
     *
     * <pre>
     * The fully qualified names of the exception class and its parent classes.
     * </pre>
     *
     * <code>repeated string error_type_hierarchy = 1;</code>
     *
     * @param index The index of the element to return.
     * @return The errorTypeHierarchy at the given index.
     */
    java.lang.String getErrorTypeHierarchy(int index);
    /**
     *
     *
     * <pre>
     * The fully qualified names of the exception class and its parent classes.
     * </pre>
     *
     * <code>repeated string error_type_hierarchy = 1;</code>
     *
     * @param index The index of the value to return.
     * @return The bytes of the errorTypeHierarchy at the given index.
     */
    com.google.protobuf.ByteString getErrorTypeHierarchyBytes(int index);

    /**
     *
     *
     * <pre>
     * The detailed message of the exception.
     * </pre>
     *
     * <code>string message = 2;</code>
     *
     * @return The message.
     */
    java.lang.String getMessage();
    /**
     *
     *
     * <pre>
     * The detailed message of the exception.
     * </pre>
     *
     * <code>string message = 2;</code>
     *
     * @return The bytes for message.
     */
    com.google.protobuf.ByteString getMessageBytes();

    /**
     *
     *
     * <pre>
     * The stackTrace of the exception. It will be set
     * if the SQLConf spark.sql.connect.serverStacktrace.enabled is true.
     * </pre>
     *
     * <code>repeated .spark.connect.FetchErrorDetailsResponse.StackTraceElement stack_trace = 3;
     * </code>
     */
    java.util.List<
            org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
                .StackTraceElement>
        getStackTraceList();
    /**
     *
     *
     * <pre>
     * The stackTrace of the exception. It will be set
     * if the SQLConf spark.sql.connect.serverStacktrace.enabled is true.
     * </pre>
     *
     * <code>repeated .spark.connect.FetchErrorDetailsResponse.StackTraceElement stack_trace = 3;
     * </code>
     */
    org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse.StackTraceElement
        getStackTrace(int index);
    /**
     *
     *
     * <pre>
     * The stackTrace of the exception. It will be set
     * if the SQLConf spark.sql.connect.serverStacktrace.enabled is true.
     * </pre>
     *
     * <code>repeated .spark.connect.FetchErrorDetailsResponse.StackTraceElement stack_trace = 3;
     * </code>
     */
    int getStackTraceCount();
    /**
     *
     *
     * <pre>
     * The stackTrace of the exception. It will be set
     * if the SQLConf spark.sql.connect.serverStacktrace.enabled is true.
     * </pre>
     *
     * <code>repeated .spark.connect.FetchErrorDetailsResponse.StackTraceElement stack_trace = 3;
     * </code>
     */
    java.util.List<
            ? extends
                org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
                    .StackTraceElementOrBuilder>
        getStackTraceOrBuilderList();
    /**
     *
     *
     * <pre>
     * The stackTrace of the exception. It will be set
     * if the SQLConf spark.sql.connect.serverStacktrace.enabled is true.
     * </pre>
     *
     * <code>repeated .spark.connect.FetchErrorDetailsResponse.StackTraceElement stack_trace = 3;
     * </code>
     */
    org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
            .StackTraceElementOrBuilder
        getStackTraceOrBuilder(int index);

    /**
     *
     *
     * <pre>
     * The index of the cause error in errors.
     * </pre>
     *
     * <code>optional int32 cause_idx = 4;</code>
     *
     * @return Whether the causeIdx field is set.
     */
    boolean hasCauseIdx();
    /**
     *
     *
     * <pre>
     * The index of the cause error in errors.
     * </pre>
     *
     * <code>optional int32 cause_idx = 4;</code>
     *
     * @return The causeIdx.
     */
    int getCauseIdx();

    /**
     *
     *
     * <pre>
     * The structured data of a SparkThrowable exception.
     * </pre>
     *
     * <code>optional .spark.connect.FetchErrorDetailsResponse.SparkThrowable spark_throwable = 5;
     * </code>
     *
     * @return Whether the sparkThrowable field is set.
     */
    boolean hasSparkThrowable();
    /**
     *
     *
     * <pre>
     * The structured data of a SparkThrowable exception.
     * </pre>
     *
     * <code>optional .spark.connect.FetchErrorDetailsResponse.SparkThrowable spark_throwable = 5;
     * </code>
     *
     * @return The sparkThrowable.
     */
    org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse.SparkThrowable
        getSparkThrowable();
    /**
     *
     *
     * <pre>
     * The structured data of a SparkThrowable exception.
     * </pre>
     *
     * <code>optional .spark.connect.FetchErrorDetailsResponse.SparkThrowable spark_throwable = 5;
     * </code>
     */
    org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
            .SparkThrowableOrBuilder
        getSparkThrowableOrBuilder();
  }
  /**
   *
   *
   * <pre>
   * Error defines the schema for the representing exception.
   * </pre>
   *
   * Protobuf type {@code spark.connect.FetchErrorDetailsResponse.Error}
   */
  public static final class Error extends com.google.protobuf.GeneratedMessageV3
      implements
      // @@protoc_insertion_point(message_implements:spark.connect.FetchErrorDetailsResponse.Error)
      ErrorOrBuilder {
    private static final long serialVersionUID = 0L;
    // Use Error.newBuilder() to construct.
    private Error(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }

    private Error() {
      errorTypeHierarchy_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      message_ = "";
      stackTrace_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
      return new Error();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet getUnknownFields() {
      return this.unknownFields;
    }

    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return org.apache.kyuubi.engine.spark.connect.grpc.proto.Base
          .internal_static_spark_connect_FetchErrorDetailsResponse_Error_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.kyuubi.engine.spark.connect.grpc.proto.Base
          .internal_static_spark_connect_FetchErrorDetailsResponse_Error_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse.Error
                  .class,
              org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse.Error
                  .Builder.class);
    }

    private int bitField0_;
    public static final int ERROR_TYPE_HIERARCHY_FIELD_NUMBER = 1;
    private com.google.protobuf.LazyStringList errorTypeHierarchy_;
    /**
     *
     *
     * <pre>
     * The fully qualified names of the exception class and its parent classes.
     * </pre>
     *
     * <code>repeated string error_type_hierarchy = 1;</code>
     *
     * @return A list containing the errorTypeHierarchy.
     */
    public com.google.protobuf.ProtocolStringList getErrorTypeHierarchyList() {
      return errorTypeHierarchy_;
    }
    /**
     *
     *
     * <pre>
     * The fully qualified names of the exception class and its parent classes.
     * </pre>
     *
     * <code>repeated string error_type_hierarchy = 1;</code>
     *
     * @return The count of errorTypeHierarchy.
     */
    public int getErrorTypeHierarchyCount() {
      return errorTypeHierarchy_.size();
    }
    /**
     *
     *
     * <pre>
     * The fully qualified names of the exception class and its parent classes.
     * </pre>
     *
     * <code>repeated string error_type_hierarchy = 1;</code>
     *
     * @param index The index of the element to return.
     * @return The errorTypeHierarchy at the given index.
     */
    public java.lang.String getErrorTypeHierarchy(int index) {
      return errorTypeHierarchy_.get(index);
    }
    /**
     *
     *
     * <pre>
     * The fully qualified names of the exception class and its parent classes.
     * </pre>
     *
     * <code>repeated string error_type_hierarchy = 1;</code>
     *
     * @param index The index of the value to return.
     * @return The bytes of the errorTypeHierarchy at the given index.
     */
    public com.google.protobuf.ByteString getErrorTypeHierarchyBytes(int index) {
      return errorTypeHierarchy_.getByteString(index);
    }

    public static final int MESSAGE_FIELD_NUMBER = 2;
    private volatile java.lang.Object message_;
    /**
     *
     *
     * <pre>
     * The detailed message of the exception.
     * </pre>
     *
     * <code>string message = 2;</code>
     *
     * @return The message.
     */
    @java.lang.Override
    public java.lang.String getMessage() {
      java.lang.Object ref = message_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        message_ = s;
        return s;
      }
    }
    /**
     *
     *
     * <pre>
     * The detailed message of the exception.
     * </pre>
     *
     * <code>string message = 2;</code>
     *
     * @return The bytes for message.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getMessageBytes() {
      java.lang.Object ref = message_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        message_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int STACK_TRACE_FIELD_NUMBER = 3;
    private java.util.List<
            org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
                .StackTraceElement>
        stackTrace_;
    /**
     *
     *
     * <pre>
     * The stackTrace of the exception. It will be set
     * if the SQLConf spark.sql.connect.serverStacktrace.enabled is true.
     * </pre>
     *
     * <code>repeated .spark.connect.FetchErrorDetailsResponse.StackTraceElement stack_trace = 3;
     * </code>
     */
    @java.lang.Override
    public java.util.List<
            org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
                .StackTraceElement>
        getStackTraceList() {
      return stackTrace_;
    }
    /**
     *
     *
     * <pre>
     * The stackTrace of the exception. It will be set
     * if the SQLConf spark.sql.connect.serverStacktrace.enabled is true.
     * </pre>
     *
     * <code>repeated .spark.connect.FetchErrorDetailsResponse.StackTraceElement stack_trace = 3;
     * </code>
     */
    @java.lang.Override
    public java.util.List<
            ? extends
                org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
                    .StackTraceElementOrBuilder>
        getStackTraceOrBuilderList() {
      return stackTrace_;
    }
    /**
     *
     *
     * <pre>
     * The stackTrace of the exception. It will be set
     * if the SQLConf spark.sql.connect.serverStacktrace.enabled is true.
     * </pre>
     *
     * <code>repeated .spark.connect.FetchErrorDetailsResponse.StackTraceElement stack_trace = 3;
     * </code>
     */
    @java.lang.Override
    public int getStackTraceCount() {
      return stackTrace_.size();
    }
    /**
     *
     *
     * <pre>
     * The stackTrace of the exception. It will be set
     * if the SQLConf spark.sql.connect.serverStacktrace.enabled is true.
     * </pre>
     *
     * <code>repeated .spark.connect.FetchErrorDetailsResponse.StackTraceElement stack_trace = 3;
     * </code>
     */
    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
            .StackTraceElement
        getStackTrace(int index) {
      return stackTrace_.get(index);
    }
    /**
     *
     *
     * <pre>
     * The stackTrace of the exception. It will be set
     * if the SQLConf spark.sql.connect.serverStacktrace.enabled is true.
     * </pre>
     *
     * <code>repeated .spark.connect.FetchErrorDetailsResponse.StackTraceElement stack_trace = 3;
     * </code>
     */
    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
            .StackTraceElementOrBuilder
        getStackTraceOrBuilder(int index) {
      return stackTrace_.get(index);
    }

    public static final int CAUSE_IDX_FIELD_NUMBER = 4;
    private int causeIdx_;
    /**
     *
     *
     * <pre>
     * The index of the cause error in errors.
     * </pre>
     *
     * <code>optional int32 cause_idx = 4;</code>
     *
     * @return Whether the causeIdx field is set.
     */
    @java.lang.Override
    public boolean hasCauseIdx() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     *
     *
     * <pre>
     * The index of the cause error in errors.
     * </pre>
     *
     * <code>optional int32 cause_idx = 4;</code>
     *
     * @return The causeIdx.
     */
    @java.lang.Override
    public int getCauseIdx() {
      return causeIdx_;
    }

    public static final int SPARK_THROWABLE_FIELD_NUMBER = 5;
    private org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
            .SparkThrowable
        sparkThrowable_;
    /**
     *
     *
     * <pre>
     * The structured data of a SparkThrowable exception.
     * </pre>
     *
     * <code>optional .spark.connect.FetchErrorDetailsResponse.SparkThrowable spark_throwable = 5;
     * </code>
     *
     * @return Whether the sparkThrowable field is set.
     */
    @java.lang.Override
    public boolean hasSparkThrowable() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     *
     *
     * <pre>
     * The structured data of a SparkThrowable exception.
     * </pre>
     *
     * <code>optional .spark.connect.FetchErrorDetailsResponse.SparkThrowable spark_throwable = 5;
     * </code>
     *
     * @return The sparkThrowable.
     */
    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
            .SparkThrowable
        getSparkThrowable() {
      return sparkThrowable_ == null
          ? org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
              .SparkThrowable.getDefaultInstance()
          : sparkThrowable_;
    }
    /**
     *
     *
     * <pre>
     * The structured data of a SparkThrowable exception.
     * </pre>
     *
     * <code>optional .spark.connect.FetchErrorDetailsResponse.SparkThrowable spark_throwable = 5;
     * </code>
     */
    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
            .SparkThrowableOrBuilder
        getSparkThrowableOrBuilder() {
      return sparkThrowable_ == null
          ? org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
              .SparkThrowable.getDefaultInstance()
          : sparkThrowable_;
    }

    private byte memoizedIsInitialized = -1;

    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
      for (int i = 0; i < errorTypeHierarchy_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(
            output, 1, errorTypeHierarchy_.getRaw(i));
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(message_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, message_);
      }
      for (int i = 0; i < stackTrace_.size(); i++) {
        output.writeMessage(3, stackTrace_.get(i));
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeInt32(4, causeIdx_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeMessage(5, getSparkThrowable());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < errorTypeHierarchy_.size(); i++) {
          dataSize += computeStringSizeNoTag(errorTypeHierarchy_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getErrorTypeHierarchyList().size();
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(message_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, message_);
      }
      for (int i = 0; i < stackTrace_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream.computeMessageSize(3, stackTrace_.get(i));
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream.computeInt32Size(4, causeIdx_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream.computeMessageSize(5, getSparkThrowable());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
        return true;
      }
      if (!(obj
          instanceof
          org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse.Error)) {
        return super.equals(obj);
      }
      org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse.Error other =
          (org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse.Error) obj;

      if (!getErrorTypeHierarchyList().equals(other.getErrorTypeHierarchyList())) return false;
      if (!getMessage().equals(other.getMessage())) return false;
      if (!getStackTraceList().equals(other.getStackTraceList())) return false;
      if (hasCauseIdx() != other.hasCauseIdx()) return false;
      if (hasCauseIdx()) {
        if (getCauseIdx() != other.getCauseIdx()) return false;
      }
      if (hasSparkThrowable() != other.hasSparkThrowable()) return false;
      if (hasSparkThrowable()) {
        if (!getSparkThrowable().equals(other.getSparkThrowable())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getErrorTypeHierarchyCount() > 0) {
        hash = (37 * hash) + ERROR_TYPE_HIERARCHY_FIELD_NUMBER;
        hash = (53 * hash) + getErrorTypeHierarchyList().hashCode();
      }
      hash = (37 * hash) + MESSAGE_FIELD_NUMBER;
      hash = (53 * hash) + getMessage().hashCode();
      if (getStackTraceCount() > 0) {
        hash = (37 * hash) + STACK_TRACE_FIELD_NUMBER;
        hash = (53 * hash) + getStackTraceList().hashCode();
      }
      if (hasCauseIdx()) {
        hash = (37 * hash) + CAUSE_IDX_FIELD_NUMBER;
        hash = (53 * hash) + getCauseIdx();
      }
      if (hasSparkThrowable()) {
        hash = (37 * hash) + SPARK_THROWABLE_FIELD_NUMBER;
        hash = (53 * hash) + getSparkThrowable().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse.Error
        parseFrom(java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse.Error
        parseFrom(
            java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse.Error
        parseFrom(com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse.Error
        parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse.Error
        parseFrom(byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse.Error
        parseFrom(byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse.Error
        parseFrom(java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse.Error
        parseFrom(
            java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
          PARSER, input, extensionRegistry);
    }

    public static org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse.Error
        parseDelimitedFrom(java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
    }

    public static org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse.Error
        parseDelimitedFrom(
            java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
          PARSER, input, extensionRegistry);
    }

    public static org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse.Error
        parseFrom(com.google.protobuf.CodedInputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse.Error
        parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
          PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() {
      return newBuilder();
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }

    public static Builder newBuilder(
        org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse.Error
            prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     *
     *
     * <pre>
     * Error defines the schema for the representing exception.
     * </pre>
     *
     * Protobuf type {@code spark.connect.FetchErrorDetailsResponse.Error}
     */
    public static final class Builder
        extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
        implements
        // @@protoc_insertion_point(builder_implements:spark.connect.FetchErrorDetailsResponse.Error)
        org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse.ErrorOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
        return org.apache.kyuubi.engine.spark.connect.grpc.proto.Base
            .internal_static_spark_connect_FetchErrorDetailsResponse_Error_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.kyuubi.engine.spark.connect.grpc.proto.Base
            .internal_static_spark_connect_FetchErrorDetailsResponse_Error_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse.Error
                    .class,
                org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse.Error
                    .Builder.class);
      }

      // Construct using
      // org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse.Error.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders) {
          getStackTraceFieldBuilder();
          getSparkThrowableFieldBuilder();
        }
      }

      @java.lang.Override
      public Builder clear() {
        super.clear();
        errorTypeHierarchy_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        message_ = "";

        if (stackTraceBuilder_ == null) {
          stackTrace_ = java.util.Collections.emptyList();
        } else {
          stackTrace_ = null;
          stackTraceBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        causeIdx_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        if (sparkThrowableBuilder_ == null) {
          sparkThrowable_ = null;
        } else {
          sparkThrowableBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
        return org.apache.kyuubi.engine.spark.connect.grpc.proto.Base
            .internal_static_spark_connect_FetchErrorDetailsResponse_Error_descriptor;
      }

      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse.Error
          getDefaultInstanceForType() {
        return org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse.Error
            .getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse.Error
          build() {
        org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse.Error result =
            buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse.Error
          buildPartial() {
        org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse.Error result =
            new org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse.Error(
                this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          errorTypeHierarchy_ = errorTypeHierarchy_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.errorTypeHierarchy_ = errorTypeHierarchy_;
        result.message_ = message_;
        if (stackTraceBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            stackTrace_ = java.util.Collections.unmodifiableList(stackTrace_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.stackTrace_ = stackTrace_;
        } else {
          result.stackTrace_ = stackTraceBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.causeIdx_ = causeIdx_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          if (sparkThrowableBuilder_ == null) {
            result.sparkThrowable_ = sparkThrowable_;
          } else {
            result.sparkThrowable_ = sparkThrowableBuilder_.build();
          }
          to_bitField0_ |= 0x00000002;
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }

      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
        return super.setField(field, value);
      }

      @java.lang.Override
      public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }

      @java.lang.Override
      public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }

      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index,
          java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }

      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other
            instanceof
            org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse.Error) {
          return mergeFrom(
              (org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse.Error)
                  other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(
          org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse.Error other) {
        if (other
            == org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse.Error
                .getDefaultInstance()) return this;
        if (!other.errorTypeHierarchy_.isEmpty()) {
          if (errorTypeHierarchy_.isEmpty()) {
            errorTypeHierarchy_ = other.errorTypeHierarchy_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureErrorTypeHierarchyIsMutable();
            errorTypeHierarchy_.addAll(other.errorTypeHierarchy_);
          }
          onChanged();
        }
        if (!other.getMessage().isEmpty()) {
          message_ = other.message_;
          onChanged();
        }
        if (stackTraceBuilder_ == null) {
          if (!other.stackTrace_.isEmpty()) {
            if (stackTrace_.isEmpty()) {
              stackTrace_ = other.stackTrace_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureStackTraceIsMutable();
              stackTrace_.addAll(other.stackTrace_);
            }
            onChanged();
          }
        } else {
          if (!other.stackTrace_.isEmpty()) {
            if (stackTraceBuilder_.isEmpty()) {
              stackTraceBuilder_.dispose();
              stackTraceBuilder_ = null;
              stackTrace_ = other.stackTrace_;
              bitField0_ = (bitField0_ & ~0x00000002);
              stackTraceBuilder_ =
                  com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders
                      ? getStackTraceFieldBuilder()
                      : null;
            } else {
              stackTraceBuilder_.addAllMessages(other.stackTrace_);
            }
          }
        }
        if (other.hasCauseIdx()) {
          setCauseIdx(other.getCauseIdx());
        }
        if (other.hasSparkThrowable()) {
          mergeSparkThrowable(other.getSparkThrowable());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10:
                {
                  java.lang.String s = input.readStringRequireUtf8();
                  ensureErrorTypeHierarchyIsMutable();
                  errorTypeHierarchy_.add(s);
                  break;
                } // case 10
              case 18:
                {
                  message_ = input.readStringRequireUtf8();

                  break;
                } // case 18
              case 26:
                {
                  org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
                          .StackTraceElement
                      m =
                          input.readMessage(
                              org.apache.kyuubi.engine.spark.connect.grpc.proto
                                  .FetchErrorDetailsResponse.StackTraceElement.parser(),
                              extensionRegistry);
                  if (stackTraceBuilder_ == null) {
                    ensureStackTraceIsMutable();
                    stackTrace_.add(m);
                  } else {
                    stackTraceBuilder_.addMessage(m);
                  }
                  break;
                } // case 26
              case 32:
                {
                  causeIdx_ = input.readInt32();
                  bitField0_ |= 0x00000004;
                  break;
                } // case 32
              case 42:
                {
                  input.readMessage(
                      getSparkThrowableFieldBuilder().getBuilder(), extensionRegistry);
                  bitField0_ |= 0x00000008;
                  break;
                } // case 42
              default:
                {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }

      private int bitField0_;

      private com.google.protobuf.LazyStringList errorTypeHierarchy_ =
          com.google.protobuf.LazyStringArrayList.EMPTY;

      private void ensureErrorTypeHierarchyIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          errorTypeHierarchy_ = new com.google.protobuf.LazyStringArrayList(errorTypeHierarchy_);
          bitField0_ |= 0x00000001;
        }
      }
      /**
       *
       *
       * <pre>
       * The fully qualified names of the exception class and its parent classes.
       * </pre>
       *
       * <code>repeated string error_type_hierarchy = 1;</code>
       *
       * @return A list containing the errorTypeHierarchy.
       */
      public com.google.protobuf.ProtocolStringList getErrorTypeHierarchyList() {
        return errorTypeHierarchy_.getUnmodifiableView();
      }
      /**
       *
       *
       * <pre>
       * The fully qualified names of the exception class and its parent classes.
       * </pre>
       *
       * <code>repeated string error_type_hierarchy = 1;</code>
       *
       * @return The count of errorTypeHierarchy.
       */
      public int getErrorTypeHierarchyCount() {
        return errorTypeHierarchy_.size();
      }
      /**
       *
       *
       * <pre>
       * The fully qualified names of the exception class and its parent classes.
       * </pre>
       *
       * <code>repeated string error_type_hierarchy = 1;</code>
       *
       * @param index The index of the element to return.
       * @return The errorTypeHierarchy at the given index.
       */
      public java.lang.String getErrorTypeHierarchy(int index) {
        return errorTypeHierarchy_.get(index);
      }
      /**
       *
       *
       * <pre>
       * The fully qualified names of the exception class and its parent classes.
       * </pre>
       *
       * <code>repeated string error_type_hierarchy = 1;</code>
       *
       * @param index The index of the value to return.
       * @return The bytes of the errorTypeHierarchy at the given index.
       */
      public com.google.protobuf.ByteString getErrorTypeHierarchyBytes(int index) {
        return errorTypeHierarchy_.getByteString(index);
      }
      /**
       *
       *
       * <pre>
       * The fully qualified names of the exception class and its parent classes.
       * </pre>
       *
       * <code>repeated string error_type_hierarchy = 1;</code>
       *
       * @param index The index to set the value at.
       * @param value The errorTypeHierarchy to set.
       * @return This builder for chaining.
       */
      public Builder setErrorTypeHierarchy(int index, java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureErrorTypeHierarchyIsMutable();
        errorTypeHierarchy_.set(index, value);
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * The fully qualified names of the exception class and its parent classes.
       * </pre>
       *
       * <code>repeated string error_type_hierarchy = 1;</code>
       *
       * @param value The errorTypeHierarchy to add.
       * @return This builder for chaining.
       */
      public Builder addErrorTypeHierarchy(java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureErrorTypeHierarchyIsMutable();
        errorTypeHierarchy_.add(value);
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * The fully qualified names of the exception class and its parent classes.
       * </pre>
       *
       * <code>repeated string error_type_hierarchy = 1;</code>
       *
       * @param values The errorTypeHierarchy to add.
       * @return This builder for chaining.
       */
      public Builder addAllErrorTypeHierarchy(java.lang.Iterable<java.lang.String> values) {
        ensureErrorTypeHierarchyIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(values, errorTypeHierarchy_);
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * The fully qualified names of the exception class and its parent classes.
       * </pre>
       *
       * <code>repeated string error_type_hierarchy = 1;</code>
       *
       * @return This builder for chaining.
       */
      public Builder clearErrorTypeHierarchy() {
        errorTypeHierarchy_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * The fully qualified names of the exception class and its parent classes.
       * </pre>
       *
       * <code>repeated string error_type_hierarchy = 1;</code>
       *
       * @param value The bytes of the errorTypeHierarchy to add.
       * @return This builder for chaining.
       */
      public Builder addErrorTypeHierarchyBytes(com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        checkByteStringIsUtf8(value);
        ensureErrorTypeHierarchyIsMutable();
        errorTypeHierarchy_.add(value);
        onChanged();
        return this;
      }

      private java.lang.Object message_ = "";
      /**
       *
       *
       * <pre>
       * The detailed message of the exception.
       * </pre>
       *
       * <code>string message = 2;</code>
       *
       * @return The message.
       */
      public java.lang.String getMessage() {
        java.lang.Object ref = message_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          message_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       *
       *
       * <pre>
       * The detailed message of the exception.
       * </pre>
       *
       * <code>string message = 2;</code>
       *
       * @return The bytes for message.
       */
      public com.google.protobuf.ByteString getMessageBytes() {
        java.lang.Object ref = message_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
          message_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       *
       *
       * <pre>
       * The detailed message of the exception.
       * </pre>
       *
       * <code>string message = 2;</code>
       *
       * @param value The message to set.
       * @return This builder for chaining.
       */
      public Builder setMessage(java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }

        message_ = value;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * The detailed message of the exception.
       * </pre>
       *
       * <code>string message = 2;</code>
       *
       * @return This builder for chaining.
       */
      public Builder clearMessage() {

        message_ = getDefaultInstance().getMessage();
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * The detailed message of the exception.
       * </pre>
       *
       * <code>string message = 2;</code>
       *
       * @param value The bytes for message to set.
       * @return This builder for chaining.
       */
      public Builder setMessageBytes(com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        checkByteStringIsUtf8(value);

        message_ = value;
        onChanged();
        return this;
      }

      private java.util.List<
              org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
                  .StackTraceElement>
          stackTrace_ = java.util.Collections.emptyList();

      private void ensureStackTraceIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          stackTrace_ =
              new java.util.ArrayList<
                  org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
                      .StackTraceElement>(stackTrace_);
          bitField0_ |= 0x00000002;
        }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
              org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
                  .StackTraceElement,
              org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
                  .StackTraceElement.Builder,
              org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
                  .StackTraceElementOrBuilder>
          stackTraceBuilder_;

      /**
       *
       *
       * <pre>
       * The stackTrace of the exception. It will be set
       * if the SQLConf spark.sql.connect.serverStacktrace.enabled is true.
       * </pre>
       *
       * <code>repeated .spark.connect.FetchErrorDetailsResponse.StackTraceElement stack_trace = 3;
       * </code>
       */
      public java.util.List<
              org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
                  .StackTraceElement>
          getStackTraceList() {
        if (stackTraceBuilder_ == null) {
          return java.util.Collections.unmodifiableList(stackTrace_);
        } else {
          return stackTraceBuilder_.getMessageList();
        }
      }
      /**
       *
       *
       * <pre>
       * The stackTrace of the exception. It will be set
       * if the SQLConf spark.sql.connect.serverStacktrace.enabled is true.
       * </pre>
       *
       * <code>repeated .spark.connect.FetchErrorDetailsResponse.StackTraceElement stack_trace = 3;
       * </code>
       */
      public int getStackTraceCount() {
        if (stackTraceBuilder_ == null) {
          return stackTrace_.size();
        } else {
          return stackTraceBuilder_.getCount();
        }
      }
      /**
       *
       *
       * <pre>
       * The stackTrace of the exception. It will be set
       * if the SQLConf spark.sql.connect.serverStacktrace.enabled is true.
       * </pre>
       *
       * <code>repeated .spark.connect.FetchErrorDetailsResponse.StackTraceElement stack_trace = 3;
       * </code>
       */
      public org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
              .StackTraceElement
          getStackTrace(int index) {
        if (stackTraceBuilder_ == null) {
          return stackTrace_.get(index);
        } else {
          return stackTraceBuilder_.getMessage(index);
        }
      }
      /**
       *
       *
       * <pre>
       * The stackTrace of the exception. It will be set
       * if the SQLConf spark.sql.connect.serverStacktrace.enabled is true.
       * </pre>
       *
       * <code>repeated .spark.connect.FetchErrorDetailsResponse.StackTraceElement stack_trace = 3;
       * </code>
       */
      public Builder setStackTrace(
          int index,
          org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
                  .StackTraceElement
              value) {
        if (stackTraceBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureStackTraceIsMutable();
          stackTrace_.set(index, value);
          onChanged();
        } else {
          stackTraceBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       *
       *
       * <pre>
       * The stackTrace of the exception. It will be set
       * if the SQLConf spark.sql.connect.serverStacktrace.enabled is true.
       * </pre>
       *
       * <code>repeated .spark.connect.FetchErrorDetailsResponse.StackTraceElement stack_trace = 3;
       * </code>
       */
      public Builder setStackTrace(
          int index,
          org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
                  .StackTraceElement.Builder
              builderForValue) {
        if (stackTraceBuilder_ == null) {
          ensureStackTraceIsMutable();
          stackTrace_.set(index, builderForValue.build());
          onChanged();
        } else {
          stackTraceBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       *
       *
       * <pre>
       * The stackTrace of the exception. It will be set
       * if the SQLConf spark.sql.connect.serverStacktrace.enabled is true.
       * </pre>
       *
       * <code>repeated .spark.connect.FetchErrorDetailsResponse.StackTraceElement stack_trace = 3;
       * </code>
       */
      public Builder addStackTrace(
          org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
                  .StackTraceElement
              value) {
        if (stackTraceBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureStackTraceIsMutable();
          stackTrace_.add(value);
          onChanged();
        } else {
          stackTraceBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       *
       *
       * <pre>
       * The stackTrace of the exception. It will be set
       * if the SQLConf spark.sql.connect.serverStacktrace.enabled is true.
       * </pre>
       *
       * <code>repeated .spark.connect.FetchErrorDetailsResponse.StackTraceElement stack_trace = 3;
       * </code>
       */
      public Builder addStackTrace(
          int index,
          org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
                  .StackTraceElement
              value) {
        if (stackTraceBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureStackTraceIsMutable();
          stackTrace_.add(index, value);
          onChanged();
        } else {
          stackTraceBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       *
       *
       * <pre>
       * The stackTrace of the exception. It will be set
       * if the SQLConf spark.sql.connect.serverStacktrace.enabled is true.
       * </pre>
       *
       * <code>repeated .spark.connect.FetchErrorDetailsResponse.StackTraceElement stack_trace = 3;
       * </code>
       */
      public Builder addStackTrace(
          org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
                  .StackTraceElement.Builder
              builderForValue) {
        if (stackTraceBuilder_ == null) {
          ensureStackTraceIsMutable();
          stackTrace_.add(builderForValue.build());
          onChanged();
        } else {
          stackTraceBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       *
       *
       * <pre>
       * The stackTrace of the exception. It will be set
       * if the SQLConf spark.sql.connect.serverStacktrace.enabled is true.
       * </pre>
       *
       * <code>repeated .spark.connect.FetchErrorDetailsResponse.StackTraceElement stack_trace = 3;
       * </code>
       */
      public Builder addStackTrace(
          int index,
          org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
                  .StackTraceElement.Builder
              builderForValue) {
        if (stackTraceBuilder_ == null) {
          ensureStackTraceIsMutable();
          stackTrace_.add(index, builderForValue.build());
          onChanged();
        } else {
          stackTraceBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       *
       *
       * <pre>
       * The stackTrace of the exception. It will be set
       * if the SQLConf spark.sql.connect.serverStacktrace.enabled is true.
       * </pre>
       *
       * <code>repeated .spark.connect.FetchErrorDetailsResponse.StackTraceElement stack_trace = 3;
       * </code>
       */
      public Builder addAllStackTrace(
          java.lang.Iterable<
                  ? extends
                      org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
                          .StackTraceElement>
              values) {
        if (stackTraceBuilder_ == null) {
          ensureStackTraceIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(values, stackTrace_);
          onChanged();
        } else {
          stackTraceBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       *
       *
       * <pre>
       * The stackTrace of the exception. It will be set
       * if the SQLConf spark.sql.connect.serverStacktrace.enabled is true.
       * </pre>
       *
       * <code>repeated .spark.connect.FetchErrorDetailsResponse.StackTraceElement stack_trace = 3;
       * </code>
       */
      public Builder clearStackTrace() {
        if (stackTraceBuilder_ == null) {
          stackTrace_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          stackTraceBuilder_.clear();
        }
        return this;
      }
      /**
       *
       *
       * <pre>
       * The stackTrace of the exception. It will be set
       * if the SQLConf spark.sql.connect.serverStacktrace.enabled is true.
       * </pre>
       *
       * <code>repeated .spark.connect.FetchErrorDetailsResponse.StackTraceElement stack_trace = 3;
       * </code>
       */
      public Builder removeStackTrace(int index) {
        if (stackTraceBuilder_ == null) {
          ensureStackTraceIsMutable();
          stackTrace_.remove(index);
          onChanged();
        } else {
          stackTraceBuilder_.remove(index);
        }
        return this;
      }
      /**
       *
       *
       * <pre>
       * The stackTrace of the exception. It will be set
       * if the SQLConf spark.sql.connect.serverStacktrace.enabled is true.
       * </pre>
       *
       * <code>repeated .spark.connect.FetchErrorDetailsResponse.StackTraceElement stack_trace = 3;
       * </code>
       */
      public org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
              .StackTraceElement.Builder
          getStackTraceBuilder(int index) {
        return getStackTraceFieldBuilder().getBuilder(index);
      }
      /**
       *
       *
       * <pre>
       * The stackTrace of the exception. It will be set
       * if the SQLConf spark.sql.connect.serverStacktrace.enabled is true.
       * </pre>
       *
       * <code>repeated .spark.connect.FetchErrorDetailsResponse.StackTraceElement stack_trace = 3;
       * </code>
       */
      public org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
              .StackTraceElementOrBuilder
          getStackTraceOrBuilder(int index) {
        if (stackTraceBuilder_ == null) {
          return stackTrace_.get(index);
        } else {
          return stackTraceBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       *
       *
       * <pre>
       * The stackTrace of the exception. It will be set
       * if the SQLConf spark.sql.connect.serverStacktrace.enabled is true.
       * </pre>
       *
       * <code>repeated .spark.connect.FetchErrorDetailsResponse.StackTraceElement stack_trace = 3;
       * </code>
       */
      public java.util.List<
              ? extends
                  org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
                      .StackTraceElementOrBuilder>
          getStackTraceOrBuilderList() {
        if (stackTraceBuilder_ != null) {
          return stackTraceBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(stackTrace_);
        }
      }
      /**
       *
       *
       * <pre>
       * The stackTrace of the exception. It will be set
       * if the SQLConf spark.sql.connect.serverStacktrace.enabled is true.
       * </pre>
       *
       * <code>repeated .spark.connect.FetchErrorDetailsResponse.StackTraceElement stack_trace = 3;
       * </code>
       */
      public org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
              .StackTraceElement.Builder
          addStackTraceBuilder() {
        return getStackTraceFieldBuilder()
            .addBuilder(
                org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
                    .StackTraceElement.getDefaultInstance());
      }
      /**
       *
       *
       * <pre>
       * The stackTrace of the exception. It will be set
       * if the SQLConf spark.sql.connect.serverStacktrace.enabled is true.
       * </pre>
       *
       * <code>repeated .spark.connect.FetchErrorDetailsResponse.StackTraceElement stack_trace = 3;
       * </code>
       */
      public org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
              .StackTraceElement.Builder
          addStackTraceBuilder(int index) {
        return getStackTraceFieldBuilder()
            .addBuilder(
                index,
                org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
                    .StackTraceElement.getDefaultInstance());
      }
      /**
       *
       *
       * <pre>
       * The stackTrace of the exception. It will be set
       * if the SQLConf spark.sql.connect.serverStacktrace.enabled is true.
       * </pre>
       *
       * <code>repeated .spark.connect.FetchErrorDetailsResponse.StackTraceElement stack_trace = 3;
       * </code>
       */
      public java.util.List<
              org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
                  .StackTraceElement.Builder>
          getStackTraceBuilderList() {
        return getStackTraceFieldBuilder().getBuilderList();
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
              org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
                  .StackTraceElement,
              org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
                  .StackTraceElement.Builder,
              org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
                  .StackTraceElementOrBuilder>
          getStackTraceFieldBuilder() {
        if (stackTraceBuilder_ == null) {
          stackTraceBuilder_ =
              new com.google.protobuf.RepeatedFieldBuilderV3<
                  org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
                      .StackTraceElement,
                  org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
                      .StackTraceElement.Builder,
                  org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
                      .StackTraceElementOrBuilder>(
                  stackTrace_, ((bitField0_ & 0x00000002) != 0), getParentForChildren(), isClean());
          stackTrace_ = null;
        }
        return stackTraceBuilder_;
      }

      private int causeIdx_;
      /**
       *
       *
       * <pre>
       * The index of the cause error in errors.
       * </pre>
       *
       * <code>optional int32 cause_idx = 4;</code>
       *
       * @return Whether the causeIdx field is set.
       */
      @java.lang.Override
      public boolean hasCauseIdx() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       *
       *
       * <pre>
       * The index of the cause error in errors.
       * </pre>
       *
       * <code>optional int32 cause_idx = 4;</code>
       *
       * @return The causeIdx.
       */
      @java.lang.Override
      public int getCauseIdx() {
        return causeIdx_;
      }
      /**
       *
       *
       * <pre>
       * The index of the cause error in errors.
       * </pre>
       *
       * <code>optional int32 cause_idx = 4;</code>
       *
       * @param value The causeIdx to set.
       * @return This builder for chaining.
       */
      public Builder setCauseIdx(int value) {
        bitField0_ |= 0x00000004;
        causeIdx_ = value;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * The index of the cause error in errors.
       * </pre>
       *
       * <code>optional int32 cause_idx = 4;</code>
       *
       * @return This builder for chaining.
       */
      public Builder clearCauseIdx() {
        bitField0_ = (bitField0_ & ~0x00000004);
        causeIdx_ = 0;
        onChanged();
        return this;
      }

      private org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
              .SparkThrowable
          sparkThrowable_;
      private com.google.protobuf.SingleFieldBuilderV3<
              org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
                  .SparkThrowable,
              org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
                  .SparkThrowable.Builder,
              org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
                  .SparkThrowableOrBuilder>
          sparkThrowableBuilder_;
      /**
       *
       *
       * <pre>
       * The structured data of a SparkThrowable exception.
       * </pre>
       *
       * <code>optional .spark.connect.FetchErrorDetailsResponse.SparkThrowable spark_throwable = 5;
       * </code>
       *
       * @return Whether the sparkThrowable field is set.
       */
      public boolean hasSparkThrowable() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       *
       *
       * <pre>
       * The structured data of a SparkThrowable exception.
       * </pre>
       *
       * <code>optional .spark.connect.FetchErrorDetailsResponse.SparkThrowable spark_throwable = 5;
       * </code>
       *
       * @return The sparkThrowable.
       */
      public org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
              .SparkThrowable
          getSparkThrowable() {
        if (sparkThrowableBuilder_ == null) {
          return sparkThrowable_ == null
              ? org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
                  .SparkThrowable.getDefaultInstance()
              : sparkThrowable_;
        } else {
          return sparkThrowableBuilder_.getMessage();
        }
      }
      /**
       *
       *
       * <pre>
       * The structured data of a SparkThrowable exception.
       * </pre>
       *
       * <code>optional .spark.connect.FetchErrorDetailsResponse.SparkThrowable spark_throwable = 5;
       * </code>
       */
      public Builder setSparkThrowable(
          org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse.SparkThrowable
              value) {
        if (sparkThrowableBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          sparkThrowable_ = value;
          onChanged();
        } else {
          sparkThrowableBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       *
       *
       * <pre>
       * The structured data of a SparkThrowable exception.
       * </pre>
       *
       * <code>optional .spark.connect.FetchErrorDetailsResponse.SparkThrowable spark_throwable = 5;
       * </code>
       */
      public Builder setSparkThrowable(
          org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse.SparkThrowable
                  .Builder
              builderForValue) {
        if (sparkThrowableBuilder_ == null) {
          sparkThrowable_ = builderForValue.build();
          onChanged();
        } else {
          sparkThrowableBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       *
       *
       * <pre>
       * The structured data of a SparkThrowable exception.
       * </pre>
       *
       * <code>optional .spark.connect.FetchErrorDetailsResponse.SparkThrowable spark_throwable = 5;
       * </code>
       */
      public Builder mergeSparkThrowable(
          org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse.SparkThrowable
              value) {
        if (sparkThrowableBuilder_ == null) {
          if (((bitField0_ & 0x00000008) != 0)
              && sparkThrowable_ != null
              && sparkThrowable_
                  != org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
                      .SparkThrowable.getDefaultInstance()) {
            sparkThrowable_ =
                org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
                    .SparkThrowable.newBuilder(sparkThrowable_)
                    .mergeFrom(value)
                    .buildPartial();
          } else {
            sparkThrowable_ = value;
          }
          onChanged();
        } else {
          sparkThrowableBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       *
       *
       * <pre>
       * The structured data of a SparkThrowable exception.
       * </pre>
       *
       * <code>optional .spark.connect.FetchErrorDetailsResponse.SparkThrowable spark_throwable = 5;
       * </code>
       */
      public Builder clearSparkThrowable() {
        if (sparkThrowableBuilder_ == null) {
          sparkThrowable_ = null;
          onChanged();
        } else {
          sparkThrowableBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      /**
       *
       *
       * <pre>
       * The structured data of a SparkThrowable exception.
       * </pre>
       *
       * <code>optional .spark.connect.FetchErrorDetailsResponse.SparkThrowable spark_throwable = 5;
       * </code>
       */
      public org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
              .SparkThrowable.Builder
          getSparkThrowableBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getSparkThrowableFieldBuilder().getBuilder();
      }
      /**
       *
       *
       * <pre>
       * The structured data of a SparkThrowable exception.
       * </pre>
       *
       * <code>optional .spark.connect.FetchErrorDetailsResponse.SparkThrowable spark_throwable = 5;
       * </code>
       */
      public org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
              .SparkThrowableOrBuilder
          getSparkThrowableOrBuilder() {
        if (sparkThrowableBuilder_ != null) {
          return sparkThrowableBuilder_.getMessageOrBuilder();
        } else {
          return sparkThrowable_ == null
              ? org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
                  .SparkThrowable.getDefaultInstance()
              : sparkThrowable_;
        }
      }
      /**
       *
       *
       * <pre>
       * The structured data of a SparkThrowable exception.
       * </pre>
       *
       * <code>optional .spark.connect.FetchErrorDetailsResponse.SparkThrowable spark_throwable = 5;
       * </code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
              org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
                  .SparkThrowable,
              org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
                  .SparkThrowable.Builder,
              org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
                  .SparkThrowableOrBuilder>
          getSparkThrowableFieldBuilder() {
        if (sparkThrowableBuilder_ == null) {
          sparkThrowableBuilder_ =
              new com.google.protobuf.SingleFieldBuilderV3<
                  org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
                      .SparkThrowable,
                  org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
                      .SparkThrowable.Builder,
                  org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
                      .SparkThrowableOrBuilder>(
                  getSparkThrowable(), getParentForChildren(), isClean());
          sparkThrowable_ = null;
        }
        return sparkThrowableBuilder_;
      }

      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }

      // @@protoc_insertion_point(builder_scope:spark.connect.FetchErrorDetailsResponse.Error)
    }

    // @@protoc_insertion_point(class_scope:spark.connect.FetchErrorDetailsResponse.Error)
    private static final org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
            .Error
        DEFAULT_INSTANCE;

    static {
      DEFAULT_INSTANCE =
          new org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse.Error();
    }

    public static org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse.Error
        getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Error> PARSER =
        new com.google.protobuf.AbstractParser<Error>() {
          @java.lang.Override
          public Error parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            Builder builder = newBuilder();
            try {
              builder.mergeFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw e.setUnfinishedMessage(builder.buildPartial());
            } catch (com.google.protobuf.UninitializedMessageException e) {
              throw e.asInvalidProtocolBufferException()
                  .setUnfinishedMessage(builder.buildPartial());
            } catch (java.io.IOException e) {
              throw new com.google.protobuf.InvalidProtocolBufferException(e)
                  .setUnfinishedMessage(builder.buildPartial());
            }
            return builder.buildPartial();
          }
        };

    public static com.google.protobuf.Parser<Error> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Error> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse.Error
        getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }
  }

  private int bitField0_;
  public static final int SERVER_SIDE_SESSION_ID_FIELD_NUMBER = 3;
  private volatile java.lang.Object serverSideSessionId_;
  /**
   *
   *
   * <pre>
   * Server-side generated idempotency key that the client can use to assert that the server side
   * session has not changed.
   * </pre>
   *
   * <code>string server_side_session_id = 3;</code>
   *
   * @return The serverSideSessionId.
   */
  @java.lang.Override
  public java.lang.String getServerSideSessionId() {
    java.lang.Object ref = serverSideSessionId_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      serverSideSessionId_ = s;
      return s;
    }
  }
  /**
   *
   *
   * <pre>
   * Server-side generated idempotency key that the client can use to assert that the server side
   * session has not changed.
   * </pre>
   *
   * <code>string server_side_session_id = 3;</code>
   *
   * @return The bytes for serverSideSessionId.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getServerSideSessionIdBytes() {
    java.lang.Object ref = serverSideSessionId_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      serverSideSessionId_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int SESSION_ID_FIELD_NUMBER = 4;
  private volatile java.lang.Object sessionId_;
  /**
   * <code>string session_id = 4;</code>
   *
   * @return The sessionId.
   */
  @java.lang.Override
  public java.lang.String getSessionId() {
    java.lang.Object ref = sessionId_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      sessionId_ = s;
      return s;
    }
  }
  /**
   * <code>string session_id = 4;</code>
   *
   * @return The bytes for sessionId.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getSessionIdBytes() {
    java.lang.Object ref = sessionId_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      sessionId_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int ROOT_ERROR_IDX_FIELD_NUMBER = 1;
  private int rootErrorIdx_;
  /**
   *
   *
   * <pre>
   * The index of the root error in errors. The field will not be set if the error is not found.
   * </pre>
   *
   * <code>optional int32 root_error_idx = 1;</code>
   *
   * @return Whether the rootErrorIdx field is set.
   */
  @java.lang.Override
  public boolean hasRootErrorIdx() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   *
   *
   * <pre>
   * The index of the root error in errors. The field will not be set if the error is not found.
   * </pre>
   *
   * <code>optional int32 root_error_idx = 1;</code>
   *
   * @return The rootErrorIdx.
   */
  @java.lang.Override
  public int getRootErrorIdx() {
    return rootErrorIdx_;
  }

  public static final int ERRORS_FIELD_NUMBER = 2;
  private java.util.List<
          org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse.Error>
      errors_;
  /**
   *
   *
   * <pre>
   * A list of errors.
   * </pre>
   *
   * <code>repeated .spark.connect.FetchErrorDetailsResponse.Error errors = 2;</code>
   */
  @java.lang.Override
  public java.util.List<
          org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse.Error>
      getErrorsList() {
    return errors_;
  }
  /**
   *
   *
   * <pre>
   * A list of errors.
   * </pre>
   *
   * <code>repeated .spark.connect.FetchErrorDetailsResponse.Error errors = 2;</code>
   */
  @java.lang.Override
  public java.util.List<
          ? extends
              org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
                  .ErrorOrBuilder>
      getErrorsOrBuilderList() {
    return errors_;
  }
  /**
   *
   *
   * <pre>
   * A list of errors.
   * </pre>
   *
   * <code>repeated .spark.connect.FetchErrorDetailsResponse.Error errors = 2;</code>
   */
  @java.lang.Override
  public int getErrorsCount() {
    return errors_.size();
  }
  /**
   *
   *
   * <pre>
   * A list of errors.
   * </pre>
   *
   * <code>repeated .spark.connect.FetchErrorDetailsResponse.Error errors = 2;</code>
   */
  @java.lang.Override
  public org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse.Error
      getErrors(int index) {
    return errors_.get(index);
  }
  /**
   *
   *
   * <pre>
   * A list of errors.
   * </pre>
   *
   * <code>repeated .spark.connect.FetchErrorDetailsResponse.Error errors = 2;</code>
   */
  @java.lang.Override
  public org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse.ErrorOrBuilder
      getErrorsOrBuilder(int index) {
    return errors_.get(index);
  }

  private byte memoizedIsInitialized = -1;

  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeInt32(1, rootErrorIdx_);
    }
    for (int i = 0; i < errors_.size(); i++) {
      output.writeMessage(2, errors_.get(i));
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(serverSideSessionId_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, serverSideSessionId_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(sessionId_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 4, sessionId_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream.computeInt32Size(1, rootErrorIdx_);
    }
    for (int i = 0; i < errors_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(2, errors_.get(i));
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(serverSideSessionId_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, serverSideSessionId_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(sessionId_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, sessionId_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
      return true;
    }
    if (!(obj
        instanceof org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse)) {
      return super.equals(obj);
    }
    org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse other =
        (org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse) obj;

    if (!getServerSideSessionId().equals(other.getServerSideSessionId())) return false;
    if (!getSessionId().equals(other.getSessionId())) return false;
    if (hasRootErrorIdx() != other.hasRootErrorIdx()) return false;
    if (hasRootErrorIdx()) {
      if (getRootErrorIdx() != other.getRootErrorIdx()) return false;
    }
    if (!getErrorsList().equals(other.getErrorsList())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + SERVER_SIDE_SESSION_ID_FIELD_NUMBER;
    hash = (53 * hash) + getServerSideSessionId().hashCode();
    hash = (37 * hash) + SESSION_ID_FIELD_NUMBER;
    hash = (53 * hash) + getSessionId().hashCode();
    if (hasRootErrorIdx()) {
      hash = (37 * hash) + ROOT_ERROR_IDX_FIELD_NUMBER;
      hash = (53 * hash) + getRootErrorIdx();
    }
    if (getErrorsCount() > 0) {
      hash = (37 * hash) + ERRORS_FIELD_NUMBER;
      hash = (53 * hash) + getErrorsList().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
      parseFrom(java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
      parseFrom(
          java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
      parseFrom(com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
      parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
      parseFrom(byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
      parseFrom(byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
      parseFrom(java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
      parseFrom(
          java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
      parseDelimitedFrom(java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
  }

  public static org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
      parseDelimitedFrom(
          java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
      parseFrom(com.google.protobuf.CodedInputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
      parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() {
    return newBuilder();
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }

  public static Builder newBuilder(
      org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   *
   *
   * <pre>
   * Next ID: 5
   * </pre>
   *
   * Protobuf type {@code spark.connect.FetchErrorDetailsResponse}
   */
  public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
      implements
      // @@protoc_insertion_point(builder_implements:spark.connect.FetchErrorDetailsResponse)
      org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponseOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return org.apache.kyuubi.engine.spark.connect.grpc.proto.Base
          .internal_static_spark_connect_FetchErrorDetailsResponse_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.kyuubi.engine.spark.connect.grpc.proto.Base
          .internal_static_spark_connect_FetchErrorDetailsResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse.class,
              org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse.Builder
                  .class);
    }

    // Construct using
    // org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse.newBuilder()
    private Builder() {}

    private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
    }

    @java.lang.Override
    public Builder clear() {
      super.clear();
      serverSideSessionId_ = "";

      sessionId_ = "";

      rootErrorIdx_ = 0;
      bitField0_ = (bitField0_ & ~0x00000001);
      if (errorsBuilder_ == null) {
        errors_ = java.util.Collections.emptyList();
      } else {
        errors_ = null;
        errorsBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000002);
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
      return org.apache.kyuubi.engine.spark.connect.grpc.proto.Base
          .internal_static_spark_connect_FetchErrorDetailsResponse_descriptor;
    }

    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
        getDefaultInstanceForType() {
      return org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
          .getDefaultInstance();
    }

    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse build() {
      org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse result =
          buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
        buildPartial() {
      org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse result =
          new org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      result.serverSideSessionId_ = serverSideSessionId_;
      result.sessionId_ = sessionId_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.rootErrorIdx_ = rootErrorIdx_;
        to_bitField0_ |= 0x00000001;
      }
      if (errorsBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0)) {
          errors_ = java.util.Collections.unmodifiableList(errors_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.errors_ = errors_;
      } else {
        result.errors_ = errorsBuilder_.build();
      }
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }

    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.setField(field, value);
    }

    @java.lang.Override
    public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }

    @java.lang.Override
    public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }

    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }

    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other
          instanceof org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse) {
        return mergeFrom(
            (org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse) other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(
        org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse other) {
      if (other
          == org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
              .getDefaultInstance()) return this;
      if (!other.getServerSideSessionId().isEmpty()) {
        serverSideSessionId_ = other.serverSideSessionId_;
        onChanged();
      }
      if (!other.getSessionId().isEmpty()) {
        sessionId_ = other.sessionId_;
        onChanged();
      }
      if (other.hasRootErrorIdx()) {
        setRootErrorIdx(other.getRootErrorIdx());
      }
      if (errorsBuilder_ == null) {
        if (!other.errors_.isEmpty()) {
          if (errors_.isEmpty()) {
            errors_ = other.errors_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureErrorsIsMutable();
            errors_.addAll(other.errors_);
          }
          onChanged();
        }
      } else {
        if (!other.errors_.isEmpty()) {
          if (errorsBuilder_.isEmpty()) {
            errorsBuilder_.dispose();
            errorsBuilder_ = null;
            errors_ = other.errors_;
            bitField0_ = (bitField0_ & ~0x00000002);
            errorsBuilder_ =
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders
                    ? getErrorsFieldBuilder()
                    : null;
          } else {
            errorsBuilder_.addAllMessages(other.errors_);
          }
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8:
              {
                rootErrorIdx_ = input.readInt32();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
            case 18:
              {
                org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse.Error
                    m =
                        input.readMessage(
                            org.apache.kyuubi.engine.spark.connect.grpc.proto
                                .FetchErrorDetailsResponse.Error.parser(),
                            extensionRegistry);
                if (errorsBuilder_ == null) {
                  ensureErrorsIsMutable();
                  errors_.add(m);
                } else {
                  errorsBuilder_.addMessage(m);
                }
                break;
              } // case 18
            case 26:
              {
                serverSideSessionId_ = input.readStringRequireUtf8();

                break;
              } // case 26
            case 34:
              {
                sessionId_ = input.readStringRequireUtf8();

                break;
              } // case 34
            default:
              {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }

    private int bitField0_;

    private java.lang.Object serverSideSessionId_ = "";
    /**
     *
     *
     * <pre>
     * Server-side generated idempotency key that the client can use to assert that the server side
     * session has not changed.
     * </pre>
     *
     * <code>string server_side_session_id = 3;</code>
     *
     * @return The serverSideSessionId.
     */
    public java.lang.String getServerSideSessionId() {
      java.lang.Object ref = serverSideSessionId_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        serverSideSessionId_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Server-side generated idempotency key that the client can use to assert that the server side
     * session has not changed.
     * </pre>
     *
     * <code>string server_side_session_id = 3;</code>
     *
     * @return The bytes for serverSideSessionId.
     */
    public com.google.protobuf.ByteString getServerSideSessionIdBytes() {
      java.lang.Object ref = serverSideSessionId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        serverSideSessionId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Server-side generated idempotency key that the client can use to assert that the server side
     * session has not changed.
     * </pre>
     *
     * <code>string server_side_session_id = 3;</code>
     *
     * @param value The serverSideSessionId to set.
     * @return This builder for chaining.
     */
    public Builder setServerSideSessionId(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }

      serverSideSessionId_ = value;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Server-side generated idempotency key that the client can use to assert that the server side
     * session has not changed.
     * </pre>
     *
     * <code>string server_side_session_id = 3;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearServerSideSessionId() {

      serverSideSessionId_ = getDefaultInstance().getServerSideSessionId();
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Server-side generated idempotency key that the client can use to assert that the server side
     * session has not changed.
     * </pre>
     *
     * <code>string server_side_session_id = 3;</code>
     *
     * @param value The bytes for serverSideSessionId to set.
     * @return This builder for chaining.
     */
    public Builder setServerSideSessionIdBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);

      serverSideSessionId_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object sessionId_ = "";
    /**
     * <code>string session_id = 4;</code>
     *
     * @return The sessionId.
     */
    public java.lang.String getSessionId() {
      java.lang.Object ref = sessionId_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        sessionId_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>string session_id = 4;</code>
     *
     * @return The bytes for sessionId.
     */
    public com.google.protobuf.ByteString getSessionIdBytes() {
      java.lang.Object ref = sessionId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        sessionId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string session_id = 4;</code>
     *
     * @param value The sessionId to set.
     * @return This builder for chaining.
     */
    public Builder setSessionId(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }

      sessionId_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>string session_id = 4;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearSessionId() {

      sessionId_ = getDefaultInstance().getSessionId();
      onChanged();
      return this;
    }
    /**
     * <code>string session_id = 4;</code>
     *
     * @param value The bytes for sessionId to set.
     * @return This builder for chaining.
     */
    public Builder setSessionIdBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);

      sessionId_ = value;
      onChanged();
      return this;
    }

    private int rootErrorIdx_;
    /**
     *
     *
     * <pre>
     * The index of the root error in errors. The field will not be set if the error is not found.
     * </pre>
     *
     * <code>optional int32 root_error_idx = 1;</code>
     *
     * @return Whether the rootErrorIdx field is set.
     */
    @java.lang.Override
    public boolean hasRootErrorIdx() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     *
     *
     * <pre>
     * The index of the root error in errors. The field will not be set if the error is not found.
     * </pre>
     *
     * <code>optional int32 root_error_idx = 1;</code>
     *
     * @return The rootErrorIdx.
     */
    @java.lang.Override
    public int getRootErrorIdx() {
      return rootErrorIdx_;
    }
    /**
     *
     *
     * <pre>
     * The index of the root error in errors. The field will not be set if the error is not found.
     * </pre>
     *
     * <code>optional int32 root_error_idx = 1;</code>
     *
     * @param value The rootErrorIdx to set.
     * @return This builder for chaining.
     */
    public Builder setRootErrorIdx(int value) {
      bitField0_ |= 0x00000001;
      rootErrorIdx_ = value;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The index of the root error in errors. The field will not be set if the error is not found.
     * </pre>
     *
     * <code>optional int32 root_error_idx = 1;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearRootErrorIdx() {
      bitField0_ = (bitField0_ & ~0x00000001);
      rootErrorIdx_ = 0;
      onChanged();
      return this;
    }

    private java.util.List<
            org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse.Error>
        errors_ = java.util.Collections.emptyList();

    private void ensureErrorsIsMutable() {
      if (!((bitField0_ & 0x00000002) != 0)) {
        errors_ =
            new java.util.ArrayList<
                org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse.Error>(
                errors_);
        bitField0_ |= 0x00000002;
      }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
            org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse.Error,
            org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse.Error
                .Builder,
            org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
                .ErrorOrBuilder>
        errorsBuilder_;

    /**
     *
     *
     * <pre>
     * A list of errors.
     * </pre>
     *
     * <code>repeated .spark.connect.FetchErrorDetailsResponse.Error errors = 2;</code>
     */
    public java.util.List<
            org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse.Error>
        getErrorsList() {
      if (errorsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(errors_);
      } else {
        return errorsBuilder_.getMessageList();
      }
    }
    /**
     *
     *
     * <pre>
     * A list of errors.
     * </pre>
     *
     * <code>repeated .spark.connect.FetchErrorDetailsResponse.Error errors = 2;</code>
     */
    public int getErrorsCount() {
      if (errorsBuilder_ == null) {
        return errors_.size();
      } else {
        return errorsBuilder_.getCount();
      }
    }
    /**
     *
     *
     * <pre>
     * A list of errors.
     * </pre>
     *
     * <code>repeated .spark.connect.FetchErrorDetailsResponse.Error errors = 2;</code>
     */
    public org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse.Error
        getErrors(int index) {
      if (errorsBuilder_ == null) {
        return errors_.get(index);
      } else {
        return errorsBuilder_.getMessage(index);
      }
    }
    /**
     *
     *
     * <pre>
     * A list of errors.
     * </pre>
     *
     * <code>repeated .spark.connect.FetchErrorDetailsResponse.Error errors = 2;</code>
     */
    public Builder setErrors(
        int index,
        org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse.Error value) {
      if (errorsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureErrorsIsMutable();
        errors_.set(index, value);
        onChanged();
      } else {
        errorsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * A list of errors.
     * </pre>
     *
     * <code>repeated .spark.connect.FetchErrorDetailsResponse.Error errors = 2;</code>
     */
    public Builder setErrors(
        int index,
        org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse.Error.Builder
            builderForValue) {
      if (errorsBuilder_ == null) {
        ensureErrorsIsMutable();
        errors_.set(index, builderForValue.build());
        onChanged();
      } else {
        errorsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * A list of errors.
     * </pre>
     *
     * <code>repeated .spark.connect.FetchErrorDetailsResponse.Error errors = 2;</code>
     */
    public Builder addErrors(
        org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse.Error value) {
      if (errorsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureErrorsIsMutable();
        errors_.add(value);
        onChanged();
      } else {
        errorsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * A list of errors.
     * </pre>
     *
     * <code>repeated .spark.connect.FetchErrorDetailsResponse.Error errors = 2;</code>
     */
    public Builder addErrors(
        int index,
        org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse.Error value) {
      if (errorsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureErrorsIsMutable();
        errors_.add(index, value);
        onChanged();
      } else {
        errorsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * A list of errors.
     * </pre>
     *
     * <code>repeated .spark.connect.FetchErrorDetailsResponse.Error errors = 2;</code>
     */
    public Builder addErrors(
        org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse.Error.Builder
            builderForValue) {
      if (errorsBuilder_ == null) {
        ensureErrorsIsMutable();
        errors_.add(builderForValue.build());
        onChanged();
      } else {
        errorsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * A list of errors.
     * </pre>
     *
     * <code>repeated .spark.connect.FetchErrorDetailsResponse.Error errors = 2;</code>
     */
    public Builder addErrors(
        int index,
        org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse.Error.Builder
            builderForValue) {
      if (errorsBuilder_ == null) {
        ensureErrorsIsMutable();
        errors_.add(index, builderForValue.build());
        onChanged();
      } else {
        errorsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * A list of errors.
     * </pre>
     *
     * <code>repeated .spark.connect.FetchErrorDetailsResponse.Error errors = 2;</code>
     */
    public Builder addAllErrors(
        java.lang.Iterable<
                ? extends
                    org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
                        .Error>
            values) {
      if (errorsBuilder_ == null) {
        ensureErrorsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(values, errors_);
        onChanged();
      } else {
        errorsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * A list of errors.
     * </pre>
     *
     * <code>repeated .spark.connect.FetchErrorDetailsResponse.Error errors = 2;</code>
     */
    public Builder clearErrors() {
      if (errorsBuilder_ == null) {
        errors_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
      } else {
        errorsBuilder_.clear();
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * A list of errors.
     * </pre>
     *
     * <code>repeated .spark.connect.FetchErrorDetailsResponse.Error errors = 2;</code>
     */
    public Builder removeErrors(int index) {
      if (errorsBuilder_ == null) {
        ensureErrorsIsMutable();
        errors_.remove(index);
        onChanged();
      } else {
        errorsBuilder_.remove(index);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * A list of errors.
     * </pre>
     *
     * <code>repeated .spark.connect.FetchErrorDetailsResponse.Error errors = 2;</code>
     */
    public org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse.Error.Builder
        getErrorsBuilder(int index) {
      return getErrorsFieldBuilder().getBuilder(index);
    }
    /**
     *
     *
     * <pre>
     * A list of errors.
     * </pre>
     *
     * <code>repeated .spark.connect.FetchErrorDetailsResponse.Error errors = 2;</code>
     */
    public org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
            .ErrorOrBuilder
        getErrorsOrBuilder(int index) {
      if (errorsBuilder_ == null) {
        return errors_.get(index);
      } else {
        return errorsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     *
     *
     * <pre>
     * A list of errors.
     * </pre>
     *
     * <code>repeated .spark.connect.FetchErrorDetailsResponse.Error errors = 2;</code>
     */
    public java.util.List<
            ? extends
                org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
                    .ErrorOrBuilder>
        getErrorsOrBuilderList() {
      if (errorsBuilder_ != null) {
        return errorsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(errors_);
      }
    }
    /**
     *
     *
     * <pre>
     * A list of errors.
     * </pre>
     *
     * <code>repeated .spark.connect.FetchErrorDetailsResponse.Error errors = 2;</code>
     */
    public org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse.Error.Builder
        addErrorsBuilder() {
      return getErrorsFieldBuilder()
          .addBuilder(
              org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse.Error
                  .getDefaultInstance());
    }
    /**
     *
     *
     * <pre>
     * A list of errors.
     * </pre>
     *
     * <code>repeated .spark.connect.FetchErrorDetailsResponse.Error errors = 2;</code>
     */
    public org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse.Error.Builder
        addErrorsBuilder(int index) {
      return getErrorsFieldBuilder()
          .addBuilder(
              index,
              org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse.Error
                  .getDefaultInstance());
    }
    /**
     *
     *
     * <pre>
     * A list of errors.
     * </pre>
     *
     * <code>repeated .spark.connect.FetchErrorDetailsResponse.Error errors = 2;</code>
     */
    public java.util.List<
            org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse.Error
                .Builder>
        getErrorsBuilderList() {
      return getErrorsFieldBuilder().getBuilderList();
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
            org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse.Error,
            org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse.Error
                .Builder,
            org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
                .ErrorOrBuilder>
        getErrorsFieldBuilder() {
      if (errorsBuilder_ == null) {
        errorsBuilder_ =
            new com.google.protobuf.RepeatedFieldBuilderV3<
                org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse.Error,
                org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse.Error
                    .Builder,
                org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
                    .ErrorOrBuilder>(
                errors_, ((bitField0_ & 0x00000002) != 0), getParentForChildren(), isClean());
        errors_ = null;
      }
      return errorsBuilder_;
    }

    @java.lang.Override
    public final Builder setUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }

    // @@protoc_insertion_point(builder_scope:spark.connect.FetchErrorDetailsResponse)
  }

  // @@protoc_insertion_point(class_scope:spark.connect.FetchErrorDetailsResponse)
  private static final org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
      DEFAULT_INSTANCE;

  static {
    DEFAULT_INSTANCE =
        new org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse();
  }

  public static org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
      getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<FetchErrorDetailsResponse> PARSER =
      new com.google.protobuf.AbstractParser<FetchErrorDetailsResponse>() {
        @java.lang.Override
        public FetchErrorDetailsResponse parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

  public static com.google.protobuf.Parser<FetchErrorDetailsResponse> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<FetchErrorDetailsResponse> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public org.apache.kyuubi.engine.spark.connect.grpc.proto.FetchErrorDetailsResponse
      getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }
}
