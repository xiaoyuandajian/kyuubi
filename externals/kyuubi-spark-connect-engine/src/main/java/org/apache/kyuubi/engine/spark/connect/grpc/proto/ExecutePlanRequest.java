// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: kyuubi/spark/connect/base.proto

package org.apache.kyuubi.engine.spark.connect.grpc.proto;

/**
 *
 *
 * <pre>
 * A request to be executed by the service.
 * </pre>
 *
 * Protobuf type {@code spark.connect.ExecutePlanRequest}
 */
public final class ExecutePlanRequest extends com.google.protobuf.GeneratedMessageV3
    implements
    // @@protoc_insertion_point(message_implements:spark.connect.ExecutePlanRequest)
    ExecutePlanRequestOrBuilder {
  private static final long serialVersionUID = 0L;
  // Use ExecutePlanRequest.newBuilder() to construct.
  private ExecutePlanRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }

  private ExecutePlanRequest() {
    sessionId_ = "";
    clientObservedServerSideSessionId_ = "";
    operationId_ = "";
    clientType_ = "";
    requestOptions_ = java.util.Collections.emptyList();
    tags_ = com.google.protobuf.LazyStringArrayList.EMPTY;
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
    return new ExecutePlanRequest();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet getUnknownFields() {
    return this.unknownFields;
  }

  public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
    return org.apache.kyuubi.engine.spark.connect.grpc.proto.Base
        .internal_static_spark_connect_ExecutePlanRequest_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return org.apache.kyuubi.engine.spark.connect.grpc.proto.Base
        .internal_static_spark_connect_ExecutePlanRequest_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            org.apache.kyuubi.engine.spark.connect.grpc.proto.ExecutePlanRequest.class,
            org.apache.kyuubi.engine.spark.connect.grpc.proto.ExecutePlanRequest.Builder.class);
  }

  public interface RequestOptionOrBuilder
      extends
      // @@protoc_insertion_point(interface_extends:spark.connect.ExecutePlanRequest.RequestOption)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.spark.connect.ReattachOptions reattach_options = 1;</code>
     *
     * @return Whether the reattachOptions field is set.
     */
    boolean hasReattachOptions();
    /**
     * <code>.spark.connect.ReattachOptions reattach_options = 1;</code>
     *
     * @return The reattachOptions.
     */
    org.apache.kyuubi.engine.spark.connect.grpc.proto.ReattachOptions getReattachOptions();
    /** <code>.spark.connect.ReattachOptions reattach_options = 1;</code> */
    org.apache.kyuubi.engine.spark.connect.grpc.proto.ReattachOptionsOrBuilder
        getReattachOptionsOrBuilder();

    /**
     *
     *
     * <pre>
     * Extension type for request options
     * </pre>
     *
     * <code>.google.protobuf.Any extension = 999;</code>
     *
     * @return Whether the extension field is set.
     */
    boolean hasExtension();
    /**
     *
     *
     * <pre>
     * Extension type for request options
     * </pre>
     *
     * <code>.google.protobuf.Any extension = 999;</code>
     *
     * @return The extension.
     */
    com.google.protobuf.Any getExtension();
    /**
     *
     *
     * <pre>
     * Extension type for request options
     * </pre>
     *
     * <code>.google.protobuf.Any extension = 999;</code>
     */
    com.google.protobuf.AnyOrBuilder getExtensionOrBuilder();

    public org.apache.kyuubi.engine.spark.connect.grpc.proto.ExecutePlanRequest.RequestOption
            .RequestOptionCase
        getRequestOptionCase();
  }
  /** Protobuf type {@code spark.connect.ExecutePlanRequest.RequestOption} */
  public static final class RequestOption extends com.google.protobuf.GeneratedMessageV3
      implements
      // @@protoc_insertion_point(message_implements:spark.connect.ExecutePlanRequest.RequestOption)
      RequestOptionOrBuilder {
    private static final long serialVersionUID = 0L;
    // Use RequestOption.newBuilder() to construct.
    private RequestOption(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }

    private RequestOption() {}

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
      return new RequestOption();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet getUnknownFields() {
      return this.unknownFields;
    }

    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return org.apache.kyuubi.engine.spark.connect.grpc.proto.Base
          .internal_static_spark_connect_ExecutePlanRequest_RequestOption_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.kyuubi.engine.spark.connect.grpc.proto.Base
          .internal_static_spark_connect_ExecutePlanRequest_RequestOption_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.kyuubi.engine.spark.connect.grpc.proto.ExecutePlanRequest.RequestOption
                  .class,
              org.apache.kyuubi.engine.spark.connect.grpc.proto.ExecutePlanRequest.RequestOption
                  .Builder.class);
    }

    private int requestOptionCase_ = 0;
    private java.lang.Object requestOption_;

    public enum RequestOptionCase
        implements
            com.google.protobuf.Internal.EnumLite,
            com.google.protobuf.AbstractMessage.InternalOneOfEnum {
      REATTACH_OPTIONS(1),
      EXTENSION(999),
      REQUESTOPTION_NOT_SET(0);
      private final int value;

      private RequestOptionCase(int value) {
        this.value = value;
      }
      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static RequestOptionCase valueOf(int value) {
        return forNumber(value);
      }

      public static RequestOptionCase forNumber(int value) {
        switch (value) {
          case 1:
            return REATTACH_OPTIONS;
          case 999:
            return EXTENSION;
          case 0:
            return REQUESTOPTION_NOT_SET;
          default:
            return null;
        }
      }

      public int getNumber() {
        return this.value;
      }
    };

    public RequestOptionCase getRequestOptionCase() {
      return RequestOptionCase.forNumber(requestOptionCase_);
    }

    public static final int REATTACH_OPTIONS_FIELD_NUMBER = 1;
    /**
     * <code>.spark.connect.ReattachOptions reattach_options = 1;</code>
     *
     * @return Whether the reattachOptions field is set.
     */
    @java.lang.Override
    public boolean hasReattachOptions() {
      return requestOptionCase_ == 1;
    }
    /**
     * <code>.spark.connect.ReattachOptions reattach_options = 1;</code>
     *
     * @return The reattachOptions.
     */
    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.grpc.proto.ReattachOptions getReattachOptions() {
      if (requestOptionCase_ == 1) {
        return (org.apache.kyuubi.engine.spark.connect.grpc.proto.ReattachOptions) requestOption_;
      }
      return org.apache.kyuubi.engine.spark.connect.grpc.proto.ReattachOptions.getDefaultInstance();
    }
    /** <code>.spark.connect.ReattachOptions reattach_options = 1;</code> */
    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.grpc.proto.ReattachOptionsOrBuilder
        getReattachOptionsOrBuilder() {
      if (requestOptionCase_ == 1) {
        return (org.apache.kyuubi.engine.spark.connect.grpc.proto.ReattachOptions) requestOption_;
      }
      return org.apache.kyuubi.engine.spark.connect.grpc.proto.ReattachOptions.getDefaultInstance();
    }

    public static final int EXTENSION_FIELD_NUMBER = 999;
    /**
     *
     *
     * <pre>
     * Extension type for request options
     * </pre>
     *
     * <code>.google.protobuf.Any extension = 999;</code>
     *
     * @return Whether the extension field is set.
     */
    @java.lang.Override
    public boolean hasExtension() {
      return requestOptionCase_ == 999;
    }
    /**
     *
     *
     * <pre>
     * Extension type for request options
     * </pre>
     *
     * <code>.google.protobuf.Any extension = 999;</code>
     *
     * @return The extension.
     */
    @java.lang.Override
    public com.google.protobuf.Any getExtension() {
      if (requestOptionCase_ == 999) {
        return (com.google.protobuf.Any) requestOption_;
      }
      return com.google.protobuf.Any.getDefaultInstance();
    }
    /**
     *
     *
     * <pre>
     * Extension type for request options
     * </pre>
     *
     * <code>.google.protobuf.Any extension = 999;</code>
     */
    @java.lang.Override
    public com.google.protobuf.AnyOrBuilder getExtensionOrBuilder() {
      if (requestOptionCase_ == 999) {
        return (com.google.protobuf.Any) requestOption_;
      }
      return com.google.protobuf.Any.getDefaultInstance();
    }

    private byte memoizedIsInitialized = -1;

    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
      if (requestOptionCase_ == 1) {
        output.writeMessage(
            1, (org.apache.kyuubi.engine.spark.connect.grpc.proto.ReattachOptions) requestOption_);
      }
      if (requestOptionCase_ == 999) {
        output.writeMessage(999, (com.google.protobuf.Any) requestOption_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (requestOptionCase_ == 1) {
        size +=
            com.google.protobuf.CodedOutputStream.computeMessageSize(
                1,
                (org.apache.kyuubi.engine.spark.connect.grpc.proto.ReattachOptions) requestOption_);
      }
      if (requestOptionCase_ == 999) {
        size +=
            com.google.protobuf.CodedOutputStream.computeMessageSize(
                999, (com.google.protobuf.Any) requestOption_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
        return true;
      }
      if (!(obj
          instanceof
          org.apache.kyuubi.engine.spark.connect.grpc.proto.ExecutePlanRequest.RequestOption)) {
        return super.equals(obj);
      }
      org.apache.kyuubi.engine.spark.connect.grpc.proto.ExecutePlanRequest.RequestOption other =
          (org.apache.kyuubi.engine.spark.connect.grpc.proto.ExecutePlanRequest.RequestOption) obj;

      if (!getRequestOptionCase().equals(other.getRequestOptionCase())) return false;
      switch (requestOptionCase_) {
        case 1:
          if (!getReattachOptions().equals(other.getReattachOptions())) return false;
          break;
        case 999:
          if (!getExtension().equals(other.getExtension())) return false;
          break;
        case 0:
        default:
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      switch (requestOptionCase_) {
        case 1:
          hash = (37 * hash) + REATTACH_OPTIONS_FIELD_NUMBER;
          hash = (53 * hash) + getReattachOptions().hashCode();
          break;
        case 999:
          hash = (37 * hash) + EXTENSION_FIELD_NUMBER;
          hash = (53 * hash) + getExtension().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.kyuubi.engine.spark.connect.grpc.proto.ExecutePlanRequest.RequestOption
        parseFrom(java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static org.apache.kyuubi.engine.spark.connect.grpc.proto.ExecutePlanRequest.RequestOption
        parseFrom(
            java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static org.apache.kyuubi.engine.spark.connect.grpc.proto.ExecutePlanRequest.RequestOption
        parseFrom(com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static org.apache.kyuubi.engine.spark.connect.grpc.proto.ExecutePlanRequest.RequestOption
        parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static org.apache.kyuubi.engine.spark.connect.grpc.proto.ExecutePlanRequest.RequestOption
        parseFrom(byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static org.apache.kyuubi.engine.spark.connect.grpc.proto.ExecutePlanRequest.RequestOption
        parseFrom(byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static org.apache.kyuubi.engine.spark.connect.grpc.proto.ExecutePlanRequest.RequestOption
        parseFrom(java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static org.apache.kyuubi.engine.spark.connect.grpc.proto.ExecutePlanRequest.RequestOption
        parseFrom(
            java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
          PARSER, input, extensionRegistry);
    }

    public static org.apache.kyuubi.engine.spark.connect.grpc.proto.ExecutePlanRequest.RequestOption
        parseDelimitedFrom(java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
    }

    public static org.apache.kyuubi.engine.spark.connect.grpc.proto.ExecutePlanRequest.RequestOption
        parseDelimitedFrom(
            java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
          PARSER, input, extensionRegistry);
    }

    public static org.apache.kyuubi.engine.spark.connect.grpc.proto.ExecutePlanRequest.RequestOption
        parseFrom(com.google.protobuf.CodedInputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static org.apache.kyuubi.engine.spark.connect.grpc.proto.ExecutePlanRequest.RequestOption
        parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
          PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() {
      return newBuilder();
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }

    public static Builder newBuilder(
        org.apache.kyuubi.engine.spark.connect.grpc.proto.ExecutePlanRequest.RequestOption
            prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /** Protobuf type {@code spark.connect.ExecutePlanRequest.RequestOption} */
    public static final class Builder
        extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
        implements
        // @@protoc_insertion_point(builder_implements:spark.connect.ExecutePlanRequest.RequestOption)
        org.apache.kyuubi.engine.spark.connect.grpc.proto.ExecutePlanRequest
            .RequestOptionOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
        return org.apache.kyuubi.engine.spark.connect.grpc.proto.Base
            .internal_static_spark_connect_ExecutePlanRequest_RequestOption_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.kyuubi.engine.spark.connect.grpc.proto.Base
            .internal_static_spark_connect_ExecutePlanRequest_RequestOption_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.kyuubi.engine.spark.connect.grpc.proto.ExecutePlanRequest.RequestOption
                    .class,
                org.apache.kyuubi.engine.spark.connect.grpc.proto.ExecutePlanRequest.RequestOption
                    .Builder.class);
      }

      // Construct using
      // org.apache.kyuubi.engine.spark.connect.grpc.proto.ExecutePlanRequest.RequestOption.newBuilder()
      private Builder() {}

      private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
      }

      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (reattachOptionsBuilder_ != null) {
          reattachOptionsBuilder_.clear();
        }
        if (extensionBuilder_ != null) {
          extensionBuilder_.clear();
        }
        requestOptionCase_ = 0;
        requestOption_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
        return org.apache.kyuubi.engine.spark.connect.grpc.proto.Base
            .internal_static_spark_connect_ExecutePlanRequest_RequestOption_descriptor;
      }

      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.grpc.proto.ExecutePlanRequest.RequestOption
          getDefaultInstanceForType() {
        return org.apache.kyuubi.engine.spark.connect.grpc.proto.ExecutePlanRequest.RequestOption
            .getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.grpc.proto.ExecutePlanRequest.RequestOption
          build() {
        org.apache.kyuubi.engine.spark.connect.grpc.proto.ExecutePlanRequest.RequestOption result =
            buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.grpc.proto.ExecutePlanRequest.RequestOption
          buildPartial() {
        org.apache.kyuubi.engine.spark.connect.grpc.proto.ExecutePlanRequest.RequestOption result =
            new org.apache.kyuubi.engine.spark.connect.grpc.proto.ExecutePlanRequest.RequestOption(
                this);
        if (requestOptionCase_ == 1) {
          if (reattachOptionsBuilder_ == null) {
            result.requestOption_ = requestOption_;
          } else {
            result.requestOption_ = reattachOptionsBuilder_.build();
          }
        }
        if (requestOptionCase_ == 999) {
          if (extensionBuilder_ == null) {
            result.requestOption_ = requestOption_;
          } else {
            result.requestOption_ = extensionBuilder_.build();
          }
        }
        result.requestOptionCase_ = requestOptionCase_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }

      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
        return super.setField(field, value);
      }

      @java.lang.Override
      public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }

      @java.lang.Override
      public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }

      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index,
          java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }

      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other
            instanceof
            org.apache.kyuubi.engine.spark.connect.grpc.proto.ExecutePlanRequest.RequestOption) {
          return mergeFrom(
              (org.apache.kyuubi.engine.spark.connect.grpc.proto.ExecutePlanRequest.RequestOption)
                  other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(
          org.apache.kyuubi.engine.spark.connect.grpc.proto.ExecutePlanRequest.RequestOption
              other) {
        if (other
            == org.apache.kyuubi.engine.spark.connect.grpc.proto.ExecutePlanRequest.RequestOption
                .getDefaultInstance()) return this;
        switch (other.getRequestOptionCase()) {
          case REATTACH_OPTIONS:
            {
              mergeReattachOptions(other.getReattachOptions());
              break;
            }
          case EXTENSION:
            {
              mergeExtension(other.getExtension());
              break;
            }
          case REQUESTOPTION_NOT_SET:
            {
              break;
            }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10:
                {
                  input.readMessage(
                      getReattachOptionsFieldBuilder().getBuilder(), extensionRegistry);
                  requestOptionCase_ = 1;
                  break;
                } // case 10
              case 7994:
                {
                  input.readMessage(getExtensionFieldBuilder().getBuilder(), extensionRegistry);
                  requestOptionCase_ = 999;
                  break;
                } // case 7994
              default:
                {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }

      private int requestOptionCase_ = 0;
      private java.lang.Object requestOption_;

      public RequestOptionCase getRequestOptionCase() {
        return RequestOptionCase.forNumber(requestOptionCase_);
      }

      public Builder clearRequestOption() {
        requestOptionCase_ = 0;
        requestOption_ = null;
        onChanged();
        return this;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
              org.apache.kyuubi.engine.spark.connect.grpc.proto.ReattachOptions,
              org.apache.kyuubi.engine.spark.connect.grpc.proto.ReattachOptions.Builder,
              org.apache.kyuubi.engine.spark.connect.grpc.proto.ReattachOptionsOrBuilder>
          reattachOptionsBuilder_;
      /**
       * <code>.spark.connect.ReattachOptions reattach_options = 1;</code>
       *
       * @return Whether the reattachOptions field is set.
       */
      @java.lang.Override
      public boolean hasReattachOptions() {
        return requestOptionCase_ == 1;
      }
      /**
       * <code>.spark.connect.ReattachOptions reattach_options = 1;</code>
       *
       * @return The reattachOptions.
       */
      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.grpc.proto.ReattachOptions
          getReattachOptions() {
        if (reattachOptionsBuilder_ == null) {
          if (requestOptionCase_ == 1) {
            return (org.apache.kyuubi.engine.spark.connect.grpc.proto.ReattachOptions)
                requestOption_;
          }
          return org.apache.kyuubi.engine.spark.connect.grpc.proto.ReattachOptions
              .getDefaultInstance();
        } else {
          if (requestOptionCase_ == 1) {
            return reattachOptionsBuilder_.getMessage();
          }
          return org.apache.kyuubi.engine.spark.connect.grpc.proto.ReattachOptions
              .getDefaultInstance();
        }
      }
      /** <code>.spark.connect.ReattachOptions reattach_options = 1;</code> */
      public Builder setReattachOptions(
          org.apache.kyuubi.engine.spark.connect.grpc.proto.ReattachOptions value) {
        if (reattachOptionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          requestOption_ = value;
          onChanged();
        } else {
          reattachOptionsBuilder_.setMessage(value);
        }
        requestOptionCase_ = 1;
        return this;
      }
      /** <code>.spark.connect.ReattachOptions reattach_options = 1;</code> */
      public Builder setReattachOptions(
          org.apache.kyuubi.engine.spark.connect.grpc.proto.ReattachOptions.Builder
              builderForValue) {
        if (reattachOptionsBuilder_ == null) {
          requestOption_ = builderForValue.build();
          onChanged();
        } else {
          reattachOptionsBuilder_.setMessage(builderForValue.build());
        }
        requestOptionCase_ = 1;
        return this;
      }
      /** <code>.spark.connect.ReattachOptions reattach_options = 1;</code> */
      public Builder mergeReattachOptions(
          org.apache.kyuubi.engine.spark.connect.grpc.proto.ReattachOptions value) {
        if (reattachOptionsBuilder_ == null) {
          if (requestOptionCase_ == 1
              && requestOption_
                  != org.apache.kyuubi.engine.spark.connect.grpc.proto.ReattachOptions
                      .getDefaultInstance()) {
            requestOption_ =
                org.apache.kyuubi.engine.spark.connect.grpc.proto.ReattachOptions.newBuilder(
                        (org.apache.kyuubi.engine.spark.connect.grpc.proto.ReattachOptions)
                            requestOption_)
                    .mergeFrom(value)
                    .buildPartial();
          } else {
            requestOption_ = value;
          }
          onChanged();
        } else {
          if (requestOptionCase_ == 1) {
            reattachOptionsBuilder_.mergeFrom(value);
          } else {
            reattachOptionsBuilder_.setMessage(value);
          }
        }
        requestOptionCase_ = 1;
        return this;
      }
      /** <code>.spark.connect.ReattachOptions reattach_options = 1;</code> */
      public Builder clearReattachOptions() {
        if (reattachOptionsBuilder_ == null) {
          if (requestOptionCase_ == 1) {
            requestOptionCase_ = 0;
            requestOption_ = null;
            onChanged();
          }
        } else {
          if (requestOptionCase_ == 1) {
            requestOptionCase_ = 0;
            requestOption_ = null;
          }
          reattachOptionsBuilder_.clear();
        }
        return this;
      }
      /** <code>.spark.connect.ReattachOptions reattach_options = 1;</code> */
      public org.apache.kyuubi.engine.spark.connect.grpc.proto.ReattachOptions.Builder
          getReattachOptionsBuilder() {
        return getReattachOptionsFieldBuilder().getBuilder();
      }
      /** <code>.spark.connect.ReattachOptions reattach_options = 1;</code> */
      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.grpc.proto.ReattachOptionsOrBuilder
          getReattachOptionsOrBuilder() {
        if ((requestOptionCase_ == 1) && (reattachOptionsBuilder_ != null)) {
          return reattachOptionsBuilder_.getMessageOrBuilder();
        } else {
          if (requestOptionCase_ == 1) {
            return (org.apache.kyuubi.engine.spark.connect.grpc.proto.ReattachOptions)
                requestOption_;
          }
          return org.apache.kyuubi.engine.spark.connect.grpc.proto.ReattachOptions
              .getDefaultInstance();
        }
      }
      /** <code>.spark.connect.ReattachOptions reattach_options = 1;</code> */
      private com.google.protobuf.SingleFieldBuilderV3<
              org.apache.kyuubi.engine.spark.connect.grpc.proto.ReattachOptions,
              org.apache.kyuubi.engine.spark.connect.grpc.proto.ReattachOptions.Builder,
              org.apache.kyuubi.engine.spark.connect.grpc.proto.ReattachOptionsOrBuilder>
          getReattachOptionsFieldBuilder() {
        if (reattachOptionsBuilder_ == null) {
          if (!(requestOptionCase_ == 1)) {
            requestOption_ =
                org.apache.kyuubi.engine.spark.connect.grpc.proto.ReattachOptions
                    .getDefaultInstance();
          }
          reattachOptionsBuilder_ =
              new com.google.protobuf.SingleFieldBuilderV3<
                  org.apache.kyuubi.engine.spark.connect.grpc.proto.ReattachOptions,
                  org.apache.kyuubi.engine.spark.connect.grpc.proto.ReattachOptions.Builder,
                  org.apache.kyuubi.engine.spark.connect.grpc.proto.ReattachOptionsOrBuilder>(
                  (org.apache.kyuubi.engine.spark.connect.grpc.proto.ReattachOptions)
                      requestOption_,
                  getParentForChildren(),
                  isClean());
          requestOption_ = null;
        }
        requestOptionCase_ = 1;
        onChanged();
        ;
        return reattachOptionsBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Any,
              com.google.protobuf.Any.Builder,
              com.google.protobuf.AnyOrBuilder>
          extensionBuilder_;
      /**
       *
       *
       * <pre>
       * Extension type for request options
       * </pre>
       *
       * <code>.google.protobuf.Any extension = 999;</code>
       *
       * @return Whether the extension field is set.
       */
      @java.lang.Override
      public boolean hasExtension() {
        return requestOptionCase_ == 999;
      }
      /**
       *
       *
       * <pre>
       * Extension type for request options
       * </pre>
       *
       * <code>.google.protobuf.Any extension = 999;</code>
       *
       * @return The extension.
       */
      @java.lang.Override
      public com.google.protobuf.Any getExtension() {
        if (extensionBuilder_ == null) {
          if (requestOptionCase_ == 999) {
            return (com.google.protobuf.Any) requestOption_;
          }
          return com.google.protobuf.Any.getDefaultInstance();
        } else {
          if (requestOptionCase_ == 999) {
            return extensionBuilder_.getMessage();
          }
          return com.google.protobuf.Any.getDefaultInstance();
        }
      }
      /**
       *
       *
       * <pre>
       * Extension type for request options
       * </pre>
       *
       * <code>.google.protobuf.Any extension = 999;</code>
       */
      public Builder setExtension(com.google.protobuf.Any value) {
        if (extensionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          requestOption_ = value;
          onChanged();
        } else {
          extensionBuilder_.setMessage(value);
        }
        requestOptionCase_ = 999;
        return this;
      }
      /**
       *
       *
       * <pre>
       * Extension type for request options
       * </pre>
       *
       * <code>.google.protobuf.Any extension = 999;</code>
       */
      public Builder setExtension(com.google.protobuf.Any.Builder builderForValue) {
        if (extensionBuilder_ == null) {
          requestOption_ = builderForValue.build();
          onChanged();
        } else {
          extensionBuilder_.setMessage(builderForValue.build());
        }
        requestOptionCase_ = 999;
        return this;
      }
      /**
       *
       *
       * <pre>
       * Extension type for request options
       * </pre>
       *
       * <code>.google.protobuf.Any extension = 999;</code>
       */
      public Builder mergeExtension(com.google.protobuf.Any value) {
        if (extensionBuilder_ == null) {
          if (requestOptionCase_ == 999
              && requestOption_ != com.google.protobuf.Any.getDefaultInstance()) {
            requestOption_ =
                com.google.protobuf.Any.newBuilder((com.google.protobuf.Any) requestOption_)
                    .mergeFrom(value)
                    .buildPartial();
          } else {
            requestOption_ = value;
          }
          onChanged();
        } else {
          if (requestOptionCase_ == 999) {
            extensionBuilder_.mergeFrom(value);
          } else {
            extensionBuilder_.setMessage(value);
          }
        }
        requestOptionCase_ = 999;
        return this;
      }
      /**
       *
       *
       * <pre>
       * Extension type for request options
       * </pre>
       *
       * <code>.google.protobuf.Any extension = 999;</code>
       */
      public Builder clearExtension() {
        if (extensionBuilder_ == null) {
          if (requestOptionCase_ == 999) {
            requestOptionCase_ = 0;
            requestOption_ = null;
            onChanged();
          }
        } else {
          if (requestOptionCase_ == 999) {
            requestOptionCase_ = 0;
            requestOption_ = null;
          }
          extensionBuilder_.clear();
        }
        return this;
      }
      /**
       *
       *
       * <pre>
       * Extension type for request options
       * </pre>
       *
       * <code>.google.protobuf.Any extension = 999;</code>
       */
      public com.google.protobuf.Any.Builder getExtensionBuilder() {
        return getExtensionFieldBuilder().getBuilder();
      }
      /**
       *
       *
       * <pre>
       * Extension type for request options
       * </pre>
       *
       * <code>.google.protobuf.Any extension = 999;</code>
       */
      @java.lang.Override
      public com.google.protobuf.AnyOrBuilder getExtensionOrBuilder() {
        if ((requestOptionCase_ == 999) && (extensionBuilder_ != null)) {
          return extensionBuilder_.getMessageOrBuilder();
        } else {
          if (requestOptionCase_ == 999) {
            return (com.google.protobuf.Any) requestOption_;
          }
          return com.google.protobuf.Any.getDefaultInstance();
        }
      }
      /**
       *
       *
       * <pre>
       * Extension type for request options
       * </pre>
       *
       * <code>.google.protobuf.Any extension = 999;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Any,
              com.google.protobuf.Any.Builder,
              com.google.protobuf.AnyOrBuilder>
          getExtensionFieldBuilder() {
        if (extensionBuilder_ == null) {
          if (!(requestOptionCase_ == 999)) {
            requestOption_ = com.google.protobuf.Any.getDefaultInstance();
          }
          extensionBuilder_ =
              new com.google.protobuf.SingleFieldBuilderV3<
                  com.google.protobuf.Any,
                  com.google.protobuf.Any.Builder,
                  com.google.protobuf.AnyOrBuilder>(
                  (com.google.protobuf.Any) requestOption_, getParentForChildren(), isClean());
          requestOption_ = null;
        }
        requestOptionCase_ = 999;
        onChanged();
        ;
        return extensionBuilder_;
      }

      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }

      // @@protoc_insertion_point(builder_scope:spark.connect.ExecutePlanRequest.RequestOption)
    }

    // @@protoc_insertion_point(class_scope:spark.connect.ExecutePlanRequest.RequestOption)
    private static final org.apache.kyuubi.engine.spark.connect.grpc.proto.ExecutePlanRequest
            .RequestOption
        DEFAULT_INSTANCE;

    static {
      DEFAULT_INSTANCE =
          new org.apache.kyuubi.engine.spark.connect.grpc.proto.ExecutePlanRequest.RequestOption();
    }

    public static org.apache.kyuubi.engine.spark.connect.grpc.proto.ExecutePlanRequest.RequestOption
        getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<RequestOption> PARSER =
        new com.google.protobuf.AbstractParser<RequestOption>() {
          @java.lang.Override
          public RequestOption parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            Builder builder = newBuilder();
            try {
              builder.mergeFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw e.setUnfinishedMessage(builder.buildPartial());
            } catch (com.google.protobuf.UninitializedMessageException e) {
              throw e.asInvalidProtocolBufferException()
                  .setUnfinishedMessage(builder.buildPartial());
            } catch (java.io.IOException e) {
              throw new com.google.protobuf.InvalidProtocolBufferException(e)
                  .setUnfinishedMessage(builder.buildPartial());
            }
            return builder.buildPartial();
          }
        };

    public static com.google.protobuf.Parser<RequestOption> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RequestOption> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.grpc.proto.ExecutePlanRequest.RequestOption
        getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }
  }

  private int bitField0_;
  public static final int SESSION_ID_FIELD_NUMBER = 1;
  private volatile java.lang.Object sessionId_;
  /**
   *
   *
   * <pre>
   * (Required)
   * The session_id specifies a spark session for a user id (which is specified
   * by user_context.user_id). The session_id is set by the client to be able to
   * collate streaming responses from different queries within the dedicated session.
   * The id should be an UUID string of the format `00112233-4455-6677-8899-aabbccddeeff`
   * </pre>
   *
   * <code>string session_id = 1;</code>
   *
   * @return The sessionId.
   */
  @java.lang.Override
  public java.lang.String getSessionId() {
    java.lang.Object ref = sessionId_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      sessionId_ = s;
      return s;
    }
  }
  /**
   *
   *
   * <pre>
   * (Required)
   * The session_id specifies a spark session for a user id (which is specified
   * by user_context.user_id). The session_id is set by the client to be able to
   * collate streaming responses from different queries within the dedicated session.
   * The id should be an UUID string of the format `00112233-4455-6677-8899-aabbccddeeff`
   * </pre>
   *
   * <code>string session_id = 1;</code>
   *
   * @return The bytes for sessionId.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getSessionIdBytes() {
    java.lang.Object ref = sessionId_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      sessionId_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int CLIENT_OBSERVED_SERVER_SIDE_SESSION_ID_FIELD_NUMBER = 8;
  private volatile java.lang.Object clientObservedServerSideSessionId_;
  /**
   *
   *
   * <pre>
   * (Optional)
   * Server-side generated idempotency key from the previous responses (if any). Server
   * can use this to validate that the server side session has not changed.
   * </pre>
   *
   * <code>optional string client_observed_server_side_session_id = 8;</code>
   *
   * @return Whether the clientObservedServerSideSessionId field is set.
   */
  @java.lang.Override
  public boolean hasClientObservedServerSideSessionId() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   *
   *
   * <pre>
   * (Optional)
   * Server-side generated idempotency key from the previous responses (if any). Server
   * can use this to validate that the server side session has not changed.
   * </pre>
   *
   * <code>optional string client_observed_server_side_session_id = 8;</code>
   *
   * @return The clientObservedServerSideSessionId.
   */
  @java.lang.Override
  public java.lang.String getClientObservedServerSideSessionId() {
    java.lang.Object ref = clientObservedServerSideSessionId_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      clientObservedServerSideSessionId_ = s;
      return s;
    }
  }
  /**
   *
   *
   * <pre>
   * (Optional)
   * Server-side generated idempotency key from the previous responses (if any). Server
   * can use this to validate that the server side session has not changed.
   * </pre>
   *
   * <code>optional string client_observed_server_side_session_id = 8;</code>
   *
   * @return The bytes for clientObservedServerSideSessionId.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getClientObservedServerSideSessionIdBytes() {
    java.lang.Object ref = clientObservedServerSideSessionId_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      clientObservedServerSideSessionId_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int USER_CONTEXT_FIELD_NUMBER = 2;
  private org.apache.kyuubi.engine.spark.connect.grpc.proto.UserContext userContext_;
  /**
   *
   *
   * <pre>
   * (Required) User context
   * user_context.user_id and session+id both identify a unique remote spark session on the
   * server side.
   * </pre>
   *
   * <code>.spark.connect.UserContext user_context = 2;</code>
   *
   * @return Whether the userContext field is set.
   */
  @java.lang.Override
  public boolean hasUserContext() {
    return userContext_ != null;
  }
  /**
   *
   *
   * <pre>
   * (Required) User context
   * user_context.user_id and session+id both identify a unique remote spark session on the
   * server side.
   * </pre>
   *
   * <code>.spark.connect.UserContext user_context = 2;</code>
   *
   * @return The userContext.
   */
  @java.lang.Override
  public org.apache.kyuubi.engine.spark.connect.grpc.proto.UserContext getUserContext() {
    return userContext_ == null
        ? org.apache.kyuubi.engine.spark.connect.grpc.proto.UserContext.getDefaultInstance()
        : userContext_;
  }
  /**
   *
   *
   * <pre>
   * (Required) User context
   * user_context.user_id and session+id both identify a unique remote spark session on the
   * server side.
   * </pre>
   *
   * <code>.spark.connect.UserContext user_context = 2;</code>
   */
  @java.lang.Override
  public org.apache.kyuubi.engine.spark.connect.grpc.proto.UserContextOrBuilder
      getUserContextOrBuilder() {
    return getUserContext();
  }

  public static final int OPERATION_ID_FIELD_NUMBER = 6;
  private volatile java.lang.Object operationId_;
  /**
   *
   *
   * <pre>
   * (Optional)
   * Provide an id for this request. If not provided, it will be generated by the server.
   * It is returned in every ExecutePlanResponse.operation_id of the ExecutePlan response stream.
   * The id must be an UUID string of the format `00112233-4455-6677-8899-aabbccddeeff`
   * </pre>
   *
   * <code>optional string operation_id = 6;</code>
   *
   * @return Whether the operationId field is set.
   */
  @java.lang.Override
  public boolean hasOperationId() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   *
   *
   * <pre>
   * (Optional)
   * Provide an id for this request. If not provided, it will be generated by the server.
   * It is returned in every ExecutePlanResponse.operation_id of the ExecutePlan response stream.
   * The id must be an UUID string of the format `00112233-4455-6677-8899-aabbccddeeff`
   * </pre>
   *
   * <code>optional string operation_id = 6;</code>
   *
   * @return The operationId.
   */
  @java.lang.Override
  public java.lang.String getOperationId() {
    java.lang.Object ref = operationId_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      operationId_ = s;
      return s;
    }
  }
  /**
   *
   *
   * <pre>
   * (Optional)
   * Provide an id for this request. If not provided, it will be generated by the server.
   * It is returned in every ExecutePlanResponse.operation_id of the ExecutePlan response stream.
   * The id must be an UUID string of the format `00112233-4455-6677-8899-aabbccddeeff`
   * </pre>
   *
   * <code>optional string operation_id = 6;</code>
   *
   * @return The bytes for operationId.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getOperationIdBytes() {
    java.lang.Object ref = operationId_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      operationId_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int PLAN_FIELD_NUMBER = 3;
  private org.apache.kyuubi.engine.spark.connect.grpc.proto.Plan plan_;
  /**
   *
   *
   * <pre>
   * (Required) The logical plan to be executed / analyzed.
   * </pre>
   *
   * <code>.spark.connect.Plan plan = 3;</code>
   *
   * @return Whether the plan field is set.
   */
  @java.lang.Override
  public boolean hasPlan() {
    return plan_ != null;
  }
  /**
   *
   *
   * <pre>
   * (Required) The logical plan to be executed / analyzed.
   * </pre>
   *
   * <code>.spark.connect.Plan plan = 3;</code>
   *
   * @return The plan.
   */
  @java.lang.Override
  public org.apache.kyuubi.engine.spark.connect.grpc.proto.Plan getPlan() {
    return plan_ == null
        ? org.apache.kyuubi.engine.spark.connect.grpc.proto.Plan.getDefaultInstance()
        : plan_;
  }
  /**
   *
   *
   * <pre>
   * (Required) The logical plan to be executed / analyzed.
   * </pre>
   *
   * <code>.spark.connect.Plan plan = 3;</code>
   */
  @java.lang.Override
  public org.apache.kyuubi.engine.spark.connect.grpc.proto.PlanOrBuilder getPlanOrBuilder() {
    return getPlan();
  }

  public static final int CLIENT_TYPE_FIELD_NUMBER = 4;
  private volatile java.lang.Object clientType_;
  /**
   *
   *
   * <pre>
   * Provides optional information about the client sending the request. This field
   * can be used for language or version specific information and is only intended for
   * logging purposes and will not be interpreted by the server.
   * </pre>
   *
   * <code>optional string client_type = 4;</code>
   *
   * @return Whether the clientType field is set.
   */
  @java.lang.Override
  public boolean hasClientType() {
    return ((bitField0_ & 0x00000004) != 0);
  }
  /**
   *
   *
   * <pre>
   * Provides optional information about the client sending the request. This field
   * can be used for language or version specific information and is only intended for
   * logging purposes and will not be interpreted by the server.
   * </pre>
   *
   * <code>optional string client_type = 4;</code>
   *
   * @return The clientType.
   */
  @java.lang.Override
  public java.lang.String getClientType() {
    java.lang.Object ref = clientType_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      clientType_ = s;
      return s;
    }
  }
  /**
   *
   *
   * <pre>
   * Provides optional information about the client sending the request. This field
   * can be used for language or version specific information and is only intended for
   * logging purposes and will not be interpreted by the server.
   * </pre>
   *
   * <code>optional string client_type = 4;</code>
   *
   * @return The bytes for clientType.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getClientTypeBytes() {
    java.lang.Object ref = clientType_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      clientType_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int REQUEST_OPTIONS_FIELD_NUMBER = 5;
  private java.util.List<
          org.apache.kyuubi.engine.spark.connect.grpc.proto.ExecutePlanRequest.RequestOption>
      requestOptions_;
  /**
   *
   *
   * <pre>
   * Repeated element for options that can be passed to the request. This element is currently
   * unused but allows to pass in an extension value used for arbitrary options.
   * </pre>
   *
   * <code>repeated .spark.connect.ExecutePlanRequest.RequestOption request_options = 5;</code>
   */
  @java.lang.Override
  public java.util.List<
          org.apache.kyuubi.engine.spark.connect.grpc.proto.ExecutePlanRequest.RequestOption>
      getRequestOptionsList() {
    return requestOptions_;
  }
  /**
   *
   *
   * <pre>
   * Repeated element for options that can be passed to the request. This element is currently
   * unused but allows to pass in an extension value used for arbitrary options.
   * </pre>
   *
   * <code>repeated .spark.connect.ExecutePlanRequest.RequestOption request_options = 5;</code>
   */
  @java.lang.Override
  public java.util.List<
          ? extends
              org.apache.kyuubi.engine.spark.connect.grpc.proto.ExecutePlanRequest
                  .RequestOptionOrBuilder>
      getRequestOptionsOrBuilderList() {
    return requestOptions_;
  }
  /**
   *
   *
   * <pre>
   * Repeated element for options that can be passed to the request. This element is currently
   * unused but allows to pass in an extension value used for arbitrary options.
   * </pre>
   *
   * <code>repeated .spark.connect.ExecutePlanRequest.RequestOption request_options = 5;</code>
   */
  @java.lang.Override
  public int getRequestOptionsCount() {
    return requestOptions_.size();
  }
  /**
   *
   *
   * <pre>
   * Repeated element for options that can be passed to the request. This element is currently
   * unused but allows to pass in an extension value used for arbitrary options.
   * </pre>
   *
   * <code>repeated .spark.connect.ExecutePlanRequest.RequestOption request_options = 5;</code>
   */
  @java.lang.Override
  public org.apache.kyuubi.engine.spark.connect.grpc.proto.ExecutePlanRequest.RequestOption
      getRequestOptions(int index) {
    return requestOptions_.get(index);
  }
  /**
   *
   *
   * <pre>
   * Repeated element for options that can be passed to the request. This element is currently
   * unused but allows to pass in an extension value used for arbitrary options.
   * </pre>
   *
   * <code>repeated .spark.connect.ExecutePlanRequest.RequestOption request_options = 5;</code>
   */
  @java.lang.Override
  public org.apache.kyuubi.engine.spark.connect.grpc.proto.ExecutePlanRequest.RequestOptionOrBuilder
      getRequestOptionsOrBuilder(int index) {
    return requestOptions_.get(index);
  }

  public static final int TAGS_FIELD_NUMBER = 7;
  private com.google.protobuf.LazyStringList tags_;
  /**
   *
   *
   * <pre>
   * Tags to tag the given execution with.
   * Tags cannot contain ',' character and cannot be empty strings.
   * Used by Interrupt with interrupt.tag.
   * </pre>
   *
   * <code>repeated string tags = 7;</code>
   *
   * @return A list containing the tags.
   */
  public com.google.protobuf.ProtocolStringList getTagsList() {
    return tags_;
  }
  /**
   *
   *
   * <pre>
   * Tags to tag the given execution with.
   * Tags cannot contain ',' character and cannot be empty strings.
   * Used by Interrupt with interrupt.tag.
   * </pre>
   *
   * <code>repeated string tags = 7;</code>
   *
   * @return The count of tags.
   */
  public int getTagsCount() {
    return tags_.size();
  }
  /**
   *
   *
   * <pre>
   * Tags to tag the given execution with.
   * Tags cannot contain ',' character and cannot be empty strings.
   * Used by Interrupt with interrupt.tag.
   * </pre>
   *
   * <code>repeated string tags = 7;</code>
   *
   * @param index The index of the element to return.
   * @return The tags at the given index.
   */
  public java.lang.String getTags(int index) {
    return tags_.get(index);
  }
  /**
   *
   *
   * <pre>
   * Tags to tag the given execution with.
   * Tags cannot contain ',' character and cannot be empty strings.
   * Used by Interrupt with interrupt.tag.
   * </pre>
   *
   * <code>repeated string tags = 7;</code>
   *
   * @param index The index of the value to return.
   * @return The bytes of the tags at the given index.
   */
  public com.google.protobuf.ByteString getTagsBytes(int index) {
    return tags_.getByteString(index);
  }

  private byte memoizedIsInitialized = -1;

  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(sessionId_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, sessionId_);
    }
    if (userContext_ != null) {
      output.writeMessage(2, getUserContext());
    }
    if (plan_ != null) {
      output.writeMessage(3, getPlan());
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 4, clientType_);
    }
    for (int i = 0; i < requestOptions_.size(); i++) {
      output.writeMessage(5, requestOptions_.get(i));
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 6, operationId_);
    }
    for (int i = 0; i < tags_.size(); i++) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 7, tags_.getRaw(i));
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      com.google.protobuf.GeneratedMessageV3.writeString(
          output, 8, clientObservedServerSideSessionId_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(sessionId_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, sessionId_);
    }
    if (userContext_ != null) {
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(2, getUserContext());
    }
    if (plan_ != null) {
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(3, getPlan());
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, clientType_);
    }
    for (int i = 0; i < requestOptions_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(5, requestOptions_.get(i));
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, operationId_);
    }
    {
      int dataSize = 0;
      for (int i = 0; i < tags_.size(); i++) {
        dataSize += computeStringSizeNoTag(tags_.getRaw(i));
      }
      size += dataSize;
      size += 1 * getTagsList().size();
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      size +=
          com.google.protobuf.GeneratedMessageV3.computeStringSize(
              8, clientObservedServerSideSessionId_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
      return true;
    }
    if (!(obj instanceof org.apache.kyuubi.engine.spark.connect.grpc.proto.ExecutePlanRequest)) {
      return super.equals(obj);
    }
    org.apache.kyuubi.engine.spark.connect.grpc.proto.ExecutePlanRequest other =
        (org.apache.kyuubi.engine.spark.connect.grpc.proto.ExecutePlanRequest) obj;

    if (!getSessionId().equals(other.getSessionId())) return false;
    if (hasClientObservedServerSideSessionId() != other.hasClientObservedServerSideSessionId())
      return false;
    if (hasClientObservedServerSideSessionId()) {
      if (!getClientObservedServerSideSessionId()
          .equals(other.getClientObservedServerSideSessionId())) return false;
    }
    if (hasUserContext() != other.hasUserContext()) return false;
    if (hasUserContext()) {
      if (!getUserContext().equals(other.getUserContext())) return false;
    }
    if (hasOperationId() != other.hasOperationId()) return false;
    if (hasOperationId()) {
      if (!getOperationId().equals(other.getOperationId())) return false;
    }
    if (hasPlan() != other.hasPlan()) return false;
    if (hasPlan()) {
      if (!getPlan().equals(other.getPlan())) return false;
    }
    if (hasClientType() != other.hasClientType()) return false;
    if (hasClientType()) {
      if (!getClientType().equals(other.getClientType())) return false;
    }
    if (!getRequestOptionsList().equals(other.getRequestOptionsList())) return false;
    if (!getTagsList().equals(other.getTagsList())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + SESSION_ID_FIELD_NUMBER;
    hash = (53 * hash) + getSessionId().hashCode();
    if (hasClientObservedServerSideSessionId()) {
      hash = (37 * hash) + CLIENT_OBSERVED_SERVER_SIDE_SESSION_ID_FIELD_NUMBER;
      hash = (53 * hash) + getClientObservedServerSideSessionId().hashCode();
    }
    if (hasUserContext()) {
      hash = (37 * hash) + USER_CONTEXT_FIELD_NUMBER;
      hash = (53 * hash) + getUserContext().hashCode();
    }
    if (hasOperationId()) {
      hash = (37 * hash) + OPERATION_ID_FIELD_NUMBER;
      hash = (53 * hash) + getOperationId().hashCode();
    }
    if (hasPlan()) {
      hash = (37 * hash) + PLAN_FIELD_NUMBER;
      hash = (53 * hash) + getPlan().hashCode();
    }
    if (hasClientType()) {
      hash = (37 * hash) + CLIENT_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getClientType().hashCode();
    }
    if (getRequestOptionsCount() > 0) {
      hash = (37 * hash) + REQUEST_OPTIONS_FIELD_NUMBER;
      hash = (53 * hash) + getRequestOptionsList().hashCode();
    }
    if (getTagsCount() > 0) {
      hash = (37 * hash) + TAGS_FIELD_NUMBER;
      hash = (53 * hash) + getTagsList().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static org.apache.kyuubi.engine.spark.connect.grpc.proto.ExecutePlanRequest parseFrom(
      java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static org.apache.kyuubi.engine.spark.connect.grpc.proto.ExecutePlanRequest parseFrom(
      java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static org.apache.kyuubi.engine.spark.connect.grpc.proto.ExecutePlanRequest parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static org.apache.kyuubi.engine.spark.connect.grpc.proto.ExecutePlanRequest parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static org.apache.kyuubi.engine.spark.connect.grpc.proto.ExecutePlanRequest parseFrom(
      byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static org.apache.kyuubi.engine.spark.connect.grpc.proto.ExecutePlanRequest parseFrom(
      byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static org.apache.kyuubi.engine.spark.connect.grpc.proto.ExecutePlanRequest parseFrom(
      java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static org.apache.kyuubi.engine.spark.connect.grpc.proto.ExecutePlanRequest parseFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static org.apache.kyuubi.engine.spark.connect.grpc.proto.ExecutePlanRequest
      parseDelimitedFrom(java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
  }

  public static org.apache.kyuubi.engine.spark.connect.grpc.proto.ExecutePlanRequest
      parseDelimitedFrom(
          java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static org.apache.kyuubi.engine.spark.connect.grpc.proto.ExecutePlanRequest parseFrom(
      com.google.protobuf.CodedInputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static org.apache.kyuubi.engine.spark.connect.grpc.proto.ExecutePlanRequest parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() {
    return newBuilder();
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }

  public static Builder newBuilder(
      org.apache.kyuubi.engine.spark.connect.grpc.proto.ExecutePlanRequest prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   *
   *
   * <pre>
   * A request to be executed by the service.
   * </pre>
   *
   * Protobuf type {@code spark.connect.ExecutePlanRequest}
   */
  public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
      implements
      // @@protoc_insertion_point(builder_implements:spark.connect.ExecutePlanRequest)
      org.apache.kyuubi.engine.spark.connect.grpc.proto.ExecutePlanRequestOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return org.apache.kyuubi.engine.spark.connect.grpc.proto.Base
          .internal_static_spark_connect_ExecutePlanRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.kyuubi.engine.spark.connect.grpc.proto.Base
          .internal_static_spark_connect_ExecutePlanRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.kyuubi.engine.spark.connect.grpc.proto.ExecutePlanRequest.class,
              org.apache.kyuubi.engine.spark.connect.grpc.proto.ExecutePlanRequest.Builder.class);
    }

    // Construct using
    // org.apache.kyuubi.engine.spark.connect.grpc.proto.ExecutePlanRequest.newBuilder()
    private Builder() {}

    private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
    }

    @java.lang.Override
    public Builder clear() {
      super.clear();
      sessionId_ = "";

      clientObservedServerSideSessionId_ = "";
      bitField0_ = (bitField0_ & ~0x00000001);
      if (userContextBuilder_ == null) {
        userContext_ = null;
      } else {
        userContext_ = null;
        userContextBuilder_ = null;
      }
      operationId_ = "";
      bitField0_ = (bitField0_ & ~0x00000002);
      if (planBuilder_ == null) {
        plan_ = null;
      } else {
        plan_ = null;
        planBuilder_ = null;
      }
      clientType_ = "";
      bitField0_ = (bitField0_ & ~0x00000004);
      if (requestOptionsBuilder_ == null) {
        requestOptions_ = java.util.Collections.emptyList();
      } else {
        requestOptions_ = null;
        requestOptionsBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000008);
      tags_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000010);
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
      return org.apache.kyuubi.engine.spark.connect.grpc.proto.Base
          .internal_static_spark_connect_ExecutePlanRequest_descriptor;
    }

    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.grpc.proto.ExecutePlanRequest
        getDefaultInstanceForType() {
      return org.apache.kyuubi.engine.spark.connect.grpc.proto.ExecutePlanRequest
          .getDefaultInstance();
    }

    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.grpc.proto.ExecutePlanRequest build() {
      org.apache.kyuubi.engine.spark.connect.grpc.proto.ExecutePlanRequest result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.grpc.proto.ExecutePlanRequest buildPartial() {
      org.apache.kyuubi.engine.spark.connect.grpc.proto.ExecutePlanRequest result =
          new org.apache.kyuubi.engine.spark.connect.grpc.proto.ExecutePlanRequest(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      result.sessionId_ = sessionId_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        to_bitField0_ |= 0x00000001;
      }
      result.clientObservedServerSideSessionId_ = clientObservedServerSideSessionId_;
      if (userContextBuilder_ == null) {
        result.userContext_ = userContext_;
      } else {
        result.userContext_ = userContextBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        to_bitField0_ |= 0x00000002;
      }
      result.operationId_ = operationId_;
      if (planBuilder_ == null) {
        result.plan_ = plan_;
      } else {
        result.plan_ = planBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        to_bitField0_ |= 0x00000004;
      }
      result.clientType_ = clientType_;
      if (requestOptionsBuilder_ == null) {
        if (((bitField0_ & 0x00000008) != 0)) {
          requestOptions_ = java.util.Collections.unmodifiableList(requestOptions_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.requestOptions_ = requestOptions_;
      } else {
        result.requestOptions_ = requestOptionsBuilder_.build();
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        tags_ = tags_.getUnmodifiableView();
        bitField0_ = (bitField0_ & ~0x00000010);
      }
      result.tags_ = tags_;
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }

    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.setField(field, value);
    }

    @java.lang.Override
    public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }

    @java.lang.Override
    public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }

    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }

    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof org.apache.kyuubi.engine.spark.connect.grpc.proto.ExecutePlanRequest) {
        return mergeFrom(
            (org.apache.kyuubi.engine.spark.connect.grpc.proto.ExecutePlanRequest) other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(
        org.apache.kyuubi.engine.spark.connect.grpc.proto.ExecutePlanRequest other) {
      if (other
          == org.apache.kyuubi.engine.spark.connect.grpc.proto.ExecutePlanRequest
              .getDefaultInstance()) return this;
      if (!other.getSessionId().isEmpty()) {
        sessionId_ = other.sessionId_;
        onChanged();
      }
      if (other.hasClientObservedServerSideSessionId()) {
        bitField0_ |= 0x00000001;
        clientObservedServerSideSessionId_ = other.clientObservedServerSideSessionId_;
        onChanged();
      }
      if (other.hasUserContext()) {
        mergeUserContext(other.getUserContext());
      }
      if (other.hasOperationId()) {
        bitField0_ |= 0x00000002;
        operationId_ = other.operationId_;
        onChanged();
      }
      if (other.hasPlan()) {
        mergePlan(other.getPlan());
      }
      if (other.hasClientType()) {
        bitField0_ |= 0x00000004;
        clientType_ = other.clientType_;
        onChanged();
      }
      if (requestOptionsBuilder_ == null) {
        if (!other.requestOptions_.isEmpty()) {
          if (requestOptions_.isEmpty()) {
            requestOptions_ = other.requestOptions_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureRequestOptionsIsMutable();
            requestOptions_.addAll(other.requestOptions_);
          }
          onChanged();
        }
      } else {
        if (!other.requestOptions_.isEmpty()) {
          if (requestOptionsBuilder_.isEmpty()) {
            requestOptionsBuilder_.dispose();
            requestOptionsBuilder_ = null;
            requestOptions_ = other.requestOptions_;
            bitField0_ = (bitField0_ & ~0x00000008);
            requestOptionsBuilder_ =
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders
                    ? getRequestOptionsFieldBuilder()
                    : null;
          } else {
            requestOptionsBuilder_.addAllMessages(other.requestOptions_);
          }
        }
      }
      if (!other.tags_.isEmpty()) {
        if (tags_.isEmpty()) {
          tags_ = other.tags_;
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          ensureTagsIsMutable();
          tags_.addAll(other.tags_);
        }
        onChanged();
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10:
              {
                sessionId_ = input.readStringRequireUtf8();

                break;
              } // case 10
            case 18:
              {
                input.readMessage(getUserContextFieldBuilder().getBuilder(), extensionRegistry);

                break;
              } // case 18
            case 26:
              {
                input.readMessage(getPlanFieldBuilder().getBuilder(), extensionRegistry);

                break;
              } // case 26
            case 34:
              {
                clientType_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000004;
                break;
              } // case 34
            case 42:
              {
                org.apache.kyuubi.engine.spark.connect.grpc.proto.ExecutePlanRequest.RequestOption
                    m =
                        input.readMessage(
                            org.apache.kyuubi.engine.spark.connect.grpc.proto.ExecutePlanRequest
                                .RequestOption.parser(),
                            extensionRegistry);
                if (requestOptionsBuilder_ == null) {
                  ensureRequestOptionsIsMutable();
                  requestOptions_.add(m);
                } else {
                  requestOptionsBuilder_.addMessage(m);
                }
                break;
              } // case 42
            case 50:
              {
                operationId_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000002;
                break;
              } // case 50
            case 58:
              {
                java.lang.String s = input.readStringRequireUtf8();
                ensureTagsIsMutable();
                tags_.add(s);
                break;
              } // case 58
            case 66:
              {
                clientObservedServerSideSessionId_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 66
            default:
              {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }

    private int bitField0_;

    private java.lang.Object sessionId_ = "";
    /**
     *
     *
     * <pre>
     * (Required)
     * The session_id specifies a spark session for a user id (which is specified
     * by user_context.user_id). The session_id is set by the client to be able to
     * collate streaming responses from different queries within the dedicated session.
     * The id should be an UUID string of the format `00112233-4455-6677-8899-aabbccddeeff`
     * </pre>
     *
     * <code>string session_id = 1;</code>
     *
     * @return The sessionId.
     */
    public java.lang.String getSessionId() {
      java.lang.Object ref = sessionId_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        sessionId_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * (Required)
     * The session_id specifies a spark session for a user id (which is specified
     * by user_context.user_id). The session_id is set by the client to be able to
     * collate streaming responses from different queries within the dedicated session.
     * The id should be an UUID string of the format `00112233-4455-6677-8899-aabbccddeeff`
     * </pre>
     *
     * <code>string session_id = 1;</code>
     *
     * @return The bytes for sessionId.
     */
    public com.google.protobuf.ByteString getSessionIdBytes() {
      java.lang.Object ref = sessionId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        sessionId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * (Required)
     * The session_id specifies a spark session for a user id (which is specified
     * by user_context.user_id). The session_id is set by the client to be able to
     * collate streaming responses from different queries within the dedicated session.
     * The id should be an UUID string of the format `00112233-4455-6677-8899-aabbccddeeff`
     * </pre>
     *
     * <code>string session_id = 1;</code>
     *
     * @param value The sessionId to set.
     * @return This builder for chaining.
     */
    public Builder setSessionId(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }

      sessionId_ = value;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * (Required)
     * The session_id specifies a spark session for a user id (which is specified
     * by user_context.user_id). The session_id is set by the client to be able to
     * collate streaming responses from different queries within the dedicated session.
     * The id should be an UUID string of the format `00112233-4455-6677-8899-aabbccddeeff`
     * </pre>
     *
     * <code>string session_id = 1;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearSessionId() {

      sessionId_ = getDefaultInstance().getSessionId();
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * (Required)
     * The session_id specifies a spark session for a user id (which is specified
     * by user_context.user_id). The session_id is set by the client to be able to
     * collate streaming responses from different queries within the dedicated session.
     * The id should be an UUID string of the format `00112233-4455-6677-8899-aabbccddeeff`
     * </pre>
     *
     * <code>string session_id = 1;</code>
     *
     * @param value The bytes for sessionId to set.
     * @return This builder for chaining.
     */
    public Builder setSessionIdBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);

      sessionId_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object clientObservedServerSideSessionId_ = "";
    /**
     *
     *
     * <pre>
     * (Optional)
     * Server-side generated idempotency key from the previous responses (if any). Server
     * can use this to validate that the server side session has not changed.
     * </pre>
     *
     * <code>optional string client_observed_server_side_session_id = 8;</code>
     *
     * @return Whether the clientObservedServerSideSessionId field is set.
     */
    public boolean hasClientObservedServerSideSessionId() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     *
     *
     * <pre>
     * (Optional)
     * Server-side generated idempotency key from the previous responses (if any). Server
     * can use this to validate that the server side session has not changed.
     * </pre>
     *
     * <code>optional string client_observed_server_side_session_id = 8;</code>
     *
     * @return The clientObservedServerSideSessionId.
     */
    public java.lang.String getClientObservedServerSideSessionId() {
      java.lang.Object ref = clientObservedServerSideSessionId_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        clientObservedServerSideSessionId_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * (Optional)
     * Server-side generated idempotency key from the previous responses (if any). Server
     * can use this to validate that the server side session has not changed.
     * </pre>
     *
     * <code>optional string client_observed_server_side_session_id = 8;</code>
     *
     * @return The bytes for clientObservedServerSideSessionId.
     */
    public com.google.protobuf.ByteString getClientObservedServerSideSessionIdBytes() {
      java.lang.Object ref = clientObservedServerSideSessionId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        clientObservedServerSideSessionId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * (Optional)
     * Server-side generated idempotency key from the previous responses (if any). Server
     * can use this to validate that the server side session has not changed.
     * </pre>
     *
     * <code>optional string client_observed_server_side_session_id = 8;</code>
     *
     * @param value The clientObservedServerSideSessionId to set.
     * @return This builder for chaining.
     */
    public Builder setClientObservedServerSideSessionId(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000001;
      clientObservedServerSideSessionId_ = value;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * (Optional)
     * Server-side generated idempotency key from the previous responses (if any). Server
     * can use this to validate that the server side session has not changed.
     * </pre>
     *
     * <code>optional string client_observed_server_side_session_id = 8;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearClientObservedServerSideSessionId() {
      bitField0_ = (bitField0_ & ~0x00000001);
      clientObservedServerSideSessionId_ =
          getDefaultInstance().getClientObservedServerSideSessionId();
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * (Optional)
     * Server-side generated idempotency key from the previous responses (if any). Server
     * can use this to validate that the server side session has not changed.
     * </pre>
     *
     * <code>optional string client_observed_server_side_session_id = 8;</code>
     *
     * @param value The bytes for clientObservedServerSideSessionId to set.
     * @return This builder for chaining.
     */
    public Builder setClientObservedServerSideSessionIdBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);
      bitField0_ |= 0x00000001;
      clientObservedServerSideSessionId_ = value;
      onChanged();
      return this;
    }

    private org.apache.kyuubi.engine.spark.connect.grpc.proto.UserContext userContext_;
    private com.google.protobuf.SingleFieldBuilderV3<
            org.apache.kyuubi.engine.spark.connect.grpc.proto.UserContext,
            org.apache.kyuubi.engine.spark.connect.grpc.proto.UserContext.Builder,
            org.apache.kyuubi.engine.spark.connect.grpc.proto.UserContextOrBuilder>
        userContextBuilder_;
    /**
     *
     *
     * <pre>
     * (Required) User context
     * user_context.user_id and session+id both identify a unique remote spark session on the
     * server side.
     * </pre>
     *
     * <code>.spark.connect.UserContext user_context = 2;</code>
     *
     * @return Whether the userContext field is set.
     */
    public boolean hasUserContext() {
      return userContextBuilder_ != null || userContext_ != null;
    }
    /**
     *
     *
     * <pre>
     * (Required) User context
     * user_context.user_id and session+id both identify a unique remote spark session on the
     * server side.
     * </pre>
     *
     * <code>.spark.connect.UserContext user_context = 2;</code>
     *
     * @return The userContext.
     */
    public org.apache.kyuubi.engine.spark.connect.grpc.proto.UserContext getUserContext() {
      if (userContextBuilder_ == null) {
        return userContext_ == null
            ? org.apache.kyuubi.engine.spark.connect.grpc.proto.UserContext.getDefaultInstance()
            : userContext_;
      } else {
        return userContextBuilder_.getMessage();
      }
    }
    /**
     *
     *
     * <pre>
     * (Required) User context
     * user_context.user_id and session+id both identify a unique remote spark session on the
     * server side.
     * </pre>
     *
     * <code>.spark.connect.UserContext user_context = 2;</code>
     */
    public Builder setUserContext(
        org.apache.kyuubi.engine.spark.connect.grpc.proto.UserContext value) {
      if (userContextBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        userContext_ = value;
        onChanged();
      } else {
        userContextBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     *
     *
     * <pre>
     * (Required) User context
     * user_context.user_id and session+id both identify a unique remote spark session on the
     * server side.
     * </pre>
     *
     * <code>.spark.connect.UserContext user_context = 2;</code>
     */
    public Builder setUserContext(
        org.apache.kyuubi.engine.spark.connect.grpc.proto.UserContext.Builder builderForValue) {
      if (userContextBuilder_ == null) {
        userContext_ = builderForValue.build();
        onChanged();
      } else {
        userContextBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     *
     *
     * <pre>
     * (Required) User context
     * user_context.user_id and session+id both identify a unique remote spark session on the
     * server side.
     * </pre>
     *
     * <code>.spark.connect.UserContext user_context = 2;</code>
     */
    public Builder mergeUserContext(
        org.apache.kyuubi.engine.spark.connect.grpc.proto.UserContext value) {
      if (userContextBuilder_ == null) {
        if (userContext_ != null) {
          userContext_ =
              org.apache.kyuubi.engine.spark.connect.grpc.proto.UserContext.newBuilder(userContext_)
                  .mergeFrom(value)
                  .buildPartial();
        } else {
          userContext_ = value;
        }
        onChanged();
      } else {
        userContextBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     *
     *
     * <pre>
     * (Required) User context
     * user_context.user_id and session+id both identify a unique remote spark session on the
     * server side.
     * </pre>
     *
     * <code>.spark.connect.UserContext user_context = 2;</code>
     */
    public Builder clearUserContext() {
      if (userContextBuilder_ == null) {
        userContext_ = null;
        onChanged();
      } else {
        userContext_ = null;
        userContextBuilder_ = null;
      }

      return this;
    }
    /**
     *
     *
     * <pre>
     * (Required) User context
     * user_context.user_id and session+id both identify a unique remote spark session on the
     * server side.
     * </pre>
     *
     * <code>.spark.connect.UserContext user_context = 2;</code>
     */
    public org.apache.kyuubi.engine.spark.connect.grpc.proto.UserContext.Builder
        getUserContextBuilder() {

      onChanged();
      return getUserContextFieldBuilder().getBuilder();
    }
    /**
     *
     *
     * <pre>
     * (Required) User context
     * user_context.user_id and session+id both identify a unique remote spark session on the
     * server side.
     * </pre>
     *
     * <code>.spark.connect.UserContext user_context = 2;</code>
     */
    public org.apache.kyuubi.engine.spark.connect.grpc.proto.UserContextOrBuilder
        getUserContextOrBuilder() {
      if (userContextBuilder_ != null) {
        return userContextBuilder_.getMessageOrBuilder();
      } else {
        return userContext_ == null
            ? org.apache.kyuubi.engine.spark.connect.grpc.proto.UserContext.getDefaultInstance()
            : userContext_;
      }
    }
    /**
     *
     *
     * <pre>
     * (Required) User context
     * user_context.user_id and session+id both identify a unique remote spark session on the
     * server side.
     * </pre>
     *
     * <code>.spark.connect.UserContext user_context = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            org.apache.kyuubi.engine.spark.connect.grpc.proto.UserContext,
            org.apache.kyuubi.engine.spark.connect.grpc.proto.UserContext.Builder,
            org.apache.kyuubi.engine.spark.connect.grpc.proto.UserContextOrBuilder>
        getUserContextFieldBuilder() {
      if (userContextBuilder_ == null) {
        userContextBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                org.apache.kyuubi.engine.spark.connect.grpc.proto.UserContext,
                org.apache.kyuubi.engine.spark.connect.grpc.proto.UserContext.Builder,
                org.apache.kyuubi.engine.spark.connect.grpc.proto.UserContextOrBuilder>(
                getUserContext(), getParentForChildren(), isClean());
        userContext_ = null;
      }
      return userContextBuilder_;
    }

    private java.lang.Object operationId_ = "";
    /**
     *
     *
     * <pre>
     * (Optional)
     * Provide an id for this request. If not provided, it will be generated by the server.
     * It is returned in every ExecutePlanResponse.operation_id of the ExecutePlan response stream.
     * The id must be an UUID string of the format `00112233-4455-6677-8899-aabbccddeeff`
     * </pre>
     *
     * <code>optional string operation_id = 6;</code>
     *
     * @return Whether the operationId field is set.
     */
    public boolean hasOperationId() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     *
     *
     * <pre>
     * (Optional)
     * Provide an id for this request. If not provided, it will be generated by the server.
     * It is returned in every ExecutePlanResponse.operation_id of the ExecutePlan response stream.
     * The id must be an UUID string of the format `00112233-4455-6677-8899-aabbccddeeff`
     * </pre>
     *
     * <code>optional string operation_id = 6;</code>
     *
     * @return The operationId.
     */
    public java.lang.String getOperationId() {
      java.lang.Object ref = operationId_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        operationId_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * (Optional)
     * Provide an id for this request. If not provided, it will be generated by the server.
     * It is returned in every ExecutePlanResponse.operation_id of the ExecutePlan response stream.
     * The id must be an UUID string of the format `00112233-4455-6677-8899-aabbccddeeff`
     * </pre>
     *
     * <code>optional string operation_id = 6;</code>
     *
     * @return The bytes for operationId.
     */
    public com.google.protobuf.ByteString getOperationIdBytes() {
      java.lang.Object ref = operationId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        operationId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * (Optional)
     * Provide an id for this request. If not provided, it will be generated by the server.
     * It is returned in every ExecutePlanResponse.operation_id of the ExecutePlan response stream.
     * The id must be an UUID string of the format `00112233-4455-6677-8899-aabbccddeeff`
     * </pre>
     *
     * <code>optional string operation_id = 6;</code>
     *
     * @param value The operationId to set.
     * @return This builder for chaining.
     */
    public Builder setOperationId(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000002;
      operationId_ = value;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * (Optional)
     * Provide an id for this request. If not provided, it will be generated by the server.
     * It is returned in every ExecutePlanResponse.operation_id of the ExecutePlan response stream.
     * The id must be an UUID string of the format `00112233-4455-6677-8899-aabbccddeeff`
     * </pre>
     *
     * <code>optional string operation_id = 6;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearOperationId() {
      bitField0_ = (bitField0_ & ~0x00000002);
      operationId_ = getDefaultInstance().getOperationId();
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * (Optional)
     * Provide an id for this request. If not provided, it will be generated by the server.
     * It is returned in every ExecutePlanResponse.operation_id of the ExecutePlan response stream.
     * The id must be an UUID string of the format `00112233-4455-6677-8899-aabbccddeeff`
     * </pre>
     *
     * <code>optional string operation_id = 6;</code>
     *
     * @param value The bytes for operationId to set.
     * @return This builder for chaining.
     */
    public Builder setOperationIdBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);
      bitField0_ |= 0x00000002;
      operationId_ = value;
      onChanged();
      return this;
    }

    private org.apache.kyuubi.engine.spark.connect.grpc.proto.Plan plan_;
    private com.google.protobuf.SingleFieldBuilderV3<
            org.apache.kyuubi.engine.spark.connect.grpc.proto.Plan,
            org.apache.kyuubi.engine.spark.connect.grpc.proto.Plan.Builder,
            org.apache.kyuubi.engine.spark.connect.grpc.proto.PlanOrBuilder>
        planBuilder_;
    /**
     *
     *
     * <pre>
     * (Required) The logical plan to be executed / analyzed.
     * </pre>
     *
     * <code>.spark.connect.Plan plan = 3;</code>
     *
     * @return Whether the plan field is set.
     */
    public boolean hasPlan() {
      return planBuilder_ != null || plan_ != null;
    }
    /**
     *
     *
     * <pre>
     * (Required) The logical plan to be executed / analyzed.
     * </pre>
     *
     * <code>.spark.connect.Plan plan = 3;</code>
     *
     * @return The plan.
     */
    public org.apache.kyuubi.engine.spark.connect.grpc.proto.Plan getPlan() {
      if (planBuilder_ == null) {
        return plan_ == null
            ? org.apache.kyuubi.engine.spark.connect.grpc.proto.Plan.getDefaultInstance()
            : plan_;
      } else {
        return planBuilder_.getMessage();
      }
    }
    /**
     *
     *
     * <pre>
     * (Required) The logical plan to be executed / analyzed.
     * </pre>
     *
     * <code>.spark.connect.Plan plan = 3;</code>
     */
    public Builder setPlan(org.apache.kyuubi.engine.spark.connect.grpc.proto.Plan value) {
      if (planBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        plan_ = value;
        onChanged();
      } else {
        planBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     *
     *
     * <pre>
     * (Required) The logical plan to be executed / analyzed.
     * </pre>
     *
     * <code>.spark.connect.Plan plan = 3;</code>
     */
    public Builder setPlan(
        org.apache.kyuubi.engine.spark.connect.grpc.proto.Plan.Builder builderForValue) {
      if (planBuilder_ == null) {
        plan_ = builderForValue.build();
        onChanged();
      } else {
        planBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     *
     *
     * <pre>
     * (Required) The logical plan to be executed / analyzed.
     * </pre>
     *
     * <code>.spark.connect.Plan plan = 3;</code>
     */
    public Builder mergePlan(org.apache.kyuubi.engine.spark.connect.grpc.proto.Plan value) {
      if (planBuilder_ == null) {
        if (plan_ != null) {
          plan_ =
              org.apache.kyuubi.engine.spark.connect.grpc.proto.Plan.newBuilder(plan_)
                  .mergeFrom(value)
                  .buildPartial();
        } else {
          plan_ = value;
        }
        onChanged();
      } else {
        planBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     *
     *
     * <pre>
     * (Required) The logical plan to be executed / analyzed.
     * </pre>
     *
     * <code>.spark.connect.Plan plan = 3;</code>
     */
    public Builder clearPlan() {
      if (planBuilder_ == null) {
        plan_ = null;
        onChanged();
      } else {
        plan_ = null;
        planBuilder_ = null;
      }

      return this;
    }
    /**
     *
     *
     * <pre>
     * (Required) The logical plan to be executed / analyzed.
     * </pre>
     *
     * <code>.spark.connect.Plan plan = 3;</code>
     */
    public org.apache.kyuubi.engine.spark.connect.grpc.proto.Plan.Builder getPlanBuilder() {

      onChanged();
      return getPlanFieldBuilder().getBuilder();
    }
    /**
     *
     *
     * <pre>
     * (Required) The logical plan to be executed / analyzed.
     * </pre>
     *
     * <code>.spark.connect.Plan plan = 3;</code>
     */
    public org.apache.kyuubi.engine.spark.connect.grpc.proto.PlanOrBuilder getPlanOrBuilder() {
      if (planBuilder_ != null) {
        return planBuilder_.getMessageOrBuilder();
      } else {
        return plan_ == null
            ? org.apache.kyuubi.engine.spark.connect.grpc.proto.Plan.getDefaultInstance()
            : plan_;
      }
    }
    /**
     *
     *
     * <pre>
     * (Required) The logical plan to be executed / analyzed.
     * </pre>
     *
     * <code>.spark.connect.Plan plan = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            org.apache.kyuubi.engine.spark.connect.grpc.proto.Plan,
            org.apache.kyuubi.engine.spark.connect.grpc.proto.Plan.Builder,
            org.apache.kyuubi.engine.spark.connect.grpc.proto.PlanOrBuilder>
        getPlanFieldBuilder() {
      if (planBuilder_ == null) {
        planBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                org.apache.kyuubi.engine.spark.connect.grpc.proto.Plan,
                org.apache.kyuubi.engine.spark.connect.grpc.proto.Plan.Builder,
                org.apache.kyuubi.engine.spark.connect.grpc.proto.PlanOrBuilder>(
                getPlan(), getParentForChildren(), isClean());
        plan_ = null;
      }
      return planBuilder_;
    }

    private java.lang.Object clientType_ = "";
    /**
     *
     *
     * <pre>
     * Provides optional information about the client sending the request. This field
     * can be used for language or version specific information and is only intended for
     * logging purposes and will not be interpreted by the server.
     * </pre>
     *
     * <code>optional string client_type = 4;</code>
     *
     * @return Whether the clientType field is set.
     */
    public boolean hasClientType() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     *
     *
     * <pre>
     * Provides optional information about the client sending the request. This field
     * can be used for language or version specific information and is only intended for
     * logging purposes and will not be interpreted by the server.
     * </pre>
     *
     * <code>optional string client_type = 4;</code>
     *
     * @return The clientType.
     */
    public java.lang.String getClientType() {
      java.lang.Object ref = clientType_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        clientType_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Provides optional information about the client sending the request. This field
     * can be used for language or version specific information and is only intended for
     * logging purposes and will not be interpreted by the server.
     * </pre>
     *
     * <code>optional string client_type = 4;</code>
     *
     * @return The bytes for clientType.
     */
    public com.google.protobuf.ByteString getClientTypeBytes() {
      java.lang.Object ref = clientType_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        clientType_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Provides optional information about the client sending the request. This field
     * can be used for language or version specific information and is only intended for
     * logging purposes and will not be interpreted by the server.
     * </pre>
     *
     * <code>optional string client_type = 4;</code>
     *
     * @param value The clientType to set.
     * @return This builder for chaining.
     */
    public Builder setClientType(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000004;
      clientType_ = value;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Provides optional information about the client sending the request. This field
     * can be used for language or version specific information and is only intended for
     * logging purposes and will not be interpreted by the server.
     * </pre>
     *
     * <code>optional string client_type = 4;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearClientType() {
      bitField0_ = (bitField0_ & ~0x00000004);
      clientType_ = getDefaultInstance().getClientType();
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Provides optional information about the client sending the request. This field
     * can be used for language or version specific information and is only intended for
     * logging purposes and will not be interpreted by the server.
     * </pre>
     *
     * <code>optional string client_type = 4;</code>
     *
     * @param value The bytes for clientType to set.
     * @return This builder for chaining.
     */
    public Builder setClientTypeBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);
      bitField0_ |= 0x00000004;
      clientType_ = value;
      onChanged();
      return this;
    }

    private java.util.List<
            org.apache.kyuubi.engine.spark.connect.grpc.proto.ExecutePlanRequest.RequestOption>
        requestOptions_ = java.util.Collections.emptyList();

    private void ensureRequestOptionsIsMutable() {
      if (!((bitField0_ & 0x00000008) != 0)) {
        requestOptions_ =
            new java.util.ArrayList<
                org.apache.kyuubi.engine.spark.connect.grpc.proto.ExecutePlanRequest.RequestOption>(
                requestOptions_);
        bitField0_ |= 0x00000008;
      }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
            org.apache.kyuubi.engine.spark.connect.grpc.proto.ExecutePlanRequest.RequestOption,
            org.apache.kyuubi.engine.spark.connect.grpc.proto.ExecutePlanRequest.RequestOption
                .Builder,
            org.apache.kyuubi.engine.spark.connect.grpc.proto.ExecutePlanRequest
                .RequestOptionOrBuilder>
        requestOptionsBuilder_;

    /**
     *
     *
     * <pre>
     * Repeated element for options that can be passed to the request. This element is currently
     * unused but allows to pass in an extension value used for arbitrary options.
     * </pre>
     *
     * <code>repeated .spark.connect.ExecutePlanRequest.RequestOption request_options = 5;</code>
     */
    public java.util.List<
            org.apache.kyuubi.engine.spark.connect.grpc.proto.ExecutePlanRequest.RequestOption>
        getRequestOptionsList() {
      if (requestOptionsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(requestOptions_);
      } else {
        return requestOptionsBuilder_.getMessageList();
      }
    }
    /**
     *
     *
     * <pre>
     * Repeated element for options that can be passed to the request. This element is currently
     * unused but allows to pass in an extension value used for arbitrary options.
     * </pre>
     *
     * <code>repeated .spark.connect.ExecutePlanRequest.RequestOption request_options = 5;</code>
     */
    public int getRequestOptionsCount() {
      if (requestOptionsBuilder_ == null) {
        return requestOptions_.size();
      } else {
        return requestOptionsBuilder_.getCount();
      }
    }
    /**
     *
     *
     * <pre>
     * Repeated element for options that can be passed to the request. This element is currently
     * unused but allows to pass in an extension value used for arbitrary options.
     * </pre>
     *
     * <code>repeated .spark.connect.ExecutePlanRequest.RequestOption request_options = 5;</code>
     */
    public org.apache.kyuubi.engine.spark.connect.grpc.proto.ExecutePlanRequest.RequestOption
        getRequestOptions(int index) {
      if (requestOptionsBuilder_ == null) {
        return requestOptions_.get(index);
      } else {
        return requestOptionsBuilder_.getMessage(index);
      }
    }
    /**
     *
     *
     * <pre>
     * Repeated element for options that can be passed to the request. This element is currently
     * unused but allows to pass in an extension value used for arbitrary options.
     * </pre>
     *
     * <code>repeated .spark.connect.ExecutePlanRequest.RequestOption request_options = 5;</code>
     */
    public Builder setRequestOptions(
        int index,
        org.apache.kyuubi.engine.spark.connect.grpc.proto.ExecutePlanRequest.RequestOption value) {
      if (requestOptionsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureRequestOptionsIsMutable();
        requestOptions_.set(index, value);
        onChanged();
      } else {
        requestOptionsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Repeated element for options that can be passed to the request. This element is currently
     * unused but allows to pass in an extension value used for arbitrary options.
     * </pre>
     *
     * <code>repeated .spark.connect.ExecutePlanRequest.RequestOption request_options = 5;</code>
     */
    public Builder setRequestOptions(
        int index,
        org.apache.kyuubi.engine.spark.connect.grpc.proto.ExecutePlanRequest.RequestOption.Builder
            builderForValue) {
      if (requestOptionsBuilder_ == null) {
        ensureRequestOptionsIsMutable();
        requestOptions_.set(index, builderForValue.build());
        onChanged();
      } else {
        requestOptionsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Repeated element for options that can be passed to the request. This element is currently
     * unused but allows to pass in an extension value used for arbitrary options.
     * </pre>
     *
     * <code>repeated .spark.connect.ExecutePlanRequest.RequestOption request_options = 5;</code>
     */
    public Builder addRequestOptions(
        org.apache.kyuubi.engine.spark.connect.grpc.proto.ExecutePlanRequest.RequestOption value) {
      if (requestOptionsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureRequestOptionsIsMutable();
        requestOptions_.add(value);
        onChanged();
      } else {
        requestOptionsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Repeated element for options that can be passed to the request. This element is currently
     * unused but allows to pass in an extension value used for arbitrary options.
     * </pre>
     *
     * <code>repeated .spark.connect.ExecutePlanRequest.RequestOption request_options = 5;</code>
     */
    public Builder addRequestOptions(
        int index,
        org.apache.kyuubi.engine.spark.connect.grpc.proto.ExecutePlanRequest.RequestOption value) {
      if (requestOptionsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureRequestOptionsIsMutable();
        requestOptions_.add(index, value);
        onChanged();
      } else {
        requestOptionsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Repeated element for options that can be passed to the request. This element is currently
     * unused but allows to pass in an extension value used for arbitrary options.
     * </pre>
     *
     * <code>repeated .spark.connect.ExecutePlanRequest.RequestOption request_options = 5;</code>
     */
    public Builder addRequestOptions(
        org.apache.kyuubi.engine.spark.connect.grpc.proto.ExecutePlanRequest.RequestOption.Builder
            builderForValue) {
      if (requestOptionsBuilder_ == null) {
        ensureRequestOptionsIsMutable();
        requestOptions_.add(builderForValue.build());
        onChanged();
      } else {
        requestOptionsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Repeated element for options that can be passed to the request. This element is currently
     * unused but allows to pass in an extension value used for arbitrary options.
     * </pre>
     *
     * <code>repeated .spark.connect.ExecutePlanRequest.RequestOption request_options = 5;</code>
     */
    public Builder addRequestOptions(
        int index,
        org.apache.kyuubi.engine.spark.connect.grpc.proto.ExecutePlanRequest.RequestOption.Builder
            builderForValue) {
      if (requestOptionsBuilder_ == null) {
        ensureRequestOptionsIsMutable();
        requestOptions_.add(index, builderForValue.build());
        onChanged();
      } else {
        requestOptionsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Repeated element for options that can be passed to the request. This element is currently
     * unused but allows to pass in an extension value used for arbitrary options.
     * </pre>
     *
     * <code>repeated .spark.connect.ExecutePlanRequest.RequestOption request_options = 5;</code>
     */
    public Builder addAllRequestOptions(
        java.lang.Iterable<
                ? extends
                    org.apache.kyuubi.engine.spark.connect.grpc.proto.ExecutePlanRequest
                        .RequestOption>
            values) {
      if (requestOptionsBuilder_ == null) {
        ensureRequestOptionsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(values, requestOptions_);
        onChanged();
      } else {
        requestOptionsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Repeated element for options that can be passed to the request. This element is currently
     * unused but allows to pass in an extension value used for arbitrary options.
     * </pre>
     *
     * <code>repeated .spark.connect.ExecutePlanRequest.RequestOption request_options = 5;</code>
     */
    public Builder clearRequestOptions() {
      if (requestOptionsBuilder_ == null) {
        requestOptions_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
      } else {
        requestOptionsBuilder_.clear();
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Repeated element for options that can be passed to the request. This element is currently
     * unused but allows to pass in an extension value used for arbitrary options.
     * </pre>
     *
     * <code>repeated .spark.connect.ExecutePlanRequest.RequestOption request_options = 5;</code>
     */
    public Builder removeRequestOptions(int index) {
      if (requestOptionsBuilder_ == null) {
        ensureRequestOptionsIsMutable();
        requestOptions_.remove(index);
        onChanged();
      } else {
        requestOptionsBuilder_.remove(index);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Repeated element for options that can be passed to the request. This element is currently
     * unused but allows to pass in an extension value used for arbitrary options.
     * </pre>
     *
     * <code>repeated .spark.connect.ExecutePlanRequest.RequestOption request_options = 5;</code>
     */
    public org.apache.kyuubi.engine.spark.connect.grpc.proto.ExecutePlanRequest.RequestOption
            .Builder
        getRequestOptionsBuilder(int index) {
      return getRequestOptionsFieldBuilder().getBuilder(index);
    }
    /**
     *
     *
     * <pre>
     * Repeated element for options that can be passed to the request. This element is currently
     * unused but allows to pass in an extension value used for arbitrary options.
     * </pre>
     *
     * <code>repeated .spark.connect.ExecutePlanRequest.RequestOption request_options = 5;</code>
     */
    public org.apache.kyuubi.engine.spark.connect.grpc.proto.ExecutePlanRequest
            .RequestOptionOrBuilder
        getRequestOptionsOrBuilder(int index) {
      if (requestOptionsBuilder_ == null) {
        return requestOptions_.get(index);
      } else {
        return requestOptionsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     *
     *
     * <pre>
     * Repeated element for options that can be passed to the request. This element is currently
     * unused but allows to pass in an extension value used for arbitrary options.
     * </pre>
     *
     * <code>repeated .spark.connect.ExecutePlanRequest.RequestOption request_options = 5;</code>
     */
    public java.util.List<
            ? extends
                org.apache.kyuubi.engine.spark.connect.grpc.proto.ExecutePlanRequest
                    .RequestOptionOrBuilder>
        getRequestOptionsOrBuilderList() {
      if (requestOptionsBuilder_ != null) {
        return requestOptionsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(requestOptions_);
      }
    }
    /**
     *
     *
     * <pre>
     * Repeated element for options that can be passed to the request. This element is currently
     * unused but allows to pass in an extension value used for arbitrary options.
     * </pre>
     *
     * <code>repeated .spark.connect.ExecutePlanRequest.RequestOption request_options = 5;</code>
     */
    public org.apache.kyuubi.engine.spark.connect.grpc.proto.ExecutePlanRequest.RequestOption
            .Builder
        addRequestOptionsBuilder() {
      return getRequestOptionsFieldBuilder()
          .addBuilder(
              org.apache.kyuubi.engine.spark.connect.grpc.proto.ExecutePlanRequest.RequestOption
                  .getDefaultInstance());
    }
    /**
     *
     *
     * <pre>
     * Repeated element for options that can be passed to the request. This element is currently
     * unused but allows to pass in an extension value used for arbitrary options.
     * </pre>
     *
     * <code>repeated .spark.connect.ExecutePlanRequest.RequestOption request_options = 5;</code>
     */
    public org.apache.kyuubi.engine.spark.connect.grpc.proto.ExecutePlanRequest.RequestOption
            .Builder
        addRequestOptionsBuilder(int index) {
      return getRequestOptionsFieldBuilder()
          .addBuilder(
              index,
              org.apache.kyuubi.engine.spark.connect.grpc.proto.ExecutePlanRequest.RequestOption
                  .getDefaultInstance());
    }
    /**
     *
     *
     * <pre>
     * Repeated element for options that can be passed to the request. This element is currently
     * unused but allows to pass in an extension value used for arbitrary options.
     * </pre>
     *
     * <code>repeated .spark.connect.ExecutePlanRequest.RequestOption request_options = 5;</code>
     */
    public java.util.List<
            org.apache.kyuubi.engine.spark.connect.grpc.proto.ExecutePlanRequest.RequestOption
                .Builder>
        getRequestOptionsBuilderList() {
      return getRequestOptionsFieldBuilder().getBuilderList();
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
            org.apache.kyuubi.engine.spark.connect.grpc.proto.ExecutePlanRequest.RequestOption,
            org.apache.kyuubi.engine.spark.connect.grpc.proto.ExecutePlanRequest.RequestOption
                .Builder,
            org.apache.kyuubi.engine.spark.connect.grpc.proto.ExecutePlanRequest
                .RequestOptionOrBuilder>
        getRequestOptionsFieldBuilder() {
      if (requestOptionsBuilder_ == null) {
        requestOptionsBuilder_ =
            new com.google.protobuf.RepeatedFieldBuilderV3<
                org.apache.kyuubi.engine.spark.connect.grpc.proto.ExecutePlanRequest.RequestOption,
                org.apache.kyuubi.engine.spark.connect.grpc.proto.ExecutePlanRequest.RequestOption
                    .Builder,
                org.apache.kyuubi.engine.spark.connect.grpc.proto.ExecutePlanRequest
                    .RequestOptionOrBuilder>(
                requestOptions_,
                ((bitField0_ & 0x00000008) != 0),
                getParentForChildren(),
                isClean());
        requestOptions_ = null;
      }
      return requestOptionsBuilder_;
    }

    private com.google.protobuf.LazyStringList tags_ =
        com.google.protobuf.LazyStringArrayList.EMPTY;

    private void ensureTagsIsMutable() {
      if (!((bitField0_ & 0x00000010) != 0)) {
        tags_ = new com.google.protobuf.LazyStringArrayList(tags_);
        bitField0_ |= 0x00000010;
      }
    }
    /**
     *
     *
     * <pre>
     * Tags to tag the given execution with.
     * Tags cannot contain ',' character and cannot be empty strings.
     * Used by Interrupt with interrupt.tag.
     * </pre>
     *
     * <code>repeated string tags = 7;</code>
     *
     * @return A list containing the tags.
     */
    public com.google.protobuf.ProtocolStringList getTagsList() {
      return tags_.getUnmodifiableView();
    }
    /**
     *
     *
     * <pre>
     * Tags to tag the given execution with.
     * Tags cannot contain ',' character and cannot be empty strings.
     * Used by Interrupt with interrupt.tag.
     * </pre>
     *
     * <code>repeated string tags = 7;</code>
     *
     * @return The count of tags.
     */
    public int getTagsCount() {
      return tags_.size();
    }
    /**
     *
     *
     * <pre>
     * Tags to tag the given execution with.
     * Tags cannot contain ',' character and cannot be empty strings.
     * Used by Interrupt with interrupt.tag.
     * </pre>
     *
     * <code>repeated string tags = 7;</code>
     *
     * @param index The index of the element to return.
     * @return The tags at the given index.
     */
    public java.lang.String getTags(int index) {
      return tags_.get(index);
    }
    /**
     *
     *
     * <pre>
     * Tags to tag the given execution with.
     * Tags cannot contain ',' character and cannot be empty strings.
     * Used by Interrupt with interrupt.tag.
     * </pre>
     *
     * <code>repeated string tags = 7;</code>
     *
     * @param index The index of the value to return.
     * @return The bytes of the tags at the given index.
     */
    public com.google.protobuf.ByteString getTagsBytes(int index) {
      return tags_.getByteString(index);
    }
    /**
     *
     *
     * <pre>
     * Tags to tag the given execution with.
     * Tags cannot contain ',' character and cannot be empty strings.
     * Used by Interrupt with interrupt.tag.
     * </pre>
     *
     * <code>repeated string tags = 7;</code>
     *
     * @param index The index to set the value at.
     * @param value The tags to set.
     * @return This builder for chaining.
     */
    public Builder setTags(int index, java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureTagsIsMutable();
      tags_.set(index, value);
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Tags to tag the given execution with.
     * Tags cannot contain ',' character and cannot be empty strings.
     * Used by Interrupt with interrupt.tag.
     * </pre>
     *
     * <code>repeated string tags = 7;</code>
     *
     * @param value The tags to add.
     * @return This builder for chaining.
     */
    public Builder addTags(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureTagsIsMutable();
      tags_.add(value);
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Tags to tag the given execution with.
     * Tags cannot contain ',' character and cannot be empty strings.
     * Used by Interrupt with interrupt.tag.
     * </pre>
     *
     * <code>repeated string tags = 7;</code>
     *
     * @param values The tags to add.
     * @return This builder for chaining.
     */
    public Builder addAllTags(java.lang.Iterable<java.lang.String> values) {
      ensureTagsIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(values, tags_);
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Tags to tag the given execution with.
     * Tags cannot contain ',' character and cannot be empty strings.
     * Used by Interrupt with interrupt.tag.
     * </pre>
     *
     * <code>repeated string tags = 7;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearTags() {
      tags_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000010);
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Tags to tag the given execution with.
     * Tags cannot contain ',' character and cannot be empty strings.
     * Used by Interrupt with interrupt.tag.
     * </pre>
     *
     * <code>repeated string tags = 7;</code>
     *
     * @param value The bytes of the tags to add.
     * @return This builder for chaining.
     */
    public Builder addTagsBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);
      ensureTagsIsMutable();
      tags_.add(value);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final Builder setUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }

    // @@protoc_insertion_point(builder_scope:spark.connect.ExecutePlanRequest)
  }

  // @@protoc_insertion_point(class_scope:spark.connect.ExecutePlanRequest)
  private static final org.apache.kyuubi.engine.spark.connect.grpc.proto.ExecutePlanRequest
      DEFAULT_INSTANCE;

  static {
    DEFAULT_INSTANCE = new org.apache.kyuubi.engine.spark.connect.grpc.proto.ExecutePlanRequest();
  }

  public static org.apache.kyuubi.engine.spark.connect.grpc.proto.ExecutePlanRequest
      getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<ExecutePlanRequest> PARSER =
      new com.google.protobuf.AbstractParser<ExecutePlanRequest>() {
        @java.lang.Override
        public ExecutePlanRequest parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

  public static com.google.protobuf.Parser<ExecutePlanRequest> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<ExecutePlanRequest> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public org.apache.kyuubi.engine.spark.connect.grpc.proto.ExecutePlanRequest
      getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }
}
