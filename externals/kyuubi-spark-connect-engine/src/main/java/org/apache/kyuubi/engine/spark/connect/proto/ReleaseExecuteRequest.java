// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: spark/connect/base.proto

package org.apache.kyuubi.engine.spark.connect.proto;

/**
 * Protobuf type {@code spark.connect.ReleaseExecuteRequest}
 */
public final class ReleaseExecuteRequest extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:spark.connect.ReleaseExecuteRequest)
    ReleaseExecuteRequestOrBuilder {
private static final long serialVersionUID = 0L;
  // Use ReleaseExecuteRequest.newBuilder() to construct.
  private ReleaseExecuteRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private ReleaseExecuteRequest() {
    sessionId_ = "";
    operationId_ = "";
    clientType_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new ReleaseExecuteRequest();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return org.apache.kyuubi.engine.spark.connect.proto.Base.internal_static_spark_connect_ReleaseExecuteRequest_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return org.apache.kyuubi.engine.spark.connect.proto.Base.internal_static_spark_connect_ReleaseExecuteRequest_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest.class, org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest.Builder.class);
  }

  public interface ReleaseAllOrBuilder extends
      // @@protoc_insertion_point(interface_extends:spark.connect.ReleaseExecuteRequest.ReleaseAll)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * <pre>
   * Release and close operation completely.
   * This will also interrupt the query if it is running execution, and wait for it to be torn down.
   * </pre>
   *
   * Protobuf type {@code spark.connect.ReleaseExecuteRequest.ReleaseAll}
   */
  public static final class ReleaseAll extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:spark.connect.ReleaseExecuteRequest.ReleaseAll)
      ReleaseAllOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ReleaseAll.newBuilder() to construct.
    private ReleaseAll(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ReleaseAll() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ReleaseAll();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.kyuubi.engine.spark.connect.proto.Base.internal_static_spark_connect_ReleaseExecuteRequest_ReleaseAll_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.kyuubi.engine.spark.connect.proto.Base.internal_static_spark_connect_ReleaseExecuteRequest_ReleaseAll_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest.ReleaseAll.class, org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest.ReleaseAll.Builder.class);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest.ReleaseAll)) {
        return super.equals(obj);
      }
      org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest.ReleaseAll other = (org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest.ReleaseAll) obj;

      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest.ReleaseAll parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest.ReleaseAll parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest.ReleaseAll parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest.ReleaseAll parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest.ReleaseAll parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest.ReleaseAll parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest.ReleaseAll parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest.ReleaseAll parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest.ReleaseAll parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest.ReleaseAll parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest.ReleaseAll parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest.ReleaseAll parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest.ReleaseAll prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Release and close operation completely.
     * This will also interrupt the query if it is running execution, and wait for it to be torn down.
     * </pre>
     *
     * Protobuf type {@code spark.connect.ReleaseExecuteRequest.ReleaseAll}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:spark.connect.ReleaseExecuteRequest.ReleaseAll)
        org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest.ReleaseAllOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.kyuubi.engine.spark.connect.proto.Base.internal_static_spark_connect_ReleaseExecuteRequest_ReleaseAll_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.kyuubi.engine.spark.connect.proto.Base.internal_static_spark_connect_ReleaseExecuteRequest_ReleaseAll_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest.ReleaseAll.class, org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest.ReleaseAll.Builder.class);
      }

      // Construct using org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest.ReleaseAll.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.kyuubi.engine.spark.connect.proto.Base.internal_static_spark_connect_ReleaseExecuteRequest_ReleaseAll_descriptor;
      }

      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest.ReleaseAll getDefaultInstanceForType() {
        return org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest.ReleaseAll.getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest.ReleaseAll build() {
        org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest.ReleaseAll result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest.ReleaseAll buildPartial() {
        org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest.ReleaseAll result = new org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest.ReleaseAll(this);
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest.ReleaseAll) {
          return mergeFrom((org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest.ReleaseAll)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest.ReleaseAll other) {
        if (other == org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest.ReleaseAll.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:spark.connect.ReleaseExecuteRequest.ReleaseAll)
    }

    // @@protoc_insertion_point(class_scope:spark.connect.ReleaseExecuteRequest.ReleaseAll)
    private static final org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest.ReleaseAll DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest.ReleaseAll();
    }

    public static org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest.ReleaseAll getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ReleaseAll>
        PARSER = new com.google.protobuf.AbstractParser<ReleaseAll>() {
      @java.lang.Override
      public ReleaseAll parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<ReleaseAll> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ReleaseAll> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest.ReleaseAll getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ReleaseUntilOrBuilder extends
      // @@protoc_insertion_point(interface_extends:spark.connect.ReleaseExecuteRequest.ReleaseUntil)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string response_id = 1;</code>
     * @return The responseId.
     */
    java.lang.String getResponseId();
    /**
     * <code>string response_id = 1;</code>
     * @return The bytes for responseId.
     */
    com.google.protobuf.ByteString
        getResponseIdBytes();
  }
  /**
   * <pre>
   * Release all responses from the operation response stream up to and including
   * the response with the given by response_id.
   * While server determines by itself how much of a buffer of responses to keep, client providing
   * explicit release calls will help reduce resource consumption.
   * Noop if response_id not found in cached responses.
   * </pre>
   *
   * Protobuf type {@code spark.connect.ReleaseExecuteRequest.ReleaseUntil}
   */
  public static final class ReleaseUntil extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:spark.connect.ReleaseExecuteRequest.ReleaseUntil)
      ReleaseUntilOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ReleaseUntil.newBuilder() to construct.
    private ReleaseUntil(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ReleaseUntil() {
      responseId_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ReleaseUntil();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.kyuubi.engine.spark.connect.proto.Base.internal_static_spark_connect_ReleaseExecuteRequest_ReleaseUntil_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.kyuubi.engine.spark.connect.proto.Base.internal_static_spark_connect_ReleaseExecuteRequest_ReleaseUntil_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest.ReleaseUntil.class, org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest.ReleaseUntil.Builder.class);
    }

    public static final int RESPONSE_ID_FIELD_NUMBER = 1;
    private volatile java.lang.Object responseId_;
    /**
     * <code>string response_id = 1;</code>
     * @return The responseId.
     */
    @java.lang.Override
    public java.lang.String getResponseId() {
      java.lang.Object ref = responseId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        responseId_ = s;
        return s;
      }
    }
    /**
     * <code>string response_id = 1;</code>
     * @return The bytes for responseId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getResponseIdBytes() {
      java.lang.Object ref = responseId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        responseId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(responseId_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, responseId_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(responseId_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, responseId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest.ReleaseUntil)) {
        return super.equals(obj);
      }
      org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest.ReleaseUntil other = (org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest.ReleaseUntil) obj;

      if (!getResponseId()
          .equals(other.getResponseId())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + RESPONSE_ID_FIELD_NUMBER;
      hash = (53 * hash) + getResponseId().hashCode();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest.ReleaseUntil parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest.ReleaseUntil parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest.ReleaseUntil parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest.ReleaseUntil parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest.ReleaseUntil parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest.ReleaseUntil parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest.ReleaseUntil parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest.ReleaseUntil parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest.ReleaseUntil parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest.ReleaseUntil parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest.ReleaseUntil parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest.ReleaseUntil parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest.ReleaseUntil prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Release all responses from the operation response stream up to and including
     * the response with the given by response_id.
     * While server determines by itself how much of a buffer of responses to keep, client providing
     * explicit release calls will help reduce resource consumption.
     * Noop if response_id not found in cached responses.
     * </pre>
     *
     * Protobuf type {@code spark.connect.ReleaseExecuteRequest.ReleaseUntil}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:spark.connect.ReleaseExecuteRequest.ReleaseUntil)
        org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest.ReleaseUntilOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.kyuubi.engine.spark.connect.proto.Base.internal_static_spark_connect_ReleaseExecuteRequest_ReleaseUntil_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.kyuubi.engine.spark.connect.proto.Base.internal_static_spark_connect_ReleaseExecuteRequest_ReleaseUntil_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest.ReleaseUntil.class, org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest.ReleaseUntil.Builder.class);
      }

      // Construct using org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest.ReleaseUntil.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        responseId_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.kyuubi.engine.spark.connect.proto.Base.internal_static_spark_connect_ReleaseExecuteRequest_ReleaseUntil_descriptor;
      }

      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest.ReleaseUntil getDefaultInstanceForType() {
        return org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest.ReleaseUntil.getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest.ReleaseUntil build() {
        org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest.ReleaseUntil result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest.ReleaseUntil buildPartial() {
        org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest.ReleaseUntil result = new org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest.ReleaseUntil(this);
        result.responseId_ = responseId_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest.ReleaseUntil) {
          return mergeFrom((org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest.ReleaseUntil)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest.ReleaseUntil other) {
        if (other == org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest.ReleaseUntil.getDefaultInstance()) return this;
        if (!other.getResponseId().isEmpty()) {
          responseId_ = other.responseId_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                responseId_ = input.readStringRequireUtf8();

                break;
              } // case 10
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }

      private java.lang.Object responseId_ = "";
      /**
       * <code>string response_id = 1;</code>
       * @return The responseId.
       */
      public java.lang.String getResponseId() {
        java.lang.Object ref = responseId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          responseId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string response_id = 1;</code>
       * @return The bytes for responseId.
       */
      public com.google.protobuf.ByteString
          getResponseIdBytes() {
        java.lang.Object ref = responseId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          responseId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string response_id = 1;</code>
       * @param value The responseId to set.
       * @return This builder for chaining.
       */
      public Builder setResponseId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        responseId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string response_id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearResponseId() {
        
        responseId_ = getDefaultInstance().getResponseId();
        onChanged();
        return this;
      }
      /**
       * <code>string response_id = 1;</code>
       * @param value The bytes for responseId to set.
       * @return This builder for chaining.
       */
      public Builder setResponseIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        responseId_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:spark.connect.ReleaseExecuteRequest.ReleaseUntil)
    }

    // @@protoc_insertion_point(class_scope:spark.connect.ReleaseExecuteRequest.ReleaseUntil)
    private static final org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest.ReleaseUntil DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest.ReleaseUntil();
    }

    public static org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest.ReleaseUntil getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ReleaseUntil>
        PARSER = new com.google.protobuf.AbstractParser<ReleaseUntil>() {
      @java.lang.Override
      public ReleaseUntil parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<ReleaseUntil> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ReleaseUntil> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest.ReleaseUntil getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private int bitField0_;
  private int releaseCase_ = 0;
  private java.lang.Object release_;
  public enum ReleaseCase
      implements com.google.protobuf.Internal.EnumLite,
          com.google.protobuf.AbstractMessage.InternalOneOfEnum {
    RELEASE_ALL(5),
    RELEASE_UNTIL(6),
    RELEASE_NOT_SET(0);
    private final int value;
    private ReleaseCase(int value) {
      this.value = value;
    }
    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ReleaseCase valueOf(int value) {
      return forNumber(value);
    }

    public static ReleaseCase forNumber(int value) {
      switch (value) {
        case 5: return RELEASE_ALL;
        case 6: return RELEASE_UNTIL;
        case 0: return RELEASE_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public ReleaseCase
  getReleaseCase() {
    return ReleaseCase.forNumber(
        releaseCase_);
  }

  public static final int SESSION_ID_FIELD_NUMBER = 1;
  private volatile java.lang.Object sessionId_;
  /**
   * <pre>
   * (Required)
   * The session_id of the request to reattach to.
   * This must be an id of existing session.
   * </pre>
   *
   * <code>string session_id = 1;</code>
   * @return The sessionId.
   */
  @java.lang.Override
  public java.lang.String getSessionId() {
    java.lang.Object ref = sessionId_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      sessionId_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * (Required)
   * The session_id of the request to reattach to.
   * This must be an id of existing session.
   * </pre>
   *
   * <code>string session_id = 1;</code>
   * @return The bytes for sessionId.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getSessionIdBytes() {
    java.lang.Object ref = sessionId_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      sessionId_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int USER_CONTEXT_FIELD_NUMBER = 2;
  private org.apache.kyuubi.engine.spark.connect.proto.UserContext userContext_;
  /**
   * <pre>
   * (Required) User context
   * user_context.user_id and session+id both identify a unique remote spark session on the
   * server side.
   * </pre>
   *
   * <code>.spark.connect.UserContext user_context = 2;</code>
   * @return Whether the userContext field is set.
   */
  @java.lang.Override
  public boolean hasUserContext() {
    return userContext_ != null;
  }
  /**
   * <pre>
   * (Required) User context
   * user_context.user_id and session+id both identify a unique remote spark session on the
   * server side.
   * </pre>
   *
   * <code>.spark.connect.UserContext user_context = 2;</code>
   * @return The userContext.
   */
  @java.lang.Override
  public org.apache.kyuubi.engine.spark.connect.proto.UserContext getUserContext() {
    return userContext_ == null ? org.apache.kyuubi.engine.spark.connect.proto.UserContext.getDefaultInstance() : userContext_;
  }
  /**
   * <pre>
   * (Required) User context
   * user_context.user_id and session+id both identify a unique remote spark session on the
   * server side.
   * </pre>
   *
   * <code>.spark.connect.UserContext user_context = 2;</code>
   */
  @java.lang.Override
  public org.apache.kyuubi.engine.spark.connect.proto.UserContextOrBuilder getUserContextOrBuilder() {
    return getUserContext();
  }

  public static final int OPERATION_ID_FIELD_NUMBER = 3;
  private volatile java.lang.Object operationId_;
  /**
   * <pre>
   * (Required)
   * Provide an id of the request to reattach to.
   * This must be an id of existing operation.
   * </pre>
   *
   * <code>string operation_id = 3;</code>
   * @return The operationId.
   */
  @java.lang.Override
  public java.lang.String getOperationId() {
    java.lang.Object ref = operationId_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      operationId_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * (Required)
   * Provide an id of the request to reattach to.
   * This must be an id of existing operation.
   * </pre>
   *
   * <code>string operation_id = 3;</code>
   * @return The bytes for operationId.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getOperationIdBytes() {
    java.lang.Object ref = operationId_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      operationId_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int CLIENT_TYPE_FIELD_NUMBER = 4;
  private volatile java.lang.Object clientType_;
  /**
   * <pre>
   * Provides optional information about the client sending the request. This field
   * can be used for language or version specific information and is only intended for
   * logging purposes and will not be interpreted by the server.
   * </pre>
   *
   * <code>optional string client_type = 4;</code>
   * @return Whether the clientType field is set.
   */
  @java.lang.Override
  public boolean hasClientType() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <pre>
   * Provides optional information about the client sending the request. This field
   * can be used for language or version specific information and is only intended for
   * logging purposes and will not be interpreted by the server.
   * </pre>
   *
   * <code>optional string client_type = 4;</code>
   * @return The clientType.
   */
  @java.lang.Override
  public java.lang.String getClientType() {
    java.lang.Object ref = clientType_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      clientType_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Provides optional information about the client sending the request. This field
   * can be used for language or version specific information and is only intended for
   * logging purposes and will not be interpreted by the server.
   * </pre>
   *
   * <code>optional string client_type = 4;</code>
   * @return The bytes for clientType.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getClientTypeBytes() {
    java.lang.Object ref = clientType_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      clientType_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int RELEASE_ALL_FIELD_NUMBER = 5;
  /**
   * <code>.spark.connect.ReleaseExecuteRequest.ReleaseAll release_all = 5;</code>
   * @return Whether the releaseAll field is set.
   */
  @java.lang.Override
  public boolean hasReleaseAll() {
    return releaseCase_ == 5;
  }
  /**
   * <code>.spark.connect.ReleaseExecuteRequest.ReleaseAll release_all = 5;</code>
   * @return The releaseAll.
   */
  @java.lang.Override
  public org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest.ReleaseAll getReleaseAll() {
    if (releaseCase_ == 5) {
       return (org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest.ReleaseAll) release_;
    }
    return org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest.ReleaseAll.getDefaultInstance();
  }
  /**
   * <code>.spark.connect.ReleaseExecuteRequest.ReleaseAll release_all = 5;</code>
   */
  @java.lang.Override
  public org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest.ReleaseAllOrBuilder getReleaseAllOrBuilder() {
    if (releaseCase_ == 5) {
       return (org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest.ReleaseAll) release_;
    }
    return org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest.ReleaseAll.getDefaultInstance();
  }

  public static final int RELEASE_UNTIL_FIELD_NUMBER = 6;
  /**
   * <code>.spark.connect.ReleaseExecuteRequest.ReleaseUntil release_until = 6;</code>
   * @return Whether the releaseUntil field is set.
   */
  @java.lang.Override
  public boolean hasReleaseUntil() {
    return releaseCase_ == 6;
  }
  /**
   * <code>.spark.connect.ReleaseExecuteRequest.ReleaseUntil release_until = 6;</code>
   * @return The releaseUntil.
   */
  @java.lang.Override
  public org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest.ReleaseUntil getReleaseUntil() {
    if (releaseCase_ == 6) {
       return (org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest.ReleaseUntil) release_;
    }
    return org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest.ReleaseUntil.getDefaultInstance();
  }
  /**
   * <code>.spark.connect.ReleaseExecuteRequest.ReleaseUntil release_until = 6;</code>
   */
  @java.lang.Override
  public org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest.ReleaseUntilOrBuilder getReleaseUntilOrBuilder() {
    if (releaseCase_ == 6) {
       return (org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest.ReleaseUntil) release_;
    }
    return org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest.ReleaseUntil.getDefaultInstance();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(sessionId_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, sessionId_);
    }
    if (userContext_ != null) {
      output.writeMessage(2, getUserContext());
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(operationId_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, operationId_);
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 4, clientType_);
    }
    if (releaseCase_ == 5) {
      output.writeMessage(5, (org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest.ReleaseAll) release_);
    }
    if (releaseCase_ == 6) {
      output.writeMessage(6, (org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest.ReleaseUntil) release_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(sessionId_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, sessionId_);
    }
    if (userContext_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getUserContext());
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(operationId_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, operationId_);
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, clientType_);
    }
    if (releaseCase_ == 5) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, (org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest.ReleaseAll) release_);
    }
    if (releaseCase_ == 6) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(6, (org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest.ReleaseUntil) release_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest)) {
      return super.equals(obj);
    }
    org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest other = (org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest) obj;

    if (!getSessionId()
        .equals(other.getSessionId())) return false;
    if (hasUserContext() != other.hasUserContext()) return false;
    if (hasUserContext()) {
      if (!getUserContext()
          .equals(other.getUserContext())) return false;
    }
    if (!getOperationId()
        .equals(other.getOperationId())) return false;
    if (hasClientType() != other.hasClientType()) return false;
    if (hasClientType()) {
      if (!getClientType()
          .equals(other.getClientType())) return false;
    }
    if (!getReleaseCase().equals(other.getReleaseCase())) return false;
    switch (releaseCase_) {
      case 5:
        if (!getReleaseAll()
            .equals(other.getReleaseAll())) return false;
        break;
      case 6:
        if (!getReleaseUntil()
            .equals(other.getReleaseUntil())) return false;
        break;
      case 0:
      default:
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + SESSION_ID_FIELD_NUMBER;
    hash = (53 * hash) + getSessionId().hashCode();
    if (hasUserContext()) {
      hash = (37 * hash) + USER_CONTEXT_FIELD_NUMBER;
      hash = (53 * hash) + getUserContext().hashCode();
    }
    hash = (37 * hash) + OPERATION_ID_FIELD_NUMBER;
    hash = (53 * hash) + getOperationId().hashCode();
    if (hasClientType()) {
      hash = (37 * hash) + CLIENT_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getClientType().hashCode();
    }
    switch (releaseCase_) {
      case 5:
        hash = (37 * hash) + RELEASE_ALL_FIELD_NUMBER;
        hash = (53 * hash) + getReleaseAll().hashCode();
        break;
      case 6:
        hash = (37 * hash) + RELEASE_UNTIL_FIELD_NUMBER;
        hash = (53 * hash) + getReleaseUntil().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code spark.connect.ReleaseExecuteRequest}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:spark.connect.ReleaseExecuteRequest)
      org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequestOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.kyuubi.engine.spark.connect.proto.Base.internal_static_spark_connect_ReleaseExecuteRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.kyuubi.engine.spark.connect.proto.Base.internal_static_spark_connect_ReleaseExecuteRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest.class, org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest.Builder.class);
    }

    // Construct using org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      sessionId_ = "";

      if (userContextBuilder_ == null) {
        userContext_ = null;
      } else {
        userContext_ = null;
        userContextBuilder_ = null;
      }
      operationId_ = "";

      clientType_ = "";
      bitField0_ = (bitField0_ & ~0x00000001);
      if (releaseAllBuilder_ != null) {
        releaseAllBuilder_.clear();
      }
      if (releaseUntilBuilder_ != null) {
        releaseUntilBuilder_.clear();
      }
      releaseCase_ = 0;
      release_ = null;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return org.apache.kyuubi.engine.spark.connect.proto.Base.internal_static_spark_connect_ReleaseExecuteRequest_descriptor;
    }

    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest getDefaultInstanceForType() {
      return org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest.getDefaultInstance();
    }

    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest build() {
      org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest buildPartial() {
      org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest result = new org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      result.sessionId_ = sessionId_;
      if (userContextBuilder_ == null) {
        result.userContext_ = userContext_;
      } else {
        result.userContext_ = userContextBuilder_.build();
      }
      result.operationId_ = operationId_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        to_bitField0_ |= 0x00000001;
      }
      result.clientType_ = clientType_;
      if (releaseCase_ == 5) {
        if (releaseAllBuilder_ == null) {
          result.release_ = release_;
        } else {
          result.release_ = releaseAllBuilder_.build();
        }
      }
      if (releaseCase_ == 6) {
        if (releaseUntilBuilder_ == null) {
          result.release_ = release_;
        } else {
          result.release_ = releaseUntilBuilder_.build();
        }
      }
      result.bitField0_ = to_bitField0_;
      result.releaseCase_ = releaseCase_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest) {
        return mergeFrom((org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest other) {
      if (other == org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest.getDefaultInstance()) return this;
      if (!other.getSessionId().isEmpty()) {
        sessionId_ = other.sessionId_;
        onChanged();
      }
      if (other.hasUserContext()) {
        mergeUserContext(other.getUserContext());
      }
      if (!other.getOperationId().isEmpty()) {
        operationId_ = other.operationId_;
        onChanged();
      }
      if (other.hasClientType()) {
        bitField0_ |= 0x00000001;
        clientType_ = other.clientType_;
        onChanged();
      }
      switch (other.getReleaseCase()) {
        case RELEASE_ALL: {
          mergeReleaseAll(other.getReleaseAll());
          break;
        }
        case RELEASE_UNTIL: {
          mergeReleaseUntil(other.getReleaseUntil());
          break;
        }
        case RELEASE_NOT_SET: {
          break;
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              sessionId_ = input.readStringRequireUtf8();

              break;
            } // case 10
            case 18: {
              input.readMessage(
                  getUserContextFieldBuilder().getBuilder(),
                  extensionRegistry);

              break;
            } // case 18
            case 26: {
              operationId_ = input.readStringRequireUtf8();

              break;
            } // case 26
            case 34: {
              clientType_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000001;
              break;
            } // case 34
            case 42: {
              input.readMessage(
                  getReleaseAllFieldBuilder().getBuilder(),
                  extensionRegistry);
              releaseCase_ = 5;
              break;
            } // case 42
            case 50: {
              input.readMessage(
                  getReleaseUntilFieldBuilder().getBuilder(),
                  extensionRegistry);
              releaseCase_ = 6;
              break;
            } // case 50
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int releaseCase_ = 0;
    private java.lang.Object release_;
    public ReleaseCase
        getReleaseCase() {
      return ReleaseCase.forNumber(
          releaseCase_);
    }

    public Builder clearRelease() {
      releaseCase_ = 0;
      release_ = null;
      onChanged();
      return this;
    }

    private int bitField0_;

    private java.lang.Object sessionId_ = "";
    /**
     * <pre>
     * (Required)
     * The session_id of the request to reattach to.
     * This must be an id of existing session.
     * </pre>
     *
     * <code>string session_id = 1;</code>
     * @return The sessionId.
     */
    public java.lang.String getSessionId() {
      java.lang.Object ref = sessionId_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        sessionId_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * (Required)
     * The session_id of the request to reattach to.
     * This must be an id of existing session.
     * </pre>
     *
     * <code>string session_id = 1;</code>
     * @return The bytes for sessionId.
     */
    public com.google.protobuf.ByteString
        getSessionIdBytes() {
      java.lang.Object ref = sessionId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        sessionId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * (Required)
     * The session_id of the request to reattach to.
     * This must be an id of existing session.
     * </pre>
     *
     * <code>string session_id = 1;</code>
     * @param value The sessionId to set.
     * @return This builder for chaining.
     */
    public Builder setSessionId(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      sessionId_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * (Required)
     * The session_id of the request to reattach to.
     * This must be an id of existing session.
     * </pre>
     *
     * <code>string session_id = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearSessionId() {
      
      sessionId_ = getDefaultInstance().getSessionId();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * (Required)
     * The session_id of the request to reattach to.
     * This must be an id of existing session.
     * </pre>
     *
     * <code>string session_id = 1;</code>
     * @param value The bytes for sessionId to set.
     * @return This builder for chaining.
     */
    public Builder setSessionIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      sessionId_ = value;
      onChanged();
      return this;
    }

    private org.apache.kyuubi.engine.spark.connect.proto.UserContext userContext_;
    private com.google.protobuf.SingleFieldBuilderV3<
        org.apache.kyuubi.engine.spark.connect.proto.UserContext, org.apache.kyuubi.engine.spark.connect.proto.UserContext.Builder, org.apache.kyuubi.engine.spark.connect.proto.UserContextOrBuilder> userContextBuilder_;
    /**
     * <pre>
     * (Required) User context
     * user_context.user_id and session+id both identify a unique remote spark session on the
     * server side.
     * </pre>
     *
     * <code>.spark.connect.UserContext user_context = 2;</code>
     * @return Whether the userContext field is set.
     */
    public boolean hasUserContext() {
      return userContextBuilder_ != null || userContext_ != null;
    }
    /**
     * <pre>
     * (Required) User context
     * user_context.user_id and session+id both identify a unique remote spark session on the
     * server side.
     * </pre>
     *
     * <code>.spark.connect.UserContext user_context = 2;</code>
     * @return The userContext.
     */
    public org.apache.kyuubi.engine.spark.connect.proto.UserContext getUserContext() {
      if (userContextBuilder_ == null) {
        return userContext_ == null ? org.apache.kyuubi.engine.spark.connect.proto.UserContext.getDefaultInstance() : userContext_;
      } else {
        return userContextBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * (Required) User context
     * user_context.user_id and session+id both identify a unique remote spark session on the
     * server side.
     * </pre>
     *
     * <code>.spark.connect.UserContext user_context = 2;</code>
     */
    public Builder setUserContext(org.apache.kyuubi.engine.spark.connect.proto.UserContext value) {
      if (userContextBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        userContext_ = value;
        onChanged();
      } else {
        userContextBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * (Required) User context
     * user_context.user_id and session+id both identify a unique remote spark session on the
     * server side.
     * </pre>
     *
     * <code>.spark.connect.UserContext user_context = 2;</code>
     */
    public Builder setUserContext(
        org.apache.kyuubi.engine.spark.connect.proto.UserContext.Builder builderForValue) {
      if (userContextBuilder_ == null) {
        userContext_ = builderForValue.build();
        onChanged();
      } else {
        userContextBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * (Required) User context
     * user_context.user_id and session+id both identify a unique remote spark session on the
     * server side.
     * </pre>
     *
     * <code>.spark.connect.UserContext user_context = 2;</code>
     */
    public Builder mergeUserContext(org.apache.kyuubi.engine.spark.connect.proto.UserContext value) {
      if (userContextBuilder_ == null) {
        if (userContext_ != null) {
          userContext_ =
            org.apache.kyuubi.engine.spark.connect.proto.UserContext.newBuilder(userContext_).mergeFrom(value).buildPartial();
        } else {
          userContext_ = value;
        }
        onChanged();
      } else {
        userContextBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * (Required) User context
     * user_context.user_id and session+id both identify a unique remote spark session on the
     * server side.
     * </pre>
     *
     * <code>.spark.connect.UserContext user_context = 2;</code>
     */
    public Builder clearUserContext() {
      if (userContextBuilder_ == null) {
        userContext_ = null;
        onChanged();
      } else {
        userContext_ = null;
        userContextBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * (Required) User context
     * user_context.user_id and session+id both identify a unique remote spark session on the
     * server side.
     * </pre>
     *
     * <code>.spark.connect.UserContext user_context = 2;</code>
     */
    public org.apache.kyuubi.engine.spark.connect.proto.UserContext.Builder getUserContextBuilder() {
      
      onChanged();
      return getUserContextFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * (Required) User context
     * user_context.user_id and session+id both identify a unique remote spark session on the
     * server side.
     * </pre>
     *
     * <code>.spark.connect.UserContext user_context = 2;</code>
     */
    public org.apache.kyuubi.engine.spark.connect.proto.UserContextOrBuilder getUserContextOrBuilder() {
      if (userContextBuilder_ != null) {
        return userContextBuilder_.getMessageOrBuilder();
      } else {
        return userContext_ == null ?
            org.apache.kyuubi.engine.spark.connect.proto.UserContext.getDefaultInstance() : userContext_;
      }
    }
    /**
     * <pre>
     * (Required) User context
     * user_context.user_id and session+id both identify a unique remote spark session on the
     * server side.
     * </pre>
     *
     * <code>.spark.connect.UserContext user_context = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.apache.kyuubi.engine.spark.connect.proto.UserContext, org.apache.kyuubi.engine.spark.connect.proto.UserContext.Builder, org.apache.kyuubi.engine.spark.connect.proto.UserContextOrBuilder> 
        getUserContextFieldBuilder() {
      if (userContextBuilder_ == null) {
        userContextBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.apache.kyuubi.engine.spark.connect.proto.UserContext, org.apache.kyuubi.engine.spark.connect.proto.UserContext.Builder, org.apache.kyuubi.engine.spark.connect.proto.UserContextOrBuilder>(
                getUserContext(),
                getParentForChildren(),
                isClean());
        userContext_ = null;
      }
      return userContextBuilder_;
    }

    private java.lang.Object operationId_ = "";
    /**
     * <pre>
     * (Required)
     * Provide an id of the request to reattach to.
     * This must be an id of existing operation.
     * </pre>
     *
     * <code>string operation_id = 3;</code>
     * @return The operationId.
     */
    public java.lang.String getOperationId() {
      java.lang.Object ref = operationId_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        operationId_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * (Required)
     * Provide an id of the request to reattach to.
     * This must be an id of existing operation.
     * </pre>
     *
     * <code>string operation_id = 3;</code>
     * @return The bytes for operationId.
     */
    public com.google.protobuf.ByteString
        getOperationIdBytes() {
      java.lang.Object ref = operationId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        operationId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * (Required)
     * Provide an id of the request to reattach to.
     * This must be an id of existing operation.
     * </pre>
     *
     * <code>string operation_id = 3;</code>
     * @param value The operationId to set.
     * @return This builder for chaining.
     */
    public Builder setOperationId(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      operationId_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * (Required)
     * Provide an id of the request to reattach to.
     * This must be an id of existing operation.
     * </pre>
     *
     * <code>string operation_id = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearOperationId() {
      
      operationId_ = getDefaultInstance().getOperationId();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * (Required)
     * Provide an id of the request to reattach to.
     * This must be an id of existing operation.
     * </pre>
     *
     * <code>string operation_id = 3;</code>
     * @param value The bytes for operationId to set.
     * @return This builder for chaining.
     */
    public Builder setOperationIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      operationId_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object clientType_ = "";
    /**
     * <pre>
     * Provides optional information about the client sending the request. This field
     * can be used for language or version specific information and is only intended for
     * logging purposes and will not be interpreted by the server.
     * </pre>
     *
     * <code>optional string client_type = 4;</code>
     * @return Whether the clientType field is set.
     */
    public boolean hasClientType() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Provides optional information about the client sending the request. This field
     * can be used for language or version specific information and is only intended for
     * logging purposes and will not be interpreted by the server.
     * </pre>
     *
     * <code>optional string client_type = 4;</code>
     * @return The clientType.
     */
    public java.lang.String getClientType() {
      java.lang.Object ref = clientType_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        clientType_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Provides optional information about the client sending the request. This field
     * can be used for language or version specific information and is only intended for
     * logging purposes and will not be interpreted by the server.
     * </pre>
     *
     * <code>optional string client_type = 4;</code>
     * @return The bytes for clientType.
     */
    public com.google.protobuf.ByteString
        getClientTypeBytes() {
      java.lang.Object ref = clientType_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        clientType_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Provides optional information about the client sending the request. This field
     * can be used for language or version specific information and is only intended for
     * logging purposes and will not be interpreted by the server.
     * </pre>
     *
     * <code>optional string client_type = 4;</code>
     * @param value The clientType to set.
     * @return This builder for chaining.
     */
    public Builder setClientType(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      clientType_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Provides optional information about the client sending the request. This field
     * can be used for language or version specific information and is only intended for
     * logging purposes and will not be interpreted by the server.
     * </pre>
     *
     * <code>optional string client_type = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearClientType() {
      bitField0_ = (bitField0_ & ~0x00000001);
      clientType_ = getDefaultInstance().getClientType();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Provides optional information about the client sending the request. This field
     * can be used for language or version specific information and is only intended for
     * logging purposes and will not be interpreted by the server.
     * </pre>
     *
     * <code>optional string client_type = 4;</code>
     * @param value The bytes for clientType to set.
     * @return This builder for chaining.
     */
    public Builder setClientTypeBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      bitField0_ |= 0x00000001;
      clientType_ = value;
      onChanged();
      return this;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest.ReleaseAll, org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest.ReleaseAll.Builder, org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest.ReleaseAllOrBuilder> releaseAllBuilder_;
    /**
     * <code>.spark.connect.ReleaseExecuteRequest.ReleaseAll release_all = 5;</code>
     * @return Whether the releaseAll field is set.
     */
    @java.lang.Override
    public boolean hasReleaseAll() {
      return releaseCase_ == 5;
    }
    /**
     * <code>.spark.connect.ReleaseExecuteRequest.ReleaseAll release_all = 5;</code>
     * @return The releaseAll.
     */
    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest.ReleaseAll getReleaseAll() {
      if (releaseAllBuilder_ == null) {
        if (releaseCase_ == 5) {
          return (org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest.ReleaseAll) release_;
        }
        return org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest.ReleaseAll.getDefaultInstance();
      } else {
        if (releaseCase_ == 5) {
          return releaseAllBuilder_.getMessage();
        }
        return org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest.ReleaseAll.getDefaultInstance();
      }
    }
    /**
     * <code>.spark.connect.ReleaseExecuteRequest.ReleaseAll release_all = 5;</code>
     */
    public Builder setReleaseAll(org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest.ReleaseAll value) {
      if (releaseAllBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        release_ = value;
        onChanged();
      } else {
        releaseAllBuilder_.setMessage(value);
      }
      releaseCase_ = 5;
      return this;
    }
    /**
     * <code>.spark.connect.ReleaseExecuteRequest.ReleaseAll release_all = 5;</code>
     */
    public Builder setReleaseAll(
        org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest.ReleaseAll.Builder builderForValue) {
      if (releaseAllBuilder_ == null) {
        release_ = builderForValue.build();
        onChanged();
      } else {
        releaseAllBuilder_.setMessage(builderForValue.build());
      }
      releaseCase_ = 5;
      return this;
    }
    /**
     * <code>.spark.connect.ReleaseExecuteRequest.ReleaseAll release_all = 5;</code>
     */
    public Builder mergeReleaseAll(org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest.ReleaseAll value) {
      if (releaseAllBuilder_ == null) {
        if (releaseCase_ == 5 &&
            release_ != org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest.ReleaseAll.getDefaultInstance()) {
          release_ = org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest.ReleaseAll.newBuilder((org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest.ReleaseAll) release_)
              .mergeFrom(value).buildPartial();
        } else {
          release_ = value;
        }
        onChanged();
      } else {
        if (releaseCase_ == 5) {
          releaseAllBuilder_.mergeFrom(value);
        } else {
          releaseAllBuilder_.setMessage(value);
        }
      }
      releaseCase_ = 5;
      return this;
    }
    /**
     * <code>.spark.connect.ReleaseExecuteRequest.ReleaseAll release_all = 5;</code>
     */
    public Builder clearReleaseAll() {
      if (releaseAllBuilder_ == null) {
        if (releaseCase_ == 5) {
          releaseCase_ = 0;
          release_ = null;
          onChanged();
        }
      } else {
        if (releaseCase_ == 5) {
          releaseCase_ = 0;
          release_ = null;
        }
        releaseAllBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.spark.connect.ReleaseExecuteRequest.ReleaseAll release_all = 5;</code>
     */
    public org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest.ReleaseAll.Builder getReleaseAllBuilder() {
      return getReleaseAllFieldBuilder().getBuilder();
    }
    /**
     * <code>.spark.connect.ReleaseExecuteRequest.ReleaseAll release_all = 5;</code>
     */
    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest.ReleaseAllOrBuilder getReleaseAllOrBuilder() {
      if ((releaseCase_ == 5) && (releaseAllBuilder_ != null)) {
        return releaseAllBuilder_.getMessageOrBuilder();
      } else {
        if (releaseCase_ == 5) {
          return (org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest.ReleaseAll) release_;
        }
        return org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest.ReleaseAll.getDefaultInstance();
      }
    }
    /**
     * <code>.spark.connect.ReleaseExecuteRequest.ReleaseAll release_all = 5;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest.ReleaseAll, org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest.ReleaseAll.Builder, org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest.ReleaseAllOrBuilder> 
        getReleaseAllFieldBuilder() {
      if (releaseAllBuilder_ == null) {
        if (!(releaseCase_ == 5)) {
          release_ = org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest.ReleaseAll.getDefaultInstance();
        }
        releaseAllBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest.ReleaseAll, org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest.ReleaseAll.Builder, org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest.ReleaseAllOrBuilder>(
                (org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest.ReleaseAll) release_,
                getParentForChildren(),
                isClean());
        release_ = null;
      }
      releaseCase_ = 5;
      onChanged();;
      return releaseAllBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest.ReleaseUntil, org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest.ReleaseUntil.Builder, org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest.ReleaseUntilOrBuilder> releaseUntilBuilder_;
    /**
     * <code>.spark.connect.ReleaseExecuteRequest.ReleaseUntil release_until = 6;</code>
     * @return Whether the releaseUntil field is set.
     */
    @java.lang.Override
    public boolean hasReleaseUntil() {
      return releaseCase_ == 6;
    }
    /**
     * <code>.spark.connect.ReleaseExecuteRequest.ReleaseUntil release_until = 6;</code>
     * @return The releaseUntil.
     */
    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest.ReleaseUntil getReleaseUntil() {
      if (releaseUntilBuilder_ == null) {
        if (releaseCase_ == 6) {
          return (org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest.ReleaseUntil) release_;
        }
        return org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest.ReleaseUntil.getDefaultInstance();
      } else {
        if (releaseCase_ == 6) {
          return releaseUntilBuilder_.getMessage();
        }
        return org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest.ReleaseUntil.getDefaultInstance();
      }
    }
    /**
     * <code>.spark.connect.ReleaseExecuteRequest.ReleaseUntil release_until = 6;</code>
     */
    public Builder setReleaseUntil(org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest.ReleaseUntil value) {
      if (releaseUntilBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        release_ = value;
        onChanged();
      } else {
        releaseUntilBuilder_.setMessage(value);
      }
      releaseCase_ = 6;
      return this;
    }
    /**
     * <code>.spark.connect.ReleaseExecuteRequest.ReleaseUntil release_until = 6;</code>
     */
    public Builder setReleaseUntil(
        org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest.ReleaseUntil.Builder builderForValue) {
      if (releaseUntilBuilder_ == null) {
        release_ = builderForValue.build();
        onChanged();
      } else {
        releaseUntilBuilder_.setMessage(builderForValue.build());
      }
      releaseCase_ = 6;
      return this;
    }
    /**
     * <code>.spark.connect.ReleaseExecuteRequest.ReleaseUntil release_until = 6;</code>
     */
    public Builder mergeReleaseUntil(org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest.ReleaseUntil value) {
      if (releaseUntilBuilder_ == null) {
        if (releaseCase_ == 6 &&
            release_ != org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest.ReleaseUntil.getDefaultInstance()) {
          release_ = org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest.ReleaseUntil.newBuilder((org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest.ReleaseUntil) release_)
              .mergeFrom(value).buildPartial();
        } else {
          release_ = value;
        }
        onChanged();
      } else {
        if (releaseCase_ == 6) {
          releaseUntilBuilder_.mergeFrom(value);
        } else {
          releaseUntilBuilder_.setMessage(value);
        }
      }
      releaseCase_ = 6;
      return this;
    }
    /**
     * <code>.spark.connect.ReleaseExecuteRequest.ReleaseUntil release_until = 6;</code>
     */
    public Builder clearReleaseUntil() {
      if (releaseUntilBuilder_ == null) {
        if (releaseCase_ == 6) {
          releaseCase_ = 0;
          release_ = null;
          onChanged();
        }
      } else {
        if (releaseCase_ == 6) {
          releaseCase_ = 0;
          release_ = null;
        }
        releaseUntilBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.spark.connect.ReleaseExecuteRequest.ReleaseUntil release_until = 6;</code>
     */
    public org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest.ReleaseUntil.Builder getReleaseUntilBuilder() {
      return getReleaseUntilFieldBuilder().getBuilder();
    }
    /**
     * <code>.spark.connect.ReleaseExecuteRequest.ReleaseUntil release_until = 6;</code>
     */
    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest.ReleaseUntilOrBuilder getReleaseUntilOrBuilder() {
      if ((releaseCase_ == 6) && (releaseUntilBuilder_ != null)) {
        return releaseUntilBuilder_.getMessageOrBuilder();
      } else {
        if (releaseCase_ == 6) {
          return (org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest.ReleaseUntil) release_;
        }
        return org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest.ReleaseUntil.getDefaultInstance();
      }
    }
    /**
     * <code>.spark.connect.ReleaseExecuteRequest.ReleaseUntil release_until = 6;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest.ReleaseUntil, org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest.ReleaseUntil.Builder, org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest.ReleaseUntilOrBuilder> 
        getReleaseUntilFieldBuilder() {
      if (releaseUntilBuilder_ == null) {
        if (!(releaseCase_ == 6)) {
          release_ = org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest.ReleaseUntil.getDefaultInstance();
        }
        releaseUntilBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest.ReleaseUntil, org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest.ReleaseUntil.Builder, org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest.ReleaseUntilOrBuilder>(
                (org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest.ReleaseUntil) release_,
                getParentForChildren(),
                isClean());
        release_ = null;
      }
      releaseCase_ = 6;
      onChanged();;
      return releaseUntilBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:spark.connect.ReleaseExecuteRequest)
  }

  // @@protoc_insertion_point(class_scope:spark.connect.ReleaseExecuteRequest)
  private static final org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest();
  }

  public static org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<ReleaseExecuteRequest>
      PARSER = new com.google.protobuf.AbstractParser<ReleaseExecuteRequest>() {
    @java.lang.Override
    public ReleaseExecuteRequest parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<ReleaseExecuteRequest> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<ReleaseExecuteRequest> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public org.apache.kyuubi.engine.spark.connect.proto.ReleaseExecuteRequest getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

