// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: kyuubi/spark/connect/base.proto

package org.apache.kyuubi.engine.spark.connect.grpc.proto;

/**
 *
 *
 * <pre>
 * Response to checking artifact statuses.
 * Next ID: 4
 * </pre>
 *
 * Protobuf type {@code spark.connect.ArtifactStatusesResponse}
 */
public final class ArtifactStatusesResponse extends com.google.protobuf.GeneratedMessageV3
    implements
    // @@protoc_insertion_point(message_implements:spark.connect.ArtifactStatusesResponse)
    ArtifactStatusesResponseOrBuilder {
  private static final long serialVersionUID = 0L;
  // Use ArtifactStatusesResponse.newBuilder() to construct.
  private ArtifactStatusesResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }

  private ArtifactStatusesResponse() {
    sessionId_ = "";
    serverSideSessionId_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
    return new ArtifactStatusesResponse();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet getUnknownFields() {
    return this.unknownFields;
  }

  public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
    return org.apache.kyuubi.engine.spark.connect.grpc.proto.Base
        .internal_static_spark_connect_ArtifactStatusesResponse_descriptor;
  }

  @SuppressWarnings({"rawtypes"})
  @java.lang.Override
  protected com.google.protobuf.MapField internalGetMapField(int number) {
    switch (number) {
      case 1:
        return internalGetStatuses();
      default:
        throw new RuntimeException("Invalid map field number: " + number);
    }
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return org.apache.kyuubi.engine.spark.connect.grpc.proto.Base
        .internal_static_spark_connect_ArtifactStatusesResponse_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            org.apache.kyuubi.engine.spark.connect.grpc.proto.ArtifactStatusesResponse.class,
            org.apache.kyuubi.engine.spark.connect.grpc.proto.ArtifactStatusesResponse.Builder
                .class);
  }

  public interface ArtifactStatusOrBuilder
      extends
      // @@protoc_insertion_point(interface_extends:spark.connect.ArtifactStatusesResponse.ArtifactStatus)
      com.google.protobuf.MessageOrBuilder {

    /**
     *
     *
     * <pre>
     * Exists or not particular artifact at the server.
     * </pre>
     *
     * <code>bool exists = 1;</code>
     *
     * @return The exists.
     */
    boolean getExists();
  }
  /** Protobuf type {@code spark.connect.ArtifactStatusesResponse.ArtifactStatus} */
  public static final class ArtifactStatus extends com.google.protobuf.GeneratedMessageV3
      implements
      // @@protoc_insertion_point(message_implements:spark.connect.ArtifactStatusesResponse.ArtifactStatus)
      ArtifactStatusOrBuilder {
    private static final long serialVersionUID = 0L;
    // Use ArtifactStatus.newBuilder() to construct.
    private ArtifactStatus(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }

    private ArtifactStatus() {}

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
      return new ArtifactStatus();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet getUnknownFields() {
      return this.unknownFields;
    }

    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return org.apache.kyuubi.engine.spark.connect.grpc.proto.Base
          .internal_static_spark_connect_ArtifactStatusesResponse_ArtifactStatus_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.kyuubi.engine.spark.connect.grpc.proto.Base
          .internal_static_spark_connect_ArtifactStatusesResponse_ArtifactStatus_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.kyuubi.engine.spark.connect.grpc.proto.ArtifactStatusesResponse
                  .ArtifactStatus.class,
              org.apache.kyuubi.engine.spark.connect.grpc.proto.ArtifactStatusesResponse
                  .ArtifactStatus.Builder.class);
    }

    public static final int EXISTS_FIELD_NUMBER = 1;
    private boolean exists_;
    /**
     *
     *
     * <pre>
     * Exists or not particular artifact at the server.
     * </pre>
     *
     * <code>bool exists = 1;</code>
     *
     * @return The exists.
     */
    @java.lang.Override
    public boolean getExists() {
      return exists_;
    }

    private byte memoizedIsInitialized = -1;

    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
      if (exists_ != false) {
        output.writeBool(1, exists_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (exists_ != false) {
        size += com.google.protobuf.CodedOutputStream.computeBoolSize(1, exists_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
        return true;
      }
      if (!(obj
          instanceof
          org.apache.kyuubi.engine.spark.connect.grpc.proto.ArtifactStatusesResponse
              .ArtifactStatus)) {
        return super.equals(obj);
      }
      org.apache.kyuubi.engine.spark.connect.grpc.proto.ArtifactStatusesResponse.ArtifactStatus
          other =
              (org.apache.kyuubi.engine.spark.connect.grpc.proto.ArtifactStatusesResponse
                      .ArtifactStatus)
                  obj;

      if (getExists() != other.getExists()) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + EXISTS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(getExists());
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.kyuubi.engine.spark.connect.grpc.proto.ArtifactStatusesResponse
            .ArtifactStatus
        parseFrom(java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static org.apache.kyuubi.engine.spark.connect.grpc.proto.ArtifactStatusesResponse
            .ArtifactStatus
        parseFrom(
            java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static org.apache.kyuubi.engine.spark.connect.grpc.proto.ArtifactStatusesResponse
            .ArtifactStatus
        parseFrom(com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static org.apache.kyuubi.engine.spark.connect.grpc.proto.ArtifactStatusesResponse
            .ArtifactStatus
        parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static org.apache.kyuubi.engine.spark.connect.grpc.proto.ArtifactStatusesResponse
            .ArtifactStatus
        parseFrom(byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static org.apache.kyuubi.engine.spark.connect.grpc.proto.ArtifactStatusesResponse
            .ArtifactStatus
        parseFrom(byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static org.apache.kyuubi.engine.spark.connect.grpc.proto.ArtifactStatusesResponse
            .ArtifactStatus
        parseFrom(java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static org.apache.kyuubi.engine.spark.connect.grpc.proto.ArtifactStatusesResponse
            .ArtifactStatus
        parseFrom(
            java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
          PARSER, input, extensionRegistry);
    }

    public static org.apache.kyuubi.engine.spark.connect.grpc.proto.ArtifactStatusesResponse
            .ArtifactStatus
        parseDelimitedFrom(java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
    }

    public static org.apache.kyuubi.engine.spark.connect.grpc.proto.ArtifactStatusesResponse
            .ArtifactStatus
        parseDelimitedFrom(
            java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
          PARSER, input, extensionRegistry);
    }

    public static org.apache.kyuubi.engine.spark.connect.grpc.proto.ArtifactStatusesResponse
            .ArtifactStatus
        parseFrom(com.google.protobuf.CodedInputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static org.apache.kyuubi.engine.spark.connect.grpc.proto.ArtifactStatusesResponse
            .ArtifactStatus
        parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
          PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() {
      return newBuilder();
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }

    public static Builder newBuilder(
        org.apache.kyuubi.engine.spark.connect.grpc.proto.ArtifactStatusesResponse.ArtifactStatus
            prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /** Protobuf type {@code spark.connect.ArtifactStatusesResponse.ArtifactStatus} */
    public static final class Builder
        extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
        implements
        // @@protoc_insertion_point(builder_implements:spark.connect.ArtifactStatusesResponse.ArtifactStatus)
        org.apache.kyuubi.engine.spark.connect.grpc.proto.ArtifactStatusesResponse
            .ArtifactStatusOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
        return org.apache.kyuubi.engine.spark.connect.grpc.proto.Base
            .internal_static_spark_connect_ArtifactStatusesResponse_ArtifactStatus_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.kyuubi.engine.spark.connect.grpc.proto.Base
            .internal_static_spark_connect_ArtifactStatusesResponse_ArtifactStatus_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.kyuubi.engine.spark.connect.grpc.proto.ArtifactStatusesResponse
                    .ArtifactStatus.class,
                org.apache.kyuubi.engine.spark.connect.grpc.proto.ArtifactStatusesResponse
                    .ArtifactStatus.Builder.class);
      }

      // Construct using
      // org.apache.kyuubi.engine.spark.connect.grpc.proto.ArtifactStatusesResponse.ArtifactStatus.newBuilder()
      private Builder() {}

      private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
      }

      @java.lang.Override
      public Builder clear() {
        super.clear();
        exists_ = false;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
        return org.apache.kyuubi.engine.spark.connect.grpc.proto.Base
            .internal_static_spark_connect_ArtifactStatusesResponse_ArtifactStatus_descriptor;
      }

      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.grpc.proto.ArtifactStatusesResponse
              .ArtifactStatus
          getDefaultInstanceForType() {
        return org.apache.kyuubi.engine.spark.connect.grpc.proto.ArtifactStatusesResponse
            .ArtifactStatus.getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.grpc.proto.ArtifactStatusesResponse
              .ArtifactStatus
          build() {
        org.apache.kyuubi.engine.spark.connect.grpc.proto.ArtifactStatusesResponse.ArtifactStatus
            result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.grpc.proto.ArtifactStatusesResponse
              .ArtifactStatus
          buildPartial() {
        org.apache.kyuubi.engine.spark.connect.grpc.proto.ArtifactStatusesResponse.ArtifactStatus
            result =
                new org.apache.kyuubi.engine.spark.connect.grpc.proto.ArtifactStatusesResponse
                    .ArtifactStatus(this);
        result.exists_ = exists_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }

      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
        return super.setField(field, value);
      }

      @java.lang.Override
      public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }

      @java.lang.Override
      public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }

      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index,
          java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }

      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other
            instanceof
            org.apache.kyuubi.engine.spark.connect.grpc.proto.ArtifactStatusesResponse
                .ArtifactStatus) {
          return mergeFrom(
              (org.apache.kyuubi.engine.spark.connect.grpc.proto.ArtifactStatusesResponse
                      .ArtifactStatus)
                  other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(
          org.apache.kyuubi.engine.spark.connect.grpc.proto.ArtifactStatusesResponse.ArtifactStatus
              other) {
        if (other
            == org.apache.kyuubi.engine.spark.connect.grpc.proto.ArtifactStatusesResponse
                .ArtifactStatus.getDefaultInstance()) return this;
        if (other.getExists() != false) {
          setExists(other.getExists());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8:
                {
                  exists_ = input.readBool();

                  break;
                } // case 8
              default:
                {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }

      private boolean exists_;
      /**
       *
       *
       * <pre>
       * Exists or not particular artifact at the server.
       * </pre>
       *
       * <code>bool exists = 1;</code>
       *
       * @return The exists.
       */
      @java.lang.Override
      public boolean getExists() {
        return exists_;
      }
      /**
       *
       *
       * <pre>
       * Exists or not particular artifact at the server.
       * </pre>
       *
       * <code>bool exists = 1;</code>
       *
       * @param value The exists to set.
       * @return This builder for chaining.
       */
      public Builder setExists(boolean value) {

        exists_ = value;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * Exists or not particular artifact at the server.
       * </pre>
       *
       * <code>bool exists = 1;</code>
       *
       * @return This builder for chaining.
       */
      public Builder clearExists() {

        exists_ = false;
        onChanged();
        return this;
      }

      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }

      // @@protoc_insertion_point(builder_scope:spark.connect.ArtifactStatusesResponse.ArtifactStatus)
    }

    // @@protoc_insertion_point(class_scope:spark.connect.ArtifactStatusesResponse.ArtifactStatus)
    private static final org.apache.kyuubi.engine.spark.connect.grpc.proto.ArtifactStatusesResponse
            .ArtifactStatus
        DEFAULT_INSTANCE;

    static {
      DEFAULT_INSTANCE =
          new org.apache.kyuubi.engine.spark.connect.grpc.proto.ArtifactStatusesResponse
              .ArtifactStatus();
    }

    public static org.apache.kyuubi.engine.spark.connect.grpc.proto.ArtifactStatusesResponse
            .ArtifactStatus
        getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ArtifactStatus> PARSER =
        new com.google.protobuf.AbstractParser<ArtifactStatus>() {
          @java.lang.Override
          public ArtifactStatus parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            Builder builder = newBuilder();
            try {
              builder.mergeFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw e.setUnfinishedMessage(builder.buildPartial());
            } catch (com.google.protobuf.UninitializedMessageException e) {
              throw e.asInvalidProtocolBufferException()
                  .setUnfinishedMessage(builder.buildPartial());
            } catch (java.io.IOException e) {
              throw new com.google.protobuf.InvalidProtocolBufferException(e)
                  .setUnfinishedMessage(builder.buildPartial());
            }
            return builder.buildPartial();
          }
        };

    public static com.google.protobuf.Parser<ArtifactStatus> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ArtifactStatus> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.grpc.proto.ArtifactStatusesResponse.ArtifactStatus
        getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }
  }

  public static final int SESSION_ID_FIELD_NUMBER = 2;
  private volatile java.lang.Object sessionId_;
  /**
   *
   *
   * <pre>
   * Session id in which the ArtifactStatus was running.
   * </pre>
   *
   * <code>string session_id = 2;</code>
   *
   * @return The sessionId.
   */
  @java.lang.Override
  public java.lang.String getSessionId() {
    java.lang.Object ref = sessionId_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      sessionId_ = s;
      return s;
    }
  }
  /**
   *
   *
   * <pre>
   * Session id in which the ArtifactStatus was running.
   * </pre>
   *
   * <code>string session_id = 2;</code>
   *
   * @return The bytes for sessionId.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getSessionIdBytes() {
    java.lang.Object ref = sessionId_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      sessionId_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int SERVER_SIDE_SESSION_ID_FIELD_NUMBER = 3;
  private volatile java.lang.Object serverSideSessionId_;
  /**
   *
   *
   * <pre>
   * Server-side generated idempotency key that the client can use to assert that the server side
   * session has not changed.
   * </pre>
   *
   * <code>string server_side_session_id = 3;</code>
   *
   * @return The serverSideSessionId.
   */
  @java.lang.Override
  public java.lang.String getServerSideSessionId() {
    java.lang.Object ref = serverSideSessionId_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      serverSideSessionId_ = s;
      return s;
    }
  }
  /**
   *
   *
   * <pre>
   * Server-side generated idempotency key that the client can use to assert that the server side
   * session has not changed.
   * </pre>
   *
   * <code>string server_side_session_id = 3;</code>
   *
   * @return The bytes for serverSideSessionId.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getServerSideSessionIdBytes() {
    java.lang.Object ref = serverSideSessionId_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      serverSideSessionId_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int STATUSES_FIELD_NUMBER = 1;

  private static final class StatusesDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<
            java.lang.String,
            org.apache.kyuubi.engine.spark.connect.grpc.proto.ArtifactStatusesResponse
                .ArtifactStatus>
        defaultEntry =
            com.google.protobuf.MapEntry
                .<java.lang.String,
                    org.apache.kyuubi.engine.spark.connect.grpc.proto.ArtifactStatusesResponse
                        .ArtifactStatus>
                    newDefaultInstance(
                        org.apache.kyuubi.engine.spark.connect.grpc.proto.Base
                            .internal_static_spark_connect_ArtifactStatusesResponse_StatusesEntry_descriptor,
                        com.google.protobuf.WireFormat.FieldType.STRING,
                        "",
                        com.google.protobuf.WireFormat.FieldType.MESSAGE,
                        org.apache.kyuubi.engine.spark.connect.grpc.proto.ArtifactStatusesResponse
                            .ArtifactStatus.getDefaultInstance());
  }

  private com.google.protobuf.MapField<
          java.lang.String,
          org.apache.kyuubi.engine.spark.connect.grpc.proto.ArtifactStatusesResponse.ArtifactStatus>
      statuses_;

  private com.google.protobuf.MapField<
          java.lang.String,
          org.apache.kyuubi.engine.spark.connect.grpc.proto.ArtifactStatusesResponse.ArtifactStatus>
      internalGetStatuses() {
    if (statuses_ == null) {
      return com.google.protobuf.MapField.emptyMapField(StatusesDefaultEntryHolder.defaultEntry);
    }
    return statuses_;
  }

  public int getStatusesCount() {
    return internalGetStatuses().getMap().size();
  }
  /**
   *
   *
   * <pre>
   * A map of artifact names to their statuses.
   * </pre>
   *
   * <code>map&lt;string, .spark.connect.ArtifactStatusesResponse.ArtifactStatus&gt; statuses = 1;
   * </code>
   */
  @java.lang.Override
  public boolean containsStatuses(java.lang.String key) {
    if (key == null) {
      throw new NullPointerException("map key");
    }
    return internalGetStatuses().getMap().containsKey(key);
  }
  /** Use {@link #getStatusesMap()} instead. */
  @java.lang.Override
  @java.lang.Deprecated
  public java.util.Map<
          java.lang.String,
          org.apache.kyuubi.engine.spark.connect.grpc.proto.ArtifactStatusesResponse.ArtifactStatus>
      getStatuses() {
    return getStatusesMap();
  }
  /**
   *
   *
   * <pre>
   * A map of artifact names to their statuses.
   * </pre>
   *
   * <code>map&lt;string, .spark.connect.ArtifactStatusesResponse.ArtifactStatus&gt; statuses = 1;
   * </code>
   */
  @java.lang.Override
  public java.util.Map<
          java.lang.String,
          org.apache.kyuubi.engine.spark.connect.grpc.proto.ArtifactStatusesResponse.ArtifactStatus>
      getStatusesMap() {
    return internalGetStatuses().getMap();
  }
  /**
   *
   *
   * <pre>
   * A map of artifact names to their statuses.
   * </pre>
   *
   * <code>map&lt;string, .spark.connect.ArtifactStatusesResponse.ArtifactStatus&gt; statuses = 1;
   * </code>
   */
  @java.lang.Override
  public org.apache.kyuubi.engine.spark.connect.grpc.proto.ArtifactStatusesResponse.ArtifactStatus
      getStatusesOrDefault(
          java.lang.String key,
          org.apache.kyuubi.engine.spark.connect.grpc.proto.ArtifactStatusesResponse.ArtifactStatus
              defaultValue) {
    if (key == null) {
      throw new NullPointerException("map key");
    }
    java.util.Map<
            java.lang.String,
            org.apache.kyuubi.engine.spark.connect.grpc.proto.ArtifactStatusesResponse
                .ArtifactStatus>
        map = internalGetStatuses().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   *
   *
   * <pre>
   * A map of artifact names to their statuses.
   * </pre>
   *
   * <code>map&lt;string, .spark.connect.ArtifactStatusesResponse.ArtifactStatus&gt; statuses = 1;
   * </code>
   */
  @java.lang.Override
  public org.apache.kyuubi.engine.spark.connect.grpc.proto.ArtifactStatusesResponse.ArtifactStatus
      getStatusesOrThrow(java.lang.String key) {
    if (key == null) {
      throw new NullPointerException("map key");
    }
    java.util.Map<
            java.lang.String,
            org.apache.kyuubi.engine.spark.connect.grpc.proto.ArtifactStatusesResponse
                .ArtifactStatus>
        map = internalGetStatuses().getMap();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }

  private byte memoizedIsInitialized = -1;

  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
    com.google.protobuf.GeneratedMessageV3.serializeStringMapTo(
        output, internalGetStatuses(), StatusesDefaultEntryHolder.defaultEntry, 1);
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(sessionId_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, sessionId_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(serverSideSessionId_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, serverSideSessionId_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    for (java.util.Map.Entry<
            java.lang.String,
            org.apache.kyuubi.engine.spark.connect.grpc.proto.ArtifactStatusesResponse
                .ArtifactStatus>
        entry : internalGetStatuses().getMap().entrySet()) {
      com.google.protobuf.MapEntry<
              java.lang.String,
              org.apache.kyuubi.engine.spark.connect.grpc.proto.ArtifactStatusesResponse
                  .ArtifactStatus>
          statuses__ =
              StatusesDefaultEntryHolder.defaultEntry
                  .newBuilderForType()
                  .setKey(entry.getKey())
                  .setValue(entry.getValue())
                  .build();
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(1, statuses__);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(sessionId_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, sessionId_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(serverSideSessionId_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, serverSideSessionId_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
      return true;
    }
    if (!(obj
        instanceof org.apache.kyuubi.engine.spark.connect.grpc.proto.ArtifactStatusesResponse)) {
      return super.equals(obj);
    }
    org.apache.kyuubi.engine.spark.connect.grpc.proto.ArtifactStatusesResponse other =
        (org.apache.kyuubi.engine.spark.connect.grpc.proto.ArtifactStatusesResponse) obj;

    if (!getSessionId().equals(other.getSessionId())) return false;
    if (!getServerSideSessionId().equals(other.getServerSideSessionId())) return false;
    if (!internalGetStatuses().equals(other.internalGetStatuses())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + SESSION_ID_FIELD_NUMBER;
    hash = (53 * hash) + getSessionId().hashCode();
    hash = (37 * hash) + SERVER_SIDE_SESSION_ID_FIELD_NUMBER;
    hash = (53 * hash) + getServerSideSessionId().hashCode();
    if (!internalGetStatuses().getMap().isEmpty()) {
      hash = (37 * hash) + STATUSES_FIELD_NUMBER;
      hash = (53 * hash) + internalGetStatuses().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static org.apache.kyuubi.engine.spark.connect.grpc.proto.ArtifactStatusesResponse
      parseFrom(java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static org.apache.kyuubi.engine.spark.connect.grpc.proto.ArtifactStatusesResponse
      parseFrom(
          java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static org.apache.kyuubi.engine.spark.connect.grpc.proto.ArtifactStatusesResponse
      parseFrom(com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static org.apache.kyuubi.engine.spark.connect.grpc.proto.ArtifactStatusesResponse
      parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static org.apache.kyuubi.engine.spark.connect.grpc.proto.ArtifactStatusesResponse
      parseFrom(byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static org.apache.kyuubi.engine.spark.connect.grpc.proto.ArtifactStatusesResponse
      parseFrom(byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static org.apache.kyuubi.engine.spark.connect.grpc.proto.ArtifactStatusesResponse
      parseFrom(java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static org.apache.kyuubi.engine.spark.connect.grpc.proto.ArtifactStatusesResponse
      parseFrom(
          java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static org.apache.kyuubi.engine.spark.connect.grpc.proto.ArtifactStatusesResponse
      parseDelimitedFrom(java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
  }

  public static org.apache.kyuubi.engine.spark.connect.grpc.proto.ArtifactStatusesResponse
      parseDelimitedFrom(
          java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static org.apache.kyuubi.engine.spark.connect.grpc.proto.ArtifactStatusesResponse
      parseFrom(com.google.protobuf.CodedInputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static org.apache.kyuubi.engine.spark.connect.grpc.proto.ArtifactStatusesResponse
      parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() {
    return newBuilder();
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }

  public static Builder newBuilder(
      org.apache.kyuubi.engine.spark.connect.grpc.proto.ArtifactStatusesResponse prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   *
   *
   * <pre>
   * Response to checking artifact statuses.
   * Next ID: 4
   * </pre>
   *
   * Protobuf type {@code spark.connect.ArtifactStatusesResponse}
   */
  public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
      implements
      // @@protoc_insertion_point(builder_implements:spark.connect.ArtifactStatusesResponse)
      org.apache.kyuubi.engine.spark.connect.grpc.proto.ArtifactStatusesResponseOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return org.apache.kyuubi.engine.spark.connect.grpc.proto.Base
          .internal_static_spark_connect_ArtifactStatusesResponse_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMapField(int number) {
      switch (number) {
        case 1:
          return internalGetStatuses();
        default:
          throw new RuntimeException("Invalid map field number: " + number);
      }
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMutableMapField(int number) {
      switch (number) {
        case 1:
          return internalGetMutableStatuses();
        default:
          throw new RuntimeException("Invalid map field number: " + number);
      }
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.kyuubi.engine.spark.connect.grpc.proto.Base
          .internal_static_spark_connect_ArtifactStatusesResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.kyuubi.engine.spark.connect.grpc.proto.ArtifactStatusesResponse.class,
              org.apache.kyuubi.engine.spark.connect.grpc.proto.ArtifactStatusesResponse.Builder
                  .class);
    }

    // Construct using
    // org.apache.kyuubi.engine.spark.connect.grpc.proto.ArtifactStatusesResponse.newBuilder()
    private Builder() {}

    private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
    }

    @java.lang.Override
    public Builder clear() {
      super.clear();
      sessionId_ = "";

      serverSideSessionId_ = "";

      internalGetMutableStatuses().clear();
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
      return org.apache.kyuubi.engine.spark.connect.grpc.proto.Base
          .internal_static_spark_connect_ArtifactStatusesResponse_descriptor;
    }

    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.grpc.proto.ArtifactStatusesResponse
        getDefaultInstanceForType() {
      return org.apache.kyuubi.engine.spark.connect.grpc.proto.ArtifactStatusesResponse
          .getDefaultInstance();
    }

    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.grpc.proto.ArtifactStatusesResponse build() {
      org.apache.kyuubi.engine.spark.connect.grpc.proto.ArtifactStatusesResponse result =
          buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.grpc.proto.ArtifactStatusesResponse
        buildPartial() {
      org.apache.kyuubi.engine.spark.connect.grpc.proto.ArtifactStatusesResponse result =
          new org.apache.kyuubi.engine.spark.connect.grpc.proto.ArtifactStatusesResponse(this);
      int from_bitField0_ = bitField0_;
      result.sessionId_ = sessionId_;
      result.serverSideSessionId_ = serverSideSessionId_;
      result.statuses_ = internalGetStatuses();
      result.statuses_.makeImmutable();
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }

    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.setField(field, value);
    }

    @java.lang.Override
    public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }

    @java.lang.Override
    public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }

    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }

    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other
          instanceof org.apache.kyuubi.engine.spark.connect.grpc.proto.ArtifactStatusesResponse) {
        return mergeFrom(
            (org.apache.kyuubi.engine.spark.connect.grpc.proto.ArtifactStatusesResponse) other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(
        org.apache.kyuubi.engine.spark.connect.grpc.proto.ArtifactStatusesResponse other) {
      if (other
          == org.apache.kyuubi.engine.spark.connect.grpc.proto.ArtifactStatusesResponse
              .getDefaultInstance()) return this;
      if (!other.getSessionId().isEmpty()) {
        sessionId_ = other.sessionId_;
        onChanged();
      }
      if (!other.getServerSideSessionId().isEmpty()) {
        serverSideSessionId_ = other.serverSideSessionId_;
        onChanged();
      }
      internalGetMutableStatuses().mergeFrom(other.internalGetStatuses());
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10:
              {
                com.google.protobuf.MapEntry<
                        java.lang.String,
                        org.apache.kyuubi.engine.spark.connect.grpc.proto.ArtifactStatusesResponse
                            .ArtifactStatus>
                    statuses__ =
                        input.readMessage(
                            StatusesDefaultEntryHolder.defaultEntry.getParserForType(),
                            extensionRegistry);
                internalGetMutableStatuses()
                    .getMutableMap()
                    .put(statuses__.getKey(), statuses__.getValue());
                break;
              } // case 10
            case 18:
              {
                sessionId_ = input.readStringRequireUtf8();

                break;
              } // case 18
            case 26:
              {
                serverSideSessionId_ = input.readStringRequireUtf8();

                break;
              } // case 26
            default:
              {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }

    private int bitField0_;

    private java.lang.Object sessionId_ = "";
    /**
     *
     *
     * <pre>
     * Session id in which the ArtifactStatus was running.
     * </pre>
     *
     * <code>string session_id = 2;</code>
     *
     * @return The sessionId.
     */
    public java.lang.String getSessionId() {
      java.lang.Object ref = sessionId_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        sessionId_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Session id in which the ArtifactStatus was running.
     * </pre>
     *
     * <code>string session_id = 2;</code>
     *
     * @return The bytes for sessionId.
     */
    public com.google.protobuf.ByteString getSessionIdBytes() {
      java.lang.Object ref = sessionId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        sessionId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Session id in which the ArtifactStatus was running.
     * </pre>
     *
     * <code>string session_id = 2;</code>
     *
     * @param value The sessionId to set.
     * @return This builder for chaining.
     */
    public Builder setSessionId(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }

      sessionId_ = value;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Session id in which the ArtifactStatus was running.
     * </pre>
     *
     * <code>string session_id = 2;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearSessionId() {

      sessionId_ = getDefaultInstance().getSessionId();
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Session id in which the ArtifactStatus was running.
     * </pre>
     *
     * <code>string session_id = 2;</code>
     *
     * @param value The bytes for sessionId to set.
     * @return This builder for chaining.
     */
    public Builder setSessionIdBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);

      sessionId_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object serverSideSessionId_ = "";
    /**
     *
     *
     * <pre>
     * Server-side generated idempotency key that the client can use to assert that the server side
     * session has not changed.
     * </pre>
     *
     * <code>string server_side_session_id = 3;</code>
     *
     * @return The serverSideSessionId.
     */
    public java.lang.String getServerSideSessionId() {
      java.lang.Object ref = serverSideSessionId_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        serverSideSessionId_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Server-side generated idempotency key that the client can use to assert that the server side
     * session has not changed.
     * </pre>
     *
     * <code>string server_side_session_id = 3;</code>
     *
     * @return The bytes for serverSideSessionId.
     */
    public com.google.protobuf.ByteString getServerSideSessionIdBytes() {
      java.lang.Object ref = serverSideSessionId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        serverSideSessionId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Server-side generated idempotency key that the client can use to assert that the server side
     * session has not changed.
     * </pre>
     *
     * <code>string server_side_session_id = 3;</code>
     *
     * @param value The serverSideSessionId to set.
     * @return This builder for chaining.
     */
    public Builder setServerSideSessionId(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }

      serverSideSessionId_ = value;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Server-side generated idempotency key that the client can use to assert that the server side
     * session has not changed.
     * </pre>
     *
     * <code>string server_side_session_id = 3;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearServerSideSessionId() {

      serverSideSessionId_ = getDefaultInstance().getServerSideSessionId();
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Server-side generated idempotency key that the client can use to assert that the server side
     * session has not changed.
     * </pre>
     *
     * <code>string server_side_session_id = 3;</code>
     *
     * @param value The bytes for serverSideSessionId to set.
     * @return This builder for chaining.
     */
    public Builder setServerSideSessionIdBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);

      serverSideSessionId_ = value;
      onChanged();
      return this;
    }

    private com.google.protobuf.MapField<
            java.lang.String,
            org.apache.kyuubi.engine.spark.connect.grpc.proto.ArtifactStatusesResponse
                .ArtifactStatus>
        statuses_;

    private com.google.protobuf.MapField<
            java.lang.String,
            org.apache.kyuubi.engine.spark.connect.grpc.proto.ArtifactStatusesResponse
                .ArtifactStatus>
        internalGetStatuses() {
      if (statuses_ == null) {
        return com.google.protobuf.MapField.emptyMapField(StatusesDefaultEntryHolder.defaultEntry);
      }
      return statuses_;
    }

    private com.google.protobuf.MapField<
            java.lang.String,
            org.apache.kyuubi.engine.spark.connect.grpc.proto.ArtifactStatusesResponse
                .ArtifactStatus>
        internalGetMutableStatuses() {
      onChanged();
      ;
      if (statuses_ == null) {
        statuses_ =
            com.google.protobuf.MapField.newMapField(StatusesDefaultEntryHolder.defaultEntry);
      }
      if (!statuses_.isMutable()) {
        statuses_ = statuses_.copy();
      }
      return statuses_;
    }

    public int getStatusesCount() {
      return internalGetStatuses().getMap().size();
    }
    /**
     *
     *
     * <pre>
     * A map of artifact names to their statuses.
     * </pre>
     *
     * <code>map&lt;string, .spark.connect.ArtifactStatusesResponse.ArtifactStatus&gt; statuses = 1;
     * </code>
     */
    @java.lang.Override
    public boolean containsStatuses(java.lang.String key) {
      if (key == null) {
        throw new NullPointerException("map key");
      }
      return internalGetStatuses().getMap().containsKey(key);
    }
    /** Use {@link #getStatusesMap()} instead. */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<
            java.lang.String,
            org.apache.kyuubi.engine.spark.connect.grpc.proto.ArtifactStatusesResponse
                .ArtifactStatus>
        getStatuses() {
      return getStatusesMap();
    }
    /**
     *
     *
     * <pre>
     * A map of artifact names to their statuses.
     * </pre>
     *
     * <code>map&lt;string, .spark.connect.ArtifactStatusesResponse.ArtifactStatus&gt; statuses = 1;
     * </code>
     */
    @java.lang.Override
    public java.util.Map<
            java.lang.String,
            org.apache.kyuubi.engine.spark.connect.grpc.proto.ArtifactStatusesResponse
                .ArtifactStatus>
        getStatusesMap() {
      return internalGetStatuses().getMap();
    }
    /**
     *
     *
     * <pre>
     * A map of artifact names to their statuses.
     * </pre>
     *
     * <code>map&lt;string, .spark.connect.ArtifactStatusesResponse.ArtifactStatus&gt; statuses = 1;
     * </code>
     */
    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.grpc.proto.ArtifactStatusesResponse.ArtifactStatus
        getStatusesOrDefault(
            java.lang.String key,
            org.apache.kyuubi.engine.spark.connect.grpc.proto.ArtifactStatusesResponse
                    .ArtifactStatus
                defaultValue) {
      if (key == null) {
        throw new NullPointerException("map key");
      }
      java.util.Map<
              java.lang.String,
              org.apache.kyuubi.engine.spark.connect.grpc.proto.ArtifactStatusesResponse
                  .ArtifactStatus>
          map = internalGetStatuses().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     *
     *
     * <pre>
     * A map of artifact names to their statuses.
     * </pre>
     *
     * <code>map&lt;string, .spark.connect.ArtifactStatusesResponse.ArtifactStatus&gt; statuses = 1;
     * </code>
     */
    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.grpc.proto.ArtifactStatusesResponse.ArtifactStatus
        getStatusesOrThrow(java.lang.String key) {
      if (key == null) {
        throw new NullPointerException("map key");
      }
      java.util.Map<
              java.lang.String,
              org.apache.kyuubi.engine.spark.connect.grpc.proto.ArtifactStatusesResponse
                  .ArtifactStatus>
          map = internalGetStatuses().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public Builder clearStatuses() {
      internalGetMutableStatuses().getMutableMap().clear();
      return this;
    }
    /**
     *
     *
     * <pre>
     * A map of artifact names to their statuses.
     * </pre>
     *
     * <code>map&lt;string, .spark.connect.ArtifactStatusesResponse.ArtifactStatus&gt; statuses = 1;
     * </code>
     */
    public Builder removeStatuses(java.lang.String key) {
      if (key == null) {
        throw new NullPointerException("map key");
      }
      internalGetMutableStatuses().getMutableMap().remove(key);
      return this;
    }
    /** Use alternate mutation accessors instead. */
    @java.lang.Deprecated
    public java.util.Map<
            java.lang.String,
            org.apache.kyuubi.engine.spark.connect.grpc.proto.ArtifactStatusesResponse
                .ArtifactStatus>
        getMutableStatuses() {
      return internalGetMutableStatuses().getMutableMap();
    }
    /**
     *
     *
     * <pre>
     * A map of artifact names to their statuses.
     * </pre>
     *
     * <code>map&lt;string, .spark.connect.ArtifactStatusesResponse.ArtifactStatus&gt; statuses = 1;
     * </code>
     */
    public Builder putStatuses(
        java.lang.String key,
        org.apache.kyuubi.engine.spark.connect.grpc.proto.ArtifactStatusesResponse.ArtifactStatus
            value) {
      if (key == null) {
        throw new NullPointerException("map key");
      }
      if (value == null) {
        throw new NullPointerException("map value");
      }

      internalGetMutableStatuses().getMutableMap().put(key, value);
      return this;
    }
    /**
     *
     *
     * <pre>
     * A map of artifact names to their statuses.
     * </pre>
     *
     * <code>map&lt;string, .spark.connect.ArtifactStatusesResponse.ArtifactStatus&gt; statuses = 1;
     * </code>
     */
    public Builder putAllStatuses(
        java.util.Map<
                java.lang.String,
                org.apache.kyuubi.engine.spark.connect.grpc.proto.ArtifactStatusesResponse
                    .ArtifactStatus>
            values) {
      internalGetMutableStatuses().getMutableMap().putAll(values);
      return this;
    }

    @java.lang.Override
    public final Builder setUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }

    // @@protoc_insertion_point(builder_scope:spark.connect.ArtifactStatusesResponse)
  }

  // @@protoc_insertion_point(class_scope:spark.connect.ArtifactStatusesResponse)
  private static final org.apache.kyuubi.engine.spark.connect.grpc.proto.ArtifactStatusesResponse
      DEFAULT_INSTANCE;

  static {
    DEFAULT_INSTANCE =
        new org.apache.kyuubi.engine.spark.connect.grpc.proto.ArtifactStatusesResponse();
  }

  public static org.apache.kyuubi.engine.spark.connect.grpc.proto.ArtifactStatusesResponse
      getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<ArtifactStatusesResponse> PARSER =
      new com.google.protobuf.AbstractParser<ArtifactStatusesResponse>() {
        @java.lang.Override
        public ArtifactStatusesResponse parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

  public static com.google.protobuf.Parser<ArtifactStatusesResponse> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<ArtifactStatusesResponse> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public org.apache.kyuubi.engine.spark.connect.grpc.proto.ArtifactStatusesResponse
      getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }
}
