// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: kyuubi/spark/connect/relations.proto

package org.apache.kyuubi.engine.spark.connect.grpc.proto;

public interface DeduplicateOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:spark.connect.Deduplicate)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * (Required) Input relation for a Deduplicate.
   * </pre>
   *
   * <code>.spark.connect.Relation input = 1;</code>
   *
   * @return Whether the input field is set.
   */
  boolean hasInput();
  /**
   *
   *
   * <pre>
   * (Required) Input relation for a Deduplicate.
   * </pre>
   *
   * <code>.spark.connect.Relation input = 1;</code>
   *
   * @return The input.
   */
  org.apache.kyuubi.engine.spark.connect.grpc.proto.Relation getInput();
  /**
   *
   *
   * <pre>
   * (Required) Input relation for a Deduplicate.
   * </pre>
   *
   * <code>.spark.connect.Relation input = 1;</code>
   */
  org.apache.kyuubi.engine.spark.connect.grpc.proto.RelationOrBuilder getInputOrBuilder();

  /**
   *
   *
   * <pre>
   * (Optional) Deduplicate based on a list of column names.
   * This field does not co-use with `all_columns_as_keys`.
   * </pre>
   *
   * <code>repeated string column_names = 2;</code>
   *
   * @return A list containing the columnNames.
   */
  java.util.List<java.lang.String> getColumnNamesList();
  /**
   *
   *
   * <pre>
   * (Optional) Deduplicate based on a list of column names.
   * This field does not co-use with `all_columns_as_keys`.
   * </pre>
   *
   * <code>repeated string column_names = 2;</code>
   *
   * @return The count of columnNames.
   */
  int getColumnNamesCount();
  /**
   *
   *
   * <pre>
   * (Optional) Deduplicate based on a list of column names.
   * This field does not co-use with `all_columns_as_keys`.
   * </pre>
   *
   * <code>repeated string column_names = 2;</code>
   *
   * @param index The index of the element to return.
   * @return The columnNames at the given index.
   */
  java.lang.String getColumnNames(int index);
  /**
   *
   *
   * <pre>
   * (Optional) Deduplicate based on a list of column names.
   * This field does not co-use with `all_columns_as_keys`.
   * </pre>
   *
   * <code>repeated string column_names = 2;</code>
   *
   * @param index The index of the value to return.
   * @return The bytes of the columnNames at the given index.
   */
  com.google.protobuf.ByteString getColumnNamesBytes(int index);

  /**
   *
   *
   * <pre>
   * (Optional) Deduplicate based on all the columns of the input relation.
   * This field does not co-use with `column_names`.
   * </pre>
   *
   * <code>optional bool all_columns_as_keys = 3;</code>
   *
   * @return Whether the allColumnsAsKeys field is set.
   */
  boolean hasAllColumnsAsKeys();
  /**
   *
   *
   * <pre>
   * (Optional) Deduplicate based on all the columns of the input relation.
   * This field does not co-use with `column_names`.
   * </pre>
   *
   * <code>optional bool all_columns_as_keys = 3;</code>
   *
   * @return The allColumnsAsKeys.
   */
  boolean getAllColumnsAsKeys();

  /**
   *
   *
   * <pre>
   * (Optional) Deduplicate within the time range of watermark.
   * </pre>
   *
   * <code>optional bool within_watermark = 4;</code>
   *
   * @return Whether the withinWatermark field is set.
   */
  boolean hasWithinWatermark();
  /**
   *
   *
   * <pre>
   * (Optional) Deduplicate within the time range of watermark.
   * </pre>
   *
   * <code>optional bool within_watermark = 4;</code>
   *
   * @return The withinWatermark.
   */
  boolean getWithinWatermark();
}
