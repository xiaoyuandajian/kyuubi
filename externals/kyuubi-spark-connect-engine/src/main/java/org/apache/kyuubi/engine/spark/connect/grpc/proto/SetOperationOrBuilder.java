// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: kyuubi/spark/connect/relations.proto

package org.apache.kyuubi.engine.spark.connect.grpc.proto;

public interface SetOperationOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:spark.connect.SetOperation)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * (Required) Left input relation for a Set operation.
   * </pre>
   *
   * <code>.spark.connect.Relation left_input = 1;</code>
   *
   * @return Whether the leftInput field is set.
   */
  boolean hasLeftInput();
  /**
   *
   *
   * <pre>
   * (Required) Left input relation for a Set operation.
   * </pre>
   *
   * <code>.spark.connect.Relation left_input = 1;</code>
   *
   * @return The leftInput.
   */
  org.apache.kyuubi.engine.spark.connect.grpc.proto.Relation getLeftInput();
  /**
   *
   *
   * <pre>
   * (Required) Left input relation for a Set operation.
   * </pre>
   *
   * <code>.spark.connect.Relation left_input = 1;</code>
   */
  org.apache.kyuubi.engine.spark.connect.grpc.proto.RelationOrBuilder getLeftInputOrBuilder();

  /**
   *
   *
   * <pre>
   * (Required) Right input relation for a Set operation.
   * </pre>
   *
   * <code>.spark.connect.Relation right_input = 2;</code>
   *
   * @return Whether the rightInput field is set.
   */
  boolean hasRightInput();
  /**
   *
   *
   * <pre>
   * (Required) Right input relation for a Set operation.
   * </pre>
   *
   * <code>.spark.connect.Relation right_input = 2;</code>
   *
   * @return The rightInput.
   */
  org.apache.kyuubi.engine.spark.connect.grpc.proto.Relation getRightInput();
  /**
   *
   *
   * <pre>
   * (Required) Right input relation for a Set operation.
   * </pre>
   *
   * <code>.spark.connect.Relation right_input = 2;</code>
   */
  org.apache.kyuubi.engine.spark.connect.grpc.proto.RelationOrBuilder getRightInputOrBuilder();

  /**
   *
   *
   * <pre>
   * (Required) The Set operation type.
   * </pre>
   *
   * <code>.spark.connect.SetOperation.SetOpType set_op_type = 3;</code>
   *
   * @return The enum numeric value on the wire for setOpType.
   */
  int getSetOpTypeValue();
  /**
   *
   *
   * <pre>
   * (Required) The Set operation type.
   * </pre>
   *
   * <code>.spark.connect.SetOperation.SetOpType set_op_type = 3;</code>
   *
   * @return The setOpType.
   */
  org.apache.kyuubi.engine.spark.connect.grpc.proto.SetOperation.SetOpType getSetOpType();

  /**
   *
   *
   * <pre>
   * (Optional) If to remove duplicate rows.
   * True to preserve all results.
   * False to remove duplicate rows.
   * </pre>
   *
   * <code>optional bool is_all = 4;</code>
   *
   * @return Whether the isAll field is set.
   */
  boolean hasIsAll();
  /**
   *
   *
   * <pre>
   * (Optional) If to remove duplicate rows.
   * True to preserve all results.
   * False to remove duplicate rows.
   * </pre>
   *
   * <code>optional bool is_all = 4;</code>
   *
   * @return The isAll.
   */
  boolean getIsAll();

  /**
   *
   *
   * <pre>
   * (Optional) If to perform the Set operation based on name resolution.
   * Only UNION supports this option.
   * </pre>
   *
   * <code>optional bool by_name = 5;</code>
   *
   * @return Whether the byName field is set.
   */
  boolean hasByName();
  /**
   *
   *
   * <pre>
   * (Optional) If to perform the Set operation based on name resolution.
   * Only UNION supports this option.
   * </pre>
   *
   * <code>optional bool by_name = 5;</code>
   *
   * @return The byName.
   */
  boolean getByName();

  /**
   *
   *
   * <pre>
   * (Optional) If to perform the Set operation and allow missing columns.
   * Only UNION supports this option.
   * </pre>
   *
   * <code>optional bool allow_missing_columns = 6;</code>
   *
   * @return Whether the allowMissingColumns field is set.
   */
  boolean hasAllowMissingColumns();
  /**
   *
   *
   * <pre>
   * (Optional) If to perform the Set operation and allow missing columns.
   * Only UNION supports this option.
   * </pre>
   *
   * <code>optional bool allow_missing_columns = 6;</code>
   *
   * @return The allowMissingColumns.
   */
  boolean getAllowMissingColumns();
}
