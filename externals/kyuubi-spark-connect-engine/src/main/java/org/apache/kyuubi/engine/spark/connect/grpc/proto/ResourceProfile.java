// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: kyuubi/spark/connect/common.proto

package org.apache.kyuubi.engine.spark.connect.grpc.proto;

/** Protobuf type {@code spark.connect.ResourceProfile} */
public final class ResourceProfile extends com.google.protobuf.GeneratedMessageV3
    implements
    // @@protoc_insertion_point(message_implements:spark.connect.ResourceProfile)
    ResourceProfileOrBuilder {
  private static final long serialVersionUID = 0L;
  // Use ResourceProfile.newBuilder() to construct.
  private ResourceProfile(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }

  private ResourceProfile() {}

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
    return new ResourceProfile();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet getUnknownFields() {
    return this.unknownFields;
  }

  public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
    return org.apache.kyuubi.engine.spark.connect.grpc.proto.Common
        .internal_static_spark_connect_ResourceProfile_descriptor;
  }

  @SuppressWarnings({"rawtypes"})
  @java.lang.Override
  protected com.google.protobuf.MapField internalGetMapField(int number) {
    switch (number) {
      case 1:
        return internalGetExecutorResources();
      case 2:
        return internalGetTaskResources();
      default:
        throw new RuntimeException("Invalid map field number: " + number);
    }
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return org.apache.kyuubi.engine.spark.connect.grpc.proto.Common
        .internal_static_spark_connect_ResourceProfile_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            org.apache.kyuubi.engine.spark.connect.grpc.proto.ResourceProfile.class,
            org.apache.kyuubi.engine.spark.connect.grpc.proto.ResourceProfile.Builder.class);
  }

  public static final int EXECUTOR_RESOURCES_FIELD_NUMBER = 1;

  private static final class ExecutorResourcesDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<
            java.lang.String,
            org.apache.kyuubi.engine.spark.connect.grpc.proto.ExecutorResourceRequest>
        defaultEntry =
            com.google.protobuf.MapEntry
                .<java.lang.String,
                    org.apache.kyuubi.engine.spark.connect.grpc.proto.ExecutorResourceRequest>
                    newDefaultInstance(
                        org.apache.kyuubi.engine.spark.connect.grpc.proto.Common
                            .internal_static_spark_connect_ResourceProfile_ExecutorResourcesEntry_descriptor,
                        com.google.protobuf.WireFormat.FieldType.STRING,
                        "",
                        com.google.protobuf.WireFormat.FieldType.MESSAGE,
                        org.apache.kyuubi.engine.spark.connect.grpc.proto.ExecutorResourceRequest
                            .getDefaultInstance());
  }

  private com.google.protobuf.MapField<
          java.lang.String,
          org.apache.kyuubi.engine.spark.connect.grpc.proto.ExecutorResourceRequest>
      executorResources_;

  private com.google.protobuf.MapField<
          java.lang.String,
          org.apache.kyuubi.engine.spark.connect.grpc.proto.ExecutorResourceRequest>
      internalGetExecutorResources() {
    if (executorResources_ == null) {
      return com.google.protobuf.MapField.emptyMapField(
          ExecutorResourcesDefaultEntryHolder.defaultEntry);
    }
    return executorResources_;
  }

  public int getExecutorResourcesCount() {
    return internalGetExecutorResources().getMap().size();
  }
  /**
   *
   *
   * <pre>
   * (Optional) Resource requests for executors. Mapped from the resource name
   * (e.g., cores, memory, CPU) to its specific request.
   * </pre>
   *
   * <code>map&lt;string, .spark.connect.ExecutorResourceRequest&gt; executor_resources = 1;</code>
   */
  @java.lang.Override
  public boolean containsExecutorResources(java.lang.String key) {
    if (key == null) {
      throw new NullPointerException("map key");
    }
    return internalGetExecutorResources().getMap().containsKey(key);
  }
  /** Use {@link #getExecutorResourcesMap()} instead. */
  @java.lang.Override
  @java.lang.Deprecated
  public java.util.Map<
          java.lang.String,
          org.apache.kyuubi.engine.spark.connect.grpc.proto.ExecutorResourceRequest>
      getExecutorResources() {
    return getExecutorResourcesMap();
  }
  /**
   *
   *
   * <pre>
   * (Optional) Resource requests for executors. Mapped from the resource name
   * (e.g., cores, memory, CPU) to its specific request.
   * </pre>
   *
   * <code>map&lt;string, .spark.connect.ExecutorResourceRequest&gt; executor_resources = 1;</code>
   */
  @java.lang.Override
  public java.util.Map<
          java.lang.String,
          org.apache.kyuubi.engine.spark.connect.grpc.proto.ExecutorResourceRequest>
      getExecutorResourcesMap() {
    return internalGetExecutorResources().getMap();
  }
  /**
   *
   *
   * <pre>
   * (Optional) Resource requests for executors. Mapped from the resource name
   * (e.g., cores, memory, CPU) to its specific request.
   * </pre>
   *
   * <code>map&lt;string, .spark.connect.ExecutorResourceRequest&gt; executor_resources = 1;</code>
   */
  @java.lang.Override
  public org.apache.kyuubi.engine.spark.connect.grpc.proto.ExecutorResourceRequest
      getExecutorResourcesOrDefault(
          java.lang.String key,
          org.apache.kyuubi.engine.spark.connect.grpc.proto.ExecutorResourceRequest defaultValue) {
    if (key == null) {
      throw new NullPointerException("map key");
    }
    java.util.Map<
            java.lang.String,
            org.apache.kyuubi.engine.spark.connect.grpc.proto.ExecutorResourceRequest>
        map = internalGetExecutorResources().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   *
   *
   * <pre>
   * (Optional) Resource requests for executors. Mapped from the resource name
   * (e.g., cores, memory, CPU) to its specific request.
   * </pre>
   *
   * <code>map&lt;string, .spark.connect.ExecutorResourceRequest&gt; executor_resources = 1;</code>
   */
  @java.lang.Override
  public org.apache.kyuubi.engine.spark.connect.grpc.proto.ExecutorResourceRequest
      getExecutorResourcesOrThrow(java.lang.String key) {
    if (key == null) {
      throw new NullPointerException("map key");
    }
    java.util.Map<
            java.lang.String,
            org.apache.kyuubi.engine.spark.connect.grpc.proto.ExecutorResourceRequest>
        map = internalGetExecutorResources().getMap();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }

  public static final int TASK_RESOURCES_FIELD_NUMBER = 2;

  private static final class TaskResourcesDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<
            java.lang.String, org.apache.kyuubi.engine.spark.connect.grpc.proto.TaskResourceRequest>
        defaultEntry =
            com.google.protobuf.MapEntry
                .<java.lang.String,
                    org.apache.kyuubi.engine.spark.connect.grpc.proto.TaskResourceRequest>
                    newDefaultInstance(
                        org.apache.kyuubi.engine.spark.connect.grpc.proto.Common
                            .internal_static_spark_connect_ResourceProfile_TaskResourcesEntry_descriptor,
                        com.google.protobuf.WireFormat.FieldType.STRING,
                        "",
                        com.google.protobuf.WireFormat.FieldType.MESSAGE,
                        org.apache.kyuubi.engine.spark.connect.grpc.proto.TaskResourceRequest
                            .getDefaultInstance());
  }

  private com.google.protobuf.MapField<
          java.lang.String, org.apache.kyuubi.engine.spark.connect.grpc.proto.TaskResourceRequest>
      taskResources_;

  private com.google.protobuf.MapField<
          java.lang.String, org.apache.kyuubi.engine.spark.connect.grpc.proto.TaskResourceRequest>
      internalGetTaskResources() {
    if (taskResources_ == null) {
      return com.google.protobuf.MapField.emptyMapField(
          TaskResourcesDefaultEntryHolder.defaultEntry);
    }
    return taskResources_;
  }

  public int getTaskResourcesCount() {
    return internalGetTaskResources().getMap().size();
  }
  /**
   *
   *
   * <pre>
   * (Optional) Resource requests for tasks. Mapped from the resource name
   * (e.g., cores, memory, CPU) to its specific request.
   * </pre>
   *
   * <code>map&lt;string, .spark.connect.TaskResourceRequest&gt; task_resources = 2;</code>
   */
  @java.lang.Override
  public boolean containsTaskResources(java.lang.String key) {
    if (key == null) {
      throw new NullPointerException("map key");
    }
    return internalGetTaskResources().getMap().containsKey(key);
  }
  /** Use {@link #getTaskResourcesMap()} instead. */
  @java.lang.Override
  @java.lang.Deprecated
  public java.util.Map<
          java.lang.String, org.apache.kyuubi.engine.spark.connect.grpc.proto.TaskResourceRequest>
      getTaskResources() {
    return getTaskResourcesMap();
  }
  /**
   *
   *
   * <pre>
   * (Optional) Resource requests for tasks. Mapped from the resource name
   * (e.g., cores, memory, CPU) to its specific request.
   * </pre>
   *
   * <code>map&lt;string, .spark.connect.TaskResourceRequest&gt; task_resources = 2;</code>
   */
  @java.lang.Override
  public java.util.Map<
          java.lang.String, org.apache.kyuubi.engine.spark.connect.grpc.proto.TaskResourceRequest>
      getTaskResourcesMap() {
    return internalGetTaskResources().getMap();
  }
  /**
   *
   *
   * <pre>
   * (Optional) Resource requests for tasks. Mapped from the resource name
   * (e.g., cores, memory, CPU) to its specific request.
   * </pre>
   *
   * <code>map&lt;string, .spark.connect.TaskResourceRequest&gt; task_resources = 2;</code>
   */
  @java.lang.Override
  public org.apache.kyuubi.engine.spark.connect.grpc.proto.TaskResourceRequest
      getTaskResourcesOrDefault(
          java.lang.String key,
          org.apache.kyuubi.engine.spark.connect.grpc.proto.TaskResourceRequest defaultValue) {
    if (key == null) {
      throw new NullPointerException("map key");
    }
    java.util.Map<
            java.lang.String, org.apache.kyuubi.engine.spark.connect.grpc.proto.TaskResourceRequest>
        map = internalGetTaskResources().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   *
   *
   * <pre>
   * (Optional) Resource requests for tasks. Mapped from the resource name
   * (e.g., cores, memory, CPU) to its specific request.
   * </pre>
   *
   * <code>map&lt;string, .spark.connect.TaskResourceRequest&gt; task_resources = 2;</code>
   */
  @java.lang.Override
  public org.apache.kyuubi.engine.spark.connect.grpc.proto.TaskResourceRequest
      getTaskResourcesOrThrow(java.lang.String key) {
    if (key == null) {
      throw new NullPointerException("map key");
    }
    java.util.Map<
            java.lang.String, org.apache.kyuubi.engine.spark.connect.grpc.proto.TaskResourceRequest>
        map = internalGetTaskResources().getMap();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }

  private byte memoizedIsInitialized = -1;

  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
    com.google.protobuf.GeneratedMessageV3.serializeStringMapTo(
        output,
        internalGetExecutorResources(),
        ExecutorResourcesDefaultEntryHolder.defaultEntry,
        1);
    com.google.protobuf.GeneratedMessageV3.serializeStringMapTo(
        output, internalGetTaskResources(), TaskResourcesDefaultEntryHolder.defaultEntry, 2);
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    for (java.util.Map.Entry<
            java.lang.String,
            org.apache.kyuubi.engine.spark.connect.grpc.proto.ExecutorResourceRequest>
        entry : internalGetExecutorResources().getMap().entrySet()) {
      com.google.protobuf.MapEntry<
              java.lang.String,
              org.apache.kyuubi.engine.spark.connect.grpc.proto.ExecutorResourceRequest>
          executorResources__ =
              ExecutorResourcesDefaultEntryHolder.defaultEntry
                  .newBuilderForType()
                  .setKey(entry.getKey())
                  .setValue(entry.getValue())
                  .build();
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(1, executorResources__);
    }
    for (java.util.Map.Entry<
            java.lang.String, org.apache.kyuubi.engine.spark.connect.grpc.proto.TaskResourceRequest>
        entry : internalGetTaskResources().getMap().entrySet()) {
      com.google.protobuf.MapEntry<
              java.lang.String,
              org.apache.kyuubi.engine.spark.connect.grpc.proto.TaskResourceRequest>
          taskResources__ =
              TaskResourcesDefaultEntryHolder.defaultEntry
                  .newBuilderForType()
                  .setKey(entry.getKey())
                  .setValue(entry.getValue())
                  .build();
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(2, taskResources__);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
      return true;
    }
    if (!(obj instanceof org.apache.kyuubi.engine.spark.connect.grpc.proto.ResourceProfile)) {
      return super.equals(obj);
    }
    org.apache.kyuubi.engine.spark.connect.grpc.proto.ResourceProfile other =
        (org.apache.kyuubi.engine.spark.connect.grpc.proto.ResourceProfile) obj;

    if (!internalGetExecutorResources().equals(other.internalGetExecutorResources())) return false;
    if (!internalGetTaskResources().equals(other.internalGetTaskResources())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (!internalGetExecutorResources().getMap().isEmpty()) {
      hash = (37 * hash) + EXECUTOR_RESOURCES_FIELD_NUMBER;
      hash = (53 * hash) + internalGetExecutorResources().hashCode();
    }
    if (!internalGetTaskResources().getMap().isEmpty()) {
      hash = (37 * hash) + TASK_RESOURCES_FIELD_NUMBER;
      hash = (53 * hash) + internalGetTaskResources().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static org.apache.kyuubi.engine.spark.connect.grpc.proto.ResourceProfile parseFrom(
      java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static org.apache.kyuubi.engine.spark.connect.grpc.proto.ResourceProfile parseFrom(
      java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static org.apache.kyuubi.engine.spark.connect.grpc.proto.ResourceProfile parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static org.apache.kyuubi.engine.spark.connect.grpc.proto.ResourceProfile parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static org.apache.kyuubi.engine.spark.connect.grpc.proto.ResourceProfile parseFrom(
      byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static org.apache.kyuubi.engine.spark.connect.grpc.proto.ResourceProfile parseFrom(
      byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static org.apache.kyuubi.engine.spark.connect.grpc.proto.ResourceProfile parseFrom(
      java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static org.apache.kyuubi.engine.spark.connect.grpc.proto.ResourceProfile parseFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static org.apache.kyuubi.engine.spark.connect.grpc.proto.ResourceProfile
      parseDelimitedFrom(java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
  }

  public static org.apache.kyuubi.engine.spark.connect.grpc.proto.ResourceProfile
      parseDelimitedFrom(
          java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static org.apache.kyuubi.engine.spark.connect.grpc.proto.ResourceProfile parseFrom(
      com.google.protobuf.CodedInputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static org.apache.kyuubi.engine.spark.connect.grpc.proto.ResourceProfile parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() {
    return newBuilder();
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }

  public static Builder newBuilder(
      org.apache.kyuubi.engine.spark.connect.grpc.proto.ResourceProfile prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /** Protobuf type {@code spark.connect.ResourceProfile} */
  public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
      implements
      // @@protoc_insertion_point(builder_implements:spark.connect.ResourceProfile)
      org.apache.kyuubi.engine.spark.connect.grpc.proto.ResourceProfileOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return org.apache.kyuubi.engine.spark.connect.grpc.proto.Common
          .internal_static_spark_connect_ResourceProfile_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMapField(int number) {
      switch (number) {
        case 1:
          return internalGetExecutorResources();
        case 2:
          return internalGetTaskResources();
        default:
          throw new RuntimeException("Invalid map field number: " + number);
      }
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMutableMapField(int number) {
      switch (number) {
        case 1:
          return internalGetMutableExecutorResources();
        case 2:
          return internalGetMutableTaskResources();
        default:
          throw new RuntimeException("Invalid map field number: " + number);
      }
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.kyuubi.engine.spark.connect.grpc.proto.Common
          .internal_static_spark_connect_ResourceProfile_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.kyuubi.engine.spark.connect.grpc.proto.ResourceProfile.class,
              org.apache.kyuubi.engine.spark.connect.grpc.proto.ResourceProfile.Builder.class);
    }

    // Construct using
    // org.apache.kyuubi.engine.spark.connect.grpc.proto.ResourceProfile.newBuilder()
    private Builder() {}

    private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
    }

    @java.lang.Override
    public Builder clear() {
      super.clear();
      internalGetMutableExecutorResources().clear();
      internalGetMutableTaskResources().clear();
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
      return org.apache.kyuubi.engine.spark.connect.grpc.proto.Common
          .internal_static_spark_connect_ResourceProfile_descriptor;
    }

    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.grpc.proto.ResourceProfile
        getDefaultInstanceForType() {
      return org.apache.kyuubi.engine.spark.connect.grpc.proto.ResourceProfile.getDefaultInstance();
    }

    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.grpc.proto.ResourceProfile build() {
      org.apache.kyuubi.engine.spark.connect.grpc.proto.ResourceProfile result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.grpc.proto.ResourceProfile buildPartial() {
      org.apache.kyuubi.engine.spark.connect.grpc.proto.ResourceProfile result =
          new org.apache.kyuubi.engine.spark.connect.grpc.proto.ResourceProfile(this);
      int from_bitField0_ = bitField0_;
      result.executorResources_ = internalGetExecutorResources();
      result.executorResources_.makeImmutable();
      result.taskResources_ = internalGetTaskResources();
      result.taskResources_.makeImmutable();
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }

    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.setField(field, value);
    }

    @java.lang.Override
    public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }

    @java.lang.Override
    public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }

    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }

    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof org.apache.kyuubi.engine.spark.connect.grpc.proto.ResourceProfile) {
        return mergeFrom((org.apache.kyuubi.engine.spark.connect.grpc.proto.ResourceProfile) other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(
        org.apache.kyuubi.engine.spark.connect.grpc.proto.ResourceProfile other) {
      if (other
          == org.apache.kyuubi.engine.spark.connect.grpc.proto.ResourceProfile.getDefaultInstance())
        return this;
      internalGetMutableExecutorResources().mergeFrom(other.internalGetExecutorResources());
      internalGetMutableTaskResources().mergeFrom(other.internalGetTaskResources());
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10:
              {
                com.google.protobuf.MapEntry<
                        java.lang.String,
                        org.apache.kyuubi.engine.spark.connect.grpc.proto.ExecutorResourceRequest>
                    executorResources__ =
                        input.readMessage(
                            ExecutorResourcesDefaultEntryHolder.defaultEntry.getParserForType(),
                            extensionRegistry);
                internalGetMutableExecutorResources()
                    .getMutableMap()
                    .put(executorResources__.getKey(), executorResources__.getValue());
                break;
              } // case 10
            case 18:
              {
                com.google.protobuf.MapEntry<
                        java.lang.String,
                        org.apache.kyuubi.engine.spark.connect.grpc.proto.TaskResourceRequest>
                    taskResources__ =
                        input.readMessage(
                            TaskResourcesDefaultEntryHolder.defaultEntry.getParserForType(),
                            extensionRegistry);
                internalGetMutableTaskResources()
                    .getMutableMap()
                    .put(taskResources__.getKey(), taskResources__.getValue());
                break;
              } // case 18
            default:
              {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }

    private int bitField0_;

    private com.google.protobuf.MapField<
            java.lang.String,
            org.apache.kyuubi.engine.spark.connect.grpc.proto.ExecutorResourceRequest>
        executorResources_;

    private com.google.protobuf.MapField<
            java.lang.String,
            org.apache.kyuubi.engine.spark.connect.grpc.proto.ExecutorResourceRequest>
        internalGetExecutorResources() {
      if (executorResources_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            ExecutorResourcesDefaultEntryHolder.defaultEntry);
      }
      return executorResources_;
    }

    private com.google.protobuf.MapField<
            java.lang.String,
            org.apache.kyuubi.engine.spark.connect.grpc.proto.ExecutorResourceRequest>
        internalGetMutableExecutorResources() {
      onChanged();
      ;
      if (executorResources_ == null) {
        executorResources_ =
            com.google.protobuf.MapField.newMapField(
                ExecutorResourcesDefaultEntryHolder.defaultEntry);
      }
      if (!executorResources_.isMutable()) {
        executorResources_ = executorResources_.copy();
      }
      return executorResources_;
    }

    public int getExecutorResourcesCount() {
      return internalGetExecutorResources().getMap().size();
    }
    /**
     *
     *
     * <pre>
     * (Optional) Resource requests for executors. Mapped from the resource name
     * (e.g., cores, memory, CPU) to its specific request.
     * </pre>
     *
     * <code>map&lt;string, .spark.connect.ExecutorResourceRequest&gt; executor_resources = 1;
     * </code>
     */
    @java.lang.Override
    public boolean containsExecutorResources(java.lang.String key) {
      if (key == null) {
        throw new NullPointerException("map key");
      }
      return internalGetExecutorResources().getMap().containsKey(key);
    }
    /** Use {@link #getExecutorResourcesMap()} instead. */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<
            java.lang.String,
            org.apache.kyuubi.engine.spark.connect.grpc.proto.ExecutorResourceRequest>
        getExecutorResources() {
      return getExecutorResourcesMap();
    }
    /**
     *
     *
     * <pre>
     * (Optional) Resource requests for executors. Mapped from the resource name
     * (e.g., cores, memory, CPU) to its specific request.
     * </pre>
     *
     * <code>map&lt;string, .spark.connect.ExecutorResourceRequest&gt; executor_resources = 1;
     * </code>
     */
    @java.lang.Override
    public java.util.Map<
            java.lang.String,
            org.apache.kyuubi.engine.spark.connect.grpc.proto.ExecutorResourceRequest>
        getExecutorResourcesMap() {
      return internalGetExecutorResources().getMap();
    }
    /**
     *
     *
     * <pre>
     * (Optional) Resource requests for executors. Mapped from the resource name
     * (e.g., cores, memory, CPU) to its specific request.
     * </pre>
     *
     * <code>map&lt;string, .spark.connect.ExecutorResourceRequest&gt; executor_resources = 1;
     * </code>
     */
    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.grpc.proto.ExecutorResourceRequest
        getExecutorResourcesOrDefault(
            java.lang.String key,
            org.apache.kyuubi.engine.spark.connect.grpc.proto.ExecutorResourceRequest
                defaultValue) {
      if (key == null) {
        throw new NullPointerException("map key");
      }
      java.util.Map<
              java.lang.String,
              org.apache.kyuubi.engine.spark.connect.grpc.proto.ExecutorResourceRequest>
          map = internalGetExecutorResources().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     *
     *
     * <pre>
     * (Optional) Resource requests for executors. Mapped from the resource name
     * (e.g., cores, memory, CPU) to its specific request.
     * </pre>
     *
     * <code>map&lt;string, .spark.connect.ExecutorResourceRequest&gt; executor_resources = 1;
     * </code>
     */
    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.grpc.proto.ExecutorResourceRequest
        getExecutorResourcesOrThrow(java.lang.String key) {
      if (key == null) {
        throw new NullPointerException("map key");
      }
      java.util.Map<
              java.lang.String,
              org.apache.kyuubi.engine.spark.connect.grpc.proto.ExecutorResourceRequest>
          map = internalGetExecutorResources().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public Builder clearExecutorResources() {
      internalGetMutableExecutorResources().getMutableMap().clear();
      return this;
    }
    /**
     *
     *
     * <pre>
     * (Optional) Resource requests for executors. Mapped from the resource name
     * (e.g., cores, memory, CPU) to its specific request.
     * </pre>
     *
     * <code>map&lt;string, .spark.connect.ExecutorResourceRequest&gt; executor_resources = 1;
     * </code>
     */
    public Builder removeExecutorResources(java.lang.String key) {
      if (key == null) {
        throw new NullPointerException("map key");
      }
      internalGetMutableExecutorResources().getMutableMap().remove(key);
      return this;
    }
    /** Use alternate mutation accessors instead. */
    @java.lang.Deprecated
    public java.util.Map<
            java.lang.String,
            org.apache.kyuubi.engine.spark.connect.grpc.proto.ExecutorResourceRequest>
        getMutableExecutorResources() {
      return internalGetMutableExecutorResources().getMutableMap();
    }
    /**
     *
     *
     * <pre>
     * (Optional) Resource requests for executors. Mapped from the resource name
     * (e.g., cores, memory, CPU) to its specific request.
     * </pre>
     *
     * <code>map&lt;string, .spark.connect.ExecutorResourceRequest&gt; executor_resources = 1;
     * </code>
     */
    public Builder putExecutorResources(
        java.lang.String key,
        org.apache.kyuubi.engine.spark.connect.grpc.proto.ExecutorResourceRequest value) {
      if (key == null) {
        throw new NullPointerException("map key");
      }
      if (value == null) {
        throw new NullPointerException("map value");
      }

      internalGetMutableExecutorResources().getMutableMap().put(key, value);
      return this;
    }
    /**
     *
     *
     * <pre>
     * (Optional) Resource requests for executors. Mapped from the resource name
     * (e.g., cores, memory, CPU) to its specific request.
     * </pre>
     *
     * <code>map&lt;string, .spark.connect.ExecutorResourceRequest&gt; executor_resources = 1;
     * </code>
     */
    public Builder putAllExecutorResources(
        java.util.Map<
                java.lang.String,
                org.apache.kyuubi.engine.spark.connect.grpc.proto.ExecutorResourceRequest>
            values) {
      internalGetMutableExecutorResources().getMutableMap().putAll(values);
      return this;
    }

    private com.google.protobuf.MapField<
            java.lang.String, org.apache.kyuubi.engine.spark.connect.grpc.proto.TaskResourceRequest>
        taskResources_;

    private com.google.protobuf.MapField<
            java.lang.String, org.apache.kyuubi.engine.spark.connect.grpc.proto.TaskResourceRequest>
        internalGetTaskResources() {
      if (taskResources_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            TaskResourcesDefaultEntryHolder.defaultEntry);
      }
      return taskResources_;
    }

    private com.google.protobuf.MapField<
            java.lang.String, org.apache.kyuubi.engine.spark.connect.grpc.proto.TaskResourceRequest>
        internalGetMutableTaskResources() {
      onChanged();
      ;
      if (taskResources_ == null) {
        taskResources_ =
            com.google.protobuf.MapField.newMapField(TaskResourcesDefaultEntryHolder.defaultEntry);
      }
      if (!taskResources_.isMutable()) {
        taskResources_ = taskResources_.copy();
      }
      return taskResources_;
    }

    public int getTaskResourcesCount() {
      return internalGetTaskResources().getMap().size();
    }
    /**
     *
     *
     * <pre>
     * (Optional) Resource requests for tasks. Mapped from the resource name
     * (e.g., cores, memory, CPU) to its specific request.
     * </pre>
     *
     * <code>map&lt;string, .spark.connect.TaskResourceRequest&gt; task_resources = 2;</code>
     */
    @java.lang.Override
    public boolean containsTaskResources(java.lang.String key) {
      if (key == null) {
        throw new NullPointerException("map key");
      }
      return internalGetTaskResources().getMap().containsKey(key);
    }
    /** Use {@link #getTaskResourcesMap()} instead. */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<
            java.lang.String, org.apache.kyuubi.engine.spark.connect.grpc.proto.TaskResourceRequest>
        getTaskResources() {
      return getTaskResourcesMap();
    }
    /**
     *
     *
     * <pre>
     * (Optional) Resource requests for tasks. Mapped from the resource name
     * (e.g., cores, memory, CPU) to its specific request.
     * </pre>
     *
     * <code>map&lt;string, .spark.connect.TaskResourceRequest&gt; task_resources = 2;</code>
     */
    @java.lang.Override
    public java.util.Map<
            java.lang.String, org.apache.kyuubi.engine.spark.connect.grpc.proto.TaskResourceRequest>
        getTaskResourcesMap() {
      return internalGetTaskResources().getMap();
    }
    /**
     *
     *
     * <pre>
     * (Optional) Resource requests for tasks. Mapped from the resource name
     * (e.g., cores, memory, CPU) to its specific request.
     * </pre>
     *
     * <code>map&lt;string, .spark.connect.TaskResourceRequest&gt; task_resources = 2;</code>
     */
    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.grpc.proto.TaskResourceRequest
        getTaskResourcesOrDefault(
            java.lang.String key,
            org.apache.kyuubi.engine.spark.connect.grpc.proto.TaskResourceRequest defaultValue) {
      if (key == null) {
        throw new NullPointerException("map key");
      }
      java.util.Map<
              java.lang.String,
              org.apache.kyuubi.engine.spark.connect.grpc.proto.TaskResourceRequest>
          map = internalGetTaskResources().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     *
     *
     * <pre>
     * (Optional) Resource requests for tasks. Mapped from the resource name
     * (e.g., cores, memory, CPU) to its specific request.
     * </pre>
     *
     * <code>map&lt;string, .spark.connect.TaskResourceRequest&gt; task_resources = 2;</code>
     */
    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.grpc.proto.TaskResourceRequest
        getTaskResourcesOrThrow(java.lang.String key) {
      if (key == null) {
        throw new NullPointerException("map key");
      }
      java.util.Map<
              java.lang.String,
              org.apache.kyuubi.engine.spark.connect.grpc.proto.TaskResourceRequest>
          map = internalGetTaskResources().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public Builder clearTaskResources() {
      internalGetMutableTaskResources().getMutableMap().clear();
      return this;
    }
    /**
     *
     *
     * <pre>
     * (Optional) Resource requests for tasks. Mapped from the resource name
     * (e.g., cores, memory, CPU) to its specific request.
     * </pre>
     *
     * <code>map&lt;string, .spark.connect.TaskResourceRequest&gt; task_resources = 2;</code>
     */
    public Builder removeTaskResources(java.lang.String key) {
      if (key == null) {
        throw new NullPointerException("map key");
      }
      internalGetMutableTaskResources().getMutableMap().remove(key);
      return this;
    }
    /** Use alternate mutation accessors instead. */
    @java.lang.Deprecated
    public java.util.Map<
            java.lang.String, org.apache.kyuubi.engine.spark.connect.grpc.proto.TaskResourceRequest>
        getMutableTaskResources() {
      return internalGetMutableTaskResources().getMutableMap();
    }
    /**
     *
     *
     * <pre>
     * (Optional) Resource requests for tasks. Mapped from the resource name
     * (e.g., cores, memory, CPU) to its specific request.
     * </pre>
     *
     * <code>map&lt;string, .spark.connect.TaskResourceRequest&gt; task_resources = 2;</code>
     */
    public Builder putTaskResources(
        java.lang.String key,
        org.apache.kyuubi.engine.spark.connect.grpc.proto.TaskResourceRequest value) {
      if (key == null) {
        throw new NullPointerException("map key");
      }
      if (value == null) {
        throw new NullPointerException("map value");
      }

      internalGetMutableTaskResources().getMutableMap().put(key, value);
      return this;
    }
    /**
     *
     *
     * <pre>
     * (Optional) Resource requests for tasks. Mapped from the resource name
     * (e.g., cores, memory, CPU) to its specific request.
     * </pre>
     *
     * <code>map&lt;string, .spark.connect.TaskResourceRequest&gt; task_resources = 2;</code>
     */
    public Builder putAllTaskResources(
        java.util.Map<
                java.lang.String,
                org.apache.kyuubi.engine.spark.connect.grpc.proto.TaskResourceRequest>
            values) {
      internalGetMutableTaskResources().getMutableMap().putAll(values);
      return this;
    }

    @java.lang.Override
    public final Builder setUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }

    // @@protoc_insertion_point(builder_scope:spark.connect.ResourceProfile)
  }

  // @@protoc_insertion_point(class_scope:spark.connect.ResourceProfile)
  private static final org.apache.kyuubi.engine.spark.connect.grpc.proto.ResourceProfile
      DEFAULT_INSTANCE;

  static {
    DEFAULT_INSTANCE = new org.apache.kyuubi.engine.spark.connect.grpc.proto.ResourceProfile();
  }

  public static org.apache.kyuubi.engine.spark.connect.grpc.proto.ResourceProfile
      getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<ResourceProfile> PARSER =
      new com.google.protobuf.AbstractParser<ResourceProfile>() {
        @java.lang.Override
        public ResourceProfile parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

  public static com.google.protobuf.Parser<ResourceProfile> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<ResourceProfile> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public org.apache.kyuubi.engine.spark.connect.grpc.proto.ResourceProfile
      getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }
}
