// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: spark/connect/base.proto

package org.apache.kyuubi.engine.spark.connect.proto;

/**
 * <pre>
 * Request to update or fetch the configurations.
 * </pre>
 *
 * Protobuf type {@code spark.connect.ConfigRequest}
 */
public final class ConfigRequest extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:spark.connect.ConfigRequest)
    ConfigRequestOrBuilder {
private static final long serialVersionUID = 0L;
  // Use ConfigRequest.newBuilder() to construct.
  private ConfigRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private ConfigRequest() {
    sessionId_ = "";
    clientType_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new ConfigRequest();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return org.apache.kyuubi.engine.spark.connect.proto.Base.internal_static_spark_connect_ConfigRequest_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return org.apache.kyuubi.engine.spark.connect.proto.Base.internal_static_spark_connect_ConfigRequest_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.class, org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Builder.class);
  }

  public interface OperationOrBuilder extends
      // @@protoc_insertion_point(interface_extends:spark.connect.ConfigRequest.Operation)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.spark.connect.ConfigRequest.Set set = 1;</code>
     * @return Whether the set field is set.
     */
    boolean hasSet();
    /**
     * <code>.spark.connect.ConfigRequest.Set set = 1;</code>
     * @return The set.
     */
    org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Set getSet();
    /**
     * <code>.spark.connect.ConfigRequest.Set set = 1;</code>
     */
    org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.SetOrBuilder getSetOrBuilder();

    /**
     * <code>.spark.connect.ConfigRequest.Get get = 2;</code>
     * @return Whether the get field is set.
     */
    boolean hasGet();
    /**
     * <code>.spark.connect.ConfigRequest.Get get = 2;</code>
     * @return The get.
     */
    org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Get getGet();
    /**
     * <code>.spark.connect.ConfigRequest.Get get = 2;</code>
     */
    org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetOrBuilder getGetOrBuilder();

    /**
     * <code>.spark.connect.ConfigRequest.GetWithDefault get_with_default = 3;</code>
     * @return Whether the getWithDefault field is set.
     */
    boolean hasGetWithDefault();
    /**
     * <code>.spark.connect.ConfigRequest.GetWithDefault get_with_default = 3;</code>
     * @return The getWithDefault.
     */
    org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetWithDefault getGetWithDefault();
    /**
     * <code>.spark.connect.ConfigRequest.GetWithDefault get_with_default = 3;</code>
     */
    org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetWithDefaultOrBuilder getGetWithDefaultOrBuilder();

    /**
     * <code>.spark.connect.ConfigRequest.GetOption get_option = 4;</code>
     * @return Whether the getOption field is set.
     */
    boolean hasGetOption();
    /**
     * <code>.spark.connect.ConfigRequest.GetOption get_option = 4;</code>
     * @return The getOption.
     */
    org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetOption getGetOption();
    /**
     * <code>.spark.connect.ConfigRequest.GetOption get_option = 4;</code>
     */
    org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetOptionOrBuilder getGetOptionOrBuilder();

    /**
     * <code>.spark.connect.ConfigRequest.GetAll get_all = 5;</code>
     * @return Whether the getAll field is set.
     */
    boolean hasGetAll();
    /**
     * <code>.spark.connect.ConfigRequest.GetAll get_all = 5;</code>
     * @return The getAll.
     */
    org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetAll getGetAll();
    /**
     * <code>.spark.connect.ConfigRequest.GetAll get_all = 5;</code>
     */
    org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetAllOrBuilder getGetAllOrBuilder();

    /**
     * <code>.spark.connect.ConfigRequest.Unset unset = 6;</code>
     * @return Whether the unset field is set.
     */
    boolean hasUnset();
    /**
     * <code>.spark.connect.ConfigRequest.Unset unset = 6;</code>
     * @return The unset.
     */
    org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Unset getUnset();
    /**
     * <code>.spark.connect.ConfigRequest.Unset unset = 6;</code>
     */
    org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.UnsetOrBuilder getUnsetOrBuilder();

    /**
     * <code>.spark.connect.ConfigRequest.IsModifiable is_modifiable = 7;</code>
     * @return Whether the isModifiable field is set.
     */
    boolean hasIsModifiable();
    /**
     * <code>.spark.connect.ConfigRequest.IsModifiable is_modifiable = 7;</code>
     * @return The isModifiable.
     */
    org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.IsModifiable getIsModifiable();
    /**
     * <code>.spark.connect.ConfigRequest.IsModifiable is_modifiable = 7;</code>
     */
    org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.IsModifiableOrBuilder getIsModifiableOrBuilder();

    public org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Operation.OpTypeCase getOpTypeCase();
  }
  /**
   * Protobuf type {@code spark.connect.ConfigRequest.Operation}
   */
  public static final class Operation extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:spark.connect.ConfigRequest.Operation)
      OperationOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Operation.newBuilder() to construct.
    private Operation(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Operation() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Operation();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.kyuubi.engine.spark.connect.proto.Base.internal_static_spark_connect_ConfigRequest_Operation_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.kyuubi.engine.spark.connect.proto.Base.internal_static_spark_connect_ConfigRequest_Operation_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Operation.class, org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Operation.Builder.class);
    }

    private int opTypeCase_ = 0;
    private java.lang.Object opType_;
    public enum OpTypeCase
        implements com.google.protobuf.Internal.EnumLite,
            com.google.protobuf.AbstractMessage.InternalOneOfEnum {
      SET(1),
      GET(2),
      GET_WITH_DEFAULT(3),
      GET_OPTION(4),
      GET_ALL(5),
      UNSET(6),
      IS_MODIFIABLE(7),
      OPTYPE_NOT_SET(0);
      private final int value;
      private OpTypeCase(int value) {
        this.value = value;
      }
      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static OpTypeCase valueOf(int value) {
        return forNumber(value);
      }

      public static OpTypeCase forNumber(int value) {
        switch (value) {
          case 1: return SET;
          case 2: return GET;
          case 3: return GET_WITH_DEFAULT;
          case 4: return GET_OPTION;
          case 5: return GET_ALL;
          case 6: return UNSET;
          case 7: return IS_MODIFIABLE;
          case 0: return OPTYPE_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public OpTypeCase
    getOpTypeCase() {
      return OpTypeCase.forNumber(
          opTypeCase_);
    }

    public static final int SET_FIELD_NUMBER = 1;
    /**
     * <code>.spark.connect.ConfigRequest.Set set = 1;</code>
     * @return Whether the set field is set.
     */
    @java.lang.Override
    public boolean hasSet() {
      return opTypeCase_ == 1;
    }
    /**
     * <code>.spark.connect.ConfigRequest.Set set = 1;</code>
     * @return The set.
     */
    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Set getSet() {
      if (opTypeCase_ == 1) {
         return (org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Set) opType_;
      }
      return org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Set.getDefaultInstance();
    }
    /**
     * <code>.spark.connect.ConfigRequest.Set set = 1;</code>
     */
    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.SetOrBuilder getSetOrBuilder() {
      if (opTypeCase_ == 1) {
         return (org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Set) opType_;
      }
      return org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Set.getDefaultInstance();
    }

    public static final int GET_FIELD_NUMBER = 2;
    /**
     * <code>.spark.connect.ConfigRequest.Get get = 2;</code>
     * @return Whether the get field is set.
     */
    @java.lang.Override
    public boolean hasGet() {
      return opTypeCase_ == 2;
    }
    /**
     * <code>.spark.connect.ConfigRequest.Get get = 2;</code>
     * @return The get.
     */
    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Get getGet() {
      if (opTypeCase_ == 2) {
         return (org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Get) opType_;
      }
      return org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Get.getDefaultInstance();
    }
    /**
     * <code>.spark.connect.ConfigRequest.Get get = 2;</code>
     */
    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetOrBuilder getGetOrBuilder() {
      if (opTypeCase_ == 2) {
         return (org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Get) opType_;
      }
      return org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Get.getDefaultInstance();
    }

    public static final int GET_WITH_DEFAULT_FIELD_NUMBER = 3;
    /**
     * <code>.spark.connect.ConfigRequest.GetWithDefault get_with_default = 3;</code>
     * @return Whether the getWithDefault field is set.
     */
    @java.lang.Override
    public boolean hasGetWithDefault() {
      return opTypeCase_ == 3;
    }
    /**
     * <code>.spark.connect.ConfigRequest.GetWithDefault get_with_default = 3;</code>
     * @return The getWithDefault.
     */
    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetWithDefault getGetWithDefault() {
      if (opTypeCase_ == 3) {
         return (org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetWithDefault) opType_;
      }
      return org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetWithDefault.getDefaultInstance();
    }
    /**
     * <code>.spark.connect.ConfigRequest.GetWithDefault get_with_default = 3;</code>
     */
    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetWithDefaultOrBuilder getGetWithDefaultOrBuilder() {
      if (opTypeCase_ == 3) {
         return (org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetWithDefault) opType_;
      }
      return org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetWithDefault.getDefaultInstance();
    }

    public static final int GET_OPTION_FIELD_NUMBER = 4;
    /**
     * <code>.spark.connect.ConfigRequest.GetOption get_option = 4;</code>
     * @return Whether the getOption field is set.
     */
    @java.lang.Override
    public boolean hasGetOption() {
      return opTypeCase_ == 4;
    }
    /**
     * <code>.spark.connect.ConfigRequest.GetOption get_option = 4;</code>
     * @return The getOption.
     */
    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetOption getGetOption() {
      if (opTypeCase_ == 4) {
         return (org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetOption) opType_;
      }
      return org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetOption.getDefaultInstance();
    }
    /**
     * <code>.spark.connect.ConfigRequest.GetOption get_option = 4;</code>
     */
    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetOptionOrBuilder getGetOptionOrBuilder() {
      if (opTypeCase_ == 4) {
         return (org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetOption) opType_;
      }
      return org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetOption.getDefaultInstance();
    }

    public static final int GET_ALL_FIELD_NUMBER = 5;
    /**
     * <code>.spark.connect.ConfigRequest.GetAll get_all = 5;</code>
     * @return Whether the getAll field is set.
     */
    @java.lang.Override
    public boolean hasGetAll() {
      return opTypeCase_ == 5;
    }
    /**
     * <code>.spark.connect.ConfigRequest.GetAll get_all = 5;</code>
     * @return The getAll.
     */
    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetAll getGetAll() {
      if (opTypeCase_ == 5) {
         return (org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetAll) opType_;
      }
      return org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetAll.getDefaultInstance();
    }
    /**
     * <code>.spark.connect.ConfigRequest.GetAll get_all = 5;</code>
     */
    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetAllOrBuilder getGetAllOrBuilder() {
      if (opTypeCase_ == 5) {
         return (org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetAll) opType_;
      }
      return org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetAll.getDefaultInstance();
    }

    public static final int UNSET_FIELD_NUMBER = 6;
    /**
     * <code>.spark.connect.ConfigRequest.Unset unset = 6;</code>
     * @return Whether the unset field is set.
     */
    @java.lang.Override
    public boolean hasUnset() {
      return opTypeCase_ == 6;
    }
    /**
     * <code>.spark.connect.ConfigRequest.Unset unset = 6;</code>
     * @return The unset.
     */
    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Unset getUnset() {
      if (opTypeCase_ == 6) {
         return (org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Unset) opType_;
      }
      return org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Unset.getDefaultInstance();
    }
    /**
     * <code>.spark.connect.ConfigRequest.Unset unset = 6;</code>
     */
    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.UnsetOrBuilder getUnsetOrBuilder() {
      if (opTypeCase_ == 6) {
         return (org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Unset) opType_;
      }
      return org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Unset.getDefaultInstance();
    }

    public static final int IS_MODIFIABLE_FIELD_NUMBER = 7;
    /**
     * <code>.spark.connect.ConfigRequest.IsModifiable is_modifiable = 7;</code>
     * @return Whether the isModifiable field is set.
     */
    @java.lang.Override
    public boolean hasIsModifiable() {
      return opTypeCase_ == 7;
    }
    /**
     * <code>.spark.connect.ConfigRequest.IsModifiable is_modifiable = 7;</code>
     * @return The isModifiable.
     */
    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.IsModifiable getIsModifiable() {
      if (opTypeCase_ == 7) {
         return (org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.IsModifiable) opType_;
      }
      return org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.IsModifiable.getDefaultInstance();
    }
    /**
     * <code>.spark.connect.ConfigRequest.IsModifiable is_modifiable = 7;</code>
     */
    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.IsModifiableOrBuilder getIsModifiableOrBuilder() {
      if (opTypeCase_ == 7) {
         return (org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.IsModifiable) opType_;
      }
      return org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.IsModifiable.getDefaultInstance();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (opTypeCase_ == 1) {
        output.writeMessage(1, (org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Set) opType_);
      }
      if (opTypeCase_ == 2) {
        output.writeMessage(2, (org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Get) opType_);
      }
      if (opTypeCase_ == 3) {
        output.writeMessage(3, (org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetWithDefault) opType_);
      }
      if (opTypeCase_ == 4) {
        output.writeMessage(4, (org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetOption) opType_);
      }
      if (opTypeCase_ == 5) {
        output.writeMessage(5, (org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetAll) opType_);
      }
      if (opTypeCase_ == 6) {
        output.writeMessage(6, (org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Unset) opType_);
      }
      if (opTypeCase_ == 7) {
        output.writeMessage(7, (org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.IsModifiable) opType_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (opTypeCase_ == 1) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, (org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Set) opType_);
      }
      if (opTypeCase_ == 2) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, (org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Get) opType_);
      }
      if (opTypeCase_ == 3) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, (org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetWithDefault) opType_);
      }
      if (opTypeCase_ == 4) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, (org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetOption) opType_);
      }
      if (opTypeCase_ == 5) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, (org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetAll) opType_);
      }
      if (opTypeCase_ == 6) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, (org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Unset) opType_);
      }
      if (opTypeCase_ == 7) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, (org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.IsModifiable) opType_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Operation)) {
        return super.equals(obj);
      }
      org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Operation other = (org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Operation) obj;

      if (!getOpTypeCase().equals(other.getOpTypeCase())) return false;
      switch (opTypeCase_) {
        case 1:
          if (!getSet()
              .equals(other.getSet())) return false;
          break;
        case 2:
          if (!getGet()
              .equals(other.getGet())) return false;
          break;
        case 3:
          if (!getGetWithDefault()
              .equals(other.getGetWithDefault())) return false;
          break;
        case 4:
          if (!getGetOption()
              .equals(other.getGetOption())) return false;
          break;
        case 5:
          if (!getGetAll()
              .equals(other.getGetAll())) return false;
          break;
        case 6:
          if (!getUnset()
              .equals(other.getUnset())) return false;
          break;
        case 7:
          if (!getIsModifiable()
              .equals(other.getIsModifiable())) return false;
          break;
        case 0:
        default:
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      switch (opTypeCase_) {
        case 1:
          hash = (37 * hash) + SET_FIELD_NUMBER;
          hash = (53 * hash) + getSet().hashCode();
          break;
        case 2:
          hash = (37 * hash) + GET_FIELD_NUMBER;
          hash = (53 * hash) + getGet().hashCode();
          break;
        case 3:
          hash = (37 * hash) + GET_WITH_DEFAULT_FIELD_NUMBER;
          hash = (53 * hash) + getGetWithDefault().hashCode();
          break;
        case 4:
          hash = (37 * hash) + GET_OPTION_FIELD_NUMBER;
          hash = (53 * hash) + getGetOption().hashCode();
          break;
        case 5:
          hash = (37 * hash) + GET_ALL_FIELD_NUMBER;
          hash = (53 * hash) + getGetAll().hashCode();
          break;
        case 6:
          hash = (37 * hash) + UNSET_FIELD_NUMBER;
          hash = (53 * hash) + getUnset().hashCode();
          break;
        case 7:
          hash = (37 * hash) + IS_MODIFIABLE_FIELD_NUMBER;
          hash = (53 * hash) + getIsModifiable().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Operation parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Operation parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Operation parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Operation parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Operation parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Operation parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Operation parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Operation parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Operation parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Operation parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Operation parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Operation parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Operation prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code spark.connect.ConfigRequest.Operation}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:spark.connect.ConfigRequest.Operation)
        org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.OperationOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.kyuubi.engine.spark.connect.proto.Base.internal_static_spark_connect_ConfigRequest_Operation_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.kyuubi.engine.spark.connect.proto.Base.internal_static_spark_connect_ConfigRequest_Operation_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Operation.class, org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Operation.Builder.class);
      }

      // Construct using org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Operation.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (setBuilder_ != null) {
          setBuilder_.clear();
        }
        if (getBuilder_ != null) {
          getBuilder_.clear();
        }
        if (getWithDefaultBuilder_ != null) {
          getWithDefaultBuilder_.clear();
        }
        if (getOptionBuilder_ != null) {
          getOptionBuilder_.clear();
        }
        if (getAllBuilder_ != null) {
          getAllBuilder_.clear();
        }
        if (unsetBuilder_ != null) {
          unsetBuilder_.clear();
        }
        if (isModifiableBuilder_ != null) {
          isModifiableBuilder_.clear();
        }
        opTypeCase_ = 0;
        opType_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.kyuubi.engine.spark.connect.proto.Base.internal_static_spark_connect_ConfigRequest_Operation_descriptor;
      }

      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Operation getDefaultInstanceForType() {
        return org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Operation.getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Operation build() {
        org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Operation result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Operation buildPartial() {
        org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Operation result = new org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Operation(this);
        if (opTypeCase_ == 1) {
          if (setBuilder_ == null) {
            result.opType_ = opType_;
          } else {
            result.opType_ = setBuilder_.build();
          }
        }
        if (opTypeCase_ == 2) {
          if (getBuilder_ == null) {
            result.opType_ = opType_;
          } else {
            result.opType_ = getBuilder_.build();
          }
        }
        if (opTypeCase_ == 3) {
          if (getWithDefaultBuilder_ == null) {
            result.opType_ = opType_;
          } else {
            result.opType_ = getWithDefaultBuilder_.build();
          }
        }
        if (opTypeCase_ == 4) {
          if (getOptionBuilder_ == null) {
            result.opType_ = opType_;
          } else {
            result.opType_ = getOptionBuilder_.build();
          }
        }
        if (opTypeCase_ == 5) {
          if (getAllBuilder_ == null) {
            result.opType_ = opType_;
          } else {
            result.opType_ = getAllBuilder_.build();
          }
        }
        if (opTypeCase_ == 6) {
          if (unsetBuilder_ == null) {
            result.opType_ = opType_;
          } else {
            result.opType_ = unsetBuilder_.build();
          }
        }
        if (opTypeCase_ == 7) {
          if (isModifiableBuilder_ == null) {
            result.opType_ = opType_;
          } else {
            result.opType_ = isModifiableBuilder_.build();
          }
        }
        result.opTypeCase_ = opTypeCase_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Operation) {
          return mergeFrom((org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Operation)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Operation other) {
        if (other == org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Operation.getDefaultInstance()) return this;
        switch (other.getOpTypeCase()) {
          case SET: {
            mergeSet(other.getSet());
            break;
          }
          case GET: {
            mergeGet(other.getGet());
            break;
          }
          case GET_WITH_DEFAULT: {
            mergeGetWithDefault(other.getGetWithDefault());
            break;
          }
          case GET_OPTION: {
            mergeGetOption(other.getGetOption());
            break;
          }
          case GET_ALL: {
            mergeGetAll(other.getGetAll());
            break;
          }
          case UNSET: {
            mergeUnset(other.getUnset());
            break;
          }
          case IS_MODIFIABLE: {
            mergeIsModifiable(other.getIsModifiable());
            break;
          }
          case OPTYPE_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                input.readMessage(
                    getSetFieldBuilder().getBuilder(),
                    extensionRegistry);
                opTypeCase_ = 1;
                break;
              } // case 10
              case 18: {
                input.readMessage(
                    getGetFieldBuilder().getBuilder(),
                    extensionRegistry);
                opTypeCase_ = 2;
                break;
              } // case 18
              case 26: {
                input.readMessage(
                    getGetWithDefaultFieldBuilder().getBuilder(),
                    extensionRegistry);
                opTypeCase_ = 3;
                break;
              } // case 26
              case 34: {
                input.readMessage(
                    getGetOptionFieldBuilder().getBuilder(),
                    extensionRegistry);
                opTypeCase_ = 4;
                break;
              } // case 34
              case 42: {
                input.readMessage(
                    getGetAllFieldBuilder().getBuilder(),
                    extensionRegistry);
                opTypeCase_ = 5;
                break;
              } // case 42
              case 50: {
                input.readMessage(
                    getUnsetFieldBuilder().getBuilder(),
                    extensionRegistry);
                opTypeCase_ = 6;
                break;
              } // case 50
              case 58: {
                input.readMessage(
                    getIsModifiableFieldBuilder().getBuilder(),
                    extensionRegistry);
                opTypeCase_ = 7;
                break;
              } // case 58
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int opTypeCase_ = 0;
      private java.lang.Object opType_;
      public OpTypeCase
          getOpTypeCase() {
        return OpTypeCase.forNumber(
            opTypeCase_);
      }

      public Builder clearOpType() {
        opTypeCase_ = 0;
        opType_ = null;
        onChanged();
        return this;
      }


      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Set, org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Set.Builder, org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.SetOrBuilder> setBuilder_;
      /**
       * <code>.spark.connect.ConfigRequest.Set set = 1;</code>
       * @return Whether the set field is set.
       */
      @java.lang.Override
      public boolean hasSet() {
        return opTypeCase_ == 1;
      }
      /**
       * <code>.spark.connect.ConfigRequest.Set set = 1;</code>
       * @return The set.
       */
      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Set getSet() {
        if (setBuilder_ == null) {
          if (opTypeCase_ == 1) {
            return (org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Set) opType_;
          }
          return org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Set.getDefaultInstance();
        } else {
          if (opTypeCase_ == 1) {
            return setBuilder_.getMessage();
          }
          return org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Set.getDefaultInstance();
        }
      }
      /**
       * <code>.spark.connect.ConfigRequest.Set set = 1;</code>
       */
      public Builder setSet(org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Set value) {
        if (setBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          opType_ = value;
          onChanged();
        } else {
          setBuilder_.setMessage(value);
        }
        opTypeCase_ = 1;
        return this;
      }
      /**
       * <code>.spark.connect.ConfigRequest.Set set = 1;</code>
       */
      public Builder setSet(
          org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Set.Builder builderForValue) {
        if (setBuilder_ == null) {
          opType_ = builderForValue.build();
          onChanged();
        } else {
          setBuilder_.setMessage(builderForValue.build());
        }
        opTypeCase_ = 1;
        return this;
      }
      /**
       * <code>.spark.connect.ConfigRequest.Set set = 1;</code>
       */
      public Builder mergeSet(org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Set value) {
        if (setBuilder_ == null) {
          if (opTypeCase_ == 1 &&
              opType_ != org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Set.getDefaultInstance()) {
            opType_ = org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Set.newBuilder((org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Set) opType_)
                .mergeFrom(value).buildPartial();
          } else {
            opType_ = value;
          }
          onChanged();
        } else {
          if (opTypeCase_ == 1) {
            setBuilder_.mergeFrom(value);
          } else {
            setBuilder_.setMessage(value);
          }
        }
        opTypeCase_ = 1;
        return this;
      }
      /**
       * <code>.spark.connect.ConfigRequest.Set set = 1;</code>
       */
      public Builder clearSet() {
        if (setBuilder_ == null) {
          if (opTypeCase_ == 1) {
            opTypeCase_ = 0;
            opType_ = null;
            onChanged();
          }
        } else {
          if (opTypeCase_ == 1) {
            opTypeCase_ = 0;
            opType_ = null;
          }
          setBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.spark.connect.ConfigRequest.Set set = 1;</code>
       */
      public org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Set.Builder getSetBuilder() {
        return getSetFieldBuilder().getBuilder();
      }
      /**
       * <code>.spark.connect.ConfigRequest.Set set = 1;</code>
       */
      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.SetOrBuilder getSetOrBuilder() {
        if ((opTypeCase_ == 1) && (setBuilder_ != null)) {
          return setBuilder_.getMessageOrBuilder();
        } else {
          if (opTypeCase_ == 1) {
            return (org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Set) opType_;
          }
          return org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Set.getDefaultInstance();
        }
      }
      /**
       * <code>.spark.connect.ConfigRequest.Set set = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Set, org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Set.Builder, org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.SetOrBuilder> 
          getSetFieldBuilder() {
        if (setBuilder_ == null) {
          if (!(opTypeCase_ == 1)) {
            opType_ = org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Set.getDefaultInstance();
          }
          setBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Set, org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Set.Builder, org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.SetOrBuilder>(
                  (org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Set) opType_,
                  getParentForChildren(),
                  isClean());
          opType_ = null;
        }
        opTypeCase_ = 1;
        onChanged();;
        return setBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Get, org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Get.Builder, org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetOrBuilder> getBuilder_;
      /**
       * <code>.spark.connect.ConfigRequest.Get get = 2;</code>
       * @return Whether the get field is set.
       */
      @java.lang.Override
      public boolean hasGet() {
        return opTypeCase_ == 2;
      }
      /**
       * <code>.spark.connect.ConfigRequest.Get get = 2;</code>
       * @return The get.
       */
      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Get getGet() {
        if (getBuilder_ == null) {
          if (opTypeCase_ == 2) {
            return (org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Get) opType_;
          }
          return org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Get.getDefaultInstance();
        } else {
          if (opTypeCase_ == 2) {
            return getBuilder_.getMessage();
          }
          return org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Get.getDefaultInstance();
        }
      }
      /**
       * <code>.spark.connect.ConfigRequest.Get get = 2;</code>
       */
      public Builder setGet(org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Get value) {
        if (getBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          opType_ = value;
          onChanged();
        } else {
          getBuilder_.setMessage(value);
        }
        opTypeCase_ = 2;
        return this;
      }
      /**
       * <code>.spark.connect.ConfigRequest.Get get = 2;</code>
       */
      public Builder setGet(
          org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Get.Builder builderForValue) {
        if (getBuilder_ == null) {
          opType_ = builderForValue.build();
          onChanged();
        } else {
          getBuilder_.setMessage(builderForValue.build());
        }
        opTypeCase_ = 2;
        return this;
      }
      /**
       * <code>.spark.connect.ConfigRequest.Get get = 2;</code>
       */
      public Builder mergeGet(org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Get value) {
        if (getBuilder_ == null) {
          if (opTypeCase_ == 2 &&
              opType_ != org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Get.getDefaultInstance()) {
            opType_ = org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Get.newBuilder((org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Get) opType_)
                .mergeFrom(value).buildPartial();
          } else {
            opType_ = value;
          }
          onChanged();
        } else {
          if (opTypeCase_ == 2) {
            getBuilder_.mergeFrom(value);
          } else {
            getBuilder_.setMessage(value);
          }
        }
        opTypeCase_ = 2;
        return this;
      }
      /**
       * <code>.spark.connect.ConfigRequest.Get get = 2;</code>
       */
      public Builder clearGet() {
        if (getBuilder_ == null) {
          if (opTypeCase_ == 2) {
            opTypeCase_ = 0;
            opType_ = null;
            onChanged();
          }
        } else {
          if (opTypeCase_ == 2) {
            opTypeCase_ = 0;
            opType_ = null;
          }
          getBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.spark.connect.ConfigRequest.Get get = 2;</code>
       */
      public org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Get.Builder getGetBuilder() {
        return getGetFieldBuilder().getBuilder();
      }
      /**
       * <code>.spark.connect.ConfigRequest.Get get = 2;</code>
       */
      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetOrBuilder getGetOrBuilder() {
        if ((opTypeCase_ == 2) && (getBuilder_ != null)) {
          return getBuilder_.getMessageOrBuilder();
        } else {
          if (opTypeCase_ == 2) {
            return (org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Get) opType_;
          }
          return org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Get.getDefaultInstance();
        }
      }
      /**
       * <code>.spark.connect.ConfigRequest.Get get = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Get, org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Get.Builder, org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetOrBuilder> 
          getGetFieldBuilder() {
        if (getBuilder_ == null) {
          if (!(opTypeCase_ == 2)) {
            opType_ = org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Get.getDefaultInstance();
          }
          getBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Get, org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Get.Builder, org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetOrBuilder>(
                  (org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Get) opType_,
                  getParentForChildren(),
                  isClean());
          opType_ = null;
        }
        opTypeCase_ = 2;
        onChanged();;
        return getBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetWithDefault, org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetWithDefault.Builder, org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetWithDefaultOrBuilder> getWithDefaultBuilder_;
      /**
       * <code>.spark.connect.ConfigRequest.GetWithDefault get_with_default = 3;</code>
       * @return Whether the getWithDefault field is set.
       */
      @java.lang.Override
      public boolean hasGetWithDefault() {
        return opTypeCase_ == 3;
      }
      /**
       * <code>.spark.connect.ConfigRequest.GetWithDefault get_with_default = 3;</code>
       * @return The getWithDefault.
       */
      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetWithDefault getGetWithDefault() {
        if (getWithDefaultBuilder_ == null) {
          if (opTypeCase_ == 3) {
            return (org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetWithDefault) opType_;
          }
          return org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetWithDefault.getDefaultInstance();
        } else {
          if (opTypeCase_ == 3) {
            return getWithDefaultBuilder_.getMessage();
          }
          return org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetWithDefault.getDefaultInstance();
        }
      }
      /**
       * <code>.spark.connect.ConfigRequest.GetWithDefault get_with_default = 3;</code>
       */
      public Builder setGetWithDefault(org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetWithDefault value) {
        if (getWithDefaultBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          opType_ = value;
          onChanged();
        } else {
          getWithDefaultBuilder_.setMessage(value);
        }
        opTypeCase_ = 3;
        return this;
      }
      /**
       * <code>.spark.connect.ConfigRequest.GetWithDefault get_with_default = 3;</code>
       */
      public Builder setGetWithDefault(
          org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetWithDefault.Builder builderForValue) {
        if (getWithDefaultBuilder_ == null) {
          opType_ = builderForValue.build();
          onChanged();
        } else {
          getWithDefaultBuilder_.setMessage(builderForValue.build());
        }
        opTypeCase_ = 3;
        return this;
      }
      /**
       * <code>.spark.connect.ConfigRequest.GetWithDefault get_with_default = 3;</code>
       */
      public Builder mergeGetWithDefault(org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetWithDefault value) {
        if (getWithDefaultBuilder_ == null) {
          if (opTypeCase_ == 3 &&
              opType_ != org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetWithDefault.getDefaultInstance()) {
            opType_ = org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetWithDefault.newBuilder((org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetWithDefault) opType_)
                .mergeFrom(value).buildPartial();
          } else {
            opType_ = value;
          }
          onChanged();
        } else {
          if (opTypeCase_ == 3) {
            getWithDefaultBuilder_.mergeFrom(value);
          } else {
            getWithDefaultBuilder_.setMessage(value);
          }
        }
        opTypeCase_ = 3;
        return this;
      }
      /**
       * <code>.spark.connect.ConfigRequest.GetWithDefault get_with_default = 3;</code>
       */
      public Builder clearGetWithDefault() {
        if (getWithDefaultBuilder_ == null) {
          if (opTypeCase_ == 3) {
            opTypeCase_ = 0;
            opType_ = null;
            onChanged();
          }
        } else {
          if (opTypeCase_ == 3) {
            opTypeCase_ = 0;
            opType_ = null;
          }
          getWithDefaultBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.spark.connect.ConfigRequest.GetWithDefault get_with_default = 3;</code>
       */
      public org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetWithDefault.Builder getGetWithDefaultBuilder() {
        return getGetWithDefaultFieldBuilder().getBuilder();
      }
      /**
       * <code>.spark.connect.ConfigRequest.GetWithDefault get_with_default = 3;</code>
       */
      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetWithDefaultOrBuilder getGetWithDefaultOrBuilder() {
        if ((opTypeCase_ == 3) && (getWithDefaultBuilder_ != null)) {
          return getWithDefaultBuilder_.getMessageOrBuilder();
        } else {
          if (opTypeCase_ == 3) {
            return (org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetWithDefault) opType_;
          }
          return org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetWithDefault.getDefaultInstance();
        }
      }
      /**
       * <code>.spark.connect.ConfigRequest.GetWithDefault get_with_default = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetWithDefault, org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetWithDefault.Builder, org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetWithDefaultOrBuilder> 
          getGetWithDefaultFieldBuilder() {
        if (getWithDefaultBuilder_ == null) {
          if (!(opTypeCase_ == 3)) {
            opType_ = org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetWithDefault.getDefaultInstance();
          }
          getWithDefaultBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetWithDefault, org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetWithDefault.Builder, org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetWithDefaultOrBuilder>(
                  (org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetWithDefault) opType_,
                  getParentForChildren(),
                  isClean());
          opType_ = null;
        }
        opTypeCase_ = 3;
        onChanged();;
        return getWithDefaultBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetOption, org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetOption.Builder, org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetOptionOrBuilder> getOptionBuilder_;
      /**
       * <code>.spark.connect.ConfigRequest.GetOption get_option = 4;</code>
       * @return Whether the getOption field is set.
       */
      @java.lang.Override
      public boolean hasGetOption() {
        return opTypeCase_ == 4;
      }
      /**
       * <code>.spark.connect.ConfigRequest.GetOption get_option = 4;</code>
       * @return The getOption.
       */
      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetOption getGetOption() {
        if (getOptionBuilder_ == null) {
          if (opTypeCase_ == 4) {
            return (org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetOption) opType_;
          }
          return org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetOption.getDefaultInstance();
        } else {
          if (opTypeCase_ == 4) {
            return getOptionBuilder_.getMessage();
          }
          return org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetOption.getDefaultInstance();
        }
      }
      /**
       * <code>.spark.connect.ConfigRequest.GetOption get_option = 4;</code>
       */
      public Builder setGetOption(org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetOption value) {
        if (getOptionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          opType_ = value;
          onChanged();
        } else {
          getOptionBuilder_.setMessage(value);
        }
        opTypeCase_ = 4;
        return this;
      }
      /**
       * <code>.spark.connect.ConfigRequest.GetOption get_option = 4;</code>
       */
      public Builder setGetOption(
          org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetOption.Builder builderForValue) {
        if (getOptionBuilder_ == null) {
          opType_ = builderForValue.build();
          onChanged();
        } else {
          getOptionBuilder_.setMessage(builderForValue.build());
        }
        opTypeCase_ = 4;
        return this;
      }
      /**
       * <code>.spark.connect.ConfigRequest.GetOption get_option = 4;</code>
       */
      public Builder mergeGetOption(org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetOption value) {
        if (getOptionBuilder_ == null) {
          if (opTypeCase_ == 4 &&
              opType_ != org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetOption.getDefaultInstance()) {
            opType_ = org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetOption.newBuilder((org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetOption) opType_)
                .mergeFrom(value).buildPartial();
          } else {
            opType_ = value;
          }
          onChanged();
        } else {
          if (opTypeCase_ == 4) {
            getOptionBuilder_.mergeFrom(value);
          } else {
            getOptionBuilder_.setMessage(value);
          }
        }
        opTypeCase_ = 4;
        return this;
      }
      /**
       * <code>.spark.connect.ConfigRequest.GetOption get_option = 4;</code>
       */
      public Builder clearGetOption() {
        if (getOptionBuilder_ == null) {
          if (opTypeCase_ == 4) {
            opTypeCase_ = 0;
            opType_ = null;
            onChanged();
          }
        } else {
          if (opTypeCase_ == 4) {
            opTypeCase_ = 0;
            opType_ = null;
          }
          getOptionBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.spark.connect.ConfigRequest.GetOption get_option = 4;</code>
       */
      public org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetOption.Builder getGetOptionBuilder() {
        return getGetOptionFieldBuilder().getBuilder();
      }
      /**
       * <code>.spark.connect.ConfigRequest.GetOption get_option = 4;</code>
       */
      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetOptionOrBuilder getGetOptionOrBuilder() {
        if ((opTypeCase_ == 4) && (getOptionBuilder_ != null)) {
          return getOptionBuilder_.getMessageOrBuilder();
        } else {
          if (opTypeCase_ == 4) {
            return (org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetOption) opType_;
          }
          return org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetOption.getDefaultInstance();
        }
      }
      /**
       * <code>.spark.connect.ConfigRequest.GetOption get_option = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetOption, org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetOption.Builder, org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetOptionOrBuilder> 
          getGetOptionFieldBuilder() {
        if (getOptionBuilder_ == null) {
          if (!(opTypeCase_ == 4)) {
            opType_ = org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetOption.getDefaultInstance();
          }
          getOptionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetOption, org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetOption.Builder, org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetOptionOrBuilder>(
                  (org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetOption) opType_,
                  getParentForChildren(),
                  isClean());
          opType_ = null;
        }
        opTypeCase_ = 4;
        onChanged();;
        return getOptionBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetAll, org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetAll.Builder, org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetAllOrBuilder> getAllBuilder_;
      /**
       * <code>.spark.connect.ConfigRequest.GetAll get_all = 5;</code>
       * @return Whether the getAll field is set.
       */
      @java.lang.Override
      public boolean hasGetAll() {
        return opTypeCase_ == 5;
      }
      /**
       * <code>.spark.connect.ConfigRequest.GetAll get_all = 5;</code>
       * @return The getAll.
       */
      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetAll getGetAll() {
        if (getAllBuilder_ == null) {
          if (opTypeCase_ == 5) {
            return (org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetAll) opType_;
          }
          return org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetAll.getDefaultInstance();
        } else {
          if (opTypeCase_ == 5) {
            return getAllBuilder_.getMessage();
          }
          return org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetAll.getDefaultInstance();
        }
      }
      /**
       * <code>.spark.connect.ConfigRequest.GetAll get_all = 5;</code>
       */
      public Builder setGetAll(org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetAll value) {
        if (getAllBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          opType_ = value;
          onChanged();
        } else {
          getAllBuilder_.setMessage(value);
        }
        opTypeCase_ = 5;
        return this;
      }
      /**
       * <code>.spark.connect.ConfigRequest.GetAll get_all = 5;</code>
       */
      public Builder setGetAll(
          org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetAll.Builder builderForValue) {
        if (getAllBuilder_ == null) {
          opType_ = builderForValue.build();
          onChanged();
        } else {
          getAllBuilder_.setMessage(builderForValue.build());
        }
        opTypeCase_ = 5;
        return this;
      }
      /**
       * <code>.spark.connect.ConfigRequest.GetAll get_all = 5;</code>
       */
      public Builder mergeGetAll(org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetAll value) {
        if (getAllBuilder_ == null) {
          if (opTypeCase_ == 5 &&
              opType_ != org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetAll.getDefaultInstance()) {
            opType_ = org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetAll.newBuilder((org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetAll) opType_)
                .mergeFrom(value).buildPartial();
          } else {
            opType_ = value;
          }
          onChanged();
        } else {
          if (opTypeCase_ == 5) {
            getAllBuilder_.mergeFrom(value);
          } else {
            getAllBuilder_.setMessage(value);
          }
        }
        opTypeCase_ = 5;
        return this;
      }
      /**
       * <code>.spark.connect.ConfigRequest.GetAll get_all = 5;</code>
       */
      public Builder clearGetAll() {
        if (getAllBuilder_ == null) {
          if (opTypeCase_ == 5) {
            opTypeCase_ = 0;
            opType_ = null;
            onChanged();
          }
        } else {
          if (opTypeCase_ == 5) {
            opTypeCase_ = 0;
            opType_ = null;
          }
          getAllBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.spark.connect.ConfigRequest.GetAll get_all = 5;</code>
       */
      public org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetAll.Builder getGetAllBuilder() {
        return getGetAllFieldBuilder().getBuilder();
      }
      /**
       * <code>.spark.connect.ConfigRequest.GetAll get_all = 5;</code>
       */
      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetAllOrBuilder getGetAllOrBuilder() {
        if ((opTypeCase_ == 5) && (getAllBuilder_ != null)) {
          return getAllBuilder_.getMessageOrBuilder();
        } else {
          if (opTypeCase_ == 5) {
            return (org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetAll) opType_;
          }
          return org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetAll.getDefaultInstance();
        }
      }
      /**
       * <code>.spark.connect.ConfigRequest.GetAll get_all = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetAll, org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetAll.Builder, org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetAllOrBuilder> 
          getGetAllFieldBuilder() {
        if (getAllBuilder_ == null) {
          if (!(opTypeCase_ == 5)) {
            opType_ = org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetAll.getDefaultInstance();
          }
          getAllBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetAll, org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetAll.Builder, org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetAllOrBuilder>(
                  (org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetAll) opType_,
                  getParentForChildren(),
                  isClean());
          opType_ = null;
        }
        opTypeCase_ = 5;
        onChanged();;
        return getAllBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Unset, org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Unset.Builder, org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.UnsetOrBuilder> unsetBuilder_;
      /**
       * <code>.spark.connect.ConfigRequest.Unset unset = 6;</code>
       * @return Whether the unset field is set.
       */
      @java.lang.Override
      public boolean hasUnset() {
        return opTypeCase_ == 6;
      }
      /**
       * <code>.spark.connect.ConfigRequest.Unset unset = 6;</code>
       * @return The unset.
       */
      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Unset getUnset() {
        if (unsetBuilder_ == null) {
          if (opTypeCase_ == 6) {
            return (org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Unset) opType_;
          }
          return org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Unset.getDefaultInstance();
        } else {
          if (opTypeCase_ == 6) {
            return unsetBuilder_.getMessage();
          }
          return org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Unset.getDefaultInstance();
        }
      }
      /**
       * <code>.spark.connect.ConfigRequest.Unset unset = 6;</code>
       */
      public Builder setUnset(org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Unset value) {
        if (unsetBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          opType_ = value;
          onChanged();
        } else {
          unsetBuilder_.setMessage(value);
        }
        opTypeCase_ = 6;
        return this;
      }
      /**
       * <code>.spark.connect.ConfigRequest.Unset unset = 6;</code>
       */
      public Builder setUnset(
          org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Unset.Builder builderForValue) {
        if (unsetBuilder_ == null) {
          opType_ = builderForValue.build();
          onChanged();
        } else {
          unsetBuilder_.setMessage(builderForValue.build());
        }
        opTypeCase_ = 6;
        return this;
      }
      /**
       * <code>.spark.connect.ConfigRequest.Unset unset = 6;</code>
       */
      public Builder mergeUnset(org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Unset value) {
        if (unsetBuilder_ == null) {
          if (opTypeCase_ == 6 &&
              opType_ != org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Unset.getDefaultInstance()) {
            opType_ = org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Unset.newBuilder((org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Unset) opType_)
                .mergeFrom(value).buildPartial();
          } else {
            opType_ = value;
          }
          onChanged();
        } else {
          if (opTypeCase_ == 6) {
            unsetBuilder_.mergeFrom(value);
          } else {
            unsetBuilder_.setMessage(value);
          }
        }
        opTypeCase_ = 6;
        return this;
      }
      /**
       * <code>.spark.connect.ConfigRequest.Unset unset = 6;</code>
       */
      public Builder clearUnset() {
        if (unsetBuilder_ == null) {
          if (opTypeCase_ == 6) {
            opTypeCase_ = 0;
            opType_ = null;
            onChanged();
          }
        } else {
          if (opTypeCase_ == 6) {
            opTypeCase_ = 0;
            opType_ = null;
          }
          unsetBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.spark.connect.ConfigRequest.Unset unset = 6;</code>
       */
      public org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Unset.Builder getUnsetBuilder() {
        return getUnsetFieldBuilder().getBuilder();
      }
      /**
       * <code>.spark.connect.ConfigRequest.Unset unset = 6;</code>
       */
      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.UnsetOrBuilder getUnsetOrBuilder() {
        if ((opTypeCase_ == 6) && (unsetBuilder_ != null)) {
          return unsetBuilder_.getMessageOrBuilder();
        } else {
          if (opTypeCase_ == 6) {
            return (org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Unset) opType_;
          }
          return org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Unset.getDefaultInstance();
        }
      }
      /**
       * <code>.spark.connect.ConfigRequest.Unset unset = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Unset, org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Unset.Builder, org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.UnsetOrBuilder> 
          getUnsetFieldBuilder() {
        if (unsetBuilder_ == null) {
          if (!(opTypeCase_ == 6)) {
            opType_ = org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Unset.getDefaultInstance();
          }
          unsetBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Unset, org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Unset.Builder, org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.UnsetOrBuilder>(
                  (org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Unset) opType_,
                  getParentForChildren(),
                  isClean());
          opType_ = null;
        }
        opTypeCase_ = 6;
        onChanged();;
        return unsetBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.IsModifiable, org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.IsModifiable.Builder, org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.IsModifiableOrBuilder> isModifiableBuilder_;
      /**
       * <code>.spark.connect.ConfigRequest.IsModifiable is_modifiable = 7;</code>
       * @return Whether the isModifiable field is set.
       */
      @java.lang.Override
      public boolean hasIsModifiable() {
        return opTypeCase_ == 7;
      }
      /**
       * <code>.spark.connect.ConfigRequest.IsModifiable is_modifiable = 7;</code>
       * @return The isModifiable.
       */
      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.IsModifiable getIsModifiable() {
        if (isModifiableBuilder_ == null) {
          if (opTypeCase_ == 7) {
            return (org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.IsModifiable) opType_;
          }
          return org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.IsModifiable.getDefaultInstance();
        } else {
          if (opTypeCase_ == 7) {
            return isModifiableBuilder_.getMessage();
          }
          return org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.IsModifiable.getDefaultInstance();
        }
      }
      /**
       * <code>.spark.connect.ConfigRequest.IsModifiable is_modifiable = 7;</code>
       */
      public Builder setIsModifiable(org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.IsModifiable value) {
        if (isModifiableBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          opType_ = value;
          onChanged();
        } else {
          isModifiableBuilder_.setMessage(value);
        }
        opTypeCase_ = 7;
        return this;
      }
      /**
       * <code>.spark.connect.ConfigRequest.IsModifiable is_modifiable = 7;</code>
       */
      public Builder setIsModifiable(
          org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.IsModifiable.Builder builderForValue) {
        if (isModifiableBuilder_ == null) {
          opType_ = builderForValue.build();
          onChanged();
        } else {
          isModifiableBuilder_.setMessage(builderForValue.build());
        }
        opTypeCase_ = 7;
        return this;
      }
      /**
       * <code>.spark.connect.ConfigRequest.IsModifiable is_modifiable = 7;</code>
       */
      public Builder mergeIsModifiable(org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.IsModifiable value) {
        if (isModifiableBuilder_ == null) {
          if (opTypeCase_ == 7 &&
              opType_ != org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.IsModifiable.getDefaultInstance()) {
            opType_ = org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.IsModifiable.newBuilder((org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.IsModifiable) opType_)
                .mergeFrom(value).buildPartial();
          } else {
            opType_ = value;
          }
          onChanged();
        } else {
          if (opTypeCase_ == 7) {
            isModifiableBuilder_.mergeFrom(value);
          } else {
            isModifiableBuilder_.setMessage(value);
          }
        }
        opTypeCase_ = 7;
        return this;
      }
      /**
       * <code>.spark.connect.ConfigRequest.IsModifiable is_modifiable = 7;</code>
       */
      public Builder clearIsModifiable() {
        if (isModifiableBuilder_ == null) {
          if (opTypeCase_ == 7) {
            opTypeCase_ = 0;
            opType_ = null;
            onChanged();
          }
        } else {
          if (opTypeCase_ == 7) {
            opTypeCase_ = 0;
            opType_ = null;
          }
          isModifiableBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.spark.connect.ConfigRequest.IsModifiable is_modifiable = 7;</code>
       */
      public org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.IsModifiable.Builder getIsModifiableBuilder() {
        return getIsModifiableFieldBuilder().getBuilder();
      }
      /**
       * <code>.spark.connect.ConfigRequest.IsModifiable is_modifiable = 7;</code>
       */
      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.IsModifiableOrBuilder getIsModifiableOrBuilder() {
        if ((opTypeCase_ == 7) && (isModifiableBuilder_ != null)) {
          return isModifiableBuilder_.getMessageOrBuilder();
        } else {
          if (opTypeCase_ == 7) {
            return (org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.IsModifiable) opType_;
          }
          return org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.IsModifiable.getDefaultInstance();
        }
      }
      /**
       * <code>.spark.connect.ConfigRequest.IsModifiable is_modifiable = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.IsModifiable, org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.IsModifiable.Builder, org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.IsModifiableOrBuilder> 
          getIsModifiableFieldBuilder() {
        if (isModifiableBuilder_ == null) {
          if (!(opTypeCase_ == 7)) {
            opType_ = org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.IsModifiable.getDefaultInstance();
          }
          isModifiableBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.IsModifiable, org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.IsModifiable.Builder, org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.IsModifiableOrBuilder>(
                  (org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.IsModifiable) opType_,
                  getParentForChildren(),
                  isClean());
          opType_ = null;
        }
        opTypeCase_ = 7;
        onChanged();;
        return isModifiableBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:spark.connect.ConfigRequest.Operation)
    }

    // @@protoc_insertion_point(class_scope:spark.connect.ConfigRequest.Operation)
    private static final org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Operation DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Operation();
    }

    public static org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Operation getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Operation>
        PARSER = new com.google.protobuf.AbstractParser<Operation>() {
      @java.lang.Override
      public Operation parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<Operation> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Operation> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Operation getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SetOrBuilder extends
      // @@protoc_insertion_point(interface_extends:spark.connect.ConfigRequest.Set)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * (Required) The config key-value pairs to set.
     * </pre>
     *
     * <code>repeated .spark.connect.KeyValue pairs = 1;</code>
     */
    java.util.List<org.apache.kyuubi.engine.spark.connect.proto.KeyValue> 
        getPairsList();
    /**
     * <pre>
     * (Required) The config key-value pairs to set.
     * </pre>
     *
     * <code>repeated .spark.connect.KeyValue pairs = 1;</code>
     */
    org.apache.kyuubi.engine.spark.connect.proto.KeyValue getPairs(int index);
    /**
     * <pre>
     * (Required) The config key-value pairs to set.
     * </pre>
     *
     * <code>repeated .spark.connect.KeyValue pairs = 1;</code>
     */
    int getPairsCount();
    /**
     * <pre>
     * (Required) The config key-value pairs to set.
     * </pre>
     *
     * <code>repeated .spark.connect.KeyValue pairs = 1;</code>
     */
    java.util.List<? extends org.apache.kyuubi.engine.spark.connect.proto.KeyValueOrBuilder> 
        getPairsOrBuilderList();
    /**
     * <pre>
     * (Required) The config key-value pairs to set.
     * </pre>
     *
     * <code>repeated .spark.connect.KeyValue pairs = 1;</code>
     */
    org.apache.kyuubi.engine.spark.connect.proto.KeyValueOrBuilder getPairsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code spark.connect.ConfigRequest.Set}
   */
  public static final class Set extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:spark.connect.ConfigRequest.Set)
      SetOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Set.newBuilder() to construct.
    private Set(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Set() {
      pairs_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Set();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.kyuubi.engine.spark.connect.proto.Base.internal_static_spark_connect_ConfigRequest_Set_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.kyuubi.engine.spark.connect.proto.Base.internal_static_spark_connect_ConfigRequest_Set_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Set.class, org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Set.Builder.class);
    }

    public static final int PAIRS_FIELD_NUMBER = 1;
    private java.util.List<org.apache.kyuubi.engine.spark.connect.proto.KeyValue> pairs_;
    /**
     * <pre>
     * (Required) The config key-value pairs to set.
     * </pre>
     *
     * <code>repeated .spark.connect.KeyValue pairs = 1;</code>
     */
    @java.lang.Override
    public java.util.List<org.apache.kyuubi.engine.spark.connect.proto.KeyValue> getPairsList() {
      return pairs_;
    }
    /**
     * <pre>
     * (Required) The config key-value pairs to set.
     * </pre>
     *
     * <code>repeated .spark.connect.KeyValue pairs = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends org.apache.kyuubi.engine.spark.connect.proto.KeyValueOrBuilder> 
        getPairsOrBuilderList() {
      return pairs_;
    }
    /**
     * <pre>
     * (Required) The config key-value pairs to set.
     * </pre>
     *
     * <code>repeated .spark.connect.KeyValue pairs = 1;</code>
     */
    @java.lang.Override
    public int getPairsCount() {
      return pairs_.size();
    }
    /**
     * <pre>
     * (Required) The config key-value pairs to set.
     * </pre>
     *
     * <code>repeated .spark.connect.KeyValue pairs = 1;</code>
     */
    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.KeyValue getPairs(int index) {
      return pairs_.get(index);
    }
    /**
     * <pre>
     * (Required) The config key-value pairs to set.
     * </pre>
     *
     * <code>repeated .spark.connect.KeyValue pairs = 1;</code>
     */
    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.KeyValueOrBuilder getPairsOrBuilder(
        int index) {
      return pairs_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < pairs_.size(); i++) {
        output.writeMessage(1, pairs_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < pairs_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, pairs_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Set)) {
        return super.equals(obj);
      }
      org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Set other = (org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Set) obj;

      if (!getPairsList()
          .equals(other.getPairsList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getPairsCount() > 0) {
        hash = (37 * hash) + PAIRS_FIELD_NUMBER;
        hash = (53 * hash) + getPairsList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Set parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Set parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Set parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Set parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Set parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Set parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Set parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Set parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Set parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Set parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Set parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Set parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Set prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code spark.connect.ConfigRequest.Set}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:spark.connect.ConfigRequest.Set)
        org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.SetOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.kyuubi.engine.spark.connect.proto.Base.internal_static_spark_connect_ConfigRequest_Set_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.kyuubi.engine.spark.connect.proto.Base.internal_static_spark_connect_ConfigRequest_Set_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Set.class, org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Set.Builder.class);
      }

      // Construct using org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Set.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (pairsBuilder_ == null) {
          pairs_ = java.util.Collections.emptyList();
        } else {
          pairs_ = null;
          pairsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.kyuubi.engine.spark.connect.proto.Base.internal_static_spark_connect_ConfigRequest_Set_descriptor;
      }

      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Set getDefaultInstanceForType() {
        return org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Set.getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Set build() {
        org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Set result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Set buildPartial() {
        org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Set result = new org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Set(this);
        int from_bitField0_ = bitField0_;
        if (pairsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            pairs_ = java.util.Collections.unmodifiableList(pairs_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.pairs_ = pairs_;
        } else {
          result.pairs_ = pairsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Set) {
          return mergeFrom((org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Set)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Set other) {
        if (other == org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Set.getDefaultInstance()) return this;
        if (pairsBuilder_ == null) {
          if (!other.pairs_.isEmpty()) {
            if (pairs_.isEmpty()) {
              pairs_ = other.pairs_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensurePairsIsMutable();
              pairs_.addAll(other.pairs_);
            }
            onChanged();
          }
        } else {
          if (!other.pairs_.isEmpty()) {
            if (pairsBuilder_.isEmpty()) {
              pairsBuilder_.dispose();
              pairsBuilder_ = null;
              pairs_ = other.pairs_;
              bitField0_ = (bitField0_ & ~0x00000001);
              pairsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getPairsFieldBuilder() : null;
            } else {
              pairsBuilder_.addAllMessages(other.pairs_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                org.apache.kyuubi.engine.spark.connect.proto.KeyValue m =
                    input.readMessage(
                        org.apache.kyuubi.engine.spark.connect.proto.KeyValue.parser(),
                        extensionRegistry);
                if (pairsBuilder_ == null) {
                  ensurePairsIsMutable();
                  pairs_.add(m);
                } else {
                  pairsBuilder_.addMessage(m);
                }
                break;
              } // case 10
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.util.List<org.apache.kyuubi.engine.spark.connect.proto.KeyValue> pairs_ =
        java.util.Collections.emptyList();
      private void ensurePairsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          pairs_ = new java.util.ArrayList<org.apache.kyuubi.engine.spark.connect.proto.KeyValue>(pairs_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.apache.kyuubi.engine.spark.connect.proto.KeyValue, org.apache.kyuubi.engine.spark.connect.proto.KeyValue.Builder, org.apache.kyuubi.engine.spark.connect.proto.KeyValueOrBuilder> pairsBuilder_;

      /**
       * <pre>
       * (Required) The config key-value pairs to set.
       * </pre>
       *
       * <code>repeated .spark.connect.KeyValue pairs = 1;</code>
       */
      public java.util.List<org.apache.kyuubi.engine.spark.connect.proto.KeyValue> getPairsList() {
        if (pairsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(pairs_);
        } else {
          return pairsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * (Required) The config key-value pairs to set.
       * </pre>
       *
       * <code>repeated .spark.connect.KeyValue pairs = 1;</code>
       */
      public int getPairsCount() {
        if (pairsBuilder_ == null) {
          return pairs_.size();
        } else {
          return pairsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * (Required) The config key-value pairs to set.
       * </pre>
       *
       * <code>repeated .spark.connect.KeyValue pairs = 1;</code>
       */
      public org.apache.kyuubi.engine.spark.connect.proto.KeyValue getPairs(int index) {
        if (pairsBuilder_ == null) {
          return pairs_.get(index);
        } else {
          return pairsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * (Required) The config key-value pairs to set.
       * </pre>
       *
       * <code>repeated .spark.connect.KeyValue pairs = 1;</code>
       */
      public Builder setPairs(
          int index, org.apache.kyuubi.engine.spark.connect.proto.KeyValue value) {
        if (pairsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePairsIsMutable();
          pairs_.set(index, value);
          onChanged();
        } else {
          pairsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * (Required) The config key-value pairs to set.
       * </pre>
       *
       * <code>repeated .spark.connect.KeyValue pairs = 1;</code>
       */
      public Builder setPairs(
          int index, org.apache.kyuubi.engine.spark.connect.proto.KeyValue.Builder builderForValue) {
        if (pairsBuilder_ == null) {
          ensurePairsIsMutable();
          pairs_.set(index, builderForValue.build());
          onChanged();
        } else {
          pairsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * (Required) The config key-value pairs to set.
       * </pre>
       *
       * <code>repeated .spark.connect.KeyValue pairs = 1;</code>
       */
      public Builder addPairs(org.apache.kyuubi.engine.spark.connect.proto.KeyValue value) {
        if (pairsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePairsIsMutable();
          pairs_.add(value);
          onChanged();
        } else {
          pairsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * (Required) The config key-value pairs to set.
       * </pre>
       *
       * <code>repeated .spark.connect.KeyValue pairs = 1;</code>
       */
      public Builder addPairs(
          int index, org.apache.kyuubi.engine.spark.connect.proto.KeyValue value) {
        if (pairsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePairsIsMutable();
          pairs_.add(index, value);
          onChanged();
        } else {
          pairsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * (Required) The config key-value pairs to set.
       * </pre>
       *
       * <code>repeated .spark.connect.KeyValue pairs = 1;</code>
       */
      public Builder addPairs(
          org.apache.kyuubi.engine.spark.connect.proto.KeyValue.Builder builderForValue) {
        if (pairsBuilder_ == null) {
          ensurePairsIsMutable();
          pairs_.add(builderForValue.build());
          onChanged();
        } else {
          pairsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * (Required) The config key-value pairs to set.
       * </pre>
       *
       * <code>repeated .spark.connect.KeyValue pairs = 1;</code>
       */
      public Builder addPairs(
          int index, org.apache.kyuubi.engine.spark.connect.proto.KeyValue.Builder builderForValue) {
        if (pairsBuilder_ == null) {
          ensurePairsIsMutable();
          pairs_.add(index, builderForValue.build());
          onChanged();
        } else {
          pairsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * (Required) The config key-value pairs to set.
       * </pre>
       *
       * <code>repeated .spark.connect.KeyValue pairs = 1;</code>
       */
      public Builder addAllPairs(
          java.lang.Iterable<? extends org.apache.kyuubi.engine.spark.connect.proto.KeyValue> values) {
        if (pairsBuilder_ == null) {
          ensurePairsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, pairs_);
          onChanged();
        } else {
          pairsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * (Required) The config key-value pairs to set.
       * </pre>
       *
       * <code>repeated .spark.connect.KeyValue pairs = 1;</code>
       */
      public Builder clearPairs() {
        if (pairsBuilder_ == null) {
          pairs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          pairsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * (Required) The config key-value pairs to set.
       * </pre>
       *
       * <code>repeated .spark.connect.KeyValue pairs = 1;</code>
       */
      public Builder removePairs(int index) {
        if (pairsBuilder_ == null) {
          ensurePairsIsMutable();
          pairs_.remove(index);
          onChanged();
        } else {
          pairsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * (Required) The config key-value pairs to set.
       * </pre>
       *
       * <code>repeated .spark.connect.KeyValue pairs = 1;</code>
       */
      public org.apache.kyuubi.engine.spark.connect.proto.KeyValue.Builder getPairsBuilder(
          int index) {
        return getPairsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * (Required) The config key-value pairs to set.
       * </pre>
       *
       * <code>repeated .spark.connect.KeyValue pairs = 1;</code>
       */
      public org.apache.kyuubi.engine.spark.connect.proto.KeyValueOrBuilder getPairsOrBuilder(
          int index) {
        if (pairsBuilder_ == null) {
          return pairs_.get(index);  } else {
          return pairsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * (Required) The config key-value pairs to set.
       * </pre>
       *
       * <code>repeated .spark.connect.KeyValue pairs = 1;</code>
       */
      public java.util.List<? extends org.apache.kyuubi.engine.spark.connect.proto.KeyValueOrBuilder> 
           getPairsOrBuilderList() {
        if (pairsBuilder_ != null) {
          return pairsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(pairs_);
        }
      }
      /**
       * <pre>
       * (Required) The config key-value pairs to set.
       * </pre>
       *
       * <code>repeated .spark.connect.KeyValue pairs = 1;</code>
       */
      public org.apache.kyuubi.engine.spark.connect.proto.KeyValue.Builder addPairsBuilder() {
        return getPairsFieldBuilder().addBuilder(
            org.apache.kyuubi.engine.spark.connect.proto.KeyValue.getDefaultInstance());
      }
      /**
       * <pre>
       * (Required) The config key-value pairs to set.
       * </pre>
       *
       * <code>repeated .spark.connect.KeyValue pairs = 1;</code>
       */
      public org.apache.kyuubi.engine.spark.connect.proto.KeyValue.Builder addPairsBuilder(
          int index) {
        return getPairsFieldBuilder().addBuilder(
            index, org.apache.kyuubi.engine.spark.connect.proto.KeyValue.getDefaultInstance());
      }
      /**
       * <pre>
       * (Required) The config key-value pairs to set.
       * </pre>
       *
       * <code>repeated .spark.connect.KeyValue pairs = 1;</code>
       */
      public java.util.List<org.apache.kyuubi.engine.spark.connect.proto.KeyValue.Builder> 
           getPairsBuilderList() {
        return getPairsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.apache.kyuubi.engine.spark.connect.proto.KeyValue, org.apache.kyuubi.engine.spark.connect.proto.KeyValue.Builder, org.apache.kyuubi.engine.spark.connect.proto.KeyValueOrBuilder> 
          getPairsFieldBuilder() {
        if (pairsBuilder_ == null) {
          pairsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              org.apache.kyuubi.engine.spark.connect.proto.KeyValue, org.apache.kyuubi.engine.spark.connect.proto.KeyValue.Builder, org.apache.kyuubi.engine.spark.connect.proto.KeyValueOrBuilder>(
                  pairs_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          pairs_ = null;
        }
        return pairsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:spark.connect.ConfigRequest.Set)
    }

    // @@protoc_insertion_point(class_scope:spark.connect.ConfigRequest.Set)
    private static final org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Set DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Set();
    }

    public static org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Set getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Set>
        PARSER = new com.google.protobuf.AbstractParser<Set>() {
      @java.lang.Override
      public Set parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<Set> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Set> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Set getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface GetOrBuilder extends
      // @@protoc_insertion_point(interface_extends:spark.connect.ConfigRequest.Get)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * (Required) The config keys to get.
     * </pre>
     *
     * <code>repeated string keys = 1;</code>
     * @return A list containing the keys.
     */
    java.util.List<java.lang.String>
        getKeysList();
    /**
     * <pre>
     * (Required) The config keys to get.
     * </pre>
     *
     * <code>repeated string keys = 1;</code>
     * @return The count of keys.
     */
    int getKeysCount();
    /**
     * <pre>
     * (Required) The config keys to get.
     * </pre>
     *
     * <code>repeated string keys = 1;</code>
     * @param index The index of the element to return.
     * @return The keys at the given index.
     */
    java.lang.String getKeys(int index);
    /**
     * <pre>
     * (Required) The config keys to get.
     * </pre>
     *
     * <code>repeated string keys = 1;</code>
     * @param index The index of the value to return.
     * @return The bytes of the keys at the given index.
     */
    com.google.protobuf.ByteString
        getKeysBytes(int index);
  }
  /**
   * Protobuf type {@code spark.connect.ConfigRequest.Get}
   */
  public static final class Get extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:spark.connect.ConfigRequest.Get)
      GetOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Get.newBuilder() to construct.
    private Get(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Get() {
      keys_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Get();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.kyuubi.engine.spark.connect.proto.Base.internal_static_spark_connect_ConfigRequest_Get_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.kyuubi.engine.spark.connect.proto.Base.internal_static_spark_connect_ConfigRequest_Get_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Get.class, org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Get.Builder.class);
    }

    public static final int KEYS_FIELD_NUMBER = 1;
    private com.google.protobuf.LazyStringList keys_;
    /**
     * <pre>
     * (Required) The config keys to get.
     * </pre>
     *
     * <code>repeated string keys = 1;</code>
     * @return A list containing the keys.
     */
    public com.google.protobuf.ProtocolStringList
        getKeysList() {
      return keys_;
    }
    /**
     * <pre>
     * (Required) The config keys to get.
     * </pre>
     *
     * <code>repeated string keys = 1;</code>
     * @return The count of keys.
     */
    public int getKeysCount() {
      return keys_.size();
    }
    /**
     * <pre>
     * (Required) The config keys to get.
     * </pre>
     *
     * <code>repeated string keys = 1;</code>
     * @param index The index of the element to return.
     * @return The keys at the given index.
     */
    public java.lang.String getKeys(int index) {
      return keys_.get(index);
    }
    /**
     * <pre>
     * (Required) The config keys to get.
     * </pre>
     *
     * <code>repeated string keys = 1;</code>
     * @param index The index of the value to return.
     * @return The bytes of the keys at the given index.
     */
    public com.google.protobuf.ByteString
        getKeysBytes(int index) {
      return keys_.getByteString(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < keys_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, keys_.getRaw(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < keys_.size(); i++) {
          dataSize += computeStringSizeNoTag(keys_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getKeysList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Get)) {
        return super.equals(obj);
      }
      org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Get other = (org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Get) obj;

      if (!getKeysList()
          .equals(other.getKeysList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getKeysCount() > 0) {
        hash = (37 * hash) + KEYS_FIELD_NUMBER;
        hash = (53 * hash) + getKeysList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Get parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Get parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Get parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Get parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Get parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Get parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Get parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Get parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Get parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Get parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Get parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Get parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Get prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code spark.connect.ConfigRequest.Get}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:spark.connect.ConfigRequest.Get)
        org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.kyuubi.engine.spark.connect.proto.Base.internal_static_spark_connect_ConfigRequest_Get_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.kyuubi.engine.spark.connect.proto.Base.internal_static_spark_connect_ConfigRequest_Get_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Get.class, org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Get.Builder.class);
      }

      // Construct using org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Get.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        keys_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.kyuubi.engine.spark.connect.proto.Base.internal_static_spark_connect_ConfigRequest_Get_descriptor;
      }

      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Get getDefaultInstanceForType() {
        return org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Get.getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Get build() {
        org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Get result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Get buildPartial() {
        org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Get result = new org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Get(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) != 0)) {
          keys_ = keys_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.keys_ = keys_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Get) {
          return mergeFrom((org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Get)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Get other) {
        if (other == org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Get.getDefaultInstance()) return this;
        if (!other.keys_.isEmpty()) {
          if (keys_.isEmpty()) {
            keys_ = other.keys_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureKeysIsMutable();
            keys_.addAll(other.keys_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                java.lang.String s = input.readStringRequireUtf8();
                ensureKeysIsMutable();
                keys_.add(s);
                break;
              } // case 10
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.LazyStringList keys_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureKeysIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          keys_ = new com.google.protobuf.LazyStringArrayList(keys_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <pre>
       * (Required) The config keys to get.
       * </pre>
       *
       * <code>repeated string keys = 1;</code>
       * @return A list containing the keys.
       */
      public com.google.protobuf.ProtocolStringList
          getKeysList() {
        return keys_.getUnmodifiableView();
      }
      /**
       * <pre>
       * (Required) The config keys to get.
       * </pre>
       *
       * <code>repeated string keys = 1;</code>
       * @return The count of keys.
       */
      public int getKeysCount() {
        return keys_.size();
      }
      /**
       * <pre>
       * (Required) The config keys to get.
       * </pre>
       *
       * <code>repeated string keys = 1;</code>
       * @param index The index of the element to return.
       * @return The keys at the given index.
       */
      public java.lang.String getKeys(int index) {
        return keys_.get(index);
      }
      /**
       * <pre>
       * (Required) The config keys to get.
       * </pre>
       *
       * <code>repeated string keys = 1;</code>
       * @param index The index of the value to return.
       * @return The bytes of the keys at the given index.
       */
      public com.google.protobuf.ByteString
          getKeysBytes(int index) {
        return keys_.getByteString(index);
      }
      /**
       * <pre>
       * (Required) The config keys to get.
       * </pre>
       *
       * <code>repeated string keys = 1;</code>
       * @param index The index to set the value at.
       * @param value The keys to set.
       * @return This builder for chaining.
       */
      public Builder setKeys(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureKeysIsMutable();
        keys_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * (Required) The config keys to get.
       * </pre>
       *
       * <code>repeated string keys = 1;</code>
       * @param value The keys to add.
       * @return This builder for chaining.
       */
      public Builder addKeys(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureKeysIsMutable();
        keys_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * (Required) The config keys to get.
       * </pre>
       *
       * <code>repeated string keys = 1;</code>
       * @param values The keys to add.
       * @return This builder for chaining.
       */
      public Builder addAllKeys(
          java.lang.Iterable<java.lang.String> values) {
        ensureKeysIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, keys_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * (Required) The config keys to get.
       * </pre>
       *
       * <code>repeated string keys = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearKeys() {
        keys_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * (Required) The config keys to get.
       * </pre>
       *
       * <code>repeated string keys = 1;</code>
       * @param value The bytes of the keys to add.
       * @return This builder for chaining.
       */
      public Builder addKeysBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        ensureKeysIsMutable();
        keys_.add(value);
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:spark.connect.ConfigRequest.Get)
    }

    // @@protoc_insertion_point(class_scope:spark.connect.ConfigRequest.Get)
    private static final org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Get DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Get();
    }

    public static org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Get getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Get>
        PARSER = new com.google.protobuf.AbstractParser<Get>() {
      @java.lang.Override
      public Get parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<Get> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Get> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Get getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface GetWithDefaultOrBuilder extends
      // @@protoc_insertion_point(interface_extends:spark.connect.ConfigRequest.GetWithDefault)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * (Required) The config key-value paris to get. The value will be used as the default value.
     * </pre>
     *
     * <code>repeated .spark.connect.KeyValue pairs = 1;</code>
     */
    java.util.List<org.apache.kyuubi.engine.spark.connect.proto.KeyValue> 
        getPairsList();
    /**
     * <pre>
     * (Required) The config key-value paris to get. The value will be used as the default value.
     * </pre>
     *
     * <code>repeated .spark.connect.KeyValue pairs = 1;</code>
     */
    org.apache.kyuubi.engine.spark.connect.proto.KeyValue getPairs(int index);
    /**
     * <pre>
     * (Required) The config key-value paris to get. The value will be used as the default value.
     * </pre>
     *
     * <code>repeated .spark.connect.KeyValue pairs = 1;</code>
     */
    int getPairsCount();
    /**
     * <pre>
     * (Required) The config key-value paris to get. The value will be used as the default value.
     * </pre>
     *
     * <code>repeated .spark.connect.KeyValue pairs = 1;</code>
     */
    java.util.List<? extends org.apache.kyuubi.engine.spark.connect.proto.KeyValueOrBuilder> 
        getPairsOrBuilderList();
    /**
     * <pre>
     * (Required) The config key-value paris to get. The value will be used as the default value.
     * </pre>
     *
     * <code>repeated .spark.connect.KeyValue pairs = 1;</code>
     */
    org.apache.kyuubi.engine.spark.connect.proto.KeyValueOrBuilder getPairsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code spark.connect.ConfigRequest.GetWithDefault}
   */
  public static final class GetWithDefault extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:spark.connect.ConfigRequest.GetWithDefault)
      GetWithDefaultOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use GetWithDefault.newBuilder() to construct.
    private GetWithDefault(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private GetWithDefault() {
      pairs_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new GetWithDefault();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.kyuubi.engine.spark.connect.proto.Base.internal_static_spark_connect_ConfigRequest_GetWithDefault_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.kyuubi.engine.spark.connect.proto.Base.internal_static_spark_connect_ConfigRequest_GetWithDefault_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetWithDefault.class, org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetWithDefault.Builder.class);
    }

    public static final int PAIRS_FIELD_NUMBER = 1;
    private java.util.List<org.apache.kyuubi.engine.spark.connect.proto.KeyValue> pairs_;
    /**
     * <pre>
     * (Required) The config key-value paris to get. The value will be used as the default value.
     * </pre>
     *
     * <code>repeated .spark.connect.KeyValue pairs = 1;</code>
     */
    @java.lang.Override
    public java.util.List<org.apache.kyuubi.engine.spark.connect.proto.KeyValue> getPairsList() {
      return pairs_;
    }
    /**
     * <pre>
     * (Required) The config key-value paris to get. The value will be used as the default value.
     * </pre>
     *
     * <code>repeated .spark.connect.KeyValue pairs = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends org.apache.kyuubi.engine.spark.connect.proto.KeyValueOrBuilder> 
        getPairsOrBuilderList() {
      return pairs_;
    }
    /**
     * <pre>
     * (Required) The config key-value paris to get. The value will be used as the default value.
     * </pre>
     *
     * <code>repeated .spark.connect.KeyValue pairs = 1;</code>
     */
    @java.lang.Override
    public int getPairsCount() {
      return pairs_.size();
    }
    /**
     * <pre>
     * (Required) The config key-value paris to get. The value will be used as the default value.
     * </pre>
     *
     * <code>repeated .spark.connect.KeyValue pairs = 1;</code>
     */
    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.KeyValue getPairs(int index) {
      return pairs_.get(index);
    }
    /**
     * <pre>
     * (Required) The config key-value paris to get. The value will be used as the default value.
     * </pre>
     *
     * <code>repeated .spark.connect.KeyValue pairs = 1;</code>
     */
    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.KeyValueOrBuilder getPairsOrBuilder(
        int index) {
      return pairs_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < pairs_.size(); i++) {
        output.writeMessage(1, pairs_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < pairs_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, pairs_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetWithDefault)) {
        return super.equals(obj);
      }
      org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetWithDefault other = (org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetWithDefault) obj;

      if (!getPairsList()
          .equals(other.getPairsList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getPairsCount() > 0) {
        hash = (37 * hash) + PAIRS_FIELD_NUMBER;
        hash = (53 * hash) + getPairsList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetWithDefault parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetWithDefault parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetWithDefault parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetWithDefault parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetWithDefault parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetWithDefault parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetWithDefault parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetWithDefault parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetWithDefault parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetWithDefault parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetWithDefault parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetWithDefault parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetWithDefault prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code spark.connect.ConfigRequest.GetWithDefault}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:spark.connect.ConfigRequest.GetWithDefault)
        org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetWithDefaultOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.kyuubi.engine.spark.connect.proto.Base.internal_static_spark_connect_ConfigRequest_GetWithDefault_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.kyuubi.engine.spark.connect.proto.Base.internal_static_spark_connect_ConfigRequest_GetWithDefault_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetWithDefault.class, org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetWithDefault.Builder.class);
      }

      // Construct using org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetWithDefault.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (pairsBuilder_ == null) {
          pairs_ = java.util.Collections.emptyList();
        } else {
          pairs_ = null;
          pairsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.kyuubi.engine.spark.connect.proto.Base.internal_static_spark_connect_ConfigRequest_GetWithDefault_descriptor;
      }

      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetWithDefault getDefaultInstanceForType() {
        return org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetWithDefault.getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetWithDefault build() {
        org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetWithDefault result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetWithDefault buildPartial() {
        org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetWithDefault result = new org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetWithDefault(this);
        int from_bitField0_ = bitField0_;
        if (pairsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            pairs_ = java.util.Collections.unmodifiableList(pairs_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.pairs_ = pairs_;
        } else {
          result.pairs_ = pairsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetWithDefault) {
          return mergeFrom((org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetWithDefault)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetWithDefault other) {
        if (other == org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetWithDefault.getDefaultInstance()) return this;
        if (pairsBuilder_ == null) {
          if (!other.pairs_.isEmpty()) {
            if (pairs_.isEmpty()) {
              pairs_ = other.pairs_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensurePairsIsMutable();
              pairs_.addAll(other.pairs_);
            }
            onChanged();
          }
        } else {
          if (!other.pairs_.isEmpty()) {
            if (pairsBuilder_.isEmpty()) {
              pairsBuilder_.dispose();
              pairsBuilder_ = null;
              pairs_ = other.pairs_;
              bitField0_ = (bitField0_ & ~0x00000001);
              pairsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getPairsFieldBuilder() : null;
            } else {
              pairsBuilder_.addAllMessages(other.pairs_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                org.apache.kyuubi.engine.spark.connect.proto.KeyValue m =
                    input.readMessage(
                        org.apache.kyuubi.engine.spark.connect.proto.KeyValue.parser(),
                        extensionRegistry);
                if (pairsBuilder_ == null) {
                  ensurePairsIsMutable();
                  pairs_.add(m);
                } else {
                  pairsBuilder_.addMessage(m);
                }
                break;
              } // case 10
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.util.List<org.apache.kyuubi.engine.spark.connect.proto.KeyValue> pairs_ =
        java.util.Collections.emptyList();
      private void ensurePairsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          pairs_ = new java.util.ArrayList<org.apache.kyuubi.engine.spark.connect.proto.KeyValue>(pairs_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.apache.kyuubi.engine.spark.connect.proto.KeyValue, org.apache.kyuubi.engine.spark.connect.proto.KeyValue.Builder, org.apache.kyuubi.engine.spark.connect.proto.KeyValueOrBuilder> pairsBuilder_;

      /**
       * <pre>
       * (Required) The config key-value paris to get. The value will be used as the default value.
       * </pre>
       *
       * <code>repeated .spark.connect.KeyValue pairs = 1;</code>
       */
      public java.util.List<org.apache.kyuubi.engine.spark.connect.proto.KeyValue> getPairsList() {
        if (pairsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(pairs_);
        } else {
          return pairsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * (Required) The config key-value paris to get. The value will be used as the default value.
       * </pre>
       *
       * <code>repeated .spark.connect.KeyValue pairs = 1;</code>
       */
      public int getPairsCount() {
        if (pairsBuilder_ == null) {
          return pairs_.size();
        } else {
          return pairsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * (Required) The config key-value paris to get. The value will be used as the default value.
       * </pre>
       *
       * <code>repeated .spark.connect.KeyValue pairs = 1;</code>
       */
      public org.apache.kyuubi.engine.spark.connect.proto.KeyValue getPairs(int index) {
        if (pairsBuilder_ == null) {
          return pairs_.get(index);
        } else {
          return pairsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * (Required) The config key-value paris to get. The value will be used as the default value.
       * </pre>
       *
       * <code>repeated .spark.connect.KeyValue pairs = 1;</code>
       */
      public Builder setPairs(
          int index, org.apache.kyuubi.engine.spark.connect.proto.KeyValue value) {
        if (pairsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePairsIsMutable();
          pairs_.set(index, value);
          onChanged();
        } else {
          pairsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * (Required) The config key-value paris to get. The value will be used as the default value.
       * </pre>
       *
       * <code>repeated .spark.connect.KeyValue pairs = 1;</code>
       */
      public Builder setPairs(
          int index, org.apache.kyuubi.engine.spark.connect.proto.KeyValue.Builder builderForValue) {
        if (pairsBuilder_ == null) {
          ensurePairsIsMutable();
          pairs_.set(index, builderForValue.build());
          onChanged();
        } else {
          pairsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * (Required) The config key-value paris to get. The value will be used as the default value.
       * </pre>
       *
       * <code>repeated .spark.connect.KeyValue pairs = 1;</code>
       */
      public Builder addPairs(org.apache.kyuubi.engine.spark.connect.proto.KeyValue value) {
        if (pairsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePairsIsMutable();
          pairs_.add(value);
          onChanged();
        } else {
          pairsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * (Required) The config key-value paris to get. The value will be used as the default value.
       * </pre>
       *
       * <code>repeated .spark.connect.KeyValue pairs = 1;</code>
       */
      public Builder addPairs(
          int index, org.apache.kyuubi.engine.spark.connect.proto.KeyValue value) {
        if (pairsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePairsIsMutable();
          pairs_.add(index, value);
          onChanged();
        } else {
          pairsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * (Required) The config key-value paris to get. The value will be used as the default value.
       * </pre>
       *
       * <code>repeated .spark.connect.KeyValue pairs = 1;</code>
       */
      public Builder addPairs(
          org.apache.kyuubi.engine.spark.connect.proto.KeyValue.Builder builderForValue) {
        if (pairsBuilder_ == null) {
          ensurePairsIsMutable();
          pairs_.add(builderForValue.build());
          onChanged();
        } else {
          pairsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * (Required) The config key-value paris to get. The value will be used as the default value.
       * </pre>
       *
       * <code>repeated .spark.connect.KeyValue pairs = 1;</code>
       */
      public Builder addPairs(
          int index, org.apache.kyuubi.engine.spark.connect.proto.KeyValue.Builder builderForValue) {
        if (pairsBuilder_ == null) {
          ensurePairsIsMutable();
          pairs_.add(index, builderForValue.build());
          onChanged();
        } else {
          pairsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * (Required) The config key-value paris to get. The value will be used as the default value.
       * </pre>
       *
       * <code>repeated .spark.connect.KeyValue pairs = 1;</code>
       */
      public Builder addAllPairs(
          java.lang.Iterable<? extends org.apache.kyuubi.engine.spark.connect.proto.KeyValue> values) {
        if (pairsBuilder_ == null) {
          ensurePairsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, pairs_);
          onChanged();
        } else {
          pairsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * (Required) The config key-value paris to get. The value will be used as the default value.
       * </pre>
       *
       * <code>repeated .spark.connect.KeyValue pairs = 1;</code>
       */
      public Builder clearPairs() {
        if (pairsBuilder_ == null) {
          pairs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          pairsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * (Required) The config key-value paris to get. The value will be used as the default value.
       * </pre>
       *
       * <code>repeated .spark.connect.KeyValue pairs = 1;</code>
       */
      public Builder removePairs(int index) {
        if (pairsBuilder_ == null) {
          ensurePairsIsMutable();
          pairs_.remove(index);
          onChanged();
        } else {
          pairsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * (Required) The config key-value paris to get. The value will be used as the default value.
       * </pre>
       *
       * <code>repeated .spark.connect.KeyValue pairs = 1;</code>
       */
      public org.apache.kyuubi.engine.spark.connect.proto.KeyValue.Builder getPairsBuilder(
          int index) {
        return getPairsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * (Required) The config key-value paris to get. The value will be used as the default value.
       * </pre>
       *
       * <code>repeated .spark.connect.KeyValue pairs = 1;</code>
       */
      public org.apache.kyuubi.engine.spark.connect.proto.KeyValueOrBuilder getPairsOrBuilder(
          int index) {
        if (pairsBuilder_ == null) {
          return pairs_.get(index);  } else {
          return pairsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * (Required) The config key-value paris to get. The value will be used as the default value.
       * </pre>
       *
       * <code>repeated .spark.connect.KeyValue pairs = 1;</code>
       */
      public java.util.List<? extends org.apache.kyuubi.engine.spark.connect.proto.KeyValueOrBuilder> 
           getPairsOrBuilderList() {
        if (pairsBuilder_ != null) {
          return pairsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(pairs_);
        }
      }
      /**
       * <pre>
       * (Required) The config key-value paris to get. The value will be used as the default value.
       * </pre>
       *
       * <code>repeated .spark.connect.KeyValue pairs = 1;</code>
       */
      public org.apache.kyuubi.engine.spark.connect.proto.KeyValue.Builder addPairsBuilder() {
        return getPairsFieldBuilder().addBuilder(
            org.apache.kyuubi.engine.spark.connect.proto.KeyValue.getDefaultInstance());
      }
      /**
       * <pre>
       * (Required) The config key-value paris to get. The value will be used as the default value.
       * </pre>
       *
       * <code>repeated .spark.connect.KeyValue pairs = 1;</code>
       */
      public org.apache.kyuubi.engine.spark.connect.proto.KeyValue.Builder addPairsBuilder(
          int index) {
        return getPairsFieldBuilder().addBuilder(
            index, org.apache.kyuubi.engine.spark.connect.proto.KeyValue.getDefaultInstance());
      }
      /**
       * <pre>
       * (Required) The config key-value paris to get. The value will be used as the default value.
       * </pre>
       *
       * <code>repeated .spark.connect.KeyValue pairs = 1;</code>
       */
      public java.util.List<org.apache.kyuubi.engine.spark.connect.proto.KeyValue.Builder> 
           getPairsBuilderList() {
        return getPairsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.apache.kyuubi.engine.spark.connect.proto.KeyValue, org.apache.kyuubi.engine.spark.connect.proto.KeyValue.Builder, org.apache.kyuubi.engine.spark.connect.proto.KeyValueOrBuilder> 
          getPairsFieldBuilder() {
        if (pairsBuilder_ == null) {
          pairsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              org.apache.kyuubi.engine.spark.connect.proto.KeyValue, org.apache.kyuubi.engine.spark.connect.proto.KeyValue.Builder, org.apache.kyuubi.engine.spark.connect.proto.KeyValueOrBuilder>(
                  pairs_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          pairs_ = null;
        }
        return pairsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:spark.connect.ConfigRequest.GetWithDefault)
    }

    // @@protoc_insertion_point(class_scope:spark.connect.ConfigRequest.GetWithDefault)
    private static final org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetWithDefault DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetWithDefault();
    }

    public static org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetWithDefault getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<GetWithDefault>
        PARSER = new com.google.protobuf.AbstractParser<GetWithDefault>() {
      @java.lang.Override
      public GetWithDefault parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<GetWithDefault> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<GetWithDefault> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetWithDefault getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface GetOptionOrBuilder extends
      // @@protoc_insertion_point(interface_extends:spark.connect.ConfigRequest.GetOption)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * (Required) The config keys to get optionally.
     * </pre>
     *
     * <code>repeated string keys = 1;</code>
     * @return A list containing the keys.
     */
    java.util.List<java.lang.String>
        getKeysList();
    /**
     * <pre>
     * (Required) The config keys to get optionally.
     * </pre>
     *
     * <code>repeated string keys = 1;</code>
     * @return The count of keys.
     */
    int getKeysCount();
    /**
     * <pre>
     * (Required) The config keys to get optionally.
     * </pre>
     *
     * <code>repeated string keys = 1;</code>
     * @param index The index of the element to return.
     * @return The keys at the given index.
     */
    java.lang.String getKeys(int index);
    /**
     * <pre>
     * (Required) The config keys to get optionally.
     * </pre>
     *
     * <code>repeated string keys = 1;</code>
     * @param index The index of the value to return.
     * @return The bytes of the keys at the given index.
     */
    com.google.protobuf.ByteString
        getKeysBytes(int index);
  }
  /**
   * Protobuf type {@code spark.connect.ConfigRequest.GetOption}
   */
  public static final class GetOption extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:spark.connect.ConfigRequest.GetOption)
      GetOptionOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use GetOption.newBuilder() to construct.
    private GetOption(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private GetOption() {
      keys_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new GetOption();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.kyuubi.engine.spark.connect.proto.Base.internal_static_spark_connect_ConfigRequest_GetOption_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.kyuubi.engine.spark.connect.proto.Base.internal_static_spark_connect_ConfigRequest_GetOption_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetOption.class, org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetOption.Builder.class);
    }

    public static final int KEYS_FIELD_NUMBER = 1;
    private com.google.protobuf.LazyStringList keys_;
    /**
     * <pre>
     * (Required) The config keys to get optionally.
     * </pre>
     *
     * <code>repeated string keys = 1;</code>
     * @return A list containing the keys.
     */
    public com.google.protobuf.ProtocolStringList
        getKeysList() {
      return keys_;
    }
    /**
     * <pre>
     * (Required) The config keys to get optionally.
     * </pre>
     *
     * <code>repeated string keys = 1;</code>
     * @return The count of keys.
     */
    public int getKeysCount() {
      return keys_.size();
    }
    /**
     * <pre>
     * (Required) The config keys to get optionally.
     * </pre>
     *
     * <code>repeated string keys = 1;</code>
     * @param index The index of the element to return.
     * @return The keys at the given index.
     */
    public java.lang.String getKeys(int index) {
      return keys_.get(index);
    }
    /**
     * <pre>
     * (Required) The config keys to get optionally.
     * </pre>
     *
     * <code>repeated string keys = 1;</code>
     * @param index The index of the value to return.
     * @return The bytes of the keys at the given index.
     */
    public com.google.protobuf.ByteString
        getKeysBytes(int index) {
      return keys_.getByteString(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < keys_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, keys_.getRaw(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < keys_.size(); i++) {
          dataSize += computeStringSizeNoTag(keys_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getKeysList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetOption)) {
        return super.equals(obj);
      }
      org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetOption other = (org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetOption) obj;

      if (!getKeysList()
          .equals(other.getKeysList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getKeysCount() > 0) {
        hash = (37 * hash) + KEYS_FIELD_NUMBER;
        hash = (53 * hash) + getKeysList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetOption parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetOption parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetOption parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetOption parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetOption parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetOption parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetOption parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetOption parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetOption parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetOption parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetOption parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetOption parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetOption prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code spark.connect.ConfigRequest.GetOption}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:spark.connect.ConfigRequest.GetOption)
        org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetOptionOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.kyuubi.engine.spark.connect.proto.Base.internal_static_spark_connect_ConfigRequest_GetOption_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.kyuubi.engine.spark.connect.proto.Base.internal_static_spark_connect_ConfigRequest_GetOption_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetOption.class, org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetOption.Builder.class);
      }

      // Construct using org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetOption.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        keys_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.kyuubi.engine.spark.connect.proto.Base.internal_static_spark_connect_ConfigRequest_GetOption_descriptor;
      }

      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetOption getDefaultInstanceForType() {
        return org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetOption.getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetOption build() {
        org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetOption result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetOption buildPartial() {
        org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetOption result = new org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetOption(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) != 0)) {
          keys_ = keys_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.keys_ = keys_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetOption) {
          return mergeFrom((org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetOption)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetOption other) {
        if (other == org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetOption.getDefaultInstance()) return this;
        if (!other.keys_.isEmpty()) {
          if (keys_.isEmpty()) {
            keys_ = other.keys_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureKeysIsMutable();
            keys_.addAll(other.keys_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                java.lang.String s = input.readStringRequireUtf8();
                ensureKeysIsMutable();
                keys_.add(s);
                break;
              } // case 10
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.LazyStringList keys_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureKeysIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          keys_ = new com.google.protobuf.LazyStringArrayList(keys_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <pre>
       * (Required) The config keys to get optionally.
       * </pre>
       *
       * <code>repeated string keys = 1;</code>
       * @return A list containing the keys.
       */
      public com.google.protobuf.ProtocolStringList
          getKeysList() {
        return keys_.getUnmodifiableView();
      }
      /**
       * <pre>
       * (Required) The config keys to get optionally.
       * </pre>
       *
       * <code>repeated string keys = 1;</code>
       * @return The count of keys.
       */
      public int getKeysCount() {
        return keys_.size();
      }
      /**
       * <pre>
       * (Required) The config keys to get optionally.
       * </pre>
       *
       * <code>repeated string keys = 1;</code>
       * @param index The index of the element to return.
       * @return The keys at the given index.
       */
      public java.lang.String getKeys(int index) {
        return keys_.get(index);
      }
      /**
       * <pre>
       * (Required) The config keys to get optionally.
       * </pre>
       *
       * <code>repeated string keys = 1;</code>
       * @param index The index of the value to return.
       * @return The bytes of the keys at the given index.
       */
      public com.google.protobuf.ByteString
          getKeysBytes(int index) {
        return keys_.getByteString(index);
      }
      /**
       * <pre>
       * (Required) The config keys to get optionally.
       * </pre>
       *
       * <code>repeated string keys = 1;</code>
       * @param index The index to set the value at.
       * @param value The keys to set.
       * @return This builder for chaining.
       */
      public Builder setKeys(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureKeysIsMutable();
        keys_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * (Required) The config keys to get optionally.
       * </pre>
       *
       * <code>repeated string keys = 1;</code>
       * @param value The keys to add.
       * @return This builder for chaining.
       */
      public Builder addKeys(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureKeysIsMutable();
        keys_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * (Required) The config keys to get optionally.
       * </pre>
       *
       * <code>repeated string keys = 1;</code>
       * @param values The keys to add.
       * @return This builder for chaining.
       */
      public Builder addAllKeys(
          java.lang.Iterable<java.lang.String> values) {
        ensureKeysIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, keys_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * (Required) The config keys to get optionally.
       * </pre>
       *
       * <code>repeated string keys = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearKeys() {
        keys_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * (Required) The config keys to get optionally.
       * </pre>
       *
       * <code>repeated string keys = 1;</code>
       * @param value The bytes of the keys to add.
       * @return This builder for chaining.
       */
      public Builder addKeysBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        ensureKeysIsMutable();
        keys_.add(value);
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:spark.connect.ConfigRequest.GetOption)
    }

    // @@protoc_insertion_point(class_scope:spark.connect.ConfigRequest.GetOption)
    private static final org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetOption DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetOption();
    }

    public static org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetOption getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<GetOption>
        PARSER = new com.google.protobuf.AbstractParser<GetOption>() {
      @java.lang.Override
      public GetOption parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<GetOption> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<GetOption> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetOption getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface GetAllOrBuilder extends
      // @@protoc_insertion_point(interface_extends:spark.connect.ConfigRequest.GetAll)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * (Optional) The prefix of the config key to get.
     * </pre>
     *
     * <code>optional string prefix = 1;</code>
     * @return Whether the prefix field is set.
     */
    boolean hasPrefix();
    /**
     * <pre>
     * (Optional) The prefix of the config key to get.
     * </pre>
     *
     * <code>optional string prefix = 1;</code>
     * @return The prefix.
     */
    java.lang.String getPrefix();
    /**
     * <pre>
     * (Optional) The prefix of the config key to get.
     * </pre>
     *
     * <code>optional string prefix = 1;</code>
     * @return The bytes for prefix.
     */
    com.google.protobuf.ByteString
        getPrefixBytes();
  }
  /**
   * Protobuf type {@code spark.connect.ConfigRequest.GetAll}
   */
  public static final class GetAll extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:spark.connect.ConfigRequest.GetAll)
      GetAllOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use GetAll.newBuilder() to construct.
    private GetAll(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private GetAll() {
      prefix_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new GetAll();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.kyuubi.engine.spark.connect.proto.Base.internal_static_spark_connect_ConfigRequest_GetAll_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.kyuubi.engine.spark.connect.proto.Base.internal_static_spark_connect_ConfigRequest_GetAll_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetAll.class, org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetAll.Builder.class);
    }

    private int bitField0_;
    public static final int PREFIX_FIELD_NUMBER = 1;
    private volatile java.lang.Object prefix_;
    /**
     * <pre>
     * (Optional) The prefix of the config key to get.
     * </pre>
     *
     * <code>optional string prefix = 1;</code>
     * @return Whether the prefix field is set.
     */
    @java.lang.Override
    public boolean hasPrefix() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * (Optional) The prefix of the config key to get.
     * </pre>
     *
     * <code>optional string prefix = 1;</code>
     * @return The prefix.
     */
    @java.lang.Override
    public java.lang.String getPrefix() {
      java.lang.Object ref = prefix_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        prefix_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * (Optional) The prefix of the config key to get.
     * </pre>
     *
     * <code>optional string prefix = 1;</code>
     * @return The bytes for prefix.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getPrefixBytes() {
      java.lang.Object ref = prefix_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        prefix_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, prefix_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, prefix_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetAll)) {
        return super.equals(obj);
      }
      org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetAll other = (org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetAll) obj;

      if (hasPrefix() != other.hasPrefix()) return false;
      if (hasPrefix()) {
        if (!getPrefix()
            .equals(other.getPrefix())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasPrefix()) {
        hash = (37 * hash) + PREFIX_FIELD_NUMBER;
        hash = (53 * hash) + getPrefix().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetAll parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetAll parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetAll parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetAll parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetAll parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetAll parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetAll parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetAll parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetAll parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetAll parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetAll parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetAll parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetAll prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code spark.connect.ConfigRequest.GetAll}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:spark.connect.ConfigRequest.GetAll)
        org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetAllOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.kyuubi.engine.spark.connect.proto.Base.internal_static_spark_connect_ConfigRequest_GetAll_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.kyuubi.engine.spark.connect.proto.Base.internal_static_spark_connect_ConfigRequest_GetAll_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetAll.class, org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetAll.Builder.class);
      }

      // Construct using org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetAll.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        prefix_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.kyuubi.engine.spark.connect.proto.Base.internal_static_spark_connect_ConfigRequest_GetAll_descriptor;
      }

      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetAll getDefaultInstanceForType() {
        return org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetAll.getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetAll build() {
        org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetAll result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetAll buildPartial() {
        org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetAll result = new org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetAll(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          to_bitField0_ |= 0x00000001;
        }
        result.prefix_ = prefix_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetAll) {
          return mergeFrom((org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetAll)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetAll other) {
        if (other == org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetAll.getDefaultInstance()) return this;
        if (other.hasPrefix()) {
          bitField0_ |= 0x00000001;
          prefix_ = other.prefix_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                prefix_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object prefix_ = "";
      /**
       * <pre>
       * (Optional) The prefix of the config key to get.
       * </pre>
       *
       * <code>optional string prefix = 1;</code>
       * @return Whether the prefix field is set.
       */
      public boolean hasPrefix() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * (Optional) The prefix of the config key to get.
       * </pre>
       *
       * <code>optional string prefix = 1;</code>
       * @return The prefix.
       */
      public java.lang.String getPrefix() {
        java.lang.Object ref = prefix_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          prefix_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * (Optional) The prefix of the config key to get.
       * </pre>
       *
       * <code>optional string prefix = 1;</code>
       * @return The bytes for prefix.
       */
      public com.google.protobuf.ByteString
          getPrefixBytes() {
        java.lang.Object ref = prefix_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          prefix_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * (Optional) The prefix of the config key to get.
       * </pre>
       *
       * <code>optional string prefix = 1;</code>
       * @param value The prefix to set.
       * @return This builder for chaining.
       */
      public Builder setPrefix(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        prefix_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * (Optional) The prefix of the config key to get.
       * </pre>
       *
       * <code>optional string prefix = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearPrefix() {
        bitField0_ = (bitField0_ & ~0x00000001);
        prefix_ = getDefaultInstance().getPrefix();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * (Optional) The prefix of the config key to get.
       * </pre>
       *
       * <code>optional string prefix = 1;</code>
       * @param value The bytes for prefix to set.
       * @return This builder for chaining.
       */
      public Builder setPrefixBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        bitField0_ |= 0x00000001;
        prefix_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:spark.connect.ConfigRequest.GetAll)
    }

    // @@protoc_insertion_point(class_scope:spark.connect.ConfigRequest.GetAll)
    private static final org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetAll DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetAll();
    }

    public static org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetAll getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<GetAll>
        PARSER = new com.google.protobuf.AbstractParser<GetAll>() {
      @java.lang.Override
      public GetAll parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<GetAll> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<GetAll> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.GetAll getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface UnsetOrBuilder extends
      // @@protoc_insertion_point(interface_extends:spark.connect.ConfigRequest.Unset)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * (Required) The config keys to unset.
     * </pre>
     *
     * <code>repeated string keys = 1;</code>
     * @return A list containing the keys.
     */
    java.util.List<java.lang.String>
        getKeysList();
    /**
     * <pre>
     * (Required) The config keys to unset.
     * </pre>
     *
     * <code>repeated string keys = 1;</code>
     * @return The count of keys.
     */
    int getKeysCount();
    /**
     * <pre>
     * (Required) The config keys to unset.
     * </pre>
     *
     * <code>repeated string keys = 1;</code>
     * @param index The index of the element to return.
     * @return The keys at the given index.
     */
    java.lang.String getKeys(int index);
    /**
     * <pre>
     * (Required) The config keys to unset.
     * </pre>
     *
     * <code>repeated string keys = 1;</code>
     * @param index The index of the value to return.
     * @return The bytes of the keys at the given index.
     */
    com.google.protobuf.ByteString
        getKeysBytes(int index);
  }
  /**
   * Protobuf type {@code spark.connect.ConfigRequest.Unset}
   */
  public static final class Unset extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:spark.connect.ConfigRequest.Unset)
      UnsetOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Unset.newBuilder() to construct.
    private Unset(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Unset() {
      keys_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Unset();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.kyuubi.engine.spark.connect.proto.Base.internal_static_spark_connect_ConfigRequest_Unset_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.kyuubi.engine.spark.connect.proto.Base.internal_static_spark_connect_ConfigRequest_Unset_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Unset.class, org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Unset.Builder.class);
    }

    public static final int KEYS_FIELD_NUMBER = 1;
    private com.google.protobuf.LazyStringList keys_;
    /**
     * <pre>
     * (Required) The config keys to unset.
     * </pre>
     *
     * <code>repeated string keys = 1;</code>
     * @return A list containing the keys.
     */
    public com.google.protobuf.ProtocolStringList
        getKeysList() {
      return keys_;
    }
    /**
     * <pre>
     * (Required) The config keys to unset.
     * </pre>
     *
     * <code>repeated string keys = 1;</code>
     * @return The count of keys.
     */
    public int getKeysCount() {
      return keys_.size();
    }
    /**
     * <pre>
     * (Required) The config keys to unset.
     * </pre>
     *
     * <code>repeated string keys = 1;</code>
     * @param index The index of the element to return.
     * @return The keys at the given index.
     */
    public java.lang.String getKeys(int index) {
      return keys_.get(index);
    }
    /**
     * <pre>
     * (Required) The config keys to unset.
     * </pre>
     *
     * <code>repeated string keys = 1;</code>
     * @param index The index of the value to return.
     * @return The bytes of the keys at the given index.
     */
    public com.google.protobuf.ByteString
        getKeysBytes(int index) {
      return keys_.getByteString(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < keys_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, keys_.getRaw(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < keys_.size(); i++) {
          dataSize += computeStringSizeNoTag(keys_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getKeysList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Unset)) {
        return super.equals(obj);
      }
      org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Unset other = (org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Unset) obj;

      if (!getKeysList()
          .equals(other.getKeysList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getKeysCount() > 0) {
        hash = (37 * hash) + KEYS_FIELD_NUMBER;
        hash = (53 * hash) + getKeysList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Unset parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Unset parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Unset parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Unset parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Unset parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Unset parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Unset parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Unset parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Unset parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Unset parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Unset parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Unset parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Unset prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code spark.connect.ConfigRequest.Unset}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:spark.connect.ConfigRequest.Unset)
        org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.UnsetOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.kyuubi.engine.spark.connect.proto.Base.internal_static_spark_connect_ConfigRequest_Unset_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.kyuubi.engine.spark.connect.proto.Base.internal_static_spark_connect_ConfigRequest_Unset_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Unset.class, org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Unset.Builder.class);
      }

      // Construct using org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Unset.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        keys_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.kyuubi.engine.spark.connect.proto.Base.internal_static_spark_connect_ConfigRequest_Unset_descriptor;
      }

      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Unset getDefaultInstanceForType() {
        return org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Unset.getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Unset build() {
        org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Unset result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Unset buildPartial() {
        org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Unset result = new org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Unset(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) != 0)) {
          keys_ = keys_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.keys_ = keys_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Unset) {
          return mergeFrom((org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Unset)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Unset other) {
        if (other == org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Unset.getDefaultInstance()) return this;
        if (!other.keys_.isEmpty()) {
          if (keys_.isEmpty()) {
            keys_ = other.keys_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureKeysIsMutable();
            keys_.addAll(other.keys_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                java.lang.String s = input.readStringRequireUtf8();
                ensureKeysIsMutable();
                keys_.add(s);
                break;
              } // case 10
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.LazyStringList keys_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureKeysIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          keys_ = new com.google.protobuf.LazyStringArrayList(keys_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <pre>
       * (Required) The config keys to unset.
       * </pre>
       *
       * <code>repeated string keys = 1;</code>
       * @return A list containing the keys.
       */
      public com.google.protobuf.ProtocolStringList
          getKeysList() {
        return keys_.getUnmodifiableView();
      }
      /**
       * <pre>
       * (Required) The config keys to unset.
       * </pre>
       *
       * <code>repeated string keys = 1;</code>
       * @return The count of keys.
       */
      public int getKeysCount() {
        return keys_.size();
      }
      /**
       * <pre>
       * (Required) The config keys to unset.
       * </pre>
       *
       * <code>repeated string keys = 1;</code>
       * @param index The index of the element to return.
       * @return The keys at the given index.
       */
      public java.lang.String getKeys(int index) {
        return keys_.get(index);
      }
      /**
       * <pre>
       * (Required) The config keys to unset.
       * </pre>
       *
       * <code>repeated string keys = 1;</code>
       * @param index The index of the value to return.
       * @return The bytes of the keys at the given index.
       */
      public com.google.protobuf.ByteString
          getKeysBytes(int index) {
        return keys_.getByteString(index);
      }
      /**
       * <pre>
       * (Required) The config keys to unset.
       * </pre>
       *
       * <code>repeated string keys = 1;</code>
       * @param index The index to set the value at.
       * @param value The keys to set.
       * @return This builder for chaining.
       */
      public Builder setKeys(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureKeysIsMutable();
        keys_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * (Required) The config keys to unset.
       * </pre>
       *
       * <code>repeated string keys = 1;</code>
       * @param value The keys to add.
       * @return This builder for chaining.
       */
      public Builder addKeys(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureKeysIsMutable();
        keys_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * (Required) The config keys to unset.
       * </pre>
       *
       * <code>repeated string keys = 1;</code>
       * @param values The keys to add.
       * @return This builder for chaining.
       */
      public Builder addAllKeys(
          java.lang.Iterable<java.lang.String> values) {
        ensureKeysIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, keys_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * (Required) The config keys to unset.
       * </pre>
       *
       * <code>repeated string keys = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearKeys() {
        keys_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * (Required) The config keys to unset.
       * </pre>
       *
       * <code>repeated string keys = 1;</code>
       * @param value The bytes of the keys to add.
       * @return This builder for chaining.
       */
      public Builder addKeysBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        ensureKeysIsMutable();
        keys_.add(value);
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:spark.connect.ConfigRequest.Unset)
    }

    // @@protoc_insertion_point(class_scope:spark.connect.ConfigRequest.Unset)
    private static final org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Unset DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Unset();
    }

    public static org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Unset getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Unset>
        PARSER = new com.google.protobuf.AbstractParser<Unset>() {
      @java.lang.Override
      public Unset parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<Unset> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Unset> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Unset getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface IsModifiableOrBuilder extends
      // @@protoc_insertion_point(interface_extends:spark.connect.ConfigRequest.IsModifiable)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * (Required) The config keys to check the config is modifiable.
     * </pre>
     *
     * <code>repeated string keys = 1;</code>
     * @return A list containing the keys.
     */
    java.util.List<java.lang.String>
        getKeysList();
    /**
     * <pre>
     * (Required) The config keys to check the config is modifiable.
     * </pre>
     *
     * <code>repeated string keys = 1;</code>
     * @return The count of keys.
     */
    int getKeysCount();
    /**
     * <pre>
     * (Required) The config keys to check the config is modifiable.
     * </pre>
     *
     * <code>repeated string keys = 1;</code>
     * @param index The index of the element to return.
     * @return The keys at the given index.
     */
    java.lang.String getKeys(int index);
    /**
     * <pre>
     * (Required) The config keys to check the config is modifiable.
     * </pre>
     *
     * <code>repeated string keys = 1;</code>
     * @param index The index of the value to return.
     * @return The bytes of the keys at the given index.
     */
    com.google.protobuf.ByteString
        getKeysBytes(int index);
  }
  /**
   * Protobuf type {@code spark.connect.ConfigRequest.IsModifiable}
   */
  public static final class IsModifiable extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:spark.connect.ConfigRequest.IsModifiable)
      IsModifiableOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use IsModifiable.newBuilder() to construct.
    private IsModifiable(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private IsModifiable() {
      keys_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new IsModifiable();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.kyuubi.engine.spark.connect.proto.Base.internal_static_spark_connect_ConfigRequest_IsModifiable_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.kyuubi.engine.spark.connect.proto.Base.internal_static_spark_connect_ConfigRequest_IsModifiable_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.IsModifiable.class, org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.IsModifiable.Builder.class);
    }

    public static final int KEYS_FIELD_NUMBER = 1;
    private com.google.protobuf.LazyStringList keys_;
    /**
     * <pre>
     * (Required) The config keys to check the config is modifiable.
     * </pre>
     *
     * <code>repeated string keys = 1;</code>
     * @return A list containing the keys.
     */
    public com.google.protobuf.ProtocolStringList
        getKeysList() {
      return keys_;
    }
    /**
     * <pre>
     * (Required) The config keys to check the config is modifiable.
     * </pre>
     *
     * <code>repeated string keys = 1;</code>
     * @return The count of keys.
     */
    public int getKeysCount() {
      return keys_.size();
    }
    /**
     * <pre>
     * (Required) The config keys to check the config is modifiable.
     * </pre>
     *
     * <code>repeated string keys = 1;</code>
     * @param index The index of the element to return.
     * @return The keys at the given index.
     */
    public java.lang.String getKeys(int index) {
      return keys_.get(index);
    }
    /**
     * <pre>
     * (Required) The config keys to check the config is modifiable.
     * </pre>
     *
     * <code>repeated string keys = 1;</code>
     * @param index The index of the value to return.
     * @return The bytes of the keys at the given index.
     */
    public com.google.protobuf.ByteString
        getKeysBytes(int index) {
      return keys_.getByteString(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < keys_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, keys_.getRaw(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < keys_.size(); i++) {
          dataSize += computeStringSizeNoTag(keys_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getKeysList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.IsModifiable)) {
        return super.equals(obj);
      }
      org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.IsModifiable other = (org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.IsModifiable) obj;

      if (!getKeysList()
          .equals(other.getKeysList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getKeysCount() > 0) {
        hash = (37 * hash) + KEYS_FIELD_NUMBER;
        hash = (53 * hash) + getKeysList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.IsModifiable parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.IsModifiable parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.IsModifiable parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.IsModifiable parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.IsModifiable parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.IsModifiable parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.IsModifiable parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.IsModifiable parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.IsModifiable parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.IsModifiable parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.IsModifiable parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.IsModifiable parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.IsModifiable prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code spark.connect.ConfigRequest.IsModifiable}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:spark.connect.ConfigRequest.IsModifiable)
        org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.IsModifiableOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.kyuubi.engine.spark.connect.proto.Base.internal_static_spark_connect_ConfigRequest_IsModifiable_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.kyuubi.engine.spark.connect.proto.Base.internal_static_spark_connect_ConfigRequest_IsModifiable_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.IsModifiable.class, org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.IsModifiable.Builder.class);
      }

      // Construct using org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.IsModifiable.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        keys_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.kyuubi.engine.spark.connect.proto.Base.internal_static_spark_connect_ConfigRequest_IsModifiable_descriptor;
      }

      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.IsModifiable getDefaultInstanceForType() {
        return org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.IsModifiable.getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.IsModifiable build() {
        org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.IsModifiable result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.IsModifiable buildPartial() {
        org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.IsModifiable result = new org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.IsModifiable(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) != 0)) {
          keys_ = keys_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.keys_ = keys_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.IsModifiable) {
          return mergeFrom((org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.IsModifiable)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.IsModifiable other) {
        if (other == org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.IsModifiable.getDefaultInstance()) return this;
        if (!other.keys_.isEmpty()) {
          if (keys_.isEmpty()) {
            keys_ = other.keys_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureKeysIsMutable();
            keys_.addAll(other.keys_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                java.lang.String s = input.readStringRequireUtf8();
                ensureKeysIsMutable();
                keys_.add(s);
                break;
              } // case 10
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.LazyStringList keys_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureKeysIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          keys_ = new com.google.protobuf.LazyStringArrayList(keys_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <pre>
       * (Required) The config keys to check the config is modifiable.
       * </pre>
       *
       * <code>repeated string keys = 1;</code>
       * @return A list containing the keys.
       */
      public com.google.protobuf.ProtocolStringList
          getKeysList() {
        return keys_.getUnmodifiableView();
      }
      /**
       * <pre>
       * (Required) The config keys to check the config is modifiable.
       * </pre>
       *
       * <code>repeated string keys = 1;</code>
       * @return The count of keys.
       */
      public int getKeysCount() {
        return keys_.size();
      }
      /**
       * <pre>
       * (Required) The config keys to check the config is modifiable.
       * </pre>
       *
       * <code>repeated string keys = 1;</code>
       * @param index The index of the element to return.
       * @return The keys at the given index.
       */
      public java.lang.String getKeys(int index) {
        return keys_.get(index);
      }
      /**
       * <pre>
       * (Required) The config keys to check the config is modifiable.
       * </pre>
       *
       * <code>repeated string keys = 1;</code>
       * @param index The index of the value to return.
       * @return The bytes of the keys at the given index.
       */
      public com.google.protobuf.ByteString
          getKeysBytes(int index) {
        return keys_.getByteString(index);
      }
      /**
       * <pre>
       * (Required) The config keys to check the config is modifiable.
       * </pre>
       *
       * <code>repeated string keys = 1;</code>
       * @param index The index to set the value at.
       * @param value The keys to set.
       * @return This builder for chaining.
       */
      public Builder setKeys(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureKeysIsMutable();
        keys_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * (Required) The config keys to check the config is modifiable.
       * </pre>
       *
       * <code>repeated string keys = 1;</code>
       * @param value The keys to add.
       * @return This builder for chaining.
       */
      public Builder addKeys(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureKeysIsMutable();
        keys_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * (Required) The config keys to check the config is modifiable.
       * </pre>
       *
       * <code>repeated string keys = 1;</code>
       * @param values The keys to add.
       * @return This builder for chaining.
       */
      public Builder addAllKeys(
          java.lang.Iterable<java.lang.String> values) {
        ensureKeysIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, keys_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * (Required) The config keys to check the config is modifiable.
       * </pre>
       *
       * <code>repeated string keys = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearKeys() {
        keys_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * (Required) The config keys to check the config is modifiable.
       * </pre>
       *
       * <code>repeated string keys = 1;</code>
       * @param value The bytes of the keys to add.
       * @return This builder for chaining.
       */
      public Builder addKeysBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        ensureKeysIsMutable();
        keys_.add(value);
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:spark.connect.ConfigRequest.IsModifiable)
    }

    // @@protoc_insertion_point(class_scope:spark.connect.ConfigRequest.IsModifiable)
    private static final org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.IsModifiable DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.IsModifiable();
    }

    public static org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.IsModifiable getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<IsModifiable>
        PARSER = new com.google.protobuf.AbstractParser<IsModifiable>() {
      @java.lang.Override
      public IsModifiable parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<IsModifiable> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<IsModifiable> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.IsModifiable getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private int bitField0_;
  public static final int SESSION_ID_FIELD_NUMBER = 1;
  private volatile java.lang.Object sessionId_;
  /**
   * <pre>
   * (Required)
   * The session_id specifies a spark session for a user id (which is specified
   * by user_context.user_id). The session_id is set by the client to be able to
   * collate streaming responses from different queries within the dedicated session.
   * The id should be an UUID string of the format `00112233-4455-6677-8899-aabbccddeeff`
   * </pre>
   *
   * <code>string session_id = 1;</code>
   * @return The sessionId.
   */
  @java.lang.Override
  public java.lang.String getSessionId() {
    java.lang.Object ref = sessionId_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      sessionId_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * (Required)
   * The session_id specifies a spark session for a user id (which is specified
   * by user_context.user_id). The session_id is set by the client to be able to
   * collate streaming responses from different queries within the dedicated session.
   * The id should be an UUID string of the format `00112233-4455-6677-8899-aabbccddeeff`
   * </pre>
   *
   * <code>string session_id = 1;</code>
   * @return The bytes for sessionId.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getSessionIdBytes() {
    java.lang.Object ref = sessionId_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      sessionId_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int USER_CONTEXT_FIELD_NUMBER = 2;
  private org.apache.kyuubi.engine.spark.connect.proto.UserContext userContext_;
  /**
   * <pre>
   * (Required) User context
   * </pre>
   *
   * <code>.spark.connect.UserContext user_context = 2;</code>
   * @return Whether the userContext field is set.
   */
  @java.lang.Override
  public boolean hasUserContext() {
    return userContext_ != null;
  }
  /**
   * <pre>
   * (Required) User context
   * </pre>
   *
   * <code>.spark.connect.UserContext user_context = 2;</code>
   * @return The userContext.
   */
  @java.lang.Override
  public org.apache.kyuubi.engine.spark.connect.proto.UserContext getUserContext() {
    return userContext_ == null ? org.apache.kyuubi.engine.spark.connect.proto.UserContext.getDefaultInstance() : userContext_;
  }
  /**
   * <pre>
   * (Required) User context
   * </pre>
   *
   * <code>.spark.connect.UserContext user_context = 2;</code>
   */
  @java.lang.Override
  public org.apache.kyuubi.engine.spark.connect.proto.UserContextOrBuilder getUserContextOrBuilder() {
    return getUserContext();
  }

  public static final int OPERATION_FIELD_NUMBER = 3;
  private org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Operation operation_;
  /**
   * <pre>
   * (Required) The operation for the config.
   * </pre>
   *
   * <code>.spark.connect.ConfigRequest.Operation operation = 3;</code>
   * @return Whether the operation field is set.
   */
  @java.lang.Override
  public boolean hasOperation() {
    return operation_ != null;
  }
  /**
   * <pre>
   * (Required) The operation for the config.
   * </pre>
   *
   * <code>.spark.connect.ConfigRequest.Operation operation = 3;</code>
   * @return The operation.
   */
  @java.lang.Override
  public org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Operation getOperation() {
    return operation_ == null ? org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Operation.getDefaultInstance() : operation_;
  }
  /**
   * <pre>
   * (Required) The operation for the config.
   * </pre>
   *
   * <code>.spark.connect.ConfigRequest.Operation operation = 3;</code>
   */
  @java.lang.Override
  public org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.OperationOrBuilder getOperationOrBuilder() {
    return getOperation();
  }

  public static final int CLIENT_TYPE_FIELD_NUMBER = 4;
  private volatile java.lang.Object clientType_;
  /**
   * <pre>
   * Provides optional information about the client sending the request. This field
   * can be used for language or version specific information and is only intended for
   * logging purposes and will not be interpreted by the server.
   * </pre>
   *
   * <code>optional string client_type = 4;</code>
   * @return Whether the clientType field is set.
   */
  @java.lang.Override
  public boolean hasClientType() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <pre>
   * Provides optional information about the client sending the request. This field
   * can be used for language or version specific information and is only intended for
   * logging purposes and will not be interpreted by the server.
   * </pre>
   *
   * <code>optional string client_type = 4;</code>
   * @return The clientType.
   */
  @java.lang.Override
  public java.lang.String getClientType() {
    java.lang.Object ref = clientType_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      clientType_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Provides optional information about the client sending the request. This field
   * can be used for language or version specific information and is only intended for
   * logging purposes and will not be interpreted by the server.
   * </pre>
   *
   * <code>optional string client_type = 4;</code>
   * @return The bytes for clientType.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getClientTypeBytes() {
    java.lang.Object ref = clientType_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      clientType_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(sessionId_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, sessionId_);
    }
    if (userContext_ != null) {
      output.writeMessage(2, getUserContext());
    }
    if (operation_ != null) {
      output.writeMessage(3, getOperation());
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 4, clientType_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(sessionId_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, sessionId_);
    }
    if (userContext_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getUserContext());
    }
    if (operation_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getOperation());
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, clientType_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest)) {
      return super.equals(obj);
    }
    org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest other = (org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest) obj;

    if (!getSessionId()
        .equals(other.getSessionId())) return false;
    if (hasUserContext() != other.hasUserContext()) return false;
    if (hasUserContext()) {
      if (!getUserContext()
          .equals(other.getUserContext())) return false;
    }
    if (hasOperation() != other.hasOperation()) return false;
    if (hasOperation()) {
      if (!getOperation()
          .equals(other.getOperation())) return false;
    }
    if (hasClientType() != other.hasClientType()) return false;
    if (hasClientType()) {
      if (!getClientType()
          .equals(other.getClientType())) return false;
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + SESSION_ID_FIELD_NUMBER;
    hash = (53 * hash) + getSessionId().hashCode();
    if (hasUserContext()) {
      hash = (37 * hash) + USER_CONTEXT_FIELD_NUMBER;
      hash = (53 * hash) + getUserContext().hashCode();
    }
    if (hasOperation()) {
      hash = (37 * hash) + OPERATION_FIELD_NUMBER;
      hash = (53 * hash) + getOperation().hashCode();
    }
    if (hasClientType()) {
      hash = (37 * hash) + CLIENT_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getClientType().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Request to update or fetch the configurations.
   * </pre>
   *
   * Protobuf type {@code spark.connect.ConfigRequest}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:spark.connect.ConfigRequest)
      org.apache.kyuubi.engine.spark.connect.proto.ConfigRequestOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.kyuubi.engine.spark.connect.proto.Base.internal_static_spark_connect_ConfigRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.kyuubi.engine.spark.connect.proto.Base.internal_static_spark_connect_ConfigRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.class, org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Builder.class);
    }

    // Construct using org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      sessionId_ = "";

      if (userContextBuilder_ == null) {
        userContext_ = null;
      } else {
        userContext_ = null;
        userContextBuilder_ = null;
      }
      if (operationBuilder_ == null) {
        operation_ = null;
      } else {
        operation_ = null;
        operationBuilder_ = null;
      }
      clientType_ = "";
      bitField0_ = (bitField0_ & ~0x00000001);
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return org.apache.kyuubi.engine.spark.connect.proto.Base.internal_static_spark_connect_ConfigRequest_descriptor;
    }

    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest getDefaultInstanceForType() {
      return org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.getDefaultInstance();
    }

    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest build() {
      org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest buildPartial() {
      org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest result = new org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      result.sessionId_ = sessionId_;
      if (userContextBuilder_ == null) {
        result.userContext_ = userContext_;
      } else {
        result.userContext_ = userContextBuilder_.build();
      }
      if (operationBuilder_ == null) {
        result.operation_ = operation_;
      } else {
        result.operation_ = operationBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000001) != 0)) {
        to_bitField0_ |= 0x00000001;
      }
      result.clientType_ = clientType_;
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest) {
        return mergeFrom((org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest other) {
      if (other == org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.getDefaultInstance()) return this;
      if (!other.getSessionId().isEmpty()) {
        sessionId_ = other.sessionId_;
        onChanged();
      }
      if (other.hasUserContext()) {
        mergeUserContext(other.getUserContext());
      }
      if (other.hasOperation()) {
        mergeOperation(other.getOperation());
      }
      if (other.hasClientType()) {
        bitField0_ |= 0x00000001;
        clientType_ = other.clientType_;
        onChanged();
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              sessionId_ = input.readStringRequireUtf8();

              break;
            } // case 10
            case 18: {
              input.readMessage(
                  getUserContextFieldBuilder().getBuilder(),
                  extensionRegistry);

              break;
            } // case 18
            case 26: {
              input.readMessage(
                  getOperationFieldBuilder().getBuilder(),
                  extensionRegistry);

              break;
            } // case 26
            case 34: {
              clientType_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000001;
              break;
            } // case 34
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private java.lang.Object sessionId_ = "";
    /**
     * <pre>
     * (Required)
     * The session_id specifies a spark session for a user id (which is specified
     * by user_context.user_id). The session_id is set by the client to be able to
     * collate streaming responses from different queries within the dedicated session.
     * The id should be an UUID string of the format `00112233-4455-6677-8899-aabbccddeeff`
     * </pre>
     *
     * <code>string session_id = 1;</code>
     * @return The sessionId.
     */
    public java.lang.String getSessionId() {
      java.lang.Object ref = sessionId_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        sessionId_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * (Required)
     * The session_id specifies a spark session for a user id (which is specified
     * by user_context.user_id). The session_id is set by the client to be able to
     * collate streaming responses from different queries within the dedicated session.
     * The id should be an UUID string of the format `00112233-4455-6677-8899-aabbccddeeff`
     * </pre>
     *
     * <code>string session_id = 1;</code>
     * @return The bytes for sessionId.
     */
    public com.google.protobuf.ByteString
        getSessionIdBytes() {
      java.lang.Object ref = sessionId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        sessionId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * (Required)
     * The session_id specifies a spark session for a user id (which is specified
     * by user_context.user_id). The session_id is set by the client to be able to
     * collate streaming responses from different queries within the dedicated session.
     * The id should be an UUID string of the format `00112233-4455-6677-8899-aabbccddeeff`
     * </pre>
     *
     * <code>string session_id = 1;</code>
     * @param value The sessionId to set.
     * @return This builder for chaining.
     */
    public Builder setSessionId(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      sessionId_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * (Required)
     * The session_id specifies a spark session for a user id (which is specified
     * by user_context.user_id). The session_id is set by the client to be able to
     * collate streaming responses from different queries within the dedicated session.
     * The id should be an UUID string of the format `00112233-4455-6677-8899-aabbccddeeff`
     * </pre>
     *
     * <code>string session_id = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearSessionId() {
      
      sessionId_ = getDefaultInstance().getSessionId();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * (Required)
     * The session_id specifies a spark session for a user id (which is specified
     * by user_context.user_id). The session_id is set by the client to be able to
     * collate streaming responses from different queries within the dedicated session.
     * The id should be an UUID string of the format `00112233-4455-6677-8899-aabbccddeeff`
     * </pre>
     *
     * <code>string session_id = 1;</code>
     * @param value The bytes for sessionId to set.
     * @return This builder for chaining.
     */
    public Builder setSessionIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      sessionId_ = value;
      onChanged();
      return this;
    }

    private org.apache.kyuubi.engine.spark.connect.proto.UserContext userContext_;
    private com.google.protobuf.SingleFieldBuilderV3<
        org.apache.kyuubi.engine.spark.connect.proto.UserContext, org.apache.kyuubi.engine.spark.connect.proto.UserContext.Builder, org.apache.kyuubi.engine.spark.connect.proto.UserContextOrBuilder> userContextBuilder_;
    /**
     * <pre>
     * (Required) User context
     * </pre>
     *
     * <code>.spark.connect.UserContext user_context = 2;</code>
     * @return Whether the userContext field is set.
     */
    public boolean hasUserContext() {
      return userContextBuilder_ != null || userContext_ != null;
    }
    /**
     * <pre>
     * (Required) User context
     * </pre>
     *
     * <code>.spark.connect.UserContext user_context = 2;</code>
     * @return The userContext.
     */
    public org.apache.kyuubi.engine.spark.connect.proto.UserContext getUserContext() {
      if (userContextBuilder_ == null) {
        return userContext_ == null ? org.apache.kyuubi.engine.spark.connect.proto.UserContext.getDefaultInstance() : userContext_;
      } else {
        return userContextBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * (Required) User context
     * </pre>
     *
     * <code>.spark.connect.UserContext user_context = 2;</code>
     */
    public Builder setUserContext(org.apache.kyuubi.engine.spark.connect.proto.UserContext value) {
      if (userContextBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        userContext_ = value;
        onChanged();
      } else {
        userContextBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * (Required) User context
     * </pre>
     *
     * <code>.spark.connect.UserContext user_context = 2;</code>
     */
    public Builder setUserContext(
        org.apache.kyuubi.engine.spark.connect.proto.UserContext.Builder builderForValue) {
      if (userContextBuilder_ == null) {
        userContext_ = builderForValue.build();
        onChanged();
      } else {
        userContextBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * (Required) User context
     * </pre>
     *
     * <code>.spark.connect.UserContext user_context = 2;</code>
     */
    public Builder mergeUserContext(org.apache.kyuubi.engine.spark.connect.proto.UserContext value) {
      if (userContextBuilder_ == null) {
        if (userContext_ != null) {
          userContext_ =
            org.apache.kyuubi.engine.spark.connect.proto.UserContext.newBuilder(userContext_).mergeFrom(value).buildPartial();
        } else {
          userContext_ = value;
        }
        onChanged();
      } else {
        userContextBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * (Required) User context
     * </pre>
     *
     * <code>.spark.connect.UserContext user_context = 2;</code>
     */
    public Builder clearUserContext() {
      if (userContextBuilder_ == null) {
        userContext_ = null;
        onChanged();
      } else {
        userContext_ = null;
        userContextBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * (Required) User context
     * </pre>
     *
     * <code>.spark.connect.UserContext user_context = 2;</code>
     */
    public org.apache.kyuubi.engine.spark.connect.proto.UserContext.Builder getUserContextBuilder() {
      
      onChanged();
      return getUserContextFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * (Required) User context
     * </pre>
     *
     * <code>.spark.connect.UserContext user_context = 2;</code>
     */
    public org.apache.kyuubi.engine.spark.connect.proto.UserContextOrBuilder getUserContextOrBuilder() {
      if (userContextBuilder_ != null) {
        return userContextBuilder_.getMessageOrBuilder();
      } else {
        return userContext_ == null ?
            org.apache.kyuubi.engine.spark.connect.proto.UserContext.getDefaultInstance() : userContext_;
      }
    }
    /**
     * <pre>
     * (Required) User context
     * </pre>
     *
     * <code>.spark.connect.UserContext user_context = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.apache.kyuubi.engine.spark.connect.proto.UserContext, org.apache.kyuubi.engine.spark.connect.proto.UserContext.Builder, org.apache.kyuubi.engine.spark.connect.proto.UserContextOrBuilder> 
        getUserContextFieldBuilder() {
      if (userContextBuilder_ == null) {
        userContextBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.apache.kyuubi.engine.spark.connect.proto.UserContext, org.apache.kyuubi.engine.spark.connect.proto.UserContext.Builder, org.apache.kyuubi.engine.spark.connect.proto.UserContextOrBuilder>(
                getUserContext(),
                getParentForChildren(),
                isClean());
        userContext_ = null;
      }
      return userContextBuilder_;
    }

    private org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Operation operation_;
    private com.google.protobuf.SingleFieldBuilderV3<
        org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Operation, org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Operation.Builder, org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.OperationOrBuilder> operationBuilder_;
    /**
     * <pre>
     * (Required) The operation for the config.
     * </pre>
     *
     * <code>.spark.connect.ConfigRequest.Operation operation = 3;</code>
     * @return Whether the operation field is set.
     */
    public boolean hasOperation() {
      return operationBuilder_ != null || operation_ != null;
    }
    /**
     * <pre>
     * (Required) The operation for the config.
     * </pre>
     *
     * <code>.spark.connect.ConfigRequest.Operation operation = 3;</code>
     * @return The operation.
     */
    public org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Operation getOperation() {
      if (operationBuilder_ == null) {
        return operation_ == null ? org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Operation.getDefaultInstance() : operation_;
      } else {
        return operationBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * (Required) The operation for the config.
     * </pre>
     *
     * <code>.spark.connect.ConfigRequest.Operation operation = 3;</code>
     */
    public Builder setOperation(org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Operation value) {
      if (operationBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        operation_ = value;
        onChanged();
      } else {
        operationBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * (Required) The operation for the config.
     * </pre>
     *
     * <code>.spark.connect.ConfigRequest.Operation operation = 3;</code>
     */
    public Builder setOperation(
        org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Operation.Builder builderForValue) {
      if (operationBuilder_ == null) {
        operation_ = builderForValue.build();
        onChanged();
      } else {
        operationBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * (Required) The operation for the config.
     * </pre>
     *
     * <code>.spark.connect.ConfigRequest.Operation operation = 3;</code>
     */
    public Builder mergeOperation(org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Operation value) {
      if (operationBuilder_ == null) {
        if (operation_ != null) {
          operation_ =
            org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Operation.newBuilder(operation_).mergeFrom(value).buildPartial();
        } else {
          operation_ = value;
        }
        onChanged();
      } else {
        operationBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * (Required) The operation for the config.
     * </pre>
     *
     * <code>.spark.connect.ConfigRequest.Operation operation = 3;</code>
     */
    public Builder clearOperation() {
      if (operationBuilder_ == null) {
        operation_ = null;
        onChanged();
      } else {
        operation_ = null;
        operationBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * (Required) The operation for the config.
     * </pre>
     *
     * <code>.spark.connect.ConfigRequest.Operation operation = 3;</code>
     */
    public org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Operation.Builder getOperationBuilder() {
      
      onChanged();
      return getOperationFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * (Required) The operation for the config.
     * </pre>
     *
     * <code>.spark.connect.ConfigRequest.Operation operation = 3;</code>
     */
    public org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.OperationOrBuilder getOperationOrBuilder() {
      if (operationBuilder_ != null) {
        return operationBuilder_.getMessageOrBuilder();
      } else {
        return operation_ == null ?
            org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Operation.getDefaultInstance() : operation_;
      }
    }
    /**
     * <pre>
     * (Required) The operation for the config.
     * </pre>
     *
     * <code>.spark.connect.ConfigRequest.Operation operation = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Operation, org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Operation.Builder, org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.OperationOrBuilder> 
        getOperationFieldBuilder() {
      if (operationBuilder_ == null) {
        operationBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Operation, org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.Operation.Builder, org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest.OperationOrBuilder>(
                getOperation(),
                getParentForChildren(),
                isClean());
        operation_ = null;
      }
      return operationBuilder_;
    }

    private java.lang.Object clientType_ = "";
    /**
     * <pre>
     * Provides optional information about the client sending the request. This field
     * can be used for language or version specific information and is only intended for
     * logging purposes and will not be interpreted by the server.
     * </pre>
     *
     * <code>optional string client_type = 4;</code>
     * @return Whether the clientType field is set.
     */
    public boolean hasClientType() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Provides optional information about the client sending the request. This field
     * can be used for language or version specific information and is only intended for
     * logging purposes and will not be interpreted by the server.
     * </pre>
     *
     * <code>optional string client_type = 4;</code>
     * @return The clientType.
     */
    public java.lang.String getClientType() {
      java.lang.Object ref = clientType_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        clientType_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Provides optional information about the client sending the request. This field
     * can be used for language or version specific information and is only intended for
     * logging purposes and will not be interpreted by the server.
     * </pre>
     *
     * <code>optional string client_type = 4;</code>
     * @return The bytes for clientType.
     */
    public com.google.protobuf.ByteString
        getClientTypeBytes() {
      java.lang.Object ref = clientType_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        clientType_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Provides optional information about the client sending the request. This field
     * can be used for language or version specific information and is only intended for
     * logging purposes and will not be interpreted by the server.
     * </pre>
     *
     * <code>optional string client_type = 4;</code>
     * @param value The clientType to set.
     * @return This builder for chaining.
     */
    public Builder setClientType(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      clientType_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Provides optional information about the client sending the request. This field
     * can be used for language or version specific information and is only intended for
     * logging purposes and will not be interpreted by the server.
     * </pre>
     *
     * <code>optional string client_type = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearClientType() {
      bitField0_ = (bitField0_ & ~0x00000001);
      clientType_ = getDefaultInstance().getClientType();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Provides optional information about the client sending the request. This field
     * can be used for language or version specific information and is only intended for
     * logging purposes and will not be interpreted by the server.
     * </pre>
     *
     * <code>optional string client_type = 4;</code>
     * @param value The bytes for clientType to set.
     * @return This builder for chaining.
     */
    public Builder setClientTypeBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      bitField0_ |= 0x00000001;
      clientType_ = value;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:spark.connect.ConfigRequest)
  }

  // @@protoc_insertion_point(class_scope:spark.connect.ConfigRequest)
  private static final org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest();
  }

  public static org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<ConfigRequest>
      PARSER = new com.google.protobuf.AbstractParser<ConfigRequest>() {
    @java.lang.Override
    public ConfigRequest parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<ConfigRequest> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<ConfigRequest> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public org.apache.kyuubi.engine.spark.connect.proto.ConfigRequest getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

