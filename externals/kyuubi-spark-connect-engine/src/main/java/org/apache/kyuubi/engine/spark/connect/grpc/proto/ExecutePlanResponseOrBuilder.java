// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: kyuubi/spark/connect/base.proto

package org.apache.kyuubi.engine.spark.connect.grpc.proto;

public interface ExecutePlanResponseOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:spark.connect.ExecutePlanResponse)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>string session_id = 1;</code>
   *
   * @return The sessionId.
   */
  java.lang.String getSessionId();
  /**
   * <code>string session_id = 1;</code>
   *
   * @return The bytes for sessionId.
   */
  com.google.protobuf.ByteString getSessionIdBytes();

  /**
   *
   *
   * <pre>
   * Server-side generated idempotency key that the client can use to assert that the server side
   * session has not changed.
   * </pre>
   *
   * <code>string server_side_session_id = 15;</code>
   *
   * @return The serverSideSessionId.
   */
  java.lang.String getServerSideSessionId();
  /**
   *
   *
   * <pre>
   * Server-side generated idempotency key that the client can use to assert that the server side
   * session has not changed.
   * </pre>
   *
   * <code>string server_side_session_id = 15;</code>
   *
   * @return The bytes for serverSideSessionId.
   */
  com.google.protobuf.ByteString getServerSideSessionIdBytes();

  /**
   *
   *
   * <pre>
   * Identifies the ExecutePlan execution.
   * If set by the client in ExecutePlanRequest.operationId, that value is returned.
   * Otherwise generated by the server.
   * It is an UUID string of the format `00112233-4455-6677-8899-aabbccddeeff`
   * </pre>
   *
   * <code>string operation_id = 12;</code>
   *
   * @return The operationId.
   */
  java.lang.String getOperationId();
  /**
   *
   *
   * <pre>
   * Identifies the ExecutePlan execution.
   * If set by the client in ExecutePlanRequest.operationId, that value is returned.
   * Otherwise generated by the server.
   * It is an UUID string of the format `00112233-4455-6677-8899-aabbccddeeff`
   * </pre>
   *
   * <code>string operation_id = 12;</code>
   *
   * @return The bytes for operationId.
   */
  com.google.protobuf.ByteString getOperationIdBytes();

  /**
   *
   *
   * <pre>
   * Identified the response in the stream.
   * The id is an UUID string of the format `00112233-4455-6677-8899-aabbccddeeff`
   * </pre>
   *
   * <code>string response_id = 13;</code>
   *
   * @return The responseId.
   */
  java.lang.String getResponseId();
  /**
   *
   *
   * <pre>
   * Identified the response in the stream.
   * The id is an UUID string of the format `00112233-4455-6677-8899-aabbccddeeff`
   * </pre>
   *
   * <code>string response_id = 13;</code>
   *
   * @return The bytes for responseId.
   */
  com.google.protobuf.ByteString getResponseIdBytes();

  /**
   * <code>.spark.connect.ExecutePlanResponse.ArrowBatch arrow_batch = 2;</code>
   *
   * @return Whether the arrowBatch field is set.
   */
  boolean hasArrowBatch();
  /**
   * <code>.spark.connect.ExecutePlanResponse.ArrowBatch arrow_batch = 2;</code>
   *
   * @return The arrowBatch.
   */
  org.apache.kyuubi.engine.spark.connect.grpc.proto.ExecutePlanResponse.ArrowBatch getArrowBatch();
  /** <code>.spark.connect.ExecutePlanResponse.ArrowBatch arrow_batch = 2;</code> */
  org.apache.kyuubi.engine.spark.connect.grpc.proto.ExecutePlanResponse.ArrowBatchOrBuilder
      getArrowBatchOrBuilder();

  /**
   *
   *
   * <pre>
   * Special case for executing SQL commands.
   * </pre>
   *
   * <code>.spark.connect.ExecutePlanResponse.SqlCommandResult sql_command_result = 5;</code>
   *
   * @return Whether the sqlCommandResult field is set.
   */
  boolean hasSqlCommandResult();
  /**
   *
   *
   * <pre>
   * Special case for executing SQL commands.
   * </pre>
   *
   * <code>.spark.connect.ExecutePlanResponse.SqlCommandResult sql_command_result = 5;</code>
   *
   * @return The sqlCommandResult.
   */
  org.apache.kyuubi.engine.spark.connect.grpc.proto.ExecutePlanResponse.SqlCommandResult
      getSqlCommandResult();
  /**
   *
   *
   * <pre>
   * Special case for executing SQL commands.
   * </pre>
   *
   * <code>.spark.connect.ExecutePlanResponse.SqlCommandResult sql_command_result = 5;</code>
   */
  org.apache.kyuubi.engine.spark.connect.grpc.proto.ExecutePlanResponse.SqlCommandResultOrBuilder
      getSqlCommandResultOrBuilder();

  /**
   *
   *
   * <pre>
   * Response for a streaming query.
   * </pre>
   *
   * <code>.spark.connect.WriteStreamOperationStartResult write_stream_operation_start_result = 8;
   * </code>
   *
   * @return Whether the writeStreamOperationStartResult field is set.
   */
  boolean hasWriteStreamOperationStartResult();
  /**
   *
   *
   * <pre>
   * Response for a streaming query.
   * </pre>
   *
   * <code>.spark.connect.WriteStreamOperationStartResult write_stream_operation_start_result = 8;
   * </code>
   *
   * @return The writeStreamOperationStartResult.
   */
  org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteStreamOperationStartResult
      getWriteStreamOperationStartResult();
  /**
   *
   *
   * <pre>
   * Response for a streaming query.
   * </pre>
   *
   * <code>.spark.connect.WriteStreamOperationStartResult write_stream_operation_start_result = 8;
   * </code>
   */
  org.apache.kyuubi.engine.spark.connect.grpc.proto.WriteStreamOperationStartResultOrBuilder
      getWriteStreamOperationStartResultOrBuilder();

  /**
   *
   *
   * <pre>
   * Response for commands on a streaming query.
   * </pre>
   *
   * <code>.spark.connect.StreamingQueryCommandResult streaming_query_command_result = 9;</code>
   *
   * @return Whether the streamingQueryCommandResult field is set.
   */
  boolean hasStreamingQueryCommandResult();
  /**
   *
   *
   * <pre>
   * Response for commands on a streaming query.
   * </pre>
   *
   * <code>.spark.connect.StreamingQueryCommandResult streaming_query_command_result = 9;</code>
   *
   * @return The streamingQueryCommandResult.
   */
  org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommandResult
      getStreamingQueryCommandResult();
  /**
   *
   *
   * <pre>
   * Response for commands on a streaming query.
   * </pre>
   *
   * <code>.spark.connect.StreamingQueryCommandResult streaming_query_command_result = 9;</code>
   */
  org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryCommandResultOrBuilder
      getStreamingQueryCommandResultOrBuilder();

  /**
   *
   *
   * <pre>
   * Response for 'SparkContext.resources'.
   * </pre>
   *
   * <code>.spark.connect.GetResourcesCommandResult get_resources_command_result = 10;</code>
   *
   * @return Whether the getResourcesCommandResult field is set.
   */
  boolean hasGetResourcesCommandResult();
  /**
   *
   *
   * <pre>
   * Response for 'SparkContext.resources'.
   * </pre>
   *
   * <code>.spark.connect.GetResourcesCommandResult get_resources_command_result = 10;</code>
   *
   * @return The getResourcesCommandResult.
   */
  org.apache.kyuubi.engine.spark.connect.grpc.proto.GetResourcesCommandResult
      getGetResourcesCommandResult();
  /**
   *
   *
   * <pre>
   * Response for 'SparkContext.resources'.
   * </pre>
   *
   * <code>.spark.connect.GetResourcesCommandResult get_resources_command_result = 10;</code>
   */
  org.apache.kyuubi.engine.spark.connect.grpc.proto.GetResourcesCommandResultOrBuilder
      getGetResourcesCommandResultOrBuilder();

  /**
   *
   *
   * <pre>
   * Response for commands on the streaming query manager.
   * </pre>
   *
   * <code>
   * .spark.connect.StreamingQueryManagerCommandResult streaming_query_manager_command_result = 11;
   * </code>
   *
   * @return Whether the streamingQueryManagerCommandResult field is set.
   */
  boolean hasStreamingQueryManagerCommandResult();
  /**
   *
   *
   * <pre>
   * Response for commands on the streaming query manager.
   * </pre>
   *
   * <code>
   * .spark.connect.StreamingQueryManagerCommandResult streaming_query_manager_command_result = 11;
   * </code>
   *
   * @return The streamingQueryManagerCommandResult.
   */
  org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryManagerCommandResult
      getStreamingQueryManagerCommandResult();
  /**
   *
   *
   * <pre>
   * Response for commands on the streaming query manager.
   * </pre>
   *
   * <code>
   * .spark.connect.StreamingQueryManagerCommandResult streaming_query_manager_command_result = 11;
   * </code>
   */
  org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryManagerCommandResultOrBuilder
      getStreamingQueryManagerCommandResultOrBuilder();

  /**
   *
   *
   * <pre>
   * Response for commands on the client side streaming query listener.
   * </pre>
   *
   * <code>
   * .spark.connect.StreamingQueryListenerEventsResult streaming_query_listener_events_result = 16;
   * </code>
   *
   * @return Whether the streamingQueryListenerEventsResult field is set.
   */
  boolean hasStreamingQueryListenerEventsResult();
  /**
   *
   *
   * <pre>
   * Response for commands on the client side streaming query listener.
   * </pre>
   *
   * <code>
   * .spark.connect.StreamingQueryListenerEventsResult streaming_query_listener_events_result = 16;
   * </code>
   *
   * @return The streamingQueryListenerEventsResult.
   */
  org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryListenerEventsResult
      getStreamingQueryListenerEventsResult();
  /**
   *
   *
   * <pre>
   * Response for commands on the client side streaming query listener.
   * </pre>
   *
   * <code>
   * .spark.connect.StreamingQueryListenerEventsResult streaming_query_listener_events_result = 16;
   * </code>
   */
  org.apache.kyuubi.engine.spark.connect.grpc.proto.StreamingQueryListenerEventsResultOrBuilder
      getStreamingQueryListenerEventsResultOrBuilder();

  /**
   *
   *
   * <pre>
   * Response type informing if the stream is complete in reattachable execution.
   * </pre>
   *
   * <code>.spark.connect.ExecutePlanResponse.ResultComplete result_complete = 14;</code>
   *
   * @return Whether the resultComplete field is set.
   */
  boolean hasResultComplete();
  /**
   *
   *
   * <pre>
   * Response type informing if the stream is complete in reattachable execution.
   * </pre>
   *
   * <code>.spark.connect.ExecutePlanResponse.ResultComplete result_complete = 14;</code>
   *
   * @return The resultComplete.
   */
  org.apache.kyuubi.engine.spark.connect.grpc.proto.ExecutePlanResponse.ResultComplete
      getResultComplete();
  /**
   *
   *
   * <pre>
   * Response type informing if the stream is complete in reattachable execution.
   * </pre>
   *
   * <code>.spark.connect.ExecutePlanResponse.ResultComplete result_complete = 14;</code>
   */
  org.apache.kyuubi.engine.spark.connect.grpc.proto.ExecutePlanResponse.ResultCompleteOrBuilder
      getResultCompleteOrBuilder();

  /**
   *
   *
   * <pre>
   * Response for command that creates ResourceProfile.
   * </pre>
   *
   * <code>
   * .spark.connect.CreateResourceProfileCommandResult create_resource_profile_command_result = 17;
   * </code>
   *
   * @return Whether the createResourceProfileCommandResult field is set.
   */
  boolean hasCreateResourceProfileCommandResult();
  /**
   *
   *
   * <pre>
   * Response for command that creates ResourceProfile.
   * </pre>
   *
   * <code>
   * .spark.connect.CreateResourceProfileCommandResult create_resource_profile_command_result = 17;
   * </code>
   *
   * @return The createResourceProfileCommandResult.
   */
  org.apache.kyuubi.engine.spark.connect.grpc.proto.CreateResourceProfileCommandResult
      getCreateResourceProfileCommandResult();
  /**
   *
   *
   * <pre>
   * Response for command that creates ResourceProfile.
   * </pre>
   *
   * <code>
   * .spark.connect.CreateResourceProfileCommandResult create_resource_profile_command_result = 17;
   * </code>
   */
  org.apache.kyuubi.engine.spark.connect.grpc.proto.CreateResourceProfileCommandResultOrBuilder
      getCreateResourceProfileCommandResultOrBuilder();

  /**
   *
   *
   * <pre>
   * (Optional) Intermediate query progress reports.
   * </pre>
   *
   * <code>.spark.connect.ExecutePlanResponse.ExecutionProgress execution_progress = 18;</code>
   *
   * @return Whether the executionProgress field is set.
   */
  boolean hasExecutionProgress();
  /**
   *
   *
   * <pre>
   * (Optional) Intermediate query progress reports.
   * </pre>
   *
   * <code>.spark.connect.ExecutePlanResponse.ExecutionProgress execution_progress = 18;</code>
   *
   * @return The executionProgress.
   */
  org.apache.kyuubi.engine.spark.connect.grpc.proto.ExecutePlanResponse.ExecutionProgress
      getExecutionProgress();
  /**
   *
   *
   * <pre>
   * (Optional) Intermediate query progress reports.
   * </pre>
   *
   * <code>.spark.connect.ExecutePlanResponse.ExecutionProgress execution_progress = 18;</code>
   */
  org.apache.kyuubi.engine.spark.connect.grpc.proto.ExecutePlanResponse.ExecutionProgressOrBuilder
      getExecutionProgressOrBuilder();

  /**
   *
   *
   * <pre>
   * Support arbitrary result objects.
   * </pre>
   *
   * <code>.google.protobuf.Any extension = 999;</code>
   *
   * @return Whether the extension field is set.
   */
  boolean hasExtension();
  /**
   *
   *
   * <pre>
   * Support arbitrary result objects.
   * </pre>
   *
   * <code>.google.protobuf.Any extension = 999;</code>
   *
   * @return The extension.
   */
  com.google.protobuf.Any getExtension();
  /**
   *
   *
   * <pre>
   * Support arbitrary result objects.
   * </pre>
   *
   * <code>.google.protobuf.Any extension = 999;</code>
   */
  com.google.protobuf.AnyOrBuilder getExtensionOrBuilder();

  /**
   *
   *
   * <pre>
   * Metrics for the query execution. Typically, this field is only present in the last
   * batch of results and then represent the overall state of the query execution.
   * </pre>
   *
   * <code>.spark.connect.ExecutePlanResponse.Metrics metrics = 4;</code>
   *
   * @return Whether the metrics field is set.
   */
  boolean hasMetrics();
  /**
   *
   *
   * <pre>
   * Metrics for the query execution. Typically, this field is only present in the last
   * batch of results and then represent the overall state of the query execution.
   * </pre>
   *
   * <code>.spark.connect.ExecutePlanResponse.Metrics metrics = 4;</code>
   *
   * @return The metrics.
   */
  org.apache.kyuubi.engine.spark.connect.grpc.proto.ExecutePlanResponse.Metrics getMetrics();
  /**
   *
   *
   * <pre>
   * Metrics for the query execution. Typically, this field is only present in the last
   * batch of results and then represent the overall state of the query execution.
   * </pre>
   *
   * <code>.spark.connect.ExecutePlanResponse.Metrics metrics = 4;</code>
   */
  org.apache.kyuubi.engine.spark.connect.grpc.proto.ExecutePlanResponse.MetricsOrBuilder
      getMetricsOrBuilder();

  /**
   *
   *
   * <pre>
   * The metrics observed during the execution of the query plan.
   * </pre>
   *
   * <code>repeated .spark.connect.ExecutePlanResponse.ObservedMetrics observed_metrics = 6;</code>
   */
  java.util.List<
          org.apache.kyuubi.engine.spark.connect.grpc.proto.ExecutePlanResponse.ObservedMetrics>
      getObservedMetricsList();
  /**
   *
   *
   * <pre>
   * The metrics observed during the execution of the query plan.
   * </pre>
   *
   * <code>repeated .spark.connect.ExecutePlanResponse.ObservedMetrics observed_metrics = 6;</code>
   */
  org.apache.kyuubi.engine.spark.connect.grpc.proto.ExecutePlanResponse.ObservedMetrics
      getObservedMetrics(int index);
  /**
   *
   *
   * <pre>
   * The metrics observed during the execution of the query plan.
   * </pre>
   *
   * <code>repeated .spark.connect.ExecutePlanResponse.ObservedMetrics observed_metrics = 6;</code>
   */
  int getObservedMetricsCount();
  /**
   *
   *
   * <pre>
   * The metrics observed during the execution of the query plan.
   * </pre>
   *
   * <code>repeated .spark.connect.ExecutePlanResponse.ObservedMetrics observed_metrics = 6;</code>
   */
  java.util.List<
          ? extends
              org.apache.kyuubi.engine.spark.connect.grpc.proto.ExecutePlanResponse
                  .ObservedMetricsOrBuilder>
      getObservedMetricsOrBuilderList();
  /**
   *
   *
   * <pre>
   * The metrics observed during the execution of the query plan.
   * </pre>
   *
   * <code>repeated .spark.connect.ExecutePlanResponse.ObservedMetrics observed_metrics = 6;</code>
   */
  org.apache.kyuubi.engine.spark.connect.grpc.proto.ExecutePlanResponse.ObservedMetricsOrBuilder
      getObservedMetricsOrBuilder(int index);

  /**
   *
   *
   * <pre>
   * (Optional) The Spark schema. This field is available when `collect` is called.
   * </pre>
   *
   * <code>.spark.connect.DataType schema = 7;</code>
   *
   * @return Whether the schema field is set.
   */
  boolean hasSchema();
  /**
   *
   *
   * <pre>
   * (Optional) The Spark schema. This field is available when `collect` is called.
   * </pre>
   *
   * <code>.spark.connect.DataType schema = 7;</code>
   *
   * @return The schema.
   */
  org.apache.kyuubi.engine.spark.connect.grpc.proto.DataType getSchema();
  /**
   *
   *
   * <pre>
   * (Optional) The Spark schema. This field is available when `collect` is called.
   * </pre>
   *
   * <code>.spark.connect.DataType schema = 7;</code>
   */
  org.apache.kyuubi.engine.spark.connect.grpc.proto.DataTypeOrBuilder getSchemaOrBuilder();

  public org.apache.kyuubi.engine.spark.connect.grpc.proto.ExecutePlanResponse.ResponseTypeCase
      getResponseTypeCase();
}
