// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: spark/connect/base.proto

package org.apache.kyuubi.engine.spark.connect.proto;

public interface ReleaseExecuteResponseOrBuilder extends
    // @@protoc_insertion_point(interface_extends:spark.connect.ReleaseExecuteResponse)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Session id in which the release was running.
   * </pre>
   *
   * <code>string session_id = 1;</code>
   * @return The sessionId.
   */
  String getSessionId();
  /**
   * <pre>
   * Session id in which the release was running.
   * </pre>
   *
   * <code>string session_id = 1;</code>
   * @return The bytes for sessionId.
   */
  com.google.protobuf.ByteString
      getSessionIdBytes();

  /**
   * <pre>
   * Operation id of the operation on which the release executed.
   * If the operation couldn't be found (because e.g. it was concurrently released), will be unset.
   * Otherwise, it will be equal to the operation_id from request.
   * </pre>
   *
   * <code>optional string operation_id = 2;</code>
   * @return Whether the operationId field is set.
   */
  boolean hasOperationId();
  /**
   * <pre>
   * Operation id of the operation on which the release executed.
   * If the operation couldn't be found (because e.g. it was concurrently released), will be unset.
   * Otherwise, it will be equal to the operation_id from request.
   * </pre>
   *
   * <code>optional string operation_id = 2;</code>
   * @return The operationId.
   */
  String getOperationId();
  /**
   * <pre>
   * Operation id of the operation on which the release executed.
   * If the operation couldn't be found (because e.g. it was concurrently released), will be unset.
   * Otherwise, it will be equal to the operation_id from request.
   * </pre>
   *
   * <code>optional string operation_id = 2;</code>
   * @return The bytes for operationId.
   */
  com.google.protobuf.ByteString
      getOperationIdBytes();
}
