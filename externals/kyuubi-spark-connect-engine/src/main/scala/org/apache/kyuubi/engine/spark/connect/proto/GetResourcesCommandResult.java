// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: spark/connect/commands.proto

package org.apache.kyuubi.engine.spark.connect.proto;

/**
 * <pre>
 * Response for command 'GetResourcesCommand'.
 * </pre>
 *
 * Protobuf type {@code spark.connect.GetResourcesCommandResult}
 */
public final class GetResourcesCommandResult extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:spark.connect.GetResourcesCommandResult)
    GetResourcesCommandResultOrBuilder {
private static final long serialVersionUID = 0L;
  // Use GetResourcesCommandResult.newBuilder() to construct.
  private GetResourcesCommandResult(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private GetResourcesCommandResult() {
  }

  @Override
  @SuppressWarnings({"unused"})
  protected Object newInstance(
      UnusedPrivateParameter unused) {
    return new GetResourcesCommandResult();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return org.apache.spark.connect.proto.Commands.internal_static_spark_connect_GetResourcesCommandResult_descriptor;
  }

  @SuppressWarnings({"rawtypes"})
  @Override
  protected com.google.protobuf.MapField internalGetMapField(
      int number) {
    switch (number) {
      case 1:
        return internalGetResources();
      default:
        throw new RuntimeException(
            "Invalid map field number: " + number);
    }
  }
  @Override
  protected FieldAccessorTable
      internalGetFieldAccessorTable() {
    return org.apache.spark.connect.proto.Commands.internal_static_spark_connect_GetResourcesCommandResult_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            org.apache.spark.connect.proto.GetResourcesCommandResult.class, org.apache.spark.connect.proto.GetResourcesCommandResult.Builder.class);
  }

  public static final int RESOURCES_FIELD_NUMBER = 1;
  private static final class ResourcesDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<
        String, org.apache.spark.connect.proto.ResourceInformation> defaultEntry =
            com.google.protobuf.MapEntry
            .<String, org.apache.spark.connect.proto.ResourceInformation>newDefaultInstance(
                org.apache.spark.connect.proto.Commands.internal_static_spark_connect_GetResourcesCommandResult_ResourcesEntry_descriptor, 
                com.google.protobuf.WireFormat.FieldType.STRING,
                "",
                com.google.protobuf.WireFormat.FieldType.MESSAGE,
                org.apache.spark.connect.proto.ResourceInformation.getDefaultInstance());
  }
  @SuppressWarnings("serial")
  private com.google.protobuf.MapField<
      String, org.apache.spark.connect.proto.ResourceInformation> resources_;
  private com.google.protobuf.MapField<String, org.apache.spark.connect.proto.ResourceInformation>
  internalGetResources() {
    if (resources_ == null) {
      return com.google.protobuf.MapField.emptyMapField(
          ResourcesDefaultEntryHolder.defaultEntry);
    }
    return resources_;
  }
  public int getResourcesCount() {
    return internalGetResources().getMap().size();
  }
  /**
   * <code>map&lt;string, .spark.connect.ResourceInformation&gt; resources = 1;</code>
   */
  @Override
  public boolean containsResources(
      String key) {
    if (key == null) { throw new NullPointerException("map key"); }
    return internalGetResources().getMap().containsKey(key);
  }
  /**
   * Use {@link #getResourcesMap()} instead.
   */
  @Override
  @Deprecated
  public java.util.Map<String, org.apache.spark.connect.proto.ResourceInformation> getResources() {
    return getResourcesMap();
  }
  /**
   * <code>map&lt;string, .spark.connect.ResourceInformation&gt; resources = 1;</code>
   */
  @Override
  public java.util.Map<String, org.apache.spark.connect.proto.ResourceInformation> getResourcesMap() {
    return internalGetResources().getMap();
  }
  /**
   * <code>map&lt;string, .spark.connect.ResourceInformation&gt; resources = 1;</code>
   */
  @Override
  public /* nullable */
org.apache.spark.connect.proto.ResourceInformation getResourcesOrDefault(
      String key,
      /* nullable */
org.apache.spark.connect.proto.ResourceInformation defaultValue) {
    if (key == null) { throw new NullPointerException("map key"); }
    java.util.Map<String, org.apache.spark.connect.proto.ResourceInformation> map =
        internalGetResources().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <code>map&lt;string, .spark.connect.ResourceInformation&gt; resources = 1;</code>
   */
  @Override
  public org.apache.spark.connect.proto.ResourceInformation getResourcesOrThrow(
      String key) {
    if (key == null) { throw new NullPointerException("map key"); }
    java.util.Map<String, org.apache.spark.connect.proto.ResourceInformation> map =
        internalGetResources().getMap();
    if (!map.containsKey(key)) {
      throw new IllegalArgumentException();
    }
    return map.get(key);
  }

  private byte memoizedIsInitialized = -1;
  @Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    com.google.protobuf.GeneratedMessageV3
      .serializeStringMapTo(
        output,
        internalGetResources(),
        ResourcesDefaultEntryHolder.defaultEntry,
        1);
    getUnknownFields().writeTo(output);
  }

  @Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    for (java.util.Map.Entry<String, org.apache.spark.connect.proto.ResourceInformation> entry
         : internalGetResources().getMap().entrySet()) {
      com.google.protobuf.MapEntry<String, org.apache.spark.connect.proto.ResourceInformation>
      resources__ = ResourcesDefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, resources__);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @Override
  public boolean equals(final Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof org.apache.spark.connect.proto.GetResourcesCommandResult)) {
      return super.equals(obj);
    }
    org.apache.spark.connect.proto.GetResourcesCommandResult other = (org.apache.spark.connect.proto.GetResourcesCommandResult) obj;

    if (!internalGetResources().equals(
        other.internalGetResources())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (!internalGetResources().getMap().isEmpty()) {
      hash = (37 * hash) + RESOURCES_FIELD_NUMBER;
      hash = (53 * hash) + internalGetResources().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static org.apache.spark.connect.proto.GetResourcesCommandResult parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.apache.spark.connect.proto.GetResourcesCommandResult parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.apache.spark.connect.proto.GetResourcesCommandResult parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.apache.spark.connect.proto.GetResourcesCommandResult parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.apache.spark.connect.proto.GetResourcesCommandResult parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.apache.spark.connect.proto.GetResourcesCommandResult parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.apache.spark.connect.proto.GetResourcesCommandResult parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.apache.spark.connect.proto.GetResourcesCommandResult parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static org.apache.spark.connect.proto.GetResourcesCommandResult parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static org.apache.spark.connect.proto.GetResourcesCommandResult parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.apache.spark.connect.proto.GetResourcesCommandResult parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.apache.spark.connect.proto.GetResourcesCommandResult parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(org.apache.spark.connect.proto.GetResourcesCommandResult prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @Override
  protected Builder newBuilderForType(
      BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Response for command 'GetResourcesCommand'.
   * </pre>
   *
   * Protobuf type {@code spark.connect.GetResourcesCommandResult}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:spark.connect.GetResourcesCommandResult)
      org.apache.spark.connect.proto.GetResourcesCommandResultOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.spark.connect.proto.Commands.internal_static_spark_connect_GetResourcesCommandResult_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 1:
          return internalGetResources();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMutableMapField(
        int number) {
      switch (number) {
        case 1:
          return internalGetMutableResources();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.spark.connect.proto.Commands.internal_static_spark_connect_GetResourcesCommandResult_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.spark.connect.proto.GetResourcesCommandResult.class, org.apache.spark.connect.proto.GetResourcesCommandResult.Builder.class);
    }

    // Construct using org.apache.spark.connect.proto.GetResourcesCommandResult.newBuilder()
    private Builder() {

    }

    private Builder(
        BuilderParent parent) {
      super(parent);

    }
    @Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      internalGetMutableResources().clear();
      return this;
    }

    @Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return org.apache.spark.connect.proto.Commands.internal_static_spark_connect_GetResourcesCommandResult_descriptor;
    }

    @Override
    public org.apache.spark.connect.proto.GetResourcesCommandResult getDefaultInstanceForType() {
      return org.apache.spark.connect.proto.GetResourcesCommandResult.getDefaultInstance();
    }

    @Override
    public org.apache.spark.connect.proto.GetResourcesCommandResult build() {
      org.apache.spark.connect.proto.GetResourcesCommandResult result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @Override
    public org.apache.spark.connect.proto.GetResourcesCommandResult buildPartial() {
      org.apache.spark.connect.proto.GetResourcesCommandResult result = new org.apache.spark.connect.proto.GetResourcesCommandResult(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(org.apache.spark.connect.proto.GetResourcesCommandResult result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.resources_ = internalGetResources();
        result.resources_.makeImmutable();
      }
    }

    @Override
    public Builder clone() {
      return super.clone();
    }
    @Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return super.setField(field, value);
    }
    @Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return super.addRepeatedField(field, value);
    }
    @Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof org.apache.spark.connect.proto.GetResourcesCommandResult) {
        return mergeFrom((org.apache.spark.connect.proto.GetResourcesCommandResult)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(org.apache.spark.connect.proto.GetResourcesCommandResult other) {
      if (other == org.apache.spark.connect.proto.GetResourcesCommandResult.getDefaultInstance()) return this;
      internalGetMutableResources().mergeFrom(
          other.internalGetResources());
      bitField0_ |= 0x00000001;
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @Override
    public final boolean isInitialized() {
      return true;
    }

    @Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              com.google.protobuf.MapEntry<String, org.apache.spark.connect.proto.ResourceInformation>
              resources__ = input.readMessage(
                  ResourcesDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              internalGetMutableResources().getMutableMap().put(
                  resources__.getKey(), resources__.getValue());
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private com.google.protobuf.MapField<
        String, org.apache.spark.connect.proto.ResourceInformation> resources_;
    private com.google.protobuf.MapField<String, org.apache.spark.connect.proto.ResourceInformation>
        internalGetResources() {
      if (resources_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            ResourcesDefaultEntryHolder.defaultEntry);
      }
      return resources_;
    }
    private com.google.protobuf.MapField<String, org.apache.spark.connect.proto.ResourceInformation>
        internalGetMutableResources() {
      if (resources_ == null) {
        resources_ = com.google.protobuf.MapField.newMapField(
            ResourcesDefaultEntryHolder.defaultEntry);
      }
      if (!resources_.isMutable()) {
        resources_ = resources_.copy();
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return resources_;
    }
    public int getResourcesCount() {
      return internalGetResources().getMap().size();
    }
    /**
     * <code>map&lt;string, .spark.connect.ResourceInformation&gt; resources = 1;</code>
     */
    @Override
    public boolean containsResources(
        String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      return internalGetResources().getMap().containsKey(key);
    }
    /**
     * Use {@link #getResourcesMap()} instead.
     */
    @Override
    @Deprecated
    public java.util.Map<String, org.apache.spark.connect.proto.ResourceInformation> getResources() {
      return getResourcesMap();
    }
    /**
     * <code>map&lt;string, .spark.connect.ResourceInformation&gt; resources = 1;</code>
     */
    @Override
    public java.util.Map<String, org.apache.spark.connect.proto.ResourceInformation> getResourcesMap() {
      return internalGetResources().getMap();
    }
    /**
     * <code>map&lt;string, .spark.connect.ResourceInformation&gt; resources = 1;</code>
     */
    @Override
    public /* nullable */
org.apache.spark.connect.proto.ResourceInformation getResourcesOrDefault(
        String key,
        /* nullable */
org.apache.spark.connect.proto.ResourceInformation defaultValue) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<String, org.apache.spark.connect.proto.ResourceInformation> map =
          internalGetResources().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, .spark.connect.ResourceInformation&gt; resources = 1;</code>
     */
    @Override
    public org.apache.spark.connect.proto.ResourceInformation getResourcesOrThrow(
        String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<String, org.apache.spark.connect.proto.ResourceInformation> map =
          internalGetResources().getMap();
      if (!map.containsKey(key)) {
        throw new IllegalArgumentException();
      }
      return map.get(key);
    }
    public Builder clearResources() {
      bitField0_ = (bitField0_ & ~0x00000001);
      internalGetMutableResources().getMutableMap()
          .clear();
      return this;
    }
    /**
     * <code>map&lt;string, .spark.connect.ResourceInformation&gt; resources = 1;</code>
     */
    public Builder removeResources(
        String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      internalGetMutableResources().getMutableMap()
          .remove(key);
      return this;
    }
    /**
     * Use alternate mutation accessors instead.
     */
    @Deprecated
    public java.util.Map<String, org.apache.spark.connect.proto.ResourceInformation>
        getMutableResources() {
      bitField0_ |= 0x00000001;
      return internalGetMutableResources().getMutableMap();
    }
    /**
     * <code>map&lt;string, .spark.connect.ResourceInformation&gt; resources = 1;</code>
     */
    public Builder putResources(
        String key,
        org.apache.spark.connect.proto.ResourceInformation value) {
      if (key == null) { throw new NullPointerException("map key"); }
      if (value == null) { throw new NullPointerException("map value"); }
      internalGetMutableResources().getMutableMap()
          .put(key, value);
      bitField0_ |= 0x00000001;
      return this;
    }
    /**
     * <code>map&lt;string, .spark.connect.ResourceInformation&gt; resources = 1;</code>
     */
    public Builder putAllResources(
        java.util.Map<String, org.apache.spark.connect.proto.ResourceInformation> values) {
      internalGetMutableResources().getMutableMap()
          .putAll(values);
      bitField0_ |= 0x00000001;
      return this;
    }
    @Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:spark.connect.GetResourcesCommandResult)
  }

  // @@protoc_insertion_point(class_scope:spark.connect.GetResourcesCommandResult)
  private static final org.apache.spark.connect.proto.GetResourcesCommandResult DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new org.apache.spark.connect.proto.GetResourcesCommandResult();
  }

  public static org.apache.spark.connect.proto.GetResourcesCommandResult getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<GetResourcesCommandResult>
      PARSER = new com.google.protobuf.AbstractParser<GetResourcesCommandResult>() {
    @Override
    public GetResourcesCommandResult parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<GetResourcesCommandResult> parser() {
    return PARSER;
  }

  @Override
  public com.google.protobuf.Parser<GetResourcesCommandResult> getParserForType() {
    return PARSER;
  }

  @Override
  public org.apache.spark.connect.proto.GetResourcesCommandResult getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

