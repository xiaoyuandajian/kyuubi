// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: spark/connect/commands.proto

package org.apache.kyuubi.engine.spark.connect.proto;

/**
 * <pre>
 * Response for commands on a streaming query.
 * </pre>
 *
 * Protobuf type {@code spark.connect.StreamingQueryCommandResult}
 */
public final class StreamingQueryCommandResult extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:spark.connect.StreamingQueryCommandResult)
    StreamingQueryCommandResultOrBuilder {
private static final long serialVersionUID = 0L;
  // Use StreamingQueryCommandResult.newBuilder() to construct.
  private StreamingQueryCommandResult(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private StreamingQueryCommandResult() {
  }

  @Override
  @SuppressWarnings({"unused"})
  protected Object newInstance(
      UnusedPrivateParameter unused) {
    return new StreamingQueryCommandResult();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return org.apache.spark.connect.proto.Commands.internal_static_spark_connect_StreamingQueryCommandResult_descriptor;
  }

  @Override
  protected FieldAccessorTable
      internalGetFieldAccessorTable() {
    return org.apache.spark.connect.proto.Commands.internal_static_spark_connect_StreamingQueryCommandResult_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            org.apache.spark.connect.proto.StreamingQueryCommandResult.class, org.apache.spark.connect.proto.StreamingQueryCommandResult.Builder.class);
  }

  public interface StatusResultOrBuilder extends
      // @@protoc_insertion_point(interface_extends:spark.connect.StreamingQueryCommandResult.StatusResult)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * See documentation for these Scala 'StreamingQueryStatus' struct
     * </pre>
     *
     * <code>string status_message = 1;</code>
     * @return The statusMessage.
     */
    String getStatusMessage();
    /**
     * <pre>
     * See documentation for these Scala 'StreamingQueryStatus' struct
     * </pre>
     *
     * <code>string status_message = 1;</code>
     * @return The bytes for statusMessage.
     */
    com.google.protobuf.ByteString
        getStatusMessageBytes();

    /**
     * <code>bool is_data_available = 2;</code>
     * @return The isDataAvailable.
     */
    boolean getIsDataAvailable();

    /**
     * <code>bool is_trigger_active = 3;</code>
     * @return The isTriggerActive.
     */
    boolean getIsTriggerActive();

    /**
     * <code>bool is_active = 4;</code>
     * @return The isActive.
     */
    boolean getIsActive();
  }
  /**
   * Protobuf type {@code spark.connect.StreamingQueryCommandResult.StatusResult}
   */
  public static final class StatusResult extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:spark.connect.StreamingQueryCommandResult.StatusResult)
      StatusResultOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use StatusResult.newBuilder() to construct.
    private StatusResult(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private StatusResult() {
      statusMessage_ = "";
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new StatusResult();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.spark.connect.proto.Commands.internal_static_spark_connect_StreamingQueryCommandResult_StatusResult_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.spark.connect.proto.Commands.internal_static_spark_connect_StreamingQueryCommandResult_StatusResult_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.spark.connect.proto.StreamingQueryCommandResult.StatusResult.class, org.apache.spark.connect.proto.StreamingQueryCommandResult.StatusResult.Builder.class);
    }

    public static final int STATUS_MESSAGE_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile Object statusMessage_ = "";
    /**
     * <pre>
     * See documentation for these Scala 'StreamingQueryStatus' struct
     * </pre>
     *
     * <code>string status_message = 1;</code>
     * @return The statusMessage.
     */
    @Override
    public String getStatusMessage() {
      Object ref = statusMessage_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        statusMessage_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * See documentation for these Scala 'StreamingQueryStatus' struct
     * </pre>
     *
     * <code>string status_message = 1;</code>
     * @return The bytes for statusMessage.
     */
    @Override
    public com.google.protobuf.ByteString
        getStatusMessageBytes() {
      Object ref = statusMessage_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        statusMessage_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int IS_DATA_AVAILABLE_FIELD_NUMBER = 2;
    private boolean isDataAvailable_ = false;
    /**
     * <code>bool is_data_available = 2;</code>
     * @return The isDataAvailable.
     */
    @Override
    public boolean getIsDataAvailable() {
      return isDataAvailable_;
    }

    public static final int IS_TRIGGER_ACTIVE_FIELD_NUMBER = 3;
    private boolean isTriggerActive_ = false;
    /**
     * <code>bool is_trigger_active = 3;</code>
     * @return The isTriggerActive.
     */
    @Override
    public boolean getIsTriggerActive() {
      return isTriggerActive_;
    }

    public static final int IS_ACTIVE_FIELD_NUMBER = 4;
    private boolean isActive_ = false;
    /**
     * <code>bool is_active = 4;</code>
     * @return The isActive.
     */
    @Override
    public boolean getIsActive() {
      return isActive_;
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(statusMessage_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, statusMessage_);
      }
      if (isDataAvailable_ != false) {
        output.writeBool(2, isDataAvailable_);
      }
      if (isTriggerActive_ != false) {
        output.writeBool(3, isTriggerActive_);
      }
      if (isActive_ != false) {
        output.writeBool(4, isActive_);
      }
      getUnknownFields().writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(statusMessage_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, statusMessage_);
      }
      if (isDataAvailable_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, isDataAvailable_);
      }
      if (isTriggerActive_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, isTriggerActive_);
      }
      if (isActive_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, isActive_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.spark.connect.proto.StreamingQueryCommandResult.StatusResult)) {
        return super.equals(obj);
      }
      org.apache.spark.connect.proto.StreamingQueryCommandResult.StatusResult other = (org.apache.spark.connect.proto.StreamingQueryCommandResult.StatusResult) obj;

      if (!getStatusMessage()
          .equals(other.getStatusMessage())) return false;
      if (getIsDataAvailable()
          != other.getIsDataAvailable()) return false;
      if (getIsTriggerActive()
          != other.getIsTriggerActive()) return false;
      if (getIsActive()
          != other.getIsActive()) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + STATUS_MESSAGE_FIELD_NUMBER;
      hash = (53 * hash) + getStatusMessage().hashCode();
      hash = (37 * hash) + IS_DATA_AVAILABLE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getIsDataAvailable());
      hash = (37 * hash) + IS_TRIGGER_ACTIVE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getIsTriggerActive());
      hash = (37 * hash) + IS_ACTIVE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getIsActive());
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.spark.connect.proto.StreamingQueryCommandResult.StatusResult parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.connect.proto.StreamingQueryCommandResult.StatusResult parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.connect.proto.StreamingQueryCommandResult.StatusResult parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.connect.proto.StreamingQueryCommandResult.StatusResult parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.connect.proto.StreamingQueryCommandResult.StatusResult parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.connect.proto.StreamingQueryCommandResult.StatusResult parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.connect.proto.StreamingQueryCommandResult.StatusResult parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.spark.connect.proto.StreamingQueryCommandResult.StatusResult parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static org.apache.spark.connect.proto.StreamingQueryCommandResult.StatusResult parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static org.apache.spark.connect.proto.StreamingQueryCommandResult.StatusResult parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.spark.connect.proto.StreamingQueryCommandResult.StatusResult parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.spark.connect.proto.StreamingQueryCommandResult.StatusResult parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.spark.connect.proto.StreamingQueryCommandResult.StatusResult prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code spark.connect.StreamingQueryCommandResult.StatusResult}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:spark.connect.StreamingQueryCommandResult.StatusResult)
        org.apache.spark.connect.proto.StreamingQueryCommandResult.StatusResultOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.spark.connect.proto.Commands.internal_static_spark_connect_StreamingQueryCommandResult_StatusResult_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.spark.connect.proto.Commands.internal_static_spark_connect_StreamingQueryCommandResult_StatusResult_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.spark.connect.proto.StreamingQueryCommandResult.StatusResult.class, org.apache.spark.connect.proto.StreamingQueryCommandResult.StatusResult.Builder.class);
      }

      // Construct using org.apache.spark.connect.proto.StreamingQueryCommandResult.StatusResult.newBuilder()
      private Builder() {

      }

      private Builder(
          BuilderParent parent) {
        super(parent);

      }
      @Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        statusMessage_ = "";
        isDataAvailable_ = false;
        isTriggerActive_ = false;
        isActive_ = false;
        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.spark.connect.proto.Commands.internal_static_spark_connect_StreamingQueryCommandResult_StatusResult_descriptor;
      }

      @Override
      public org.apache.spark.connect.proto.StreamingQueryCommandResult.StatusResult getDefaultInstanceForType() {
        return org.apache.spark.connect.proto.StreamingQueryCommandResult.StatusResult.getDefaultInstance();
      }

      @Override
      public org.apache.spark.connect.proto.StreamingQueryCommandResult.StatusResult build() {
        org.apache.spark.connect.proto.StreamingQueryCommandResult.StatusResult result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public org.apache.spark.connect.proto.StreamingQueryCommandResult.StatusResult buildPartial() {
        org.apache.spark.connect.proto.StreamingQueryCommandResult.StatusResult result = new org.apache.spark.connect.proto.StreamingQueryCommandResult.StatusResult(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(org.apache.spark.connect.proto.StreamingQueryCommandResult.StatusResult result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.statusMessage_ = statusMessage_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.isDataAvailable_ = isDataAvailable_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.isTriggerActive_ = isTriggerActive_;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.isActive_ = isActive_;
        }
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.spark.connect.proto.StreamingQueryCommandResult.StatusResult) {
          return mergeFrom((org.apache.spark.connect.proto.StreamingQueryCommandResult.StatusResult)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.spark.connect.proto.StreamingQueryCommandResult.StatusResult other) {
        if (other == org.apache.spark.connect.proto.StreamingQueryCommandResult.StatusResult.getDefaultInstance()) return this;
        if (!other.getStatusMessage().isEmpty()) {
          statusMessage_ = other.statusMessage_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        if (other.getIsDataAvailable() != false) {
          setIsDataAvailable(other.getIsDataAvailable());
        }
        if (other.getIsTriggerActive() != false) {
          setIsTriggerActive(other.getIsTriggerActive());
        }
        if (other.getIsActive() != false) {
          setIsActive(other.getIsActive());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                statusMessage_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 16: {
                isDataAvailable_ = input.readBool();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              case 24: {
                isTriggerActive_ = input.readBool();
                bitField0_ |= 0x00000004;
                break;
              } // case 24
              case 32: {
                isActive_ = input.readBool();
                bitField0_ |= 0x00000008;
                break;
              } // case 32
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private Object statusMessage_ = "";
      /**
       * <pre>
       * See documentation for these Scala 'StreamingQueryStatus' struct
       * </pre>
       *
       * <code>string status_message = 1;</code>
       * @return The statusMessage.
       */
      public String getStatusMessage() {
        Object ref = statusMessage_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          statusMessage_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       * See documentation for these Scala 'StreamingQueryStatus' struct
       * </pre>
       *
       * <code>string status_message = 1;</code>
       * @return The bytes for statusMessage.
       */
      public com.google.protobuf.ByteString
          getStatusMessageBytes() {
        Object ref = statusMessage_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          statusMessage_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * See documentation for these Scala 'StreamingQueryStatus' struct
       * </pre>
       *
       * <code>string status_message = 1;</code>
       * @param value The statusMessage to set.
       * @return This builder for chaining.
       */
      public Builder setStatusMessage(
          String value) {
        if (value == null) { throw new NullPointerException(); }
        statusMessage_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * See documentation for these Scala 'StreamingQueryStatus' struct
       * </pre>
       *
       * <code>string status_message = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearStatusMessage() {
        statusMessage_ = getDefaultInstance().getStatusMessage();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * See documentation for these Scala 'StreamingQueryStatus' struct
       * </pre>
       *
       * <code>string status_message = 1;</code>
       * @param value The bytes for statusMessage to set.
       * @return This builder for chaining.
       */
      public Builder setStatusMessageBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        statusMessage_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private boolean isDataAvailable_ ;
      /**
       * <code>bool is_data_available = 2;</code>
       * @return The isDataAvailable.
       */
      @Override
      public boolean getIsDataAvailable() {
        return isDataAvailable_;
      }
      /**
       * <code>bool is_data_available = 2;</code>
       * @param value The isDataAvailable to set.
       * @return This builder for chaining.
       */
      public Builder setIsDataAvailable(boolean value) {

        isDataAvailable_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>bool is_data_available = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearIsDataAvailable() {
        bitField0_ = (bitField0_ & ~0x00000002);
        isDataAvailable_ = false;
        onChanged();
        return this;
      }

      private boolean isTriggerActive_ ;
      /**
       * <code>bool is_trigger_active = 3;</code>
       * @return The isTriggerActive.
       */
      @Override
      public boolean getIsTriggerActive() {
        return isTriggerActive_;
      }
      /**
       * <code>bool is_trigger_active = 3;</code>
       * @param value The isTriggerActive to set.
       * @return This builder for chaining.
       */
      public Builder setIsTriggerActive(boolean value) {

        isTriggerActive_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>bool is_trigger_active = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearIsTriggerActive() {
        bitField0_ = (bitField0_ & ~0x00000004);
        isTriggerActive_ = false;
        onChanged();
        return this;
      }

      private boolean isActive_ ;
      /**
       * <code>bool is_active = 4;</code>
       * @return The isActive.
       */
      @Override
      public boolean getIsActive() {
        return isActive_;
      }
      /**
       * <code>bool is_active = 4;</code>
       * @param value The isActive to set.
       * @return This builder for chaining.
       */
      public Builder setIsActive(boolean value) {

        isActive_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>bool is_active = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearIsActive() {
        bitField0_ = (bitField0_ & ~0x00000008);
        isActive_ = false;
        onChanged();
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:spark.connect.StreamingQueryCommandResult.StatusResult)
    }

    // @@protoc_insertion_point(class_scope:spark.connect.StreamingQueryCommandResult.StatusResult)
    private static final org.apache.spark.connect.proto.StreamingQueryCommandResult.StatusResult DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.spark.connect.proto.StreamingQueryCommandResult.StatusResult();
    }

    public static org.apache.spark.connect.proto.StreamingQueryCommandResult.StatusResult getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<StatusResult>
        PARSER = new com.google.protobuf.AbstractParser<StatusResult>() {
      @Override
      public StatusResult parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<StatusResult> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<StatusResult> getParserForType() {
      return PARSER;
    }

    @Override
    public org.apache.spark.connect.proto.StreamingQueryCommandResult.StatusResult getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RecentProgressResultOrBuilder extends
      // @@protoc_insertion_point(interface_extends:spark.connect.StreamingQueryCommandResult.RecentProgressResult)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Progress reports as an array of json strings.
     * </pre>
     *
     * <code>repeated string recent_progress_json = 5;</code>
     * @return A list containing the recentProgressJson.
     */
    java.util.List<String>
        getRecentProgressJsonList();
    /**
     * <pre>
     * Progress reports as an array of json strings.
     * </pre>
     *
     * <code>repeated string recent_progress_json = 5;</code>
     * @return The count of recentProgressJson.
     */
    int getRecentProgressJsonCount();
    /**
     * <pre>
     * Progress reports as an array of json strings.
     * </pre>
     *
     * <code>repeated string recent_progress_json = 5;</code>
     * @param index The index of the element to return.
     * @return The recentProgressJson at the given index.
     */
    String getRecentProgressJson(int index);
    /**
     * <pre>
     * Progress reports as an array of json strings.
     * </pre>
     *
     * <code>repeated string recent_progress_json = 5;</code>
     * @param index The index of the value to return.
     * @return The bytes of the recentProgressJson at the given index.
     */
    com.google.protobuf.ByteString
        getRecentProgressJsonBytes(int index);
  }
  /**
   * Protobuf type {@code spark.connect.StreamingQueryCommandResult.RecentProgressResult}
   */
  public static final class RecentProgressResult extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:spark.connect.StreamingQueryCommandResult.RecentProgressResult)
      RecentProgressResultOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use RecentProgressResult.newBuilder() to construct.
    private RecentProgressResult(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RecentProgressResult() {
      recentProgressJson_ =
          com.google.protobuf.LazyStringArrayList.emptyList();
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new RecentProgressResult();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.spark.connect.proto.Commands.internal_static_spark_connect_StreamingQueryCommandResult_RecentProgressResult_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.spark.connect.proto.Commands.internal_static_spark_connect_StreamingQueryCommandResult_RecentProgressResult_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.spark.connect.proto.StreamingQueryCommandResult.RecentProgressResult.class, org.apache.spark.connect.proto.StreamingQueryCommandResult.RecentProgressResult.Builder.class);
    }

    public static final int RECENT_PROGRESS_JSON_FIELD_NUMBER = 5;
    @SuppressWarnings("serial")
    private com.google.protobuf.LazyStringArrayList recentProgressJson_ =
        com.google.protobuf.LazyStringArrayList.emptyList();
    /**
     * <pre>
     * Progress reports as an array of json strings.
     * </pre>
     *
     * <code>repeated string recent_progress_json = 5;</code>
     * @return A list containing the recentProgressJson.
     */
    public com.google.protobuf.ProtocolStringList
        getRecentProgressJsonList() {
      return recentProgressJson_;
    }
    /**
     * <pre>
     * Progress reports as an array of json strings.
     * </pre>
     *
     * <code>repeated string recent_progress_json = 5;</code>
     * @return The count of recentProgressJson.
     */
    public int getRecentProgressJsonCount() {
      return recentProgressJson_.size();
    }
    /**
     * <pre>
     * Progress reports as an array of json strings.
     * </pre>
     *
     * <code>repeated string recent_progress_json = 5;</code>
     * @param index The index of the element to return.
     * @return The recentProgressJson at the given index.
     */
    public String getRecentProgressJson(int index) {
      return recentProgressJson_.get(index);
    }
    /**
     * <pre>
     * Progress reports as an array of json strings.
     * </pre>
     *
     * <code>repeated string recent_progress_json = 5;</code>
     * @param index The index of the value to return.
     * @return The bytes of the recentProgressJson at the given index.
     */
    public com.google.protobuf.ByteString
        getRecentProgressJsonBytes(int index) {
      return recentProgressJson_.getByteString(index);
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < recentProgressJson_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, recentProgressJson_.getRaw(i));
      }
      getUnknownFields().writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < recentProgressJson_.size(); i++) {
          dataSize += computeStringSizeNoTag(recentProgressJson_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getRecentProgressJsonList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.spark.connect.proto.StreamingQueryCommandResult.RecentProgressResult)) {
        return super.equals(obj);
      }
      org.apache.spark.connect.proto.StreamingQueryCommandResult.RecentProgressResult other = (org.apache.spark.connect.proto.StreamingQueryCommandResult.RecentProgressResult) obj;

      if (!getRecentProgressJsonList()
          .equals(other.getRecentProgressJsonList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getRecentProgressJsonCount() > 0) {
        hash = (37 * hash) + RECENT_PROGRESS_JSON_FIELD_NUMBER;
        hash = (53 * hash) + getRecentProgressJsonList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.spark.connect.proto.StreamingQueryCommandResult.RecentProgressResult parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.connect.proto.StreamingQueryCommandResult.RecentProgressResult parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.connect.proto.StreamingQueryCommandResult.RecentProgressResult parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.connect.proto.StreamingQueryCommandResult.RecentProgressResult parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.connect.proto.StreamingQueryCommandResult.RecentProgressResult parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.connect.proto.StreamingQueryCommandResult.RecentProgressResult parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.connect.proto.StreamingQueryCommandResult.RecentProgressResult parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.spark.connect.proto.StreamingQueryCommandResult.RecentProgressResult parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static org.apache.spark.connect.proto.StreamingQueryCommandResult.RecentProgressResult parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static org.apache.spark.connect.proto.StreamingQueryCommandResult.RecentProgressResult parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.spark.connect.proto.StreamingQueryCommandResult.RecentProgressResult parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.spark.connect.proto.StreamingQueryCommandResult.RecentProgressResult parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.spark.connect.proto.StreamingQueryCommandResult.RecentProgressResult prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code spark.connect.StreamingQueryCommandResult.RecentProgressResult}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:spark.connect.StreamingQueryCommandResult.RecentProgressResult)
        org.apache.spark.connect.proto.StreamingQueryCommandResult.RecentProgressResultOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.spark.connect.proto.Commands.internal_static_spark_connect_StreamingQueryCommandResult_RecentProgressResult_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.spark.connect.proto.Commands.internal_static_spark_connect_StreamingQueryCommandResult_RecentProgressResult_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.spark.connect.proto.StreamingQueryCommandResult.RecentProgressResult.class, org.apache.spark.connect.proto.StreamingQueryCommandResult.RecentProgressResult.Builder.class);
      }

      // Construct using org.apache.spark.connect.proto.StreamingQueryCommandResult.RecentProgressResult.newBuilder()
      private Builder() {

      }

      private Builder(
          BuilderParent parent) {
        super(parent);

      }
      @Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        recentProgressJson_ =
            com.google.protobuf.LazyStringArrayList.emptyList();
        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.spark.connect.proto.Commands.internal_static_spark_connect_StreamingQueryCommandResult_RecentProgressResult_descriptor;
      }

      @Override
      public org.apache.spark.connect.proto.StreamingQueryCommandResult.RecentProgressResult getDefaultInstanceForType() {
        return org.apache.spark.connect.proto.StreamingQueryCommandResult.RecentProgressResult.getDefaultInstance();
      }

      @Override
      public org.apache.spark.connect.proto.StreamingQueryCommandResult.RecentProgressResult build() {
        org.apache.spark.connect.proto.StreamingQueryCommandResult.RecentProgressResult result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public org.apache.spark.connect.proto.StreamingQueryCommandResult.RecentProgressResult buildPartial() {
        org.apache.spark.connect.proto.StreamingQueryCommandResult.RecentProgressResult result = new org.apache.spark.connect.proto.StreamingQueryCommandResult.RecentProgressResult(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(org.apache.spark.connect.proto.StreamingQueryCommandResult.RecentProgressResult result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          recentProgressJson_.makeImmutable();
          result.recentProgressJson_ = recentProgressJson_;
        }
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.spark.connect.proto.StreamingQueryCommandResult.RecentProgressResult) {
          return mergeFrom((org.apache.spark.connect.proto.StreamingQueryCommandResult.RecentProgressResult)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.spark.connect.proto.StreamingQueryCommandResult.RecentProgressResult other) {
        if (other == org.apache.spark.connect.proto.StreamingQueryCommandResult.RecentProgressResult.getDefaultInstance()) return this;
        if (!other.recentProgressJson_.isEmpty()) {
          if (recentProgressJson_.isEmpty()) {
            recentProgressJson_ = other.recentProgressJson_;
            bitField0_ |= 0x00000001;
          } else {
            ensureRecentProgressJsonIsMutable();
            recentProgressJson_.addAll(other.recentProgressJson_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 42: {
                String s = input.readStringRequireUtf8();
                ensureRecentProgressJsonIsMutable();
                recentProgressJson_.add(s);
                break;
              } // case 42
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.LazyStringArrayList recentProgressJson_ =
          com.google.protobuf.LazyStringArrayList.emptyList();
      private void ensureRecentProgressJsonIsMutable() {
        if (!recentProgressJson_.isModifiable()) {
          recentProgressJson_ = new com.google.protobuf.LazyStringArrayList(recentProgressJson_);
        }
        bitField0_ |= 0x00000001;
      }
      /**
       * <pre>
       * Progress reports as an array of json strings.
       * </pre>
       *
       * <code>repeated string recent_progress_json = 5;</code>
       * @return A list containing the recentProgressJson.
       */
      public com.google.protobuf.ProtocolStringList
          getRecentProgressJsonList() {
        recentProgressJson_.makeImmutable();
        return recentProgressJson_;
      }
      /**
       * <pre>
       * Progress reports as an array of json strings.
       * </pre>
       *
       * <code>repeated string recent_progress_json = 5;</code>
       * @return The count of recentProgressJson.
       */
      public int getRecentProgressJsonCount() {
        return recentProgressJson_.size();
      }
      /**
       * <pre>
       * Progress reports as an array of json strings.
       * </pre>
       *
       * <code>repeated string recent_progress_json = 5;</code>
       * @param index The index of the element to return.
       * @return The recentProgressJson at the given index.
       */
      public String getRecentProgressJson(int index) {
        return recentProgressJson_.get(index);
      }
      /**
       * <pre>
       * Progress reports as an array of json strings.
       * </pre>
       *
       * <code>repeated string recent_progress_json = 5;</code>
       * @param index The index of the value to return.
       * @return The bytes of the recentProgressJson at the given index.
       */
      public com.google.protobuf.ByteString
          getRecentProgressJsonBytes(int index) {
        return recentProgressJson_.getByteString(index);
      }
      /**
       * <pre>
       * Progress reports as an array of json strings.
       * </pre>
       *
       * <code>repeated string recent_progress_json = 5;</code>
       * @param index The index to set the value at.
       * @param value The recentProgressJson to set.
       * @return This builder for chaining.
       */
      public Builder setRecentProgressJson(
          int index, String value) {
        if (value == null) { throw new NullPointerException(); }
        ensureRecentProgressJsonIsMutable();
        recentProgressJson_.set(index, value);
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Progress reports as an array of json strings.
       * </pre>
       *
       * <code>repeated string recent_progress_json = 5;</code>
       * @param value The recentProgressJson to add.
       * @return This builder for chaining.
       */
      public Builder addRecentProgressJson(
          String value) {
        if (value == null) { throw new NullPointerException(); }
        ensureRecentProgressJsonIsMutable();
        recentProgressJson_.add(value);
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Progress reports as an array of json strings.
       * </pre>
       *
       * <code>repeated string recent_progress_json = 5;</code>
       * @param values The recentProgressJson to add.
       * @return This builder for chaining.
       */
      public Builder addAllRecentProgressJson(
          Iterable<String> values) {
        ensureRecentProgressJsonIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, recentProgressJson_);
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Progress reports as an array of json strings.
       * </pre>
       *
       * <code>repeated string recent_progress_json = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearRecentProgressJson() {
        recentProgressJson_ =
          com.google.protobuf.LazyStringArrayList.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Progress reports as an array of json strings.
       * </pre>
       *
       * <code>repeated string recent_progress_json = 5;</code>
       * @param value The bytes of the recentProgressJson to add.
       * @return This builder for chaining.
       */
      public Builder addRecentProgressJsonBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        ensureRecentProgressJsonIsMutable();
        recentProgressJson_.add(value);
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:spark.connect.StreamingQueryCommandResult.RecentProgressResult)
    }

    // @@protoc_insertion_point(class_scope:spark.connect.StreamingQueryCommandResult.RecentProgressResult)
    private static final org.apache.spark.connect.proto.StreamingQueryCommandResult.RecentProgressResult DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.spark.connect.proto.StreamingQueryCommandResult.RecentProgressResult();
    }

    public static org.apache.spark.connect.proto.StreamingQueryCommandResult.RecentProgressResult getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<RecentProgressResult>
        PARSER = new com.google.protobuf.AbstractParser<RecentProgressResult>() {
      @Override
      public RecentProgressResult parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<RecentProgressResult> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<RecentProgressResult> getParserForType() {
      return PARSER;
    }

    @Override
    public org.apache.spark.connect.proto.StreamingQueryCommandResult.RecentProgressResult getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ExplainResultOrBuilder extends
      // @@protoc_insertion_point(interface_extends:spark.connect.StreamingQueryCommandResult.ExplainResult)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Logical and physical plans as string
     * </pre>
     *
     * <code>string result = 1;</code>
     * @return The result.
     */
    String getResult();
    /**
     * <pre>
     * Logical and physical plans as string
     * </pre>
     *
     * <code>string result = 1;</code>
     * @return The bytes for result.
     */
    com.google.protobuf.ByteString
        getResultBytes();
  }
  /**
   * Protobuf type {@code spark.connect.StreamingQueryCommandResult.ExplainResult}
   */
  public static final class ExplainResult extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:spark.connect.StreamingQueryCommandResult.ExplainResult)
      ExplainResultOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ExplainResult.newBuilder() to construct.
    private ExplainResult(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ExplainResult() {
      result_ = "";
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new ExplainResult();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.spark.connect.proto.Commands.internal_static_spark_connect_StreamingQueryCommandResult_ExplainResult_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.spark.connect.proto.Commands.internal_static_spark_connect_StreamingQueryCommandResult_ExplainResult_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.spark.connect.proto.StreamingQueryCommandResult.ExplainResult.class, org.apache.spark.connect.proto.StreamingQueryCommandResult.ExplainResult.Builder.class);
    }

    public static final int RESULT_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile Object result_ = "";
    /**
     * <pre>
     * Logical and physical plans as string
     * </pre>
     *
     * <code>string result = 1;</code>
     * @return The result.
     */
    @Override
    public String getResult() {
      Object ref = result_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        result_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Logical and physical plans as string
     * </pre>
     *
     * <code>string result = 1;</code>
     * @return The bytes for result.
     */
    @Override
    public com.google.protobuf.ByteString
        getResultBytes() {
      Object ref = result_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        result_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(result_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, result_);
      }
      getUnknownFields().writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(result_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, result_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.spark.connect.proto.StreamingQueryCommandResult.ExplainResult)) {
        return super.equals(obj);
      }
      org.apache.spark.connect.proto.StreamingQueryCommandResult.ExplainResult other = (org.apache.spark.connect.proto.StreamingQueryCommandResult.ExplainResult) obj;

      if (!getResult()
          .equals(other.getResult())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + RESULT_FIELD_NUMBER;
      hash = (53 * hash) + getResult().hashCode();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.spark.connect.proto.StreamingQueryCommandResult.ExplainResult parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.connect.proto.StreamingQueryCommandResult.ExplainResult parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.connect.proto.StreamingQueryCommandResult.ExplainResult parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.connect.proto.StreamingQueryCommandResult.ExplainResult parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.connect.proto.StreamingQueryCommandResult.ExplainResult parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.connect.proto.StreamingQueryCommandResult.ExplainResult parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.connect.proto.StreamingQueryCommandResult.ExplainResult parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.spark.connect.proto.StreamingQueryCommandResult.ExplainResult parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static org.apache.spark.connect.proto.StreamingQueryCommandResult.ExplainResult parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static org.apache.spark.connect.proto.StreamingQueryCommandResult.ExplainResult parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.spark.connect.proto.StreamingQueryCommandResult.ExplainResult parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.spark.connect.proto.StreamingQueryCommandResult.ExplainResult parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.spark.connect.proto.StreamingQueryCommandResult.ExplainResult prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code spark.connect.StreamingQueryCommandResult.ExplainResult}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:spark.connect.StreamingQueryCommandResult.ExplainResult)
        org.apache.spark.connect.proto.StreamingQueryCommandResult.ExplainResultOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.spark.connect.proto.Commands.internal_static_spark_connect_StreamingQueryCommandResult_ExplainResult_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.spark.connect.proto.Commands.internal_static_spark_connect_StreamingQueryCommandResult_ExplainResult_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.spark.connect.proto.StreamingQueryCommandResult.ExplainResult.class, org.apache.spark.connect.proto.StreamingQueryCommandResult.ExplainResult.Builder.class);
      }

      // Construct using org.apache.spark.connect.proto.StreamingQueryCommandResult.ExplainResult.newBuilder()
      private Builder() {

      }

      private Builder(
          BuilderParent parent) {
        super(parent);

      }
      @Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        result_ = "";
        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.spark.connect.proto.Commands.internal_static_spark_connect_StreamingQueryCommandResult_ExplainResult_descriptor;
      }

      @Override
      public org.apache.spark.connect.proto.StreamingQueryCommandResult.ExplainResult getDefaultInstanceForType() {
        return org.apache.spark.connect.proto.StreamingQueryCommandResult.ExplainResult.getDefaultInstance();
      }

      @Override
      public org.apache.spark.connect.proto.StreamingQueryCommandResult.ExplainResult build() {
        org.apache.spark.connect.proto.StreamingQueryCommandResult.ExplainResult result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public org.apache.spark.connect.proto.StreamingQueryCommandResult.ExplainResult buildPartial() {
        org.apache.spark.connect.proto.StreamingQueryCommandResult.ExplainResult result = new org.apache.spark.connect.proto.StreamingQueryCommandResult.ExplainResult(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(org.apache.spark.connect.proto.StreamingQueryCommandResult.ExplainResult result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.result_ = result_;
        }
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.spark.connect.proto.StreamingQueryCommandResult.ExplainResult) {
          return mergeFrom((org.apache.spark.connect.proto.StreamingQueryCommandResult.ExplainResult)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.spark.connect.proto.StreamingQueryCommandResult.ExplainResult other) {
        if (other == org.apache.spark.connect.proto.StreamingQueryCommandResult.ExplainResult.getDefaultInstance()) return this;
        if (!other.getResult().isEmpty()) {
          result_ = other.result_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                result_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private Object result_ = "";
      /**
       * <pre>
       * Logical and physical plans as string
       * </pre>
       *
       * <code>string result = 1;</code>
       * @return The result.
       */
      public String getResult() {
        Object ref = result_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          result_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       * Logical and physical plans as string
       * </pre>
       *
       * <code>string result = 1;</code>
       * @return The bytes for result.
       */
      public com.google.protobuf.ByteString
          getResultBytes() {
        Object ref = result_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          result_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Logical and physical plans as string
       * </pre>
       *
       * <code>string result = 1;</code>
       * @param value The result to set.
       * @return This builder for chaining.
       */
      public Builder setResult(
          String value) {
        if (value == null) { throw new NullPointerException(); }
        result_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Logical and physical plans as string
       * </pre>
       *
       * <code>string result = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearResult() {
        result_ = getDefaultInstance().getResult();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Logical and physical plans as string
       * </pre>
       *
       * <code>string result = 1;</code>
       * @param value The bytes for result to set.
       * @return This builder for chaining.
       */
      public Builder setResultBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        result_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:spark.connect.StreamingQueryCommandResult.ExplainResult)
    }

    // @@protoc_insertion_point(class_scope:spark.connect.StreamingQueryCommandResult.ExplainResult)
    private static final org.apache.spark.connect.proto.StreamingQueryCommandResult.ExplainResult DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.spark.connect.proto.StreamingQueryCommandResult.ExplainResult();
    }

    public static org.apache.spark.connect.proto.StreamingQueryCommandResult.ExplainResult getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ExplainResult>
        PARSER = new com.google.protobuf.AbstractParser<ExplainResult>() {
      @Override
      public ExplainResult parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<ExplainResult> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<ExplainResult> getParserForType() {
      return PARSER;
    }

    @Override
    public org.apache.spark.connect.proto.StreamingQueryCommandResult.ExplainResult getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ExceptionResultOrBuilder extends
      // @@protoc_insertion_point(interface_extends:spark.connect.StreamingQueryCommandResult.ExceptionResult)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * (Optional) Exception message as string, maps to the return value of original
     * StreamingQueryException's toString method
     * </pre>
     *
     * <code>optional string exception_message = 1;</code>
     * @return Whether the exceptionMessage field is set.
     */
    boolean hasExceptionMessage();
    /**
     * <pre>
     * (Optional) Exception message as string, maps to the return value of original
     * StreamingQueryException's toString method
     * </pre>
     *
     * <code>optional string exception_message = 1;</code>
     * @return The exceptionMessage.
     */
    String getExceptionMessage();
    /**
     * <pre>
     * (Optional) Exception message as string, maps to the return value of original
     * StreamingQueryException's toString method
     * </pre>
     *
     * <code>optional string exception_message = 1;</code>
     * @return The bytes for exceptionMessage.
     */
    com.google.protobuf.ByteString
        getExceptionMessageBytes();

    /**
     * <pre>
     * (Optional) Exception error class as string
     * </pre>
     *
     * <code>optional string error_class = 2;</code>
     * @return Whether the errorClass field is set.
     */
    boolean hasErrorClass();
    /**
     * <pre>
     * (Optional) Exception error class as string
     * </pre>
     *
     * <code>optional string error_class = 2;</code>
     * @return The errorClass.
     */
    String getErrorClass();
    /**
     * <pre>
     * (Optional) Exception error class as string
     * </pre>
     *
     * <code>optional string error_class = 2;</code>
     * @return The bytes for errorClass.
     */
    com.google.protobuf.ByteString
        getErrorClassBytes();

    /**
     * <pre>
     * (Optional) Exception stack trace as string
     * </pre>
     *
     * <code>optional string stack_trace = 3;</code>
     * @return Whether the stackTrace field is set.
     */
    boolean hasStackTrace();
    /**
     * <pre>
     * (Optional) Exception stack trace as string
     * </pre>
     *
     * <code>optional string stack_trace = 3;</code>
     * @return The stackTrace.
     */
    String getStackTrace();
    /**
     * <pre>
     * (Optional) Exception stack trace as string
     * </pre>
     *
     * <code>optional string stack_trace = 3;</code>
     * @return The bytes for stackTrace.
     */
    com.google.protobuf.ByteString
        getStackTraceBytes();
  }
  /**
   * Protobuf type {@code spark.connect.StreamingQueryCommandResult.ExceptionResult}
   */
  public static final class ExceptionResult extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:spark.connect.StreamingQueryCommandResult.ExceptionResult)
      ExceptionResultOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ExceptionResult.newBuilder() to construct.
    private ExceptionResult(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ExceptionResult() {
      exceptionMessage_ = "";
      errorClass_ = "";
      stackTrace_ = "";
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new ExceptionResult();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.spark.connect.proto.Commands.internal_static_spark_connect_StreamingQueryCommandResult_ExceptionResult_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.spark.connect.proto.Commands.internal_static_spark_connect_StreamingQueryCommandResult_ExceptionResult_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.spark.connect.proto.StreamingQueryCommandResult.ExceptionResult.class, org.apache.spark.connect.proto.StreamingQueryCommandResult.ExceptionResult.Builder.class);
    }

    private int bitField0_;
    public static final int EXCEPTION_MESSAGE_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile Object exceptionMessage_ = "";
    /**
     * <pre>
     * (Optional) Exception message as string, maps to the return value of original
     * StreamingQueryException's toString method
     * </pre>
     *
     * <code>optional string exception_message = 1;</code>
     * @return Whether the exceptionMessage field is set.
     */
    @Override
    public boolean hasExceptionMessage() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * (Optional) Exception message as string, maps to the return value of original
     * StreamingQueryException's toString method
     * </pre>
     *
     * <code>optional string exception_message = 1;</code>
     * @return The exceptionMessage.
     */
    @Override
    public String getExceptionMessage() {
      Object ref = exceptionMessage_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        exceptionMessage_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * (Optional) Exception message as string, maps to the return value of original
     * StreamingQueryException's toString method
     * </pre>
     *
     * <code>optional string exception_message = 1;</code>
     * @return The bytes for exceptionMessage.
     */
    @Override
    public com.google.protobuf.ByteString
        getExceptionMessageBytes() {
      Object ref = exceptionMessage_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        exceptionMessage_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ERROR_CLASS_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private volatile Object errorClass_ = "";
    /**
     * <pre>
     * (Optional) Exception error class as string
     * </pre>
     *
     * <code>optional string error_class = 2;</code>
     * @return Whether the errorClass field is set.
     */
    @Override
    public boolean hasErrorClass() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * (Optional) Exception error class as string
     * </pre>
     *
     * <code>optional string error_class = 2;</code>
     * @return The errorClass.
     */
    @Override
    public String getErrorClass() {
      Object ref = errorClass_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        errorClass_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * (Optional) Exception error class as string
     * </pre>
     *
     * <code>optional string error_class = 2;</code>
     * @return The bytes for errorClass.
     */
    @Override
    public com.google.protobuf.ByteString
        getErrorClassBytes() {
      Object ref = errorClass_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        errorClass_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int STACK_TRACE_FIELD_NUMBER = 3;
    @SuppressWarnings("serial")
    private volatile Object stackTrace_ = "";
    /**
     * <pre>
     * (Optional) Exception stack trace as string
     * </pre>
     *
     * <code>optional string stack_trace = 3;</code>
     * @return Whether the stackTrace field is set.
     */
    @Override
    public boolean hasStackTrace() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * (Optional) Exception stack trace as string
     * </pre>
     *
     * <code>optional string stack_trace = 3;</code>
     * @return The stackTrace.
     */
    @Override
    public String getStackTrace() {
      Object ref = stackTrace_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        stackTrace_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * (Optional) Exception stack trace as string
     * </pre>
     *
     * <code>optional string stack_trace = 3;</code>
     * @return The bytes for stackTrace.
     */
    @Override
    public com.google.protobuf.ByteString
        getStackTraceBytes() {
      Object ref = stackTrace_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        stackTrace_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, exceptionMessage_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, errorClass_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, stackTrace_);
      }
      getUnknownFields().writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, exceptionMessage_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, errorClass_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, stackTrace_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.spark.connect.proto.StreamingQueryCommandResult.ExceptionResult)) {
        return super.equals(obj);
      }
      org.apache.spark.connect.proto.StreamingQueryCommandResult.ExceptionResult other = (org.apache.spark.connect.proto.StreamingQueryCommandResult.ExceptionResult) obj;

      if (hasExceptionMessage() != other.hasExceptionMessage()) return false;
      if (hasExceptionMessage()) {
        if (!getExceptionMessage()
            .equals(other.getExceptionMessage())) return false;
      }
      if (hasErrorClass() != other.hasErrorClass()) return false;
      if (hasErrorClass()) {
        if (!getErrorClass()
            .equals(other.getErrorClass())) return false;
      }
      if (hasStackTrace() != other.hasStackTrace()) return false;
      if (hasStackTrace()) {
        if (!getStackTrace()
            .equals(other.getStackTrace())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasExceptionMessage()) {
        hash = (37 * hash) + EXCEPTION_MESSAGE_FIELD_NUMBER;
        hash = (53 * hash) + getExceptionMessage().hashCode();
      }
      if (hasErrorClass()) {
        hash = (37 * hash) + ERROR_CLASS_FIELD_NUMBER;
        hash = (53 * hash) + getErrorClass().hashCode();
      }
      if (hasStackTrace()) {
        hash = (37 * hash) + STACK_TRACE_FIELD_NUMBER;
        hash = (53 * hash) + getStackTrace().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.spark.connect.proto.StreamingQueryCommandResult.ExceptionResult parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.connect.proto.StreamingQueryCommandResult.ExceptionResult parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.connect.proto.StreamingQueryCommandResult.ExceptionResult parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.connect.proto.StreamingQueryCommandResult.ExceptionResult parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.connect.proto.StreamingQueryCommandResult.ExceptionResult parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.connect.proto.StreamingQueryCommandResult.ExceptionResult parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.connect.proto.StreamingQueryCommandResult.ExceptionResult parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.spark.connect.proto.StreamingQueryCommandResult.ExceptionResult parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static org.apache.spark.connect.proto.StreamingQueryCommandResult.ExceptionResult parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static org.apache.spark.connect.proto.StreamingQueryCommandResult.ExceptionResult parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.spark.connect.proto.StreamingQueryCommandResult.ExceptionResult parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.spark.connect.proto.StreamingQueryCommandResult.ExceptionResult parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.spark.connect.proto.StreamingQueryCommandResult.ExceptionResult prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code spark.connect.StreamingQueryCommandResult.ExceptionResult}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:spark.connect.StreamingQueryCommandResult.ExceptionResult)
        org.apache.spark.connect.proto.StreamingQueryCommandResult.ExceptionResultOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.spark.connect.proto.Commands.internal_static_spark_connect_StreamingQueryCommandResult_ExceptionResult_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.spark.connect.proto.Commands.internal_static_spark_connect_StreamingQueryCommandResult_ExceptionResult_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.spark.connect.proto.StreamingQueryCommandResult.ExceptionResult.class, org.apache.spark.connect.proto.StreamingQueryCommandResult.ExceptionResult.Builder.class);
      }

      // Construct using org.apache.spark.connect.proto.StreamingQueryCommandResult.ExceptionResult.newBuilder()
      private Builder() {

      }

      private Builder(
          BuilderParent parent) {
        super(parent);

      }
      @Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        exceptionMessage_ = "";
        errorClass_ = "";
        stackTrace_ = "";
        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.spark.connect.proto.Commands.internal_static_spark_connect_StreamingQueryCommandResult_ExceptionResult_descriptor;
      }

      @Override
      public org.apache.spark.connect.proto.StreamingQueryCommandResult.ExceptionResult getDefaultInstanceForType() {
        return org.apache.spark.connect.proto.StreamingQueryCommandResult.ExceptionResult.getDefaultInstance();
      }

      @Override
      public org.apache.spark.connect.proto.StreamingQueryCommandResult.ExceptionResult build() {
        org.apache.spark.connect.proto.StreamingQueryCommandResult.ExceptionResult result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public org.apache.spark.connect.proto.StreamingQueryCommandResult.ExceptionResult buildPartial() {
        org.apache.spark.connect.proto.StreamingQueryCommandResult.ExceptionResult result = new org.apache.spark.connect.proto.StreamingQueryCommandResult.ExceptionResult(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(org.apache.spark.connect.proto.StreamingQueryCommandResult.ExceptionResult result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.exceptionMessage_ = exceptionMessage_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.errorClass_ = errorClass_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.stackTrace_ = stackTrace_;
          to_bitField0_ |= 0x00000004;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.spark.connect.proto.StreamingQueryCommandResult.ExceptionResult) {
          return mergeFrom((org.apache.spark.connect.proto.StreamingQueryCommandResult.ExceptionResult)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.spark.connect.proto.StreamingQueryCommandResult.ExceptionResult other) {
        if (other == org.apache.spark.connect.proto.StreamingQueryCommandResult.ExceptionResult.getDefaultInstance()) return this;
        if (other.hasExceptionMessage()) {
          exceptionMessage_ = other.exceptionMessage_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        if (other.hasErrorClass()) {
          errorClass_ = other.errorClass_;
          bitField0_ |= 0x00000002;
          onChanged();
        }
        if (other.hasStackTrace()) {
          stackTrace_ = other.stackTrace_;
          bitField0_ |= 0x00000004;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                exceptionMessage_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 18: {
                errorClass_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              case 26: {
                stackTrace_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000004;
                break;
              } // case 26
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private Object exceptionMessage_ = "";
      /**
       * <pre>
       * (Optional) Exception message as string, maps to the return value of original
       * StreamingQueryException's toString method
       * </pre>
       *
       * <code>optional string exception_message = 1;</code>
       * @return Whether the exceptionMessage field is set.
       */
      public boolean hasExceptionMessage() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * (Optional) Exception message as string, maps to the return value of original
       * StreamingQueryException's toString method
       * </pre>
       *
       * <code>optional string exception_message = 1;</code>
       * @return The exceptionMessage.
       */
      public String getExceptionMessage() {
        Object ref = exceptionMessage_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          exceptionMessage_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       * (Optional) Exception message as string, maps to the return value of original
       * StreamingQueryException's toString method
       * </pre>
       *
       * <code>optional string exception_message = 1;</code>
       * @return The bytes for exceptionMessage.
       */
      public com.google.protobuf.ByteString
          getExceptionMessageBytes() {
        Object ref = exceptionMessage_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          exceptionMessage_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * (Optional) Exception message as string, maps to the return value of original
       * StreamingQueryException's toString method
       * </pre>
       *
       * <code>optional string exception_message = 1;</code>
       * @param value The exceptionMessage to set.
       * @return This builder for chaining.
       */
      public Builder setExceptionMessage(
          String value) {
        if (value == null) { throw new NullPointerException(); }
        exceptionMessage_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * (Optional) Exception message as string, maps to the return value of original
       * StreamingQueryException's toString method
       * </pre>
       *
       * <code>optional string exception_message = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearExceptionMessage() {
        exceptionMessage_ = getDefaultInstance().getExceptionMessage();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * (Optional) Exception message as string, maps to the return value of original
       * StreamingQueryException's toString method
       * </pre>
       *
       * <code>optional string exception_message = 1;</code>
       * @param value The bytes for exceptionMessage to set.
       * @return This builder for chaining.
       */
      public Builder setExceptionMessageBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        exceptionMessage_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private Object errorClass_ = "";
      /**
       * <pre>
       * (Optional) Exception error class as string
       * </pre>
       *
       * <code>optional string error_class = 2;</code>
       * @return Whether the errorClass field is set.
       */
      public boolean hasErrorClass() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * (Optional) Exception error class as string
       * </pre>
       *
       * <code>optional string error_class = 2;</code>
       * @return The errorClass.
       */
      public String getErrorClass() {
        Object ref = errorClass_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          errorClass_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       * (Optional) Exception error class as string
       * </pre>
       *
       * <code>optional string error_class = 2;</code>
       * @return The bytes for errorClass.
       */
      public com.google.protobuf.ByteString
          getErrorClassBytes() {
        Object ref = errorClass_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          errorClass_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * (Optional) Exception error class as string
       * </pre>
       *
       * <code>optional string error_class = 2;</code>
       * @param value The errorClass to set.
       * @return This builder for chaining.
       */
      public Builder setErrorClass(
          String value) {
        if (value == null) { throw new NullPointerException(); }
        errorClass_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * (Optional) Exception error class as string
       * </pre>
       *
       * <code>optional string error_class = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearErrorClass() {
        errorClass_ = getDefaultInstance().getErrorClass();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * (Optional) Exception error class as string
       * </pre>
       *
       * <code>optional string error_class = 2;</code>
       * @param value The bytes for errorClass to set.
       * @return This builder for chaining.
       */
      public Builder setErrorClassBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        errorClass_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }

      private Object stackTrace_ = "";
      /**
       * <pre>
       * (Optional) Exception stack trace as string
       * </pre>
       *
       * <code>optional string stack_trace = 3;</code>
       * @return Whether the stackTrace field is set.
       */
      public boolean hasStackTrace() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * (Optional) Exception stack trace as string
       * </pre>
       *
       * <code>optional string stack_trace = 3;</code>
       * @return The stackTrace.
       */
      public String getStackTrace() {
        Object ref = stackTrace_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          stackTrace_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       * (Optional) Exception stack trace as string
       * </pre>
       *
       * <code>optional string stack_trace = 3;</code>
       * @return The bytes for stackTrace.
       */
      public com.google.protobuf.ByteString
          getStackTraceBytes() {
        Object ref = stackTrace_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          stackTrace_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * (Optional) Exception stack trace as string
       * </pre>
       *
       * <code>optional string stack_trace = 3;</code>
       * @param value The stackTrace to set.
       * @return This builder for chaining.
       */
      public Builder setStackTrace(
          String value) {
        if (value == null) { throw new NullPointerException(); }
        stackTrace_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * (Optional) Exception stack trace as string
       * </pre>
       *
       * <code>optional string stack_trace = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearStackTrace() {
        stackTrace_ = getDefaultInstance().getStackTrace();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * (Optional) Exception stack trace as string
       * </pre>
       *
       * <code>optional string stack_trace = 3;</code>
       * @param value The bytes for stackTrace to set.
       * @return This builder for chaining.
       */
      public Builder setStackTraceBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        stackTrace_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:spark.connect.StreamingQueryCommandResult.ExceptionResult)
    }

    // @@protoc_insertion_point(class_scope:spark.connect.StreamingQueryCommandResult.ExceptionResult)
    private static final org.apache.spark.connect.proto.StreamingQueryCommandResult.ExceptionResult DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.spark.connect.proto.StreamingQueryCommandResult.ExceptionResult();
    }

    public static org.apache.spark.connect.proto.StreamingQueryCommandResult.ExceptionResult getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ExceptionResult>
        PARSER = new com.google.protobuf.AbstractParser<ExceptionResult>() {
      @Override
      public ExceptionResult parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<ExceptionResult> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<ExceptionResult> getParserForType() {
      return PARSER;
    }

    @Override
    public org.apache.spark.connect.proto.StreamingQueryCommandResult.ExceptionResult getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface AwaitTerminationResultOrBuilder extends
      // @@protoc_insertion_point(interface_extends:spark.connect.StreamingQueryCommandResult.AwaitTerminationResult)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>bool terminated = 1;</code>
     * @return The terminated.
     */
    boolean getTerminated();
  }
  /**
   * Protobuf type {@code spark.connect.StreamingQueryCommandResult.AwaitTerminationResult}
   */
  public static final class AwaitTerminationResult extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:spark.connect.StreamingQueryCommandResult.AwaitTerminationResult)
      AwaitTerminationResultOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use AwaitTerminationResult.newBuilder() to construct.
    private AwaitTerminationResult(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private AwaitTerminationResult() {
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new AwaitTerminationResult();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.spark.connect.proto.Commands.internal_static_spark_connect_StreamingQueryCommandResult_AwaitTerminationResult_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.spark.connect.proto.Commands.internal_static_spark_connect_StreamingQueryCommandResult_AwaitTerminationResult_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.spark.connect.proto.StreamingQueryCommandResult.AwaitTerminationResult.class, org.apache.spark.connect.proto.StreamingQueryCommandResult.AwaitTerminationResult.Builder.class);
    }

    public static final int TERMINATED_FIELD_NUMBER = 1;
    private boolean terminated_ = false;
    /**
     * <code>bool terminated = 1;</code>
     * @return The terminated.
     */
    @Override
    public boolean getTerminated() {
      return terminated_;
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (terminated_ != false) {
        output.writeBool(1, terminated_);
      }
      getUnknownFields().writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (terminated_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, terminated_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.spark.connect.proto.StreamingQueryCommandResult.AwaitTerminationResult)) {
        return super.equals(obj);
      }
      org.apache.spark.connect.proto.StreamingQueryCommandResult.AwaitTerminationResult other = (org.apache.spark.connect.proto.StreamingQueryCommandResult.AwaitTerminationResult) obj;

      if (getTerminated()
          != other.getTerminated()) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TERMINATED_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getTerminated());
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.spark.connect.proto.StreamingQueryCommandResult.AwaitTerminationResult parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.connect.proto.StreamingQueryCommandResult.AwaitTerminationResult parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.connect.proto.StreamingQueryCommandResult.AwaitTerminationResult parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.connect.proto.StreamingQueryCommandResult.AwaitTerminationResult parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.connect.proto.StreamingQueryCommandResult.AwaitTerminationResult parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.spark.connect.proto.StreamingQueryCommandResult.AwaitTerminationResult parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.spark.connect.proto.StreamingQueryCommandResult.AwaitTerminationResult parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.spark.connect.proto.StreamingQueryCommandResult.AwaitTerminationResult parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static org.apache.spark.connect.proto.StreamingQueryCommandResult.AwaitTerminationResult parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static org.apache.spark.connect.proto.StreamingQueryCommandResult.AwaitTerminationResult parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.spark.connect.proto.StreamingQueryCommandResult.AwaitTerminationResult parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.spark.connect.proto.StreamingQueryCommandResult.AwaitTerminationResult parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.spark.connect.proto.StreamingQueryCommandResult.AwaitTerminationResult prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code spark.connect.StreamingQueryCommandResult.AwaitTerminationResult}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:spark.connect.StreamingQueryCommandResult.AwaitTerminationResult)
        org.apache.spark.connect.proto.StreamingQueryCommandResult.AwaitTerminationResultOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.spark.connect.proto.Commands.internal_static_spark_connect_StreamingQueryCommandResult_AwaitTerminationResult_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.spark.connect.proto.Commands.internal_static_spark_connect_StreamingQueryCommandResult_AwaitTerminationResult_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.spark.connect.proto.StreamingQueryCommandResult.AwaitTerminationResult.class, org.apache.spark.connect.proto.StreamingQueryCommandResult.AwaitTerminationResult.Builder.class);
      }

      // Construct using org.apache.spark.connect.proto.StreamingQueryCommandResult.AwaitTerminationResult.newBuilder()
      private Builder() {

      }

      private Builder(
          BuilderParent parent) {
        super(parent);

      }
      @Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        terminated_ = false;
        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.spark.connect.proto.Commands.internal_static_spark_connect_StreamingQueryCommandResult_AwaitTerminationResult_descriptor;
      }

      @Override
      public org.apache.spark.connect.proto.StreamingQueryCommandResult.AwaitTerminationResult getDefaultInstanceForType() {
        return org.apache.spark.connect.proto.StreamingQueryCommandResult.AwaitTerminationResult.getDefaultInstance();
      }

      @Override
      public org.apache.spark.connect.proto.StreamingQueryCommandResult.AwaitTerminationResult build() {
        org.apache.spark.connect.proto.StreamingQueryCommandResult.AwaitTerminationResult result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public org.apache.spark.connect.proto.StreamingQueryCommandResult.AwaitTerminationResult buildPartial() {
        org.apache.spark.connect.proto.StreamingQueryCommandResult.AwaitTerminationResult result = new org.apache.spark.connect.proto.StreamingQueryCommandResult.AwaitTerminationResult(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(org.apache.spark.connect.proto.StreamingQueryCommandResult.AwaitTerminationResult result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.terminated_ = terminated_;
        }
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.spark.connect.proto.StreamingQueryCommandResult.AwaitTerminationResult) {
          return mergeFrom((org.apache.spark.connect.proto.StreamingQueryCommandResult.AwaitTerminationResult)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.spark.connect.proto.StreamingQueryCommandResult.AwaitTerminationResult other) {
        if (other == org.apache.spark.connect.proto.StreamingQueryCommandResult.AwaitTerminationResult.getDefaultInstance()) return this;
        if (other.getTerminated() != false) {
          setTerminated(other.getTerminated());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                terminated_ = input.readBool();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private boolean terminated_ ;
      /**
       * <code>bool terminated = 1;</code>
       * @return The terminated.
       */
      @Override
      public boolean getTerminated() {
        return terminated_;
      }
      /**
       * <code>bool terminated = 1;</code>
       * @param value The terminated to set.
       * @return This builder for chaining.
       */
      public Builder setTerminated(boolean value) {

        terminated_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>bool terminated = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearTerminated() {
        bitField0_ = (bitField0_ & ~0x00000001);
        terminated_ = false;
        onChanged();
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:spark.connect.StreamingQueryCommandResult.AwaitTerminationResult)
    }

    // @@protoc_insertion_point(class_scope:spark.connect.StreamingQueryCommandResult.AwaitTerminationResult)
    private static final org.apache.spark.connect.proto.StreamingQueryCommandResult.AwaitTerminationResult DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.spark.connect.proto.StreamingQueryCommandResult.AwaitTerminationResult();
    }

    public static org.apache.spark.connect.proto.StreamingQueryCommandResult.AwaitTerminationResult getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<AwaitTerminationResult>
        PARSER = new com.google.protobuf.AbstractParser<AwaitTerminationResult>() {
      @Override
      public AwaitTerminationResult parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<AwaitTerminationResult> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<AwaitTerminationResult> getParserForType() {
      return PARSER;
    }

    @Override
    public org.apache.spark.connect.proto.StreamingQueryCommandResult.AwaitTerminationResult getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private int resultTypeCase_ = 0;
  @SuppressWarnings("serial")
  private Object resultType_;
  public enum ResultTypeCase
      implements com.google.protobuf.Internal.EnumLite,
          InternalOneOfEnum {
    STATUS(2),
    RECENT_PROGRESS(3),
    EXPLAIN(4),
    EXCEPTION(5),
    AWAIT_TERMINATION(6),
    RESULTTYPE_NOT_SET(0);
    private final int value;
    private ResultTypeCase(int value) {
      this.value = value;
    }
    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @Deprecated
    public static ResultTypeCase valueOf(int value) {
      return forNumber(value);
    }

    public static ResultTypeCase forNumber(int value) {
      switch (value) {
        case 2: return STATUS;
        case 3: return RECENT_PROGRESS;
        case 4: return EXPLAIN;
        case 5: return EXCEPTION;
        case 6: return AWAIT_TERMINATION;
        case 0: return RESULTTYPE_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public ResultTypeCase
  getResultTypeCase() {
    return ResultTypeCase.forNumber(
        resultTypeCase_);
  }

  public static final int QUERY_ID_FIELD_NUMBER = 1;
  private org.apache.spark.connect.proto.StreamingQueryInstanceId queryId_;
  /**
   * <pre>
   * (Required) Query instance id. See `StreamingQueryInstanceId`.
   * </pre>
   *
   * <code>.spark.connect.StreamingQueryInstanceId query_id = 1;</code>
   * @return Whether the queryId field is set.
   */
  @Override
  public boolean hasQueryId() {
    return queryId_ != null;
  }
  /**
   * <pre>
   * (Required) Query instance id. See `StreamingQueryInstanceId`.
   * </pre>
   *
   * <code>.spark.connect.StreamingQueryInstanceId query_id = 1;</code>
   * @return The queryId.
   */
  @Override
  public org.apache.spark.connect.proto.StreamingQueryInstanceId getQueryId() {
    return queryId_ == null ? org.apache.spark.connect.proto.StreamingQueryInstanceId.getDefaultInstance() : queryId_;
  }
  /**
   * <pre>
   * (Required) Query instance id. See `StreamingQueryInstanceId`.
   * </pre>
   *
   * <code>.spark.connect.StreamingQueryInstanceId query_id = 1;</code>
   */
  @Override
  public org.apache.spark.connect.proto.StreamingQueryInstanceIdOrBuilder getQueryIdOrBuilder() {
    return queryId_ == null ? org.apache.spark.connect.proto.StreamingQueryInstanceId.getDefaultInstance() : queryId_;
  }

  public static final int STATUS_FIELD_NUMBER = 2;
  /**
   * <code>.spark.connect.StreamingQueryCommandResult.StatusResult status = 2;</code>
   * @return Whether the status field is set.
   */
  @Override
  public boolean hasStatus() {
    return resultTypeCase_ == 2;
  }
  /**
   * <code>.spark.connect.StreamingQueryCommandResult.StatusResult status = 2;</code>
   * @return The status.
   */
  @Override
  public org.apache.spark.connect.proto.StreamingQueryCommandResult.StatusResult getStatus() {
    if (resultTypeCase_ == 2) {
       return (org.apache.spark.connect.proto.StreamingQueryCommandResult.StatusResult) resultType_;
    }
    return org.apache.spark.connect.proto.StreamingQueryCommandResult.StatusResult.getDefaultInstance();
  }
  /**
   * <code>.spark.connect.StreamingQueryCommandResult.StatusResult status = 2;</code>
   */
  @Override
  public org.apache.spark.connect.proto.StreamingQueryCommandResult.StatusResultOrBuilder getStatusOrBuilder() {
    if (resultTypeCase_ == 2) {
       return (org.apache.spark.connect.proto.StreamingQueryCommandResult.StatusResult) resultType_;
    }
    return org.apache.spark.connect.proto.StreamingQueryCommandResult.StatusResult.getDefaultInstance();
  }

  public static final int RECENT_PROGRESS_FIELD_NUMBER = 3;
  /**
   * <code>.spark.connect.StreamingQueryCommandResult.RecentProgressResult recent_progress = 3;</code>
   * @return Whether the recentProgress field is set.
   */
  @Override
  public boolean hasRecentProgress() {
    return resultTypeCase_ == 3;
  }
  /**
   * <code>.spark.connect.StreamingQueryCommandResult.RecentProgressResult recent_progress = 3;</code>
   * @return The recentProgress.
   */
  @Override
  public org.apache.spark.connect.proto.StreamingQueryCommandResult.RecentProgressResult getRecentProgress() {
    if (resultTypeCase_ == 3) {
       return (org.apache.spark.connect.proto.StreamingQueryCommandResult.RecentProgressResult) resultType_;
    }
    return org.apache.spark.connect.proto.StreamingQueryCommandResult.RecentProgressResult.getDefaultInstance();
  }
  /**
   * <code>.spark.connect.StreamingQueryCommandResult.RecentProgressResult recent_progress = 3;</code>
   */
  @Override
  public org.apache.spark.connect.proto.StreamingQueryCommandResult.RecentProgressResultOrBuilder getRecentProgressOrBuilder() {
    if (resultTypeCase_ == 3) {
       return (org.apache.spark.connect.proto.StreamingQueryCommandResult.RecentProgressResult) resultType_;
    }
    return org.apache.spark.connect.proto.StreamingQueryCommandResult.RecentProgressResult.getDefaultInstance();
  }

  public static final int EXPLAIN_FIELD_NUMBER = 4;
  /**
   * <code>.spark.connect.StreamingQueryCommandResult.ExplainResult explain = 4;</code>
   * @return Whether the explain field is set.
   */
  @Override
  public boolean hasExplain() {
    return resultTypeCase_ == 4;
  }
  /**
   * <code>.spark.connect.StreamingQueryCommandResult.ExplainResult explain = 4;</code>
   * @return The explain.
   */
  @Override
  public org.apache.spark.connect.proto.StreamingQueryCommandResult.ExplainResult getExplain() {
    if (resultTypeCase_ == 4) {
       return (org.apache.spark.connect.proto.StreamingQueryCommandResult.ExplainResult) resultType_;
    }
    return org.apache.spark.connect.proto.StreamingQueryCommandResult.ExplainResult.getDefaultInstance();
  }
  /**
   * <code>.spark.connect.StreamingQueryCommandResult.ExplainResult explain = 4;</code>
   */
  @Override
  public org.apache.spark.connect.proto.StreamingQueryCommandResult.ExplainResultOrBuilder getExplainOrBuilder() {
    if (resultTypeCase_ == 4) {
       return (org.apache.spark.connect.proto.StreamingQueryCommandResult.ExplainResult) resultType_;
    }
    return org.apache.spark.connect.proto.StreamingQueryCommandResult.ExplainResult.getDefaultInstance();
  }

  public static final int EXCEPTION_FIELD_NUMBER = 5;
  /**
   * <code>.spark.connect.StreamingQueryCommandResult.ExceptionResult exception = 5;</code>
   * @return Whether the exception field is set.
   */
  @Override
  public boolean hasException() {
    return resultTypeCase_ == 5;
  }
  /**
   * <code>.spark.connect.StreamingQueryCommandResult.ExceptionResult exception = 5;</code>
   * @return The exception.
   */
  @Override
  public org.apache.spark.connect.proto.StreamingQueryCommandResult.ExceptionResult getException() {
    if (resultTypeCase_ == 5) {
       return (org.apache.spark.connect.proto.StreamingQueryCommandResult.ExceptionResult) resultType_;
    }
    return org.apache.spark.connect.proto.StreamingQueryCommandResult.ExceptionResult.getDefaultInstance();
  }
  /**
   * <code>.spark.connect.StreamingQueryCommandResult.ExceptionResult exception = 5;</code>
   */
  @Override
  public org.apache.spark.connect.proto.StreamingQueryCommandResult.ExceptionResultOrBuilder getExceptionOrBuilder() {
    if (resultTypeCase_ == 5) {
       return (org.apache.spark.connect.proto.StreamingQueryCommandResult.ExceptionResult) resultType_;
    }
    return org.apache.spark.connect.proto.StreamingQueryCommandResult.ExceptionResult.getDefaultInstance();
  }

  public static final int AWAIT_TERMINATION_FIELD_NUMBER = 6;
  /**
   * <code>.spark.connect.StreamingQueryCommandResult.AwaitTerminationResult await_termination = 6;</code>
   * @return Whether the awaitTermination field is set.
   */
  @Override
  public boolean hasAwaitTermination() {
    return resultTypeCase_ == 6;
  }
  /**
   * <code>.spark.connect.StreamingQueryCommandResult.AwaitTerminationResult await_termination = 6;</code>
   * @return The awaitTermination.
   */
  @Override
  public org.apache.spark.connect.proto.StreamingQueryCommandResult.AwaitTerminationResult getAwaitTermination() {
    if (resultTypeCase_ == 6) {
       return (org.apache.spark.connect.proto.StreamingQueryCommandResult.AwaitTerminationResult) resultType_;
    }
    return org.apache.spark.connect.proto.StreamingQueryCommandResult.AwaitTerminationResult.getDefaultInstance();
  }
  /**
   * <code>.spark.connect.StreamingQueryCommandResult.AwaitTerminationResult await_termination = 6;</code>
   */
  @Override
  public org.apache.spark.connect.proto.StreamingQueryCommandResult.AwaitTerminationResultOrBuilder getAwaitTerminationOrBuilder() {
    if (resultTypeCase_ == 6) {
       return (org.apache.spark.connect.proto.StreamingQueryCommandResult.AwaitTerminationResult) resultType_;
    }
    return org.apache.spark.connect.proto.StreamingQueryCommandResult.AwaitTerminationResult.getDefaultInstance();
  }

  private byte memoizedIsInitialized = -1;
  @Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (queryId_ != null) {
      output.writeMessage(1, getQueryId());
    }
    if (resultTypeCase_ == 2) {
      output.writeMessage(2, (org.apache.spark.connect.proto.StreamingQueryCommandResult.StatusResult) resultType_);
    }
    if (resultTypeCase_ == 3) {
      output.writeMessage(3, (org.apache.spark.connect.proto.StreamingQueryCommandResult.RecentProgressResult) resultType_);
    }
    if (resultTypeCase_ == 4) {
      output.writeMessage(4, (org.apache.spark.connect.proto.StreamingQueryCommandResult.ExplainResult) resultType_);
    }
    if (resultTypeCase_ == 5) {
      output.writeMessage(5, (org.apache.spark.connect.proto.StreamingQueryCommandResult.ExceptionResult) resultType_);
    }
    if (resultTypeCase_ == 6) {
      output.writeMessage(6, (org.apache.spark.connect.proto.StreamingQueryCommandResult.AwaitTerminationResult) resultType_);
    }
    getUnknownFields().writeTo(output);
  }

  @Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (queryId_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getQueryId());
    }
    if (resultTypeCase_ == 2) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, (org.apache.spark.connect.proto.StreamingQueryCommandResult.StatusResult) resultType_);
    }
    if (resultTypeCase_ == 3) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, (org.apache.spark.connect.proto.StreamingQueryCommandResult.RecentProgressResult) resultType_);
    }
    if (resultTypeCase_ == 4) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, (org.apache.spark.connect.proto.StreamingQueryCommandResult.ExplainResult) resultType_);
    }
    if (resultTypeCase_ == 5) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, (org.apache.spark.connect.proto.StreamingQueryCommandResult.ExceptionResult) resultType_);
    }
    if (resultTypeCase_ == 6) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(6, (org.apache.spark.connect.proto.StreamingQueryCommandResult.AwaitTerminationResult) resultType_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @Override
  public boolean equals(final Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof org.apache.spark.connect.proto.StreamingQueryCommandResult)) {
      return super.equals(obj);
    }
    org.apache.spark.connect.proto.StreamingQueryCommandResult other = (org.apache.spark.connect.proto.StreamingQueryCommandResult) obj;

    if (hasQueryId() != other.hasQueryId()) return false;
    if (hasQueryId()) {
      if (!getQueryId()
          .equals(other.getQueryId())) return false;
    }
    if (!getResultTypeCase().equals(other.getResultTypeCase())) return false;
    switch (resultTypeCase_) {
      case 2:
        if (!getStatus()
            .equals(other.getStatus())) return false;
        break;
      case 3:
        if (!getRecentProgress()
            .equals(other.getRecentProgress())) return false;
        break;
      case 4:
        if (!getExplain()
            .equals(other.getExplain())) return false;
        break;
      case 5:
        if (!getException()
            .equals(other.getException())) return false;
        break;
      case 6:
        if (!getAwaitTermination()
            .equals(other.getAwaitTermination())) return false;
        break;
      case 0:
      default:
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasQueryId()) {
      hash = (37 * hash) + QUERY_ID_FIELD_NUMBER;
      hash = (53 * hash) + getQueryId().hashCode();
    }
    switch (resultTypeCase_) {
      case 2:
        hash = (37 * hash) + STATUS_FIELD_NUMBER;
        hash = (53 * hash) + getStatus().hashCode();
        break;
      case 3:
        hash = (37 * hash) + RECENT_PROGRESS_FIELD_NUMBER;
        hash = (53 * hash) + getRecentProgress().hashCode();
        break;
      case 4:
        hash = (37 * hash) + EXPLAIN_FIELD_NUMBER;
        hash = (53 * hash) + getExplain().hashCode();
        break;
      case 5:
        hash = (37 * hash) + EXCEPTION_FIELD_NUMBER;
        hash = (53 * hash) + getException().hashCode();
        break;
      case 6:
        hash = (37 * hash) + AWAIT_TERMINATION_FIELD_NUMBER;
        hash = (53 * hash) + getAwaitTermination().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static org.apache.spark.connect.proto.StreamingQueryCommandResult parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.apache.spark.connect.proto.StreamingQueryCommandResult parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.apache.spark.connect.proto.StreamingQueryCommandResult parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.apache.spark.connect.proto.StreamingQueryCommandResult parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.apache.spark.connect.proto.StreamingQueryCommandResult parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.apache.spark.connect.proto.StreamingQueryCommandResult parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.apache.spark.connect.proto.StreamingQueryCommandResult parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.apache.spark.connect.proto.StreamingQueryCommandResult parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static org.apache.spark.connect.proto.StreamingQueryCommandResult parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static org.apache.spark.connect.proto.StreamingQueryCommandResult parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.apache.spark.connect.proto.StreamingQueryCommandResult parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.apache.spark.connect.proto.StreamingQueryCommandResult parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(org.apache.spark.connect.proto.StreamingQueryCommandResult prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @Override
  protected Builder newBuilderForType(
      BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Response for commands on a streaming query.
   * </pre>
   *
   * Protobuf type {@code spark.connect.StreamingQueryCommandResult}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:spark.connect.StreamingQueryCommandResult)
      org.apache.spark.connect.proto.StreamingQueryCommandResultOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.spark.connect.proto.Commands.internal_static_spark_connect_StreamingQueryCommandResult_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.spark.connect.proto.Commands.internal_static_spark_connect_StreamingQueryCommandResult_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.spark.connect.proto.StreamingQueryCommandResult.class, org.apache.spark.connect.proto.StreamingQueryCommandResult.Builder.class);
    }

    // Construct using org.apache.spark.connect.proto.StreamingQueryCommandResult.newBuilder()
    private Builder() {

    }

    private Builder(
        BuilderParent parent) {
      super(parent);

    }
    @Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      queryId_ = null;
      if (queryIdBuilder_ != null) {
        queryIdBuilder_.dispose();
        queryIdBuilder_ = null;
      }
      if (statusBuilder_ != null) {
        statusBuilder_.clear();
      }
      if (recentProgressBuilder_ != null) {
        recentProgressBuilder_.clear();
      }
      if (explainBuilder_ != null) {
        explainBuilder_.clear();
      }
      if (exceptionBuilder_ != null) {
        exceptionBuilder_.clear();
      }
      if (awaitTerminationBuilder_ != null) {
        awaitTerminationBuilder_.clear();
      }
      resultTypeCase_ = 0;
      resultType_ = null;
      return this;
    }

    @Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return org.apache.spark.connect.proto.Commands.internal_static_spark_connect_StreamingQueryCommandResult_descriptor;
    }

    @Override
    public org.apache.spark.connect.proto.StreamingQueryCommandResult getDefaultInstanceForType() {
      return org.apache.spark.connect.proto.StreamingQueryCommandResult.getDefaultInstance();
    }

    @Override
    public org.apache.spark.connect.proto.StreamingQueryCommandResult build() {
      org.apache.spark.connect.proto.StreamingQueryCommandResult result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @Override
    public org.apache.spark.connect.proto.StreamingQueryCommandResult buildPartial() {
      org.apache.spark.connect.proto.StreamingQueryCommandResult result = new org.apache.spark.connect.proto.StreamingQueryCommandResult(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      buildPartialOneofs(result);
      onBuilt();
      return result;
    }

    private void buildPartial0(org.apache.spark.connect.proto.StreamingQueryCommandResult result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.queryId_ = queryIdBuilder_ == null
            ? queryId_
            : queryIdBuilder_.build();
      }
    }

    private void buildPartialOneofs(org.apache.spark.connect.proto.StreamingQueryCommandResult result) {
      result.resultTypeCase_ = resultTypeCase_;
      result.resultType_ = this.resultType_;
      if (resultTypeCase_ == 2 &&
          statusBuilder_ != null) {
        result.resultType_ = statusBuilder_.build();
      }
      if (resultTypeCase_ == 3 &&
          recentProgressBuilder_ != null) {
        result.resultType_ = recentProgressBuilder_.build();
      }
      if (resultTypeCase_ == 4 &&
          explainBuilder_ != null) {
        result.resultType_ = explainBuilder_.build();
      }
      if (resultTypeCase_ == 5 &&
          exceptionBuilder_ != null) {
        result.resultType_ = exceptionBuilder_.build();
      }
      if (resultTypeCase_ == 6 &&
          awaitTerminationBuilder_ != null) {
        result.resultType_ = awaitTerminationBuilder_.build();
      }
    }

    @Override
    public Builder clone() {
      return super.clone();
    }
    @Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return super.setField(field, value);
    }
    @Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return super.addRepeatedField(field, value);
    }
    @Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof org.apache.spark.connect.proto.StreamingQueryCommandResult) {
        return mergeFrom((org.apache.spark.connect.proto.StreamingQueryCommandResult)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(org.apache.spark.connect.proto.StreamingQueryCommandResult other) {
      if (other == org.apache.spark.connect.proto.StreamingQueryCommandResult.getDefaultInstance()) return this;
      if (other.hasQueryId()) {
        mergeQueryId(other.getQueryId());
      }
      switch (other.getResultTypeCase()) {
        case STATUS: {
          mergeStatus(other.getStatus());
          break;
        }
        case RECENT_PROGRESS: {
          mergeRecentProgress(other.getRecentProgress());
          break;
        }
        case EXPLAIN: {
          mergeExplain(other.getExplain());
          break;
        }
        case EXCEPTION: {
          mergeException(other.getException());
          break;
        }
        case AWAIT_TERMINATION: {
          mergeAwaitTermination(other.getAwaitTermination());
          break;
        }
        case RESULTTYPE_NOT_SET: {
          break;
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @Override
    public final boolean isInitialized() {
      return true;
    }

    @Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              input.readMessage(
                  getQueryIdFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 18: {
              input.readMessage(
                  getStatusFieldBuilder().getBuilder(),
                  extensionRegistry);
              resultTypeCase_ = 2;
              break;
            } // case 18
            case 26: {
              input.readMessage(
                  getRecentProgressFieldBuilder().getBuilder(),
                  extensionRegistry);
              resultTypeCase_ = 3;
              break;
            } // case 26
            case 34: {
              input.readMessage(
                  getExplainFieldBuilder().getBuilder(),
                  extensionRegistry);
              resultTypeCase_ = 4;
              break;
            } // case 34
            case 42: {
              input.readMessage(
                  getExceptionFieldBuilder().getBuilder(),
                  extensionRegistry);
              resultTypeCase_ = 5;
              break;
            } // case 42
            case 50: {
              input.readMessage(
                  getAwaitTerminationFieldBuilder().getBuilder(),
                  extensionRegistry);
              resultTypeCase_ = 6;
              break;
            } // case 50
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int resultTypeCase_ = 0;
    private Object resultType_;
    public ResultTypeCase
        getResultTypeCase() {
      return ResultTypeCase.forNumber(
          resultTypeCase_);
    }

    public Builder clearResultType() {
      resultTypeCase_ = 0;
      resultType_ = null;
      onChanged();
      return this;
    }

    private int bitField0_;

    private org.apache.spark.connect.proto.StreamingQueryInstanceId queryId_;
    private com.google.protobuf.SingleFieldBuilderV3<
        org.apache.spark.connect.proto.StreamingQueryInstanceId, org.apache.spark.connect.proto.StreamingQueryInstanceId.Builder, org.apache.spark.connect.proto.StreamingQueryInstanceIdOrBuilder> queryIdBuilder_;
    /**
     * <pre>
     * (Required) Query instance id. See `StreamingQueryInstanceId`.
     * </pre>
     *
     * <code>.spark.connect.StreamingQueryInstanceId query_id = 1;</code>
     * @return Whether the queryId field is set.
     */
    public boolean hasQueryId() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * (Required) Query instance id. See `StreamingQueryInstanceId`.
     * </pre>
     *
     * <code>.spark.connect.StreamingQueryInstanceId query_id = 1;</code>
     * @return The queryId.
     */
    public org.apache.spark.connect.proto.StreamingQueryInstanceId getQueryId() {
      if (queryIdBuilder_ == null) {
        return queryId_ == null ? org.apache.spark.connect.proto.StreamingQueryInstanceId.getDefaultInstance() : queryId_;
      } else {
        return queryIdBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * (Required) Query instance id. See `StreamingQueryInstanceId`.
     * </pre>
     *
     * <code>.spark.connect.StreamingQueryInstanceId query_id = 1;</code>
     */
    public Builder setQueryId(org.apache.spark.connect.proto.StreamingQueryInstanceId value) {
      if (queryIdBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        queryId_ = value;
      } else {
        queryIdBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * (Required) Query instance id. See `StreamingQueryInstanceId`.
     * </pre>
     *
     * <code>.spark.connect.StreamingQueryInstanceId query_id = 1;</code>
     */
    public Builder setQueryId(
        org.apache.spark.connect.proto.StreamingQueryInstanceId.Builder builderForValue) {
      if (queryIdBuilder_ == null) {
        queryId_ = builderForValue.build();
      } else {
        queryIdBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * (Required) Query instance id. See `StreamingQueryInstanceId`.
     * </pre>
     *
     * <code>.spark.connect.StreamingQueryInstanceId query_id = 1;</code>
     */
    public Builder mergeQueryId(org.apache.spark.connect.proto.StreamingQueryInstanceId value) {
      if (queryIdBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0) &&
          queryId_ != null &&
          queryId_ != org.apache.spark.connect.proto.StreamingQueryInstanceId.getDefaultInstance()) {
          getQueryIdBuilder().mergeFrom(value);
        } else {
          queryId_ = value;
        }
      } else {
        queryIdBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * (Required) Query instance id. See `StreamingQueryInstanceId`.
     * </pre>
     *
     * <code>.spark.connect.StreamingQueryInstanceId query_id = 1;</code>
     */
    public Builder clearQueryId() {
      bitField0_ = (bitField0_ & ~0x00000001);
      queryId_ = null;
      if (queryIdBuilder_ != null) {
        queryIdBuilder_.dispose();
        queryIdBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * (Required) Query instance id. See `StreamingQueryInstanceId`.
     * </pre>
     *
     * <code>.spark.connect.StreamingQueryInstanceId query_id = 1;</code>
     */
    public org.apache.spark.connect.proto.StreamingQueryInstanceId.Builder getQueryIdBuilder() {
      bitField0_ |= 0x00000001;
      onChanged();
      return getQueryIdFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * (Required) Query instance id. See `StreamingQueryInstanceId`.
     * </pre>
     *
     * <code>.spark.connect.StreamingQueryInstanceId query_id = 1;</code>
     */
    public org.apache.spark.connect.proto.StreamingQueryInstanceIdOrBuilder getQueryIdOrBuilder() {
      if (queryIdBuilder_ != null) {
        return queryIdBuilder_.getMessageOrBuilder();
      } else {
        return queryId_ == null ?
            org.apache.spark.connect.proto.StreamingQueryInstanceId.getDefaultInstance() : queryId_;
      }
    }
    /**
     * <pre>
     * (Required) Query instance id. See `StreamingQueryInstanceId`.
     * </pre>
     *
     * <code>.spark.connect.StreamingQueryInstanceId query_id = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.apache.spark.connect.proto.StreamingQueryInstanceId, org.apache.spark.connect.proto.StreamingQueryInstanceId.Builder, org.apache.spark.connect.proto.StreamingQueryInstanceIdOrBuilder> 
        getQueryIdFieldBuilder() {
      if (queryIdBuilder_ == null) {
        queryIdBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.apache.spark.connect.proto.StreamingQueryInstanceId, org.apache.spark.connect.proto.StreamingQueryInstanceId.Builder, org.apache.spark.connect.proto.StreamingQueryInstanceIdOrBuilder>(
                getQueryId(),
                getParentForChildren(),
                isClean());
        queryId_ = null;
      }
      return queryIdBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        org.apache.spark.connect.proto.StreamingQueryCommandResult.StatusResult, org.apache.spark.connect.proto.StreamingQueryCommandResult.StatusResult.Builder, org.apache.spark.connect.proto.StreamingQueryCommandResult.StatusResultOrBuilder> statusBuilder_;
    /**
     * <code>.spark.connect.StreamingQueryCommandResult.StatusResult status = 2;</code>
     * @return Whether the status field is set.
     */
    @Override
    public boolean hasStatus() {
      return resultTypeCase_ == 2;
    }
    /**
     * <code>.spark.connect.StreamingQueryCommandResult.StatusResult status = 2;</code>
     * @return The status.
     */
    @Override
    public org.apache.spark.connect.proto.StreamingQueryCommandResult.StatusResult getStatus() {
      if (statusBuilder_ == null) {
        if (resultTypeCase_ == 2) {
          return (org.apache.spark.connect.proto.StreamingQueryCommandResult.StatusResult) resultType_;
        }
        return org.apache.spark.connect.proto.StreamingQueryCommandResult.StatusResult.getDefaultInstance();
      } else {
        if (resultTypeCase_ == 2) {
          return statusBuilder_.getMessage();
        }
        return org.apache.spark.connect.proto.StreamingQueryCommandResult.StatusResult.getDefaultInstance();
      }
    }
    /**
     * <code>.spark.connect.StreamingQueryCommandResult.StatusResult status = 2;</code>
     */
    public Builder setStatus(org.apache.spark.connect.proto.StreamingQueryCommandResult.StatusResult value) {
      if (statusBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        resultType_ = value;
        onChanged();
      } else {
        statusBuilder_.setMessage(value);
      }
      resultTypeCase_ = 2;
      return this;
    }
    /**
     * <code>.spark.connect.StreamingQueryCommandResult.StatusResult status = 2;</code>
     */
    public Builder setStatus(
        org.apache.spark.connect.proto.StreamingQueryCommandResult.StatusResult.Builder builderForValue) {
      if (statusBuilder_ == null) {
        resultType_ = builderForValue.build();
        onChanged();
      } else {
        statusBuilder_.setMessage(builderForValue.build());
      }
      resultTypeCase_ = 2;
      return this;
    }
    /**
     * <code>.spark.connect.StreamingQueryCommandResult.StatusResult status = 2;</code>
     */
    public Builder mergeStatus(org.apache.spark.connect.proto.StreamingQueryCommandResult.StatusResult value) {
      if (statusBuilder_ == null) {
        if (resultTypeCase_ == 2 &&
            resultType_ != org.apache.spark.connect.proto.StreamingQueryCommandResult.StatusResult.getDefaultInstance()) {
          resultType_ = org.apache.spark.connect.proto.StreamingQueryCommandResult.StatusResult.newBuilder((org.apache.spark.connect.proto.StreamingQueryCommandResult.StatusResult) resultType_)
              .mergeFrom(value).buildPartial();
        } else {
          resultType_ = value;
        }
        onChanged();
      } else {
        if (resultTypeCase_ == 2) {
          statusBuilder_.mergeFrom(value);
        } else {
          statusBuilder_.setMessage(value);
        }
      }
      resultTypeCase_ = 2;
      return this;
    }
    /**
     * <code>.spark.connect.StreamingQueryCommandResult.StatusResult status = 2;</code>
     */
    public Builder clearStatus() {
      if (statusBuilder_ == null) {
        if (resultTypeCase_ == 2) {
          resultTypeCase_ = 0;
          resultType_ = null;
          onChanged();
        }
      } else {
        if (resultTypeCase_ == 2) {
          resultTypeCase_ = 0;
          resultType_ = null;
        }
        statusBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.spark.connect.StreamingQueryCommandResult.StatusResult status = 2;</code>
     */
    public org.apache.spark.connect.proto.StreamingQueryCommandResult.StatusResult.Builder getStatusBuilder() {
      return getStatusFieldBuilder().getBuilder();
    }
    /**
     * <code>.spark.connect.StreamingQueryCommandResult.StatusResult status = 2;</code>
     */
    @Override
    public org.apache.spark.connect.proto.StreamingQueryCommandResult.StatusResultOrBuilder getStatusOrBuilder() {
      if ((resultTypeCase_ == 2) && (statusBuilder_ != null)) {
        return statusBuilder_.getMessageOrBuilder();
      } else {
        if (resultTypeCase_ == 2) {
          return (org.apache.spark.connect.proto.StreamingQueryCommandResult.StatusResult) resultType_;
        }
        return org.apache.spark.connect.proto.StreamingQueryCommandResult.StatusResult.getDefaultInstance();
      }
    }
    /**
     * <code>.spark.connect.StreamingQueryCommandResult.StatusResult status = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.apache.spark.connect.proto.StreamingQueryCommandResult.StatusResult, org.apache.spark.connect.proto.StreamingQueryCommandResult.StatusResult.Builder, org.apache.spark.connect.proto.StreamingQueryCommandResult.StatusResultOrBuilder> 
        getStatusFieldBuilder() {
      if (statusBuilder_ == null) {
        if (!(resultTypeCase_ == 2)) {
          resultType_ = org.apache.spark.connect.proto.StreamingQueryCommandResult.StatusResult.getDefaultInstance();
        }
        statusBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.apache.spark.connect.proto.StreamingQueryCommandResult.StatusResult, org.apache.spark.connect.proto.StreamingQueryCommandResult.StatusResult.Builder, org.apache.spark.connect.proto.StreamingQueryCommandResult.StatusResultOrBuilder>(
                (org.apache.spark.connect.proto.StreamingQueryCommandResult.StatusResult) resultType_,
                getParentForChildren(),
                isClean());
        resultType_ = null;
      }
      resultTypeCase_ = 2;
      onChanged();
      return statusBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        org.apache.spark.connect.proto.StreamingQueryCommandResult.RecentProgressResult, org.apache.spark.connect.proto.StreamingQueryCommandResult.RecentProgressResult.Builder, org.apache.spark.connect.proto.StreamingQueryCommandResult.RecentProgressResultOrBuilder> recentProgressBuilder_;
    /**
     * <code>.spark.connect.StreamingQueryCommandResult.RecentProgressResult recent_progress = 3;</code>
     * @return Whether the recentProgress field is set.
     */
    @Override
    public boolean hasRecentProgress() {
      return resultTypeCase_ == 3;
    }
    /**
     * <code>.spark.connect.StreamingQueryCommandResult.RecentProgressResult recent_progress = 3;</code>
     * @return The recentProgress.
     */
    @Override
    public org.apache.spark.connect.proto.StreamingQueryCommandResult.RecentProgressResult getRecentProgress() {
      if (recentProgressBuilder_ == null) {
        if (resultTypeCase_ == 3) {
          return (org.apache.spark.connect.proto.StreamingQueryCommandResult.RecentProgressResult) resultType_;
        }
        return org.apache.spark.connect.proto.StreamingQueryCommandResult.RecentProgressResult.getDefaultInstance();
      } else {
        if (resultTypeCase_ == 3) {
          return recentProgressBuilder_.getMessage();
        }
        return org.apache.spark.connect.proto.StreamingQueryCommandResult.RecentProgressResult.getDefaultInstance();
      }
    }
    /**
     * <code>.spark.connect.StreamingQueryCommandResult.RecentProgressResult recent_progress = 3;</code>
     */
    public Builder setRecentProgress(org.apache.spark.connect.proto.StreamingQueryCommandResult.RecentProgressResult value) {
      if (recentProgressBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        resultType_ = value;
        onChanged();
      } else {
        recentProgressBuilder_.setMessage(value);
      }
      resultTypeCase_ = 3;
      return this;
    }
    /**
     * <code>.spark.connect.StreamingQueryCommandResult.RecentProgressResult recent_progress = 3;</code>
     */
    public Builder setRecentProgress(
        org.apache.spark.connect.proto.StreamingQueryCommandResult.RecentProgressResult.Builder builderForValue) {
      if (recentProgressBuilder_ == null) {
        resultType_ = builderForValue.build();
        onChanged();
      } else {
        recentProgressBuilder_.setMessage(builderForValue.build());
      }
      resultTypeCase_ = 3;
      return this;
    }
    /**
     * <code>.spark.connect.StreamingQueryCommandResult.RecentProgressResult recent_progress = 3;</code>
     */
    public Builder mergeRecentProgress(org.apache.spark.connect.proto.StreamingQueryCommandResult.RecentProgressResult value) {
      if (recentProgressBuilder_ == null) {
        if (resultTypeCase_ == 3 &&
            resultType_ != org.apache.spark.connect.proto.StreamingQueryCommandResult.RecentProgressResult.getDefaultInstance()) {
          resultType_ = org.apache.spark.connect.proto.StreamingQueryCommandResult.RecentProgressResult.newBuilder((org.apache.spark.connect.proto.StreamingQueryCommandResult.RecentProgressResult) resultType_)
              .mergeFrom(value).buildPartial();
        } else {
          resultType_ = value;
        }
        onChanged();
      } else {
        if (resultTypeCase_ == 3) {
          recentProgressBuilder_.mergeFrom(value);
        } else {
          recentProgressBuilder_.setMessage(value);
        }
      }
      resultTypeCase_ = 3;
      return this;
    }
    /**
     * <code>.spark.connect.StreamingQueryCommandResult.RecentProgressResult recent_progress = 3;</code>
     */
    public Builder clearRecentProgress() {
      if (recentProgressBuilder_ == null) {
        if (resultTypeCase_ == 3) {
          resultTypeCase_ = 0;
          resultType_ = null;
          onChanged();
        }
      } else {
        if (resultTypeCase_ == 3) {
          resultTypeCase_ = 0;
          resultType_ = null;
        }
        recentProgressBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.spark.connect.StreamingQueryCommandResult.RecentProgressResult recent_progress = 3;</code>
     */
    public org.apache.spark.connect.proto.StreamingQueryCommandResult.RecentProgressResult.Builder getRecentProgressBuilder() {
      return getRecentProgressFieldBuilder().getBuilder();
    }
    /**
     * <code>.spark.connect.StreamingQueryCommandResult.RecentProgressResult recent_progress = 3;</code>
     */
    @Override
    public org.apache.spark.connect.proto.StreamingQueryCommandResult.RecentProgressResultOrBuilder getRecentProgressOrBuilder() {
      if ((resultTypeCase_ == 3) && (recentProgressBuilder_ != null)) {
        return recentProgressBuilder_.getMessageOrBuilder();
      } else {
        if (resultTypeCase_ == 3) {
          return (org.apache.spark.connect.proto.StreamingQueryCommandResult.RecentProgressResult) resultType_;
        }
        return org.apache.spark.connect.proto.StreamingQueryCommandResult.RecentProgressResult.getDefaultInstance();
      }
    }
    /**
     * <code>.spark.connect.StreamingQueryCommandResult.RecentProgressResult recent_progress = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.apache.spark.connect.proto.StreamingQueryCommandResult.RecentProgressResult, org.apache.spark.connect.proto.StreamingQueryCommandResult.RecentProgressResult.Builder, org.apache.spark.connect.proto.StreamingQueryCommandResult.RecentProgressResultOrBuilder> 
        getRecentProgressFieldBuilder() {
      if (recentProgressBuilder_ == null) {
        if (!(resultTypeCase_ == 3)) {
          resultType_ = org.apache.spark.connect.proto.StreamingQueryCommandResult.RecentProgressResult.getDefaultInstance();
        }
        recentProgressBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.apache.spark.connect.proto.StreamingQueryCommandResult.RecentProgressResult, org.apache.spark.connect.proto.StreamingQueryCommandResult.RecentProgressResult.Builder, org.apache.spark.connect.proto.StreamingQueryCommandResult.RecentProgressResultOrBuilder>(
                (org.apache.spark.connect.proto.StreamingQueryCommandResult.RecentProgressResult) resultType_,
                getParentForChildren(),
                isClean());
        resultType_ = null;
      }
      resultTypeCase_ = 3;
      onChanged();
      return recentProgressBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        org.apache.spark.connect.proto.StreamingQueryCommandResult.ExplainResult, org.apache.spark.connect.proto.StreamingQueryCommandResult.ExplainResult.Builder, org.apache.spark.connect.proto.StreamingQueryCommandResult.ExplainResultOrBuilder> explainBuilder_;
    /**
     * <code>.spark.connect.StreamingQueryCommandResult.ExplainResult explain = 4;</code>
     * @return Whether the explain field is set.
     */
    @Override
    public boolean hasExplain() {
      return resultTypeCase_ == 4;
    }
    /**
     * <code>.spark.connect.StreamingQueryCommandResult.ExplainResult explain = 4;</code>
     * @return The explain.
     */
    @Override
    public org.apache.spark.connect.proto.StreamingQueryCommandResult.ExplainResult getExplain() {
      if (explainBuilder_ == null) {
        if (resultTypeCase_ == 4) {
          return (org.apache.spark.connect.proto.StreamingQueryCommandResult.ExplainResult) resultType_;
        }
        return org.apache.spark.connect.proto.StreamingQueryCommandResult.ExplainResult.getDefaultInstance();
      } else {
        if (resultTypeCase_ == 4) {
          return explainBuilder_.getMessage();
        }
        return org.apache.spark.connect.proto.StreamingQueryCommandResult.ExplainResult.getDefaultInstance();
      }
    }
    /**
     * <code>.spark.connect.StreamingQueryCommandResult.ExplainResult explain = 4;</code>
     */
    public Builder setExplain(org.apache.spark.connect.proto.StreamingQueryCommandResult.ExplainResult value) {
      if (explainBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        resultType_ = value;
        onChanged();
      } else {
        explainBuilder_.setMessage(value);
      }
      resultTypeCase_ = 4;
      return this;
    }
    /**
     * <code>.spark.connect.StreamingQueryCommandResult.ExplainResult explain = 4;</code>
     */
    public Builder setExplain(
        org.apache.spark.connect.proto.StreamingQueryCommandResult.ExplainResult.Builder builderForValue) {
      if (explainBuilder_ == null) {
        resultType_ = builderForValue.build();
        onChanged();
      } else {
        explainBuilder_.setMessage(builderForValue.build());
      }
      resultTypeCase_ = 4;
      return this;
    }
    /**
     * <code>.spark.connect.StreamingQueryCommandResult.ExplainResult explain = 4;</code>
     */
    public Builder mergeExplain(org.apache.spark.connect.proto.StreamingQueryCommandResult.ExplainResult value) {
      if (explainBuilder_ == null) {
        if (resultTypeCase_ == 4 &&
            resultType_ != org.apache.spark.connect.proto.StreamingQueryCommandResult.ExplainResult.getDefaultInstance()) {
          resultType_ = org.apache.spark.connect.proto.StreamingQueryCommandResult.ExplainResult.newBuilder((org.apache.spark.connect.proto.StreamingQueryCommandResult.ExplainResult) resultType_)
              .mergeFrom(value).buildPartial();
        } else {
          resultType_ = value;
        }
        onChanged();
      } else {
        if (resultTypeCase_ == 4) {
          explainBuilder_.mergeFrom(value);
        } else {
          explainBuilder_.setMessage(value);
        }
      }
      resultTypeCase_ = 4;
      return this;
    }
    /**
     * <code>.spark.connect.StreamingQueryCommandResult.ExplainResult explain = 4;</code>
     */
    public Builder clearExplain() {
      if (explainBuilder_ == null) {
        if (resultTypeCase_ == 4) {
          resultTypeCase_ = 0;
          resultType_ = null;
          onChanged();
        }
      } else {
        if (resultTypeCase_ == 4) {
          resultTypeCase_ = 0;
          resultType_ = null;
        }
        explainBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.spark.connect.StreamingQueryCommandResult.ExplainResult explain = 4;</code>
     */
    public org.apache.spark.connect.proto.StreamingQueryCommandResult.ExplainResult.Builder getExplainBuilder() {
      return getExplainFieldBuilder().getBuilder();
    }
    /**
     * <code>.spark.connect.StreamingQueryCommandResult.ExplainResult explain = 4;</code>
     */
    @Override
    public org.apache.spark.connect.proto.StreamingQueryCommandResult.ExplainResultOrBuilder getExplainOrBuilder() {
      if ((resultTypeCase_ == 4) && (explainBuilder_ != null)) {
        return explainBuilder_.getMessageOrBuilder();
      } else {
        if (resultTypeCase_ == 4) {
          return (org.apache.spark.connect.proto.StreamingQueryCommandResult.ExplainResult) resultType_;
        }
        return org.apache.spark.connect.proto.StreamingQueryCommandResult.ExplainResult.getDefaultInstance();
      }
    }
    /**
     * <code>.spark.connect.StreamingQueryCommandResult.ExplainResult explain = 4;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.apache.spark.connect.proto.StreamingQueryCommandResult.ExplainResult, org.apache.spark.connect.proto.StreamingQueryCommandResult.ExplainResult.Builder, org.apache.spark.connect.proto.StreamingQueryCommandResult.ExplainResultOrBuilder> 
        getExplainFieldBuilder() {
      if (explainBuilder_ == null) {
        if (!(resultTypeCase_ == 4)) {
          resultType_ = org.apache.spark.connect.proto.StreamingQueryCommandResult.ExplainResult.getDefaultInstance();
        }
        explainBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.apache.spark.connect.proto.StreamingQueryCommandResult.ExplainResult, org.apache.spark.connect.proto.StreamingQueryCommandResult.ExplainResult.Builder, org.apache.spark.connect.proto.StreamingQueryCommandResult.ExplainResultOrBuilder>(
                (org.apache.spark.connect.proto.StreamingQueryCommandResult.ExplainResult) resultType_,
                getParentForChildren(),
                isClean());
        resultType_ = null;
      }
      resultTypeCase_ = 4;
      onChanged();
      return explainBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        org.apache.spark.connect.proto.StreamingQueryCommandResult.ExceptionResult, org.apache.spark.connect.proto.StreamingQueryCommandResult.ExceptionResult.Builder, org.apache.spark.connect.proto.StreamingQueryCommandResult.ExceptionResultOrBuilder> exceptionBuilder_;
    /**
     * <code>.spark.connect.StreamingQueryCommandResult.ExceptionResult exception = 5;</code>
     * @return Whether the exception field is set.
     */
    @Override
    public boolean hasException() {
      return resultTypeCase_ == 5;
    }
    /**
     * <code>.spark.connect.StreamingQueryCommandResult.ExceptionResult exception = 5;</code>
     * @return The exception.
     */
    @Override
    public org.apache.spark.connect.proto.StreamingQueryCommandResult.ExceptionResult getException() {
      if (exceptionBuilder_ == null) {
        if (resultTypeCase_ == 5) {
          return (org.apache.spark.connect.proto.StreamingQueryCommandResult.ExceptionResult) resultType_;
        }
        return org.apache.spark.connect.proto.StreamingQueryCommandResult.ExceptionResult.getDefaultInstance();
      } else {
        if (resultTypeCase_ == 5) {
          return exceptionBuilder_.getMessage();
        }
        return org.apache.spark.connect.proto.StreamingQueryCommandResult.ExceptionResult.getDefaultInstance();
      }
    }
    /**
     * <code>.spark.connect.StreamingQueryCommandResult.ExceptionResult exception = 5;</code>
     */
    public Builder setException(org.apache.spark.connect.proto.StreamingQueryCommandResult.ExceptionResult value) {
      if (exceptionBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        resultType_ = value;
        onChanged();
      } else {
        exceptionBuilder_.setMessage(value);
      }
      resultTypeCase_ = 5;
      return this;
    }
    /**
     * <code>.spark.connect.StreamingQueryCommandResult.ExceptionResult exception = 5;</code>
     */
    public Builder setException(
        org.apache.spark.connect.proto.StreamingQueryCommandResult.ExceptionResult.Builder builderForValue) {
      if (exceptionBuilder_ == null) {
        resultType_ = builderForValue.build();
        onChanged();
      } else {
        exceptionBuilder_.setMessage(builderForValue.build());
      }
      resultTypeCase_ = 5;
      return this;
    }
    /**
     * <code>.spark.connect.StreamingQueryCommandResult.ExceptionResult exception = 5;</code>
     */
    public Builder mergeException(org.apache.spark.connect.proto.StreamingQueryCommandResult.ExceptionResult value) {
      if (exceptionBuilder_ == null) {
        if (resultTypeCase_ == 5 &&
            resultType_ != org.apache.spark.connect.proto.StreamingQueryCommandResult.ExceptionResult.getDefaultInstance()) {
          resultType_ = org.apache.spark.connect.proto.StreamingQueryCommandResult.ExceptionResult.newBuilder((org.apache.spark.connect.proto.StreamingQueryCommandResult.ExceptionResult) resultType_)
              .mergeFrom(value).buildPartial();
        } else {
          resultType_ = value;
        }
        onChanged();
      } else {
        if (resultTypeCase_ == 5) {
          exceptionBuilder_.mergeFrom(value);
        } else {
          exceptionBuilder_.setMessage(value);
        }
      }
      resultTypeCase_ = 5;
      return this;
    }
    /**
     * <code>.spark.connect.StreamingQueryCommandResult.ExceptionResult exception = 5;</code>
     */
    public Builder clearException() {
      if (exceptionBuilder_ == null) {
        if (resultTypeCase_ == 5) {
          resultTypeCase_ = 0;
          resultType_ = null;
          onChanged();
        }
      } else {
        if (resultTypeCase_ == 5) {
          resultTypeCase_ = 0;
          resultType_ = null;
        }
        exceptionBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.spark.connect.StreamingQueryCommandResult.ExceptionResult exception = 5;</code>
     */
    public org.apache.spark.connect.proto.StreamingQueryCommandResult.ExceptionResult.Builder getExceptionBuilder() {
      return getExceptionFieldBuilder().getBuilder();
    }
    /**
     * <code>.spark.connect.StreamingQueryCommandResult.ExceptionResult exception = 5;</code>
     */
    @Override
    public org.apache.spark.connect.proto.StreamingQueryCommandResult.ExceptionResultOrBuilder getExceptionOrBuilder() {
      if ((resultTypeCase_ == 5) && (exceptionBuilder_ != null)) {
        return exceptionBuilder_.getMessageOrBuilder();
      } else {
        if (resultTypeCase_ == 5) {
          return (org.apache.spark.connect.proto.StreamingQueryCommandResult.ExceptionResult) resultType_;
        }
        return org.apache.spark.connect.proto.StreamingQueryCommandResult.ExceptionResult.getDefaultInstance();
      }
    }
    /**
     * <code>.spark.connect.StreamingQueryCommandResult.ExceptionResult exception = 5;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.apache.spark.connect.proto.StreamingQueryCommandResult.ExceptionResult, org.apache.spark.connect.proto.StreamingQueryCommandResult.ExceptionResult.Builder, org.apache.spark.connect.proto.StreamingQueryCommandResult.ExceptionResultOrBuilder> 
        getExceptionFieldBuilder() {
      if (exceptionBuilder_ == null) {
        if (!(resultTypeCase_ == 5)) {
          resultType_ = org.apache.spark.connect.proto.StreamingQueryCommandResult.ExceptionResult.getDefaultInstance();
        }
        exceptionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.apache.spark.connect.proto.StreamingQueryCommandResult.ExceptionResult, org.apache.spark.connect.proto.StreamingQueryCommandResult.ExceptionResult.Builder, org.apache.spark.connect.proto.StreamingQueryCommandResult.ExceptionResultOrBuilder>(
                (org.apache.spark.connect.proto.StreamingQueryCommandResult.ExceptionResult) resultType_,
                getParentForChildren(),
                isClean());
        resultType_ = null;
      }
      resultTypeCase_ = 5;
      onChanged();
      return exceptionBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        org.apache.spark.connect.proto.StreamingQueryCommandResult.AwaitTerminationResult, org.apache.spark.connect.proto.StreamingQueryCommandResult.AwaitTerminationResult.Builder, org.apache.spark.connect.proto.StreamingQueryCommandResult.AwaitTerminationResultOrBuilder> awaitTerminationBuilder_;
    /**
     * <code>.spark.connect.StreamingQueryCommandResult.AwaitTerminationResult await_termination = 6;</code>
     * @return Whether the awaitTermination field is set.
     */
    @Override
    public boolean hasAwaitTermination() {
      return resultTypeCase_ == 6;
    }
    /**
     * <code>.spark.connect.StreamingQueryCommandResult.AwaitTerminationResult await_termination = 6;</code>
     * @return The awaitTermination.
     */
    @Override
    public org.apache.spark.connect.proto.StreamingQueryCommandResult.AwaitTerminationResult getAwaitTermination() {
      if (awaitTerminationBuilder_ == null) {
        if (resultTypeCase_ == 6) {
          return (org.apache.spark.connect.proto.StreamingQueryCommandResult.AwaitTerminationResult) resultType_;
        }
        return org.apache.spark.connect.proto.StreamingQueryCommandResult.AwaitTerminationResult.getDefaultInstance();
      } else {
        if (resultTypeCase_ == 6) {
          return awaitTerminationBuilder_.getMessage();
        }
        return org.apache.spark.connect.proto.StreamingQueryCommandResult.AwaitTerminationResult.getDefaultInstance();
      }
    }
    /**
     * <code>.spark.connect.StreamingQueryCommandResult.AwaitTerminationResult await_termination = 6;</code>
     */
    public Builder setAwaitTermination(org.apache.spark.connect.proto.StreamingQueryCommandResult.AwaitTerminationResult value) {
      if (awaitTerminationBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        resultType_ = value;
        onChanged();
      } else {
        awaitTerminationBuilder_.setMessage(value);
      }
      resultTypeCase_ = 6;
      return this;
    }
    /**
     * <code>.spark.connect.StreamingQueryCommandResult.AwaitTerminationResult await_termination = 6;</code>
     */
    public Builder setAwaitTermination(
        org.apache.spark.connect.proto.StreamingQueryCommandResult.AwaitTerminationResult.Builder builderForValue) {
      if (awaitTerminationBuilder_ == null) {
        resultType_ = builderForValue.build();
        onChanged();
      } else {
        awaitTerminationBuilder_.setMessage(builderForValue.build());
      }
      resultTypeCase_ = 6;
      return this;
    }
    /**
     * <code>.spark.connect.StreamingQueryCommandResult.AwaitTerminationResult await_termination = 6;</code>
     */
    public Builder mergeAwaitTermination(org.apache.spark.connect.proto.StreamingQueryCommandResult.AwaitTerminationResult value) {
      if (awaitTerminationBuilder_ == null) {
        if (resultTypeCase_ == 6 &&
            resultType_ != org.apache.spark.connect.proto.StreamingQueryCommandResult.AwaitTerminationResult.getDefaultInstance()) {
          resultType_ = org.apache.spark.connect.proto.StreamingQueryCommandResult.AwaitTerminationResult.newBuilder((org.apache.spark.connect.proto.StreamingQueryCommandResult.AwaitTerminationResult) resultType_)
              .mergeFrom(value).buildPartial();
        } else {
          resultType_ = value;
        }
        onChanged();
      } else {
        if (resultTypeCase_ == 6) {
          awaitTerminationBuilder_.mergeFrom(value);
        } else {
          awaitTerminationBuilder_.setMessage(value);
        }
      }
      resultTypeCase_ = 6;
      return this;
    }
    /**
     * <code>.spark.connect.StreamingQueryCommandResult.AwaitTerminationResult await_termination = 6;</code>
     */
    public Builder clearAwaitTermination() {
      if (awaitTerminationBuilder_ == null) {
        if (resultTypeCase_ == 6) {
          resultTypeCase_ = 0;
          resultType_ = null;
          onChanged();
        }
      } else {
        if (resultTypeCase_ == 6) {
          resultTypeCase_ = 0;
          resultType_ = null;
        }
        awaitTerminationBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.spark.connect.StreamingQueryCommandResult.AwaitTerminationResult await_termination = 6;</code>
     */
    public org.apache.spark.connect.proto.StreamingQueryCommandResult.AwaitTerminationResult.Builder getAwaitTerminationBuilder() {
      return getAwaitTerminationFieldBuilder().getBuilder();
    }
    /**
     * <code>.spark.connect.StreamingQueryCommandResult.AwaitTerminationResult await_termination = 6;</code>
     */
    @Override
    public org.apache.spark.connect.proto.StreamingQueryCommandResult.AwaitTerminationResultOrBuilder getAwaitTerminationOrBuilder() {
      if ((resultTypeCase_ == 6) && (awaitTerminationBuilder_ != null)) {
        return awaitTerminationBuilder_.getMessageOrBuilder();
      } else {
        if (resultTypeCase_ == 6) {
          return (org.apache.spark.connect.proto.StreamingQueryCommandResult.AwaitTerminationResult) resultType_;
        }
        return org.apache.spark.connect.proto.StreamingQueryCommandResult.AwaitTerminationResult.getDefaultInstance();
      }
    }
    /**
     * <code>.spark.connect.StreamingQueryCommandResult.AwaitTerminationResult await_termination = 6;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.apache.spark.connect.proto.StreamingQueryCommandResult.AwaitTerminationResult, org.apache.spark.connect.proto.StreamingQueryCommandResult.AwaitTerminationResult.Builder, org.apache.spark.connect.proto.StreamingQueryCommandResult.AwaitTerminationResultOrBuilder> 
        getAwaitTerminationFieldBuilder() {
      if (awaitTerminationBuilder_ == null) {
        if (!(resultTypeCase_ == 6)) {
          resultType_ = org.apache.spark.connect.proto.StreamingQueryCommandResult.AwaitTerminationResult.getDefaultInstance();
        }
        awaitTerminationBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.apache.spark.connect.proto.StreamingQueryCommandResult.AwaitTerminationResult, org.apache.spark.connect.proto.StreamingQueryCommandResult.AwaitTerminationResult.Builder, org.apache.spark.connect.proto.StreamingQueryCommandResult.AwaitTerminationResultOrBuilder>(
                (org.apache.spark.connect.proto.StreamingQueryCommandResult.AwaitTerminationResult) resultType_,
                getParentForChildren(),
                isClean());
        resultType_ = null;
      }
      resultTypeCase_ = 6;
      onChanged();
      return awaitTerminationBuilder_;
    }
    @Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:spark.connect.StreamingQueryCommandResult)
  }

  // @@protoc_insertion_point(class_scope:spark.connect.StreamingQueryCommandResult)
  private static final org.apache.spark.connect.proto.StreamingQueryCommandResult DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new org.apache.spark.connect.proto.StreamingQueryCommandResult();
  }

  public static org.apache.spark.connect.proto.StreamingQueryCommandResult getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<StreamingQueryCommandResult>
      PARSER = new com.google.protobuf.AbstractParser<StreamingQueryCommandResult>() {
    @Override
    public StreamingQueryCommandResult parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<StreamingQueryCommandResult> parser() {
    return PARSER;
  }

  @Override
  public com.google.protobuf.Parser<StreamingQueryCommandResult> getParserForType() {
    return PARSER;
  }

  @Override
  public org.apache.spark.connect.proto.StreamingQueryCommandResult getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

