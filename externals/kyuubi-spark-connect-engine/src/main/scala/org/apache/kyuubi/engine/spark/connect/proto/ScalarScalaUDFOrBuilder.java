// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: spark/connect/expressions.proto

package org.apache.kyuubi.engine.spark.connect.proto;

public interface ScalarScalaUDFOrBuilder extends
    // @@protoc_insertion_point(interface_extends:spark.connect.ScalarScalaUDF)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * (Required) Serialized JVM object containing UDF definition, input encoders and output encoder
   * </pre>
   *
   * <code>bytes payload = 1;</code>
   * @return The payload.
   */
  com.google.protobuf.ByteString getPayload();

  /**
   * <pre>
   * (Optional) Input type(s) of the UDF
   * </pre>
   *
   * <code>repeated .spark.connect.DataType inputTypes = 2;</code>
   */
  java.util.List<org.apache.spark.connect.proto.DataType> 
      getInputTypesList();
  /**
   * <pre>
   * (Optional) Input type(s) of the UDF
   * </pre>
   *
   * <code>repeated .spark.connect.DataType inputTypes = 2;</code>
   */
  org.apache.spark.connect.proto.DataType getInputTypes(int index);
  /**
   * <pre>
   * (Optional) Input type(s) of the UDF
   * </pre>
   *
   * <code>repeated .spark.connect.DataType inputTypes = 2;</code>
   */
  int getInputTypesCount();
  /**
   * <pre>
   * (Optional) Input type(s) of the UDF
   * </pre>
   *
   * <code>repeated .spark.connect.DataType inputTypes = 2;</code>
   */
  java.util.List<? extends org.apache.spark.connect.proto.DataTypeOrBuilder> 
      getInputTypesOrBuilderList();
  /**
   * <pre>
   * (Optional) Input type(s) of the UDF
   * </pre>
   *
   * <code>repeated .spark.connect.DataType inputTypes = 2;</code>
   */
  org.apache.spark.connect.proto.DataTypeOrBuilder getInputTypesOrBuilder(
      int index);

  /**
   * <pre>
   * (Required) Output type of the UDF
   * </pre>
   *
   * <code>.spark.connect.DataType outputType = 3;</code>
   * @return Whether the outputType field is set.
   */
  boolean hasOutputType();
  /**
   * <pre>
   * (Required) Output type of the UDF
   * </pre>
   *
   * <code>.spark.connect.DataType outputType = 3;</code>
   * @return The outputType.
   */
  org.apache.spark.connect.proto.DataType getOutputType();
  /**
   * <pre>
   * (Required) Output type of the UDF
   * </pre>
   *
   * <code>.spark.connect.DataType outputType = 3;</code>
   */
  org.apache.spark.connect.proto.DataTypeOrBuilder getOutputTypeOrBuilder();

  /**
   * <pre>
   * (Required) True if the UDF can return null value
   * </pre>
   *
   * <code>bool nullable = 4;</code>
   * @return The nullable.
   */
  boolean getNullable();
}
