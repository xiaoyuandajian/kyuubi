// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: spark/connect/expressions.proto

package org.apache.kyuubi.engine.spark.connect.proto;

public interface CommonInlineUserDefinedFunctionOrBuilder extends
    // @@protoc_insertion_point(interface_extends:spark.connect.CommonInlineUserDefinedFunction)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * (Required) Name of the user-defined function.
   * </pre>
   *
   * <code>string function_name = 1;</code>
   * @return The functionName.
   */
  String getFunctionName();
  /**
   * <pre>
   * (Required) Name of the user-defined function.
   * </pre>
   *
   * <code>string function_name = 1;</code>
   * @return The bytes for functionName.
   */
  com.google.protobuf.ByteString
      getFunctionNameBytes();

  /**
   * <pre>
   * (Optional) Indicate if the user-defined function is deterministic.
   * </pre>
   *
   * <code>bool deterministic = 2;</code>
   * @return The deterministic.
   */
  boolean getDeterministic();

  /**
   * <pre>
   * (Optional) Function arguments. Empty arguments are allowed.
   * </pre>
   *
   * <code>repeated .spark.connect.Expression arguments = 3;</code>
   */
  java.util.List<org.apache.spark.connect.proto.Expression> 
      getArgumentsList();
  /**
   * <pre>
   * (Optional) Function arguments. Empty arguments are allowed.
   * </pre>
   *
   * <code>repeated .spark.connect.Expression arguments = 3;</code>
   */
  org.apache.spark.connect.proto.Expression getArguments(int index);
  /**
   * <pre>
   * (Optional) Function arguments. Empty arguments are allowed.
   * </pre>
   *
   * <code>repeated .spark.connect.Expression arguments = 3;</code>
   */
  int getArgumentsCount();
  /**
   * <pre>
   * (Optional) Function arguments. Empty arguments are allowed.
   * </pre>
   *
   * <code>repeated .spark.connect.Expression arguments = 3;</code>
   */
  java.util.List<? extends org.apache.spark.connect.proto.ExpressionOrBuilder> 
      getArgumentsOrBuilderList();
  /**
   * <pre>
   * (Optional) Function arguments. Empty arguments are allowed.
   * </pre>
   *
   * <code>repeated .spark.connect.Expression arguments = 3;</code>
   */
  org.apache.spark.connect.proto.ExpressionOrBuilder getArgumentsOrBuilder(
      int index);

  /**
   * <code>.spark.connect.PythonUDF python_udf = 4;</code>
   * @return Whether the pythonUdf field is set.
   */
  boolean hasPythonUdf();
  /**
   * <code>.spark.connect.PythonUDF python_udf = 4;</code>
   * @return The pythonUdf.
   */
  org.apache.spark.connect.proto.PythonUDF getPythonUdf();
  /**
   * <code>.spark.connect.PythonUDF python_udf = 4;</code>
   */
  org.apache.spark.connect.proto.PythonUDFOrBuilder getPythonUdfOrBuilder();

  /**
   * <code>.spark.connect.ScalarScalaUDF scalar_scala_udf = 5;</code>
   * @return Whether the scalarScalaUdf field is set.
   */
  boolean hasScalarScalaUdf();
  /**
   * <code>.spark.connect.ScalarScalaUDF scalar_scala_udf = 5;</code>
   * @return The scalarScalaUdf.
   */
  org.apache.spark.connect.proto.ScalarScalaUDF getScalarScalaUdf();
  /**
   * <code>.spark.connect.ScalarScalaUDF scalar_scala_udf = 5;</code>
   */
  org.apache.spark.connect.proto.ScalarScalaUDFOrBuilder getScalarScalaUdfOrBuilder();

  /**
   * <code>.spark.connect.JavaUDF java_udf = 6;</code>
   * @return Whether the javaUdf field is set.
   */
  boolean hasJavaUdf();
  /**
   * <code>.spark.connect.JavaUDF java_udf = 6;</code>
   * @return The javaUdf.
   */
  org.apache.spark.connect.proto.JavaUDF getJavaUdf();
  /**
   * <code>.spark.connect.JavaUDF java_udf = 6;</code>
   */
  org.apache.spark.connect.proto.JavaUDFOrBuilder getJavaUdfOrBuilder();

  org.apache.spark.connect.proto.CommonInlineUserDefinedFunction.FunctionCase getFunctionCase();
}
