// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: spark/connect/relations.proto

package org.apache.kyuubi.engine.spark.connect.proto;

public interface ProjectOrBuilder extends
    // @@protoc_insertion_point(interface_extends:spark.connect.Project)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * (Optional) Input relation is optional for Project.
   *
   * For example, `SELECT ABS(-1)` is valid plan without an input plan.
   * </pre>
   *
   * <code>.spark.connect.Relation input = 1;</code>
   * @return Whether the input field is set.
   */
  boolean hasInput();
  /**
   * <pre>
   * (Optional) Input relation is optional for Project.
   *
   * For example, `SELECT ABS(-1)` is valid plan without an input plan.
   * </pre>
   *
   * <code>.spark.connect.Relation input = 1;</code>
   * @return The input.
   */
  org.apache.spark.connect.proto.Relation getInput();
  /**
   * <pre>
   * (Optional) Input relation is optional for Project.
   *
   * For example, `SELECT ABS(-1)` is valid plan without an input plan.
   * </pre>
   *
   * <code>.spark.connect.Relation input = 1;</code>
   */
  org.apache.spark.connect.proto.RelationOrBuilder getInputOrBuilder();

  /**
   * <pre>
   * (Required) A Project requires at least one expression.
   * </pre>
   *
   * <code>repeated .spark.connect.Expression expressions = 3;</code>
   */
  java.util.List<org.apache.spark.connect.proto.Expression> 
      getExpressionsList();
  /**
   * <pre>
   * (Required) A Project requires at least one expression.
   * </pre>
   *
   * <code>repeated .spark.connect.Expression expressions = 3;</code>
   */
  org.apache.spark.connect.proto.Expression getExpressions(int index);
  /**
   * <pre>
   * (Required) A Project requires at least one expression.
   * </pre>
   *
   * <code>repeated .spark.connect.Expression expressions = 3;</code>
   */
  int getExpressionsCount();
  /**
   * <pre>
   * (Required) A Project requires at least one expression.
   * </pre>
   *
   * <code>repeated .spark.connect.Expression expressions = 3;</code>
   */
  java.util.List<? extends org.apache.spark.connect.proto.ExpressionOrBuilder> 
      getExpressionsOrBuilderList();
  /**
   * <pre>
   * (Required) A Project requires at least one expression.
   * </pre>
   *
   * <code>repeated .spark.connect.Expression expressions = 3;</code>
   */
  org.apache.spark.connect.proto.ExpressionOrBuilder getExpressionsOrBuilder(
      int index);
}
